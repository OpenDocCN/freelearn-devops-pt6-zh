["```\n$ minikube start\n```", "```\n$ kubectl create namespace chapter6\n```", "```\n$ git clone https://github.com/PacktPublishing/Managing-Kubernetes-Resources-using-Helm.git\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ include \"guestbook.fullname\" . }}\n  labels:\n    {{- include \"guestbook.labels\" . | nindent 4 }}\nspec:\n  {{- if not .Values.autoscaling.enabled }}\n  replicas: {{ .Values.replicaCount }}\n  {{- end }}\n  selector:\n    matchLabels:\n      {{- include \"guestbook.selectorLabels\" . | nindent 6 }}\n  template:\n    metadata:\n      {{- with .Values.podAnnotations }}\n      annotations:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      labels:\n        {{- include \"guestbook.selectorLabels\" . | nindent 8 }}\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: values-example\ndata:\n  config.properties: |-\n    chapterNumber={{ .Values.chapterNumber }}\n    chapterName={{ .Values.chapterName }}\n```", "```\nchapterNumber: 6\nchapterName: Understanding Helm Templates\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: values-example\ndata:\n  config.properties: |-\n    chapterNumber=6\n    chapterName=Understanding Helm Templates\n```", "```\nhelm template <RELEASE_NAME> <CHART_NAME> [flags]\n```", "```\n    $ helm template example chapter6/examples/values-example\n    ```", "```\n    <skipped for brevity>\n    data:\n      config.properties: |-\n        chapterNumber=6\n        chapterName=Understanding Helm Templates\n    ```", "```\nbooks:\n  harryPotter:\n    - The Sorcerer's Stone\n    - The Chamber of Secrets\n    - The Prisoner of Azkaban\n  lotr:\n    - The Fellowship of the Ring\n    - The Two Towers\n    - Return of the King\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\ndata:\n  config.properties: |-\n    namespace={{ .Release.Namespace }}\n```", "```\n$ helm template release-example chapter6/examples/release-example\n---\n# Source: release-example/templates/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: release-example\ndata:\n  config.properties: |-\n    namespace=default\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\n  labels:\n    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion }}\ndata:\n  config.properties: |-\n    chapterNumber={{ .Values.chapterNumber }}\n    chapterName={{ .Values.chapterName }}\n```", "```\napiVersion: v2\nname: chart-example\ndescription: A Helm chart for Kubernetes\ntype: application\nversion: 1.0.0\nappVersion: 0.1.0\n```", "```\n$ helm template chart-example chapter6/examples/chart-example\n---\n# Source: chart-example/templates/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: chart-example\n  labels:\n    helm.sh/chart: chart-example-1.0.0\n    app.kubernetes.io/version: 0.1.0\ndata:\n  config.properties: |-\n    chapterNumber=6\n    chapterName=Understanding Helm Templates\n```", "```\n{{ .Capabilities.APIVersions.Has \"batch/v1\" }}\n```", "```\n{{ .Capabilities.KubeVersion }}\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\ndata:\n  config.properties: |-\n    {{ .Files.Get \"files/config.properties\" }}\n```", "```\nchapterNumber=6\n```", "```\n$ helm template basic-files-example chapter6/examples/files-example/get\n---\n# Source: files-example/templates/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: basic-files-example\ndata:\n  config.properties: |-\n    chapterNumber=6\n```", "```\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\ndata:\n{{ (.Files.Glob \"files/chapter*\").AsConfig | indent 2 }}\n---\nkind: Secret\n<skipped for brevity>\nData:\n{{ (.Files.Glob \"files/secret*\").AsSecrets | indent 2 }}\n```", "```\n$ helm template glob-example chapter6/examples/files-example/glob\n---\n# Source: files-example/templates/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: glob-example\ndata:\n  chapter.properties: |\n    chapterNumber=6\n    chapterName=Understanding Helm Templates\n---\n# Source: files-example/templates/secret.yaml\napiVersion: v1\nkind: Secret\n<skipped for brevity>\n  secret.properties: dXNlcm5hbWU9bXl1c2VyMTIzCnBhc3N3b3JkPW15cGFzczEyMwo=\n```", "```\nfunctionName arg1 arg2 . .\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\n  labels:\n    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion }}\n  annotations:\n    {{- toYaml .Values.annotations | nindent 4 }}\ndata:\n  path: {{ .Values.fs.path }}\n  config.properties: |-\n    {{- (.Files.Get \"files/chapter-details.cfg\") | nindent 4}}\n```", "```\nfs:\n  path: /var/props/../configs/my app/config.cfg\n```", "```\n...\ndata:\n  path: /var/props/../configs/my app/config.cfg\n...\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\n  labels:\n    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion }}\n  annotations:\n    {{- toYaml .Values.annotations | nindent 4 }}\ndata:\n  path: {{ quote .Values.fs.path }}\n...\n```", "```\n$ helm template functions-example chapter6/examples/functions-example\n```", "```\nlookup <apiVersion> <kind> <namespace> <name>\n```", "```\nlookup \"v1\" \"ConfigMap\" \"chapter6\" \"props\"\n```", "```\n{{ (lookup \"v1\" \"ConfigMap\" \"chapter6\" \"props\").data.author }}\n```", "```\nlookup \"v1\" \"ConfigMap\" \"chapter6\" \"\"\n```", "```\ncat file.txt | grep helm\n```", "```\n{{ .Values.fs.path | quote }}\n```", "```\n{{ .Values.fs.path | clean | quote }}\n```", "```\n\"/var/configs/my app/config.cfg\"\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\n  labels:\n    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion }}\n  annotations:\n    {{- toYaml .Values.annotations | nindent 4 }}\ndata:\n…\n```", "```\nannotations:\n  publisher: \"Packt Publishing\"\n  title: \"Managing Kubernetes Resources Using Helm\"\n```", "```\n$ helm template functions-example chapter6/examples/functions-example\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: functions-example\n  labels:\n    helm.sh/chart: functions-example-0.1.0\n    app.kubernetes.io/version: 1.16.0\n  annotations:\n    publisher: Packt Publishing\n    title: Managing Kubernetes Resources Using Helm\n```", "```\n  config.properties: |-\n    {{- (.Files.Get \"files/chapter-details.cfg\") | nindent 4}}\n```", "```\nchapterNumber={{ .Values.book.chapterNumber }}\nchapterName={{ .Values.book.chapterName }}\n```", "```\n  config.properties: |-\n    chapterNumber={{ .Values.book.chapterNumber }}\n    chapterName={{ .Values.book.chapterName }}\n```", "```\n...\n  config.properties: |-\n    {{-  tpl (.Files.Get \"files/chapter-details.cfg\") . | nindent 4}}\n```", "```\n$ helm template functions-example chapter6/examples/functions-example\n...\n  config.properties: |-\n    chapterNumber=6\n    chapterName=Understanding Helm Templates\n```", "```\n{{- if .Values.readinessProbe.enabled }}\nreadinessProbe:\n  httpGet:\n    path: /healthz\n    port: 8080\n    scheme: HTTP\n  initialDelaySeconds: 30\n  periodSeconds: 10\n{{- end }}\n```", "```\n{{ if PIPELINE }}\n  # Do something\n{{ else if OTHER PIPELINE }}\n  # Do something else\n{{ else }}\n  # Default case\n{{ end }}\n```", "```\n {{- if .Values.readinessProbe.enabled }}\nreadinessProbe:\n{{- if eq .Values.readinessProbe.type \"http\" }}\n  httpGet:\n    path: /healthz\n    port: 8080\n    scheme: HTTP\n  initialDelaySeconds: 30\n  periodSeconds: 10\n{{- else }}\n  tcpSocket:\n    port: 8080\n{{- end }}\n{{- end }}\n```", "```\nbook:\n  chapter6:\n    props:\n      chapterNumber: 6\n      chapterName: Understanding Helm Templates\n```", "```\nchapterNumber: {{ .Values.book.chapter6.props.chapterNumber }} \nchapterName: {{ .Values.book.chapter6.props.chapterName }}\n```", "```\n{{- with .Values.book.chapter6.props }}\n  chapterNumber: {{ .chapterNumber }} \n  chapterName: {{ .chapterName }}\n{{- end }}\n```", "```\n$ helm template flowcontrol-example chapter6/examples/flowcontrol-example\n```", "```\n{{- with .Values.book.chapter6.props }}\n  chapterNumber: {{ .chapterNumber }} \n  chapterName: {{ .chapterName }}\n  ChartName: {{ .Chart.Name }}\n{{- end }}\nError: template: flowcontrol-example/templates/configmap.yaml:12:22: executing \"flowcontrol-example/templates/configmap.yaml\" at <.Chart.Name>: nil pointer evaluating interface {}.Name\n```", "```\n{{- with .Values.book.chapter6.props }}\n  chapterNumber: {{ .chapterNumber }} \n  chapterName: {{ .chapterName }}\n  ChartName: {{ $.Chart.Name }}\n{{- end }}\n```", "```\nservice:\n  ports:\n    - name: http\n      port: 80\n      targetPort: 8080\n    - name: https\n      port: 443\n      targetPort: 8443\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ .Release.Name }}\n  labels:\n    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion }}\nspec:\n  type: ClusterIP\n  ports:\n  {{- range .Values.service.ports }}\n    - port: {{ .port }}\n      targetPort: {{ .targetPort }}\n      protocol: TCP\n      name: {{ .name }}\n  {{- end }}\n  selector:\n    app: {{ .Release.Name }}\n```", "```\nFollow these instructions to access your application.\n{{- if eq .Values.serviceType \"NodePort\" }}\nexport NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath=\"{.spec.ports[0].nodePort}\" services {{.Release.Name }})\nexport NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath=\"{.items[0].status.addresses[0].address}\")\necho \"URL: http://$NODE_IP:$NODE_PORT\n{{- else }}\nexport SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Name }} wordpress --template \"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\")\necho \"URL: http://$SERVICE_IP\"\n{{- end }}\n```", "```\n{{ $myvar := \"Hello World!\" }}\n```", "```\n{{ $myvar := .Values.greeting }}\n```", "```\ndata:\n  greeting.txt: |-\n    {{ $myvar }}\n```", "```\ndata:\n  greetings.txt\n{{- range $index, $value := .Values.greetings }}\n    Greeting {{ $index }}: {{ $value }}\n{{- end }}\n```", "```\ndata:\n  greetings.txt\n    Greeting 0: Hello\n    Greeting 1: Hola\n    Greeting 2: Hallo\n```", "```\ndata:\n  greetings.txt\n{{- range $key, $val := .Values.greetings }}\n    Greeting in {{ $key }}: {{ $val }}\n{{- end }}\n```", "```\ndata:\n  greetings.txt\n    Greeting in English: Hello\n    Greeting in Spanish: Hola\n    Greeting in German: Hallo\n```", "```\n{{- with .Values.application.configuration }}\nMy application is called {{ .Release.Name }}\n{{- end }}\n```", "```\n{{ $appName := .Release.Name }}\n{{- with .Values.application.configuration }}\nMy application is called {{ $appName }}\n{{- end }}\n```", "```\n{{- with .Values.application.configuration }}\nMy application is called {{ $.Release.Name }}\n{{- end }}\n```", "```\nservice:\n  type: ClusterIP\n```", "```\n{{- $serviceTypes := list \"ClusterIP\" \"NodePort\" }}\n{{- if has .Values.service.type $serviceTypes }}\n  type: {{ .Values.service.type }}\n{{- else }}\n  {{- fail \"value 'service.type' must be either 'ClusterIP' or 'NodePort'\" }}\n{{- end }}\n```", "```\n$ helm template fail-example chapter6/examples/fail-example --set service.type=LoadBalancer\nError: execution error at (fail-example/templates/service.yaml:10:6): value 'service.type' must be either 'ClusterIP' or 'NodePort'\n```", "```\nservice:\n  type:\n```", "```\nspec:\n  type: {{ required \"value 'service.type' is required\" .Values.service.type }}\n```", "```\n$ helm template required-example chapter6/examples/required-example\nError: execution error at (required-example/templates/service.yaml:6:11): value 'service.type' is required\n```", "```\n$ helm template schema-example chapter6/examples/schema-example --set service.type=LoadBalancer\nError: values don't meet the specifications of the schema(s) in the following chart(s):\nschema-example:\n- service.type: service.type must be one of the following: \"ClusterIP\", \"NodePort\"\n```", "```\nlabels:\n  \"app.kubernetes.io/instance\": {{ .Release.Name }}\n  \"app.kubernetes.io/managed-by\": {{ .Release.Service }}\n  \"helm.sh/chart\": {{ .Chart.Name }}-{{ .Chart.Version }}\n  \"app.kubernetes.io/version\": {{ .Chart.AppVersion }}\n```", "```\n{{- define \"mychart.labels\" }}\nlabels:\n  \"app.kubernetes.io/instance\": {{ .Release.Name }}\n  \"app.kubernetes.io/managed-by\": {{ .Release.Service }}\n  \"helm.sh/chart\": {{ .Chart.Name }}-{{ .Chart.Version }}\n  \"app.kubernetes.io/version\": {{ .Chart.AppVersion }}\n{{- end }}\n```", "```\ninclude [TEMPLATE_NAME] [SCOPE]\n```", "```\nmetadata:\n  name: {{ .Release.Name }}\n{{- include \"mychart.labels\" . | indent 2 }}\n```", "```\nmetadata:\n  name: template-demonstration\n  labels:\n    \"app.kubernetes.io/instance\": template-demonstration\n    \"app.kubernetes.io/managed-by\": Helm\n    \"helm.sh/chart\": mychart-1.0.0\n    \"app.kubernetes.io/version\": 1.0\n```", "```\ndependencies:\n  - name: common\n    version: 0.x.x\n    repository: https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami \n```", "```\ncrds/\n  my-custom-resource-crd.yaml\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: my-custom-resources.learnhelm.io\nspec:\n  group: learnhelm.io\n  names:\n    kind: MyCustomResource\n    listKind: MyCustomResourceList\n    plural: MyCustomResources\n    singular: MyCustomResource\n  scope: Namespaced\n  version: v1\n```", "```\ntemplates/\n  my-custom-resource.yaml\n```", "```\n$ helm install <release-name> <path-to-chart> --post-renderer <path-to-executable>\n```", "```\n$ cd chapter6/examples/post-renderer-example/post-render\n$ helm template nginx ../nginx --post-renderer ./hook.sh\n```", "```\nredis:\n  fullnameOverride: redis\n  auth:\n    enabled: false\n```", "```\nenv:\n  {{- toYaml .Values.env | nindent 12 }}\n```", "```\nenv:\n  - name: GET_HOSTS_FROM\n    value: env\n  - name: REDIS_LEADER_SERVICE_HOST\n    value: redis-master\n  - name: REDIS_FOLLOWER_SERVICE_HOST\n    value: redis-replicas\n```", "```\n$ minikube start\n$ kubectl create namespace chapter6\n```", "```\n$ helm install guestbook chapter6/guestbook -n chapter6\n$ kubectl get pods –n chapter6 –w\n```", "```\n$ kubectl port-forward svc/guestbook 8080:80 -n chapter6\n```", "```\n$ kubectl delete ns chapter6\n$ minikube stop\n```"]