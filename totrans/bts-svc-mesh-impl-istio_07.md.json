["```\n% kubectl apply -f Chapter7/01-prometheus.yaml\nserviceaccount/prometheus created\nconfigmap/prometheus created\nclusterrole.rbac.authorization.k8s.io/prometheus created\nclusterrolebinding.rbac.authorization.k8s.io/prometheus created\nservice/prometheus created\ndeployment.apps/prometheus created\n```", "```\n% kubectl get po -n istio-system\nNAME                       READY   STATUS    RESTARTS   AGE\nistio-egressgateway-7d75d6f46f-28r59   1/1     Running   0          48d\nistio-ingressgateway-5df7fcddf-7qdx9   1/1     Running   0          48d\nistiod-56fd889679-ltxg5                1/1     Running   0          48d\nprometheus-7b8b9dd44c-sp5pc            2/2     Running   0          16s\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    istio-injection: enabled\n  name: sock-shop\n```", "```\n% kubectl apply -f sockshop/devops/deploy/kubernetes/manifests/\n```", "```\n% kubectl apply -f Chapter7/sockshop-IstioServices.yaml\n```", "```\n% istioctl dashboard prometheus\nhttp://localhost:9090\n```", "```\nistio_requests_total{destination_service=\"front-end.sock-shop.svc.cluster.local\",response_code=\"200\",source_app=\"istio-ingressgateway\",namespace=\"sock-shop\"}\n```", "```\nistio_requests_total{destination_service=\"catalogue.sock-shop.svc.cluster.local\",source_workload=\"front-end\",reporter=\"source\",response_code=\"200\"}\n```", "```\nistio_tcp_connections_opened_total{destination_canonical_service=\"catalogue-db\",source_workload=\"catalogue\", source_workload_namespace=\"sock-shop}\n```", "```\n% kubectl exec front-end-6c768c478-82sqw -n sock-shop -c istio-proxy -- curl -sS 'localhost:15000/stats/prometheus' | grep istio_requests_total\n```", "```\n% kubectl get EnvoyFilters -A\nNAMESPACE      NAME                               AGE\nistio-system   stats-filter-1.16                  28h\nistio-system   tcp-stats-filter-1.16              28h\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: custom-metrics\n  namespace: sock-shop\nspec:\n  workloadSelector:\n    labels:\n      name: front-end\n```", "```\nconfigPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND\n      listener:\n        filterChain:\n          filter:\n            name: envoy.filters.network.http_connection_manager\n            subFilter:\n              name: istio.stats\n      proxy:\n        proxyVersion: ^1\\.16.*\n```", "```\npatch:\n      operation: REPLACE\n      value:\n        name: istio.stats\n        typed_config:\n          '@type': type.googleapis.com/udpa.type.v1.TypedStruct\n          type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm\n          value:\n            config:\n              configuration:\n                '@type': type.googleapis.com/google.protobuf.StringValue\n                value: |\n                  {\n                    \"debug\": \"false\",\n                    \"stat_prefix\": \"istio\",\n                    \"metrics\": [\n                      {\n                        \"name\": \"requests_total\",\n                        \"dimensions\": {\n                          \"request.url_path\": \"request.url_path\"\n                        }\n                      }\n                    ]\n                  }\n```", "```\n\"metrics\": [\n                      {\n                        \"name\": \"requests_total\",\n                        \"dimensions\": {\n                          \"request.url_path\": \"request.url_path\"\n                        },\n                        \"tags_to_remove\": [\n                          \"response_flags\"\n                        ]\n                      }\n```", "```\n% kubectl apply -f Chapter7/01-custom-metrics.yaml\nenvoyfilter.networking.istio.io/custom-metrics created\n```", "```\nspec:\n  template:\n    metadata:\n      annotations:\n        sidecar.istio.io/extraStatTags: request.url_path\n```", "```\n% kubectl patch Deployment/front-end -n sock-shop --type=merge --patch-file Chapter7/01-sockshopfrontenddeployment_patch.yaml\n```", "```\n              configuration:\n                '@type': type.googleapis.com/google.protobuf.StringValue\n                value: |\n                  {\n                    \"debug\": \"false\",\n                    \"stat_prefix\": \"istio\",\n                    \"definitions\": [\n                      {\n                        \"name\": \"request_total_bymethod\",\n                        \"type\": \"COUNTER\",\n                        \"value\": \"1\"\n                      }\n                    ],\n                    \"metrics\": [\n                      {\n                        \"name\": \"request_total_bymethod\",\n                        \"dimensions\": {\n                          \"request.method\": \"request.method\"\n                        }\n                      }\n                    ]\n                  }\n```", "```\n% kubectl apply -f Chapter7/02-new-metric.yaml\nenvoyfilter.networking.istio.io/request-total-bymethod configured\n```", "```\n% kubectl patch Deployment/front-end -n sock-shop --type=merge --patch-file Chapter7/02-sockshopfrontenddeployment_patch.yaml\ndeployment.apps/front-end patched\n```", "```\n% kubectl exec front-end-58755f99b4-v59cd -n sock-shop -c istio-proxy -- curl -sS 'localhost:15000/stats/prometheus' | grep request_total_bymethod\n# TYPE istio_request_total_bymethod counter\nistio_request_total_bymethod{request_method=\"GET\"} 137\n```", "```\n% kubectl apply -f samples/addons/grafana.yaml\nserviceaccount/grafana created\nconfigmap/grafana created\nservice/grafana created\ndeployment.apps/grafana created\nconfigmap/istio-grafana-dashboards created\nconfigmap/istio-services-grafana-dashboards created\n```", "```\n% istioctl dashboard grafana\nhttp://localhost:3000\n```", "```\n% kubectl apply -f samples/addons/jaeger.yaml\ndeployment.apps/jaeger created\nservice/tracing created\nservice/zipkin created\nservice/jaeger-collector created\n```", "```\n$ istioctl dashboard jaeger\n```", "```\n% kubectl apply -f  Chapter7/01-httpbin-deployment.yaml\n```", "```\n% curl -H \"Host:httpbin.com\"  http://a858beb9fccb444f48185da8fce35019-1967243973.us-east-1.elb.amazonaws.com/headers\n{\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Host\": \"httpbin.com\",\n    \"User-Agent\": \"curl/7.79.1\",\n    \"X-B3-Parentspanid\": \"5c0572d9e4ed5415\",\n    \"X-B3-Sampled\": \"1\",\n    \"X-B3-Spanid\": \"743b39197aaca61f\",\n    \"X-B3-Traceid\": \"73665fec31eb46795c0572d9e4ed5415\",\n    \"X-Envoy-Attempt-Count\": \"1\",\n    \"X-Envoy-Internal\": \"true\",\n    \"X-Forwarded-Client-Cert\": \"By=spiffe://cluster.local/ns/Chapter7/sa/default;Hash=5c4dfe997d5ae7c853efb8b81624f1ae5e4472f1cabeb36a7cec38c9a4807832;Subject=\\\"\\\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account\"\n  }\n}\n```", "```\n% kubectl apply -f samples/bookinfo/platform/kube/bookinfo.ya\nml -n Chapter7\n% kubectl apply -f Chapter7/bookinfo-gateway.yaml\n```", "```\n% kubectl get cm/istio -n istio-system -o yaml\n```", "```\napiVersion: v1\ndata:\n  mesh: |-\n..\n      tracing:\n       sampling: 10\n        zipkin:\n          address: zipkin.istio-system:9411\n    enablePrometheusMerge: true\n..\nkind: ConfigMap\n```", "```\n  template:\n    metadata:\n      annotations:\n        proxy.istio.io/config: |\n          tracing:\n            sampling: 1\n            zipkin:\n              address: zipkin.istio-system:9411\n```"]