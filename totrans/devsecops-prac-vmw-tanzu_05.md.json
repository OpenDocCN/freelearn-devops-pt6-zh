["```\n    $ kubectl get deploy -n kapp-controller kapp-controller -ojsonpath='{.metadata.annotations.kapp-controller\\.carvel\\.dev/version}'\n    ```", "```\n    v0.29.0\n    ```", "```\n    $ kubectl get deploy -n secretgen-controller\n    ```", "```\n    NAME                   READY   UP-TO-DATE   AVAILABLE   AGE\n    ```", "```\n    secretgen-controller   1/1     1            1           23h\n    ```", "```\n    $ helm version\n    ```", "```\n    version.BuildInfo{Version:\"v3.5.3\", GitCommit:\"041ce5a2c17a58be0fcd5f5e16fb3e7e95fea622\", GitTreeState:\"dirty\", GoVersion:\"go1.15.8\"}\n    ```", "```\n    $ kustomize version\n    ```", "```\n    {Version:kustomize/v4.0.5 GitCommit:9e8e7a7fe99ec9fbf801463e8607928322fc5245 BuildDate:2021-03-08T20:53:03Z GoOs:darwin GoArch:amd64}\n    ```", "```\n    $ export DOCKER_USER=<your dockerhub username>\n    ```", "```\n    $ docker pull hello-world\n    ```", "```\n    $ docker tag hello-world docker.io/$DOCKER_USER/hello-world\n    ```", "```\n    $ docker push docker.io/$DOCKER_USER/hello-world\n    ```", "```\nbash-5.0$ ./relocate-images.sh docker.io/rhardt\nRelocating image\n================\nimage name: gateway\nversion: 1.0.8\nsource repository: registry.tanzu.vmware.com/spring-cloud-gateway-for-kubernetes/gateway:1.0.8\ndestination repository: docker.io/rhardt/gateway:1.0.8\nLoaded image: registry.tanzu.vmware.com/spring-cloud-gateway-for-kubernetes/gateway:1.0.8\nThe push refers to repository [docker.io/rhardt/gateway]\n1dc94a70dbaa: Layer already exists\n… (more layers)\n824bf068fd3d: Layer already exists\n1.0.8: digest: sha256:8c1deade58dddad7ef1ca6928cbdd76e401bc0afaf7c44378d296bf3c7474838 size: 4500\nRelocating image\n================\nimage name: scg-operator\nversion: 1.0.8\nsource repository: registry.tanzu.vmware.com/spring-cloud-gateway-for-kubernetes/scg-operator:1.0.8\ndestination repository: docker.io/rhardt/scg-operator:1.0.8\nLoaded image: registry.tanzu.vmware.com/spring-cloud-gateway-for-kubernetes/scg-operator:1.0.8\nThe push refers to repository [docker.io/rhardt/scg-operator]\n1dc94a70dbaa: Layer already exists\n… (more layers)\n824bf068fd3d: Layer already exists\n1.0.8: digest: sha256:da9f2677e437ccd8d793427e6cafd9f4bb6287ecffdc40773cf3b1f518f075fb size: 4498\n```", "```\nbash-5.0$ ./install-spring-cloud-gateway.sh\nchart tarball: spring-cloud-gateway-1.0.8.tgz\nchart name: spring-cloud-gateway\nWaiting up to 2m for helm installation to complete\nRelease \"spring-cloud-gateway\" does not exist. Installing it now.\nNAME: spring-cloud-gateway\nLAST DEPLOYED: Mon Feb 21 18:25:13 2022\nNAMESPACE: spring-cloud-gateway\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nThis chart contains the Kubernetes operator for Spring Cloud Gateway.\nInstall the chart spring-cloud-gateway-crds before installing this chart\nChecking Operator pod state\ndeployment \"scg-operator\" successfully rolled out\n Operator pods are running\nChecking custom resource definitions\n springcloudgatewaymappings.tanzu.vmware.com successfully installed\n springcloudgatewayrouteconfigs.tanzu.vmware.com successfully installed\n springcloudgateways.tanzu.vmware.com successfully installed\nSuccessfully installed Spring Cloud Gateway operator\nbash-5.0$\n```", "```\nbash-3.2$ git clone https://github.com/PacktPublishing/DevSecOps-in-Practice-with-VMware-Tanzu\nCloning into 'DevSecOps-in-Practice-with-VMware-Tanzu'...\nremote: Enumerating objects: 499, done.\nremote: Counting objects: 100% (499/499), done.\nremote: Compressing objects: 100% (351/351), done.\nremote: Total 499 (delta 95), reused 473 (delta 75), pack-reused 0\nReceiving objects: 100% (499/499), 9.80 MiB | 10.39 MiB/s, done.\nResolving deltas: 100% (95/95), done.\nbash-3.2$ cd DevSecOps-in-Practice-with-VMware-Tanzu/chapter-05/animal-rescue/\nbash-3.2$\n```", "```\n    jwk-set-uri=<issuer uri>/v1/keys\n    ```", "```\n    scope=openid,profile,email,groups,animals.adopt\n    ```", "```\n    client-id=<client id>\n    ```", "```\n    client-secret=<client id>\n    ```", "```\n    issuer-uri=<issuer uri>\n    ```", "```\nbash-5.0$ kustomize build . | kubectl apply -f -\nnamespace/animal-rescue created\nsecret/animal-rescue-sso created\nsecret/sso-credentials created\nservice/animal-rescue-backend created\nservice/animal-rescue-frontend created\ndeployment.apps/animal-rescue-backend created\ndeployment.apps/animal-rescue-frontend created\ningress.networking.k8s.io/gateway-demo created\nspringcloudgateway.tanzu.vmware.com/gateway-demo created\nspringcloudgatewaymapping.tanzu.vmware.com/animal-rescue-backend-routes created\nspringcloudgatewaymapping.tanzu.vmware.com/animal-rescue-frontend-routes created\nspringcloudgatewayrouteconfig.tanzu.vmware.com/animal-rescue-backend-route-config created\nspringcloudgatewayrouteconfig.tanzu.vmware.com/animal-rescue-frontend-route-config created\n```", "```\nbash-5.0$ kubectl get pods -n animal-rescue -w\nNAME                                     READY   STATUS    RESTARTS   AGE\nanimal-rescue-backend-546fc6c569-kgj2s   1/1     Running   0          27m\nanimal-rescue-frontend-b74f54847-rq284   1/1     Running   0          27m\ngateway-demo-0                    1/1     Running   0          23m\ngateway-demo-1                    1/1     Running   0          24m\n```", "```\nbash-5.0$ kubectl get svc -n spring-cloud-gateway\nNAME           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\nscg-operator   ClusterIP   10.98.103.232   <none>        80/TCP    40h\nbash-5.0$ kubectl port-forward -n spring-cloud-gateway svc/scg-operator 8083:80\nForwarding from 127.0.0.1:8083 -> 8080\nForwarding from [::1]:8083 -> 8080\n```", "```\napiPortalServer:\n   sourceUrls:  https://petstore.swagger.io/v2/swagger.json,https://petstore3.swagger.io/api/v3/openapi.json,http://scg-operator.spring-cloud-gateway.svc.cluster.local/openapi\n```", "```\nbash-5.0$ tanzu package installed update api-portal -n tap-install -f api-portal-values.yaml\n| Updating installed package 'api-portal'\n| Getting package install for 'api-portal'\n| Getting package metadata for 'api-portal.tanzu.vmware.com'\n| Creating secret 'api-portal-tap-install-values'\n| Updating package install for 'api-portal'\n/ Waiting for 'PackageInstall' reconciliation for 'api-portal'\n/ 'PackageInstall' resource install status: Reconciling\nUpdated installed package 'api-portal' in namespace 'tap-install'\nbash-5.0$\n```", "```\nbash-5.0$ kubectl get svc -n api-portal\nNAME                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\napi-portal-server   ClusterIP   10.103.142.154   <none>        8080/TCP   40h\nbash-5.0$ kubectl port-forward -n api-portal svc/api-portal-server 8085:8080\nForwarding from 127.0.0.1:8085 -> 8080\n```", "```\n$ kubectl apply -f ./animal-rescue-backend-route-config.yaml -n animal-rescue\nspringcloudgatewayrouteconfig.tanzu.vmware.com/animal-rescue-backend-route-config configured\n```", "```\nbash-5.0$ tanzu package installed list -n tap-install\n| Retrieving installed packages...\n  NAME        PACKAGE-NAME                 PACKAGE-VERSION  STATUS\n  api-portal  api-portal.tanzu.vmware.com  1.0.8            Reconcile succeeded\n```", "```\nbash-5.0$ tanzu package available list -n tap-install api-portal.tanzu.vmware.com\n/ Retrieving package versions for api-portal.tanzu.vmware.com...\n  NAME                         VERSION  RELEASED-AT\n  api-portal.tanzu.vmware.com  1.0.8    2021-12-15 19:00:00 -0500 EST\n  api-portal.tanzu.vmware.com  1.0.9    2022-01-02 19:00:00 -0500 EST\n```", "```\nbash-5.0$ tanzu package installed update api-portal -n tap-install -v 1.0.9\n| Updating installed package 'api-portal'\n| Getting package install for 'api-portal'\n| Getting package metadata for 'api-portal.tanzu.vmware.com'\n| Updating package install for 'api-portal'\n/ Waiting for 'PackageInstall' reconciliation for 'api-portal'\nUpdated installed package 'api-portal' in namespace 'tap-install'\n```"]