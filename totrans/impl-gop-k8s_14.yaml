- en: '14'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: FinOps, Sustainability, AI, and Future Trends for GitOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we venture beyond the conventional boundaries of GitOps to
    explore its extensive scope and multifaceted impact across various domains not
    covered in the main sections of the book. Our journey is structured into distinct
    yet interconnected blocks, each shedding light on different dimensions where GitOps
    extends its influence, providing a comprehensive insight into the potential and
    versatility of this practice.
  prefs: []
  type: TYPE_NORMAL
- en: We commence with the fundamentals of **FinOps** and **cost management**, where
    the fusion of financial acumen and operational expertise comes to the forefront.
    This segment elucidates how the FinOps framework, integrated with GitOps methodologies,
    empowers organizations to wield granular control over their cloud expenditures.
    By leveraging tools such as **OpenCost** and **Kubecost** in a GitOps-driven environment,
    businesses can achieve unprecedented transparency and efficiency in managing costs
    for clusters, projects, and beyond, ensuring that every dollar spent is an investment
    toward innovation and growth.
  prefs: []
  type: TYPE_NORMAL
- en: Transitioning to the realm of sustainability and green operations, we delve
    into how GitOps can be a catalyst for eco-friendly IT practices. This block emphasizes
    the significance of sustainable operations, not only from an economic standpoint
    but also in contributing to environmental stewardship. We discuss practical strategies,
    such as the automated shutdown of development clusters, illustrating how GitOps
    can align technological advancements with ecological responsibility, thereby fostering
    a culture of sustainability within the tech industry.
  prefs: []
  type: TYPE_NORMAL
- en: The exploration expands to include GitOps and **artificial intelligence** (**AI**)-driven
    automation, a segment that bridges the advanced realms of AI and GitOps. This
    fusion is revolutionizing the way organizations deploy, monitor, and manage their
    IT landscapes, transcending the hype to deliver tangible, impactful automation
    solutions. Through real-world examples and case studies, we examine the dual benefits
    of AI in enhancing DevOps practices and streamlining the deployment of inter-company
    services, all within the GitOps framework.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we reflect on the evolving landscape of GitOps, contemplating the continuous
    evolution of GitOps principles and their transformative influence across various
    sectors. This concluding block forecasts the future trajectory of GitOps, speculating
    on its role amid emerging technologies and its potential to redefine industry
    standards. We delve into how GitOps is **pivotal** in forecasting and monitoring
    cloud costs, thereby enabling organizations to navigate the complexities of modern
    cloud environments with confidence and strategic foresight.
  prefs: []
  type: TYPE_NORMAL
- en: Each of these blocks, while distinct in focus, collectively underscores the
    expansive reach of GitOps, illustrating its role as a cornerstone in modern IT
    strategy. This chapter aims to broaden readers’ perspective, encouraging them
    to envision GitOps not merely as a tool for operational efficiency but as a holistic
    approach that harmonizes technological innovation with financial wisdom, environmental
    consciousness, and forward-thinking adaptability.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following main topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Covering the fundamentals of FinOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forecasting and monitoring costs with GitOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optimization techniques for cloud spend
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assessing carbon footprint and promoting green operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking at GitOps and AI-driven automation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future challenges and opportunities in GitOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The role of GitOps in emerging technologies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Covering the fundamentals of FinOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**FinOps**, an operational framework blending finance and DevOps principles,
    is fundamentally a cultural practice aimed at maximizing the business value of
    cloud investments. It fosters a collaborative environment where engineering, finance,
    and business teams work together to facilitate data-driven decisions, enhancing
    financial accountability and optimizing cloud costs.'
  prefs: []
  type: TYPE_NORMAL
- en: The essence of FinOps lies in its ability to bridge the gap between traditionally
    siloed departments, promoting a shared responsibility model where all stakeholders
    are vested in the cloud’s cost-effectiveness and operational efficiency. This
    cross-functional synergy is crucial for enabling faster product delivery while
    ensuring financial transparency and control.
  prefs: []
  type: TYPE_NORMAL
- en: Key aspects of FinOps include real-time monitoring of cloud expenses, enabling
    organizations to make informed decisions that balance cost, speed, and quality.
    The approach goes beyond mere cost-cutting; it’s about leveraging the cloud’s
    variable spending model to drive innovation, revenue growth, and strategic investments
    in the tech infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Organizations looking to adopt FinOps can start by exploring resources offered
    by the FinOps Foundation, which provides education, best practices, and community
    engagement to support different maturity levels in the FinOps journey. The **Crawl,
    Walk, Run** maturity model advocated by FinOps allows organizations to evolve
    their financial operations progressively, enhancing their cloud architecture and
    investment strategies continuously.
  prefs: []
  type: TYPE_NORMAL
- en: The Crawl, Walk, Run model
  prefs: []
  type: TYPE_NORMAL
- en: The **Crawl, Walk, Run** model is a framework that describes the progressive
    stages of learning and implementation. In the **Crawl** stage, individuals or
    organizations focus on understanding basic principles with limited scope and high
    reliance on guidance. The **Walk** stage involves greater familiarity and confidence,
    with more complex tasks and increased efficiency. Finally, in the **Run** stage,
    there is full mastery and independent, innovative use of the new concept, process,
    or technology. This model helps manage expectations and provides a structured
    growth path to ensure a solid foundation before advancing to more complex levels.
  prefs: []
  type: TYPE_NORMAL
- en: Central to the FinOps framework are principles guiding collaborative efforts,
    personal ownership of cloud usage, and the strategic alignment of cloud investments
    with business value. These principles ensure that every team member, from executives
    to engineers, understands and contributes to the efficient and innovative use
    of cloud resources.
  prefs: []
  type: TYPE_NORMAL
- en: Incorporating FinOps into an organization’s operational model not only promises
    enhanced cost management and optimization but also aligns cloud expenditure with
    business outcomes, ensuring that investments translate into tangible value. This
    strategic alignment is crucial in today’s dynamic cloud environments, where adaptive
    planning and cost-effective resource utilization are key to sustaining competitive
    advantage and fostering long-term growth.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will use OpenCost [*1*] and Kubecost [*2*] to determine
    the costs for a cluster or for a namespace, which could, for example, represent
    a project.
  prefs: []
  type: TYPE_NORMAL
- en: Forecasting and monitoring costs with GitOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitOps can be seamlessly integrated with FinOps to enhance the financial governance
    of cloud resources while **maintaining agility** and operational efficiency. The
    combination of GitOps and FinOps practices enables organizations to manage their
    cloud infrastructure and costs more effectively through automation, version control,
    and continuous monitoring.
  prefs: []
  type: TYPE_NORMAL
- en: How GitOps complements FinOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, let’s understand how GitOps complements FinOps:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automated cost optimization**: GitOps allows for the automation of deployment
    and scaling of cloud resources, which can be integrated with FinOps strategies
    to ensure that resource utilization is optimized for cost without sacrificing
    performance. This means infrastructure can scale up or down automatically, aligning
    with financial objectives and operational demands.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Version-controlled spending**: With GitOps, every change to the infrastructure
    is version-controlled in Git repositories, providing an audit trail of what changes
    were made, who made them, and why. This aligns with FinOps principles by adding
    transparency to the financial impact of operational changes, enabling better budget
    tracking and cost allocation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration and visibility**: GitOps fosters collaboration among development,
    operations, and finance teams by using Git as a **single source of truth** (**SSOT**).
    This collaborative environment ensures that financial considerations are integrated
    into the earliest stages of infrastructure planning and application development,
    promoting a cost-aware culture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Policy enforcement**: Integrating **policy-as-code** (**PaC**) tools within
    a GitOps workflow can enforce financial governance, ensuring that resources are
    utilized efficiently and within budget. Policies can be set to prevent overspending,
    enforce the use of cost-optimized resources, or ensure adherence to budgetary
    constraints.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous cost monitoring and feedback**: GitOps enables continuous monitoring
    and feedback loops, allowing teams to quickly identify and address inefficiencies
    in cloud resource utilization. This constant vigilance helps in maintaining a
    balance between operational efficiency, cost, and speed, in line with FinOps goals.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Proactive financial management**: By using GitOps, organizations can proactively
    manage their cloud expenses. **Infrastructure-as-code** (**IaC**) templates stored
    in Git repositories can be analyzed to forecast costs and understand the financial
    implications of planned changes before they are executed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Utilizing GitOps with FinOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following points describe how integrating cost monitoring, budget enforcement,
    resource optimization, and financial operations automation into a GitOps pipeline
    can enhance cost efficiency and ensure financial governance:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Implementing cost monitoring tools**: Integrate cloud cost monitoring tools
    into the GitOps pipeline to provide real-time feedback on the financial impact
    of code changes and infrastructure updates'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enforcing budget policies**: Use GitOps to enforce budget policies through
    IaC, ensuring that deployments conform to predefined financial constraints and
    operational budgets'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Optimizing resource allocation**: Leverage GitOps to automate the deployment
    of cost-optimized resources, such as spot instances, and to shut down underutilized
    resources, ensuring efficient cloud spend'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Streamlining financial operations**: Automate financial operations tasks
    such as cost reporting, budget alerts, and resource tagging through GitOps, ensuring
    that financial governance is consistently applied across all cloud resources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By integrating GitOps with FinOps practices, organizations can ensure that their
    cloud infrastructure is not only operationally efficient but also aligned with
    their financial objectives, delivering maximum value from their cloud investments.
    This holistic approach enables a more agile, transparent, and cost-effective cloud
    management strategy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s take a look at how it works in practice. For this, we will examine
    two tools: OpenCost as an open source option and Kubecost, which is built on OpenCost
    but offers many additional features on top in the next part.'
  prefs: []
  type: TYPE_NORMAL
- en: OpenCost versus Kubecost with GitOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OpenCost and Kubecost are tools used in the realm of Kubernetes cost monitoring
    and analysis, providing insights into resource utilization and assisting in managing
    costs associated with Kubernetes environments in the cloud. Let’s cover a brief
    description of both tools and the differences between them.
  prefs: []
  type: TYPE_NORMAL
- en: OpenCost
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'OpenCost is an open source tool that brings **transparency** to the costs and
    usage associated with Kubernetes clusters. It enables teams to monitor, analyze,
    and optimize their Kubernetes costs by providing detailed insights into resource
    utilization and associated expenses. OpenCost offers features such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Cost breakdown at the pod, deployment, namespace, or cluster level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for multi-cluster environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrations with cloud providers for more accurate cost estimation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forever free and open source, supported and maintained by experts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'How does this all fit with GitOps, or, more specifically, what value does GitOps
    add in the FinOps context? OpenCost sets up on-premises pricing configurations
    based on the `us-central-1` region—for instance, `"CPU": "0.031611"$`, and `"RAM":
    "0.004237"$` on an hourly basis. Nevertheless, OpenCost also allows for the customization
    of pricing. This is where GitOps comes into play, enabling not just the deployment
    of the OpenCost tool across various clusters (*Figure 14**.1*) but also the capability
    to configure prices accordingly. For example, if you have three data centers in
    Europe, located in three different countries, the CPU and RAM prices will vary
    due to factors such as electricity prices, procurement, depreciation, and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are globally defined values under `optimization/opencost`, and then there’s
    a custom pricing model for each specific country. Visually, it looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.1 – OpenCost with GitOps and on-premise pricing configuration](img/B22100_14_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.1 – OpenCost with GitOps and on-premise pricing configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'For the scenario in *Figure 14**.1*, we establish the following folder structure
    [*3*]:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It can also be combined with **hybrid cloud** and **multi-cloud**; then, it
    might look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.2 – OpenCost with GitOps and hybrid-setup pricing configuration](img/B22100_14_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.2 – OpenCost with GitOps and hybrid-setup pricing configuration
  prefs: []
  type: TYPE_NORMAL
- en: GitOps, combined with OpenCost, opens up new possibilities in FinOps, enabling
    more user- and infrastructure-defined cost visibility across distributed infrastructures,
    thus allowing for enhanced financial oversight, precise cost allocation, and strategic
    budget optimization in cloud environments.
  prefs: []
  type: TYPE_NORMAL
- en: However, if you require functionalities such as team collaboration, budget planning,
    alerting, estimated monthly savings, and more, then you should consider exploring
    Kubecost.
  prefs: []
  type: TYPE_NORMAL
- en: Kubecost
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Kubecost is a product that builds on OpenCost. It’s a commercial solution that
    offers additional features and support for businesses that go beyond the core
    functionalities of the OpenCost project. Kubecost includes all the features of
    OpenCost, along with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Advanced budgeting and cost forecasting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Personalized optimization recommendations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional security and compliance features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Professional support and consultation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Additionally, you have the flexibility to utilize GitOps not just for deploying
    Kubecost across various clusters but also to **empower teams** to set **budgets**
    based on namespaces, clusters, or labels, along with specifying actions (*Figure
    14**.3*) to take when budget thresholds are exceeded:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.3 – Kubecost with GitOps: defining budget and cost alerts](img/B22100_14_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14.3 – Kubecost with GitOps: defining budget and cost alerts'
  prefs: []
  type: TYPE_NORMAL
- en: By integrating GitOps with Kubecost, organizations empower their teams with
    enhanced control over their projects or clusters, streamlining the deployment
    of this powerful tool. This synergy allows teams not only to deploy Kubecost efficiently
    at scale but also to define essential parameters that align with their budgetary
    needs. Such integration is pivotal in fostering a collaborative environment for
    cost management, enabling various teams within the organization to share best
    practices, insights, and strategies to collectively optimize resources.
  prefs: []
  type: TYPE_NORMAL
- en: This collaborative atmosphere is further enriched by the capabilities of Kubecost
    combined with GitOps, which facilitate proactive cost management. With the ability
    to set predefined thresholds and configure automated alerts, teams are equipped
    to actively monitor and manage their cloud spending. This proactive stance ensures
    that any potential budget overruns are swiftly identified and addressed, and overall
    cloud expenditure is optimized effectively.
  prefs: []
  type: TYPE_NORMAL
- en: The confluence of GitOps and Kubecost transforms the approach to cloud cost
    management, moving from a reactive to a proactive model. Teams are no longer in
    the dark about their spending trends and are instead provided with a clear, actionable
    framework that enables them to maintain financial efficiency while capitalizing
    on the scalability and flexibility of cloud resources. This integration ensures
    that cost optimization is not just an afterthought such as the end of the month
    but a fundamental aspect of **daily operations**, empowering teams to leverage
    cloud resources judiciously and economically.
  prefs: []
  type: TYPE_NORMAL
- en: Differences between OpenCost and Kubecost
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are the most important differences between the two tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Open source versus commercial**: OpenCost is an open source project inviting
    the community to freely use and adapt it, whereas Kubecost is a commercial version
    offering enhanced features and support for business customers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Feature set**: Kubecost builds upon OpenCost, extending it with additional,
    commercial features specifically designed for enterprise customers. For example,
    while OpenCost provides basic cost monitoring for Kubernetes clusters, Kubecost
    offers advanced features such as automated cost optimization recommendations and
    detailed cost allocation reports for different teams and projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Support**: Kubecost provides professional support and consulting services
    that go beyond what is typically expected from an open source project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both tools aim to improve transparency and control over costs associated with
    Kubernetes usage, but they cater to different user groups and needs, ranging from
    the open source community to large enterprises.
  prefs: []
  type: TYPE_NORMAL
- en: This combination of GitOps and OpenCost or Kubecost not only streamlines operational
    efficiency but also significantly enhances the strategic financial management
    of Kubernetes environments.
  prefs: []
  type: TYPE_NORMAL
- en: In the next part, we look at how to optimize cloud costs and how GitOps with
    Kubecost contributes to this.
  prefs: []
  type: TYPE_NORMAL
- en: Optimization techniques for cloud spend
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Optimization techniques for cloud spending are crucial for organizations looking
    to maximize their **cloud investment** while minimizing unnecessary costs. Integrating
    GitOps with tools such as Kubecost can significantly streamline this process,
    providing a systematic approach to managing and reducing cloud expenses. Here’s
    how this combination can be leveraged to enhance cloud spend optimization.
  prefs: []
  type: TYPE_NORMAL
- en: Combining GitOps and Kubecost for cloud spend optimization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GitOps, by design, brings automation, predictability, and transparency to cloud
    operations. It establishes a Git repository as the SSOT for the entire infrastructure,
    which means every change is version-controlled, traceable, and reversible. This
    methodical approach is instrumental in cloud spend optimization.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: An example on GitHub under [*Chapter 14*](B22100_14.xhtml#_idTextAnchor274),
    `...optimization/kubecost`, demonstrates how to configure alerts in the Kubecost
    UI and via Helm Chart deployment using the `values.yaml` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'When GitOps and Kubecost are used together, they provide a powerful framework
    for ongoing cloud spend optimization:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automated resource optimization**: GitOps can automate the deployment of
    Kubecost’s recommendations, ensuring that cost-saving measures are promptly and
    consistently applied across the infrastructure'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous monitoring and adjustment**: The combination allows for continuous
    monitoring of cloud spend and automatic adjustments based on predefined policies,
    ensuring that the cloud environment is always running in the most cost-effective
    manner'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhanced collaboration**: By integrating these tools, financial and operational
    teams can collaborate more effectively, with GitOps providing the operational
    framework and Kubecost offering financial insights, leading to more informed decision-making'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s imagine a new project comes in. The platform team provides the Kubernetes
    platform, but the FinOps team, which has a fixed budget of 500 USD per project,
    is responsible for managing the costs. The FinOps Team can create a budget with
    alerts in the UI or let the GitOps team deploy the alert via GitOps budgets for
    the project namespaces and clusters and set up **alerts**.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the FinOps team, for example, wonders why the cumulative budget across the
    namespaces is between 70-100 USD, but the total spent budget is around 600 USD,
    they can use the alerts and UI to investigate the root cause. The Kubecost UI
    (*Figure 14**.4*) reveals that the cluster efficiency, for example, is below 12%,
    and savings of about 50 USD are already possible with a 7-day retrospective:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.4 – Kubecost cluster efficiency ~12% for 7 days](img/B22100_14_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.4 – Kubecost cluster efficiency ~12% for 7 days
  prefs: []
  type: TYPE_NORMAL
- en: 'The FinOps team then examines the potential savings in *Figure 14**.5* to understand
    the origins of the costs. It quickly becomes apparent that the cluster for the
    project is oversized. Together with the platform team and by utilizing Kubecost,
    the teams involved in the project can implement sizing adjustments and mechanisms
    to modify actions accordingly. At this juncture, it’s crucial that collaboration
    between the teams is effective and that all teams act in the interest of the company,
    sustainability, and the project. This is how cloud costs can be sensibly optimized:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.5 – Kubecost savings recommendation](img/B22100_14_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.5 – Kubecost savings recommendation
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion, leveraging GitOps alongside Kubecost can transform cloud spend
    optimization from a reactive to a proactive endeavor. This integration not only
    provides granular insights into cloud usage and expenses but also automates the
    application of cost-saving strategies, ensuring that cloud resources are utilized
    efficiently and economically, and aligning cloud expenditure with organizational
    budgetary goals and operational requirements.
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, we will explore the utilization of GitOps along with
    diverse tools to progress toward sustainability.
  prefs: []
  type: TYPE_NORMAL
- en: Assessing carbon footprint and promoting green operations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assessing the carbon footprint and promoting green operations in cloud environments
    are critical steps toward achieving sustainability in IT operations. Tools such
    as `kube-green` [*4*] and **Armada** [*5*] offer innovative approaches to managing
    and reducing the environmental impact of cloud computing.
  prefs: []
  type: TYPE_NORMAL
- en: Assessing carbon footprint with kube-green
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `kube-green` tool focuses on optimizing resource usage in a way that correlates
    directly with energy consumption, thereby minimizing the environmental impact.
    Here’s how it contributes to green operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '`kube-green` tool can intelligently schedule workloads to run during times
    when the energy grid is supplied by renewable sources, thus promoting the use
    of green energy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource optimization**: It helps in fine-tuning the allocation of resources,
    ensuring that applications use only what they need and reducing the overall energy
    consumption of the data center'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Idle resource management**: The tool can automatically scale down or turn
    off idle resources, significantly cutting down energy waste and associated carbon
    emissions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing `kube-green` allows organizations to move toward carbon-neutral
    computing, aligning IT operations with broader environmental sustainability goals.
  prefs: []
  type: TYPE_NORMAL
- en: Promoting green operations with Armada
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While not a direct tool like `kube-green`, Armada represents the concept of
    a fleet management approach in Kubernetes, which can be adapted to promote green
    operations. By managing clusters efficiently, Armada can help in the following
    ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cluster consolidation**: Optimizing the number of active clusters and nodes
    based on demand, **reducing energy consumption** by avoiding the over-provisioning
    of resources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Energy-efficient deployments**: Facilitating the deployment of applications
    in an energy-efficient manner, potentially integrating with tools that forecast
    the availability of green energy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring and reporting**: Providing insights into the energy usage and
    efficiency of clusters, enabling informed decisions about how to reduce the carbon
    footprint'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adopting a strategy such as Armada allows organizations to oversee their Kubernetes
    clusters with an eye toward sustainability, ensuring that the infrastructure is
    as energy-efficient as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Assessing carbon footprint by integrating with GitOps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Integrating tools such as `kube-green` and concepts such as Armada into a GitOps
    workflow can further enhance their effectiveness:'
  prefs: []
  type: TYPE_NORMAL
- en: '`kube-green` policies and Armada strategies across all clusters, ensuring uniform
    adherence to sustainability practices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous optimization**: With GitOps, the continual adjustment and optimization
    of green policies can be maintained across the life cycle of applications, keeping
    sustainability a priority in every deployment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Transparency and accountability**: The declarative nature of GitOps provides
    a clear, version-controlled history of all changes made to promote green operations,
    fostering transparency and accountability in sustainability efforts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By assessing the carbon footprint and promoting green operations, organizations
    not only contribute to the environmental sustainability of their cloud infrastructure
    but also align with global efforts to reduce carbon emissions. The integration
    of these practices with GitOps ensures a systematic, scalable, and effective approach
    to sustainable cloud computing.
  prefs: []
  type: TYPE_NORMAL
- en: As AI is becoming increasingly important and there are already tools that can
    provide teams with useful support, we will take a look at these in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Looking at GitOps and AI-driven automation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the IT landscape becomes increasingly complex, especially when dissecting
    all aspects of Kubernetes in detail without the aid of GitOps or other tools,
    many layers accumulate, spanning from the operating system level through the network
    and up to **public key infrastructures** (**PKIs**). I notice more frequently
    that new employees in this field are finding it increasingly difficult to get
    started and to know where exactly to begin, especially when they are thrust into
    a project. Hence, there are practical AI tools available that can provide support
    in this area.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will explore two tools. The first tool, **Robusta.dev**,
    serves as a **troubleshooting co-pilot** for developers, providing them with real-time
    insights and solutions. The second tool is a **retrieval-augmented generation**
    (**RAG**) model, a self-implemented middleware solution from **iits**, which can
    be used as an enhancement to support developers with a knowledge base. By combining
    these two tools and deploying them via GitOps in the relevant projects, I believe
    they can be extremely beneficial not only for developers new to the field but
    also for those who are already experienced. This integration is likely to result
    in a productive boost.
  prefs: []
  type: TYPE_NORMAL
- en: Robusta.dev
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Robusta [*6*] is an open source platform designed to enhance the observability
    and debugging capabilities of Kubernetes. It’s a tool that helps DevOps teams,
    **site reliability engineers** (**SREs**), and developers to get more insights
    into their Kubernetes clusters, facilitating better monitoring, alerting, and
    troubleshooting.
  prefs: []
  type: TYPE_NORMAL
- en: 'Key features of Robusta include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enhanced observability**: Robusta provides detailed insights into the Kubernetes
    environment, offering rich, actionable alerts and notifications. It transforms
    plain log files into more interactive, enriched data that helps in quicker understanding
    and resolution of issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automated troubleshooting**: The platform can automate the troubleshooting
    process for common Kubernetes problems, reducing the manual effort required to
    diagnose and resolve issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customizable playbooks**: Users can create custom playbooks to automate responses
    to specific incidents or alerts. This allows for a tailored response mechanism
    that can evolve with the needs of the infrastructure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration with existing tools**: It integrates well with the existing ecosystem
    of DevOps tools, providing seamless connectivity with monitoring solutions, alerting
    tools, and messaging platforms such as Slack.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open source community**: Being open source, it allows developers and users
    to contribute to the tool, fostering a community-driven approach to enhancing
    Kubernetes observability and management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will use the enhancement **ChatGPT** bot [*7*] with a customizable playbook
    to make the Robusta tool even more effective. But let’s follow the next steps
    in the guide. We will use Prometheus and ChatGPT in our following example.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: '**Prometheus** is an open source monitoring and alerting toolkit widely used
    for its powerful querying language and ability to handle multi-dimensional data
    such as metrics from cloud and containerized environments, while **ChatGPT** is
    an advanced AI language model developed by **OpenAI**, capable of generating human-like
    text, engaging in conversation, answering questions, and providing information
    across a vast range of topics.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s get started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install the Robusta Python CLI:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Generate a values file for Helm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You will be guided through all necessary steps:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'In the newest version, they validate the Helm over Helm lint, so you have to
    add `clusterName`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Then, you can modify the `generated_values.yaml` file to create multiple triggers.
    For the showcase, I will keep it simple and apply it over helm in the next step.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Install Robusta with Helm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run a demo to see if the trigger (**Prometheus**), action (**Logs-Enricher**),
    and sink (Slack) work:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You should receive a notification in Slack, as illustrated in *Figure 14**.6*,
    containing metainformation along with the pod’s logs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 14.6 – Robusta with Slack as sink without ChatGPT](img/B22100_14_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.6 – Robusta with Slack as sink without ChatGPT
  prefs: []
  type: TYPE_NORMAL
- en: 'We now need to include the playbook repository and integrate our custom playbook
    tailored for the ChatGPT action, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The highlighted section is the additional part.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, you should activate the Prometheus alert again using the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You should now be able to view the **Ask ChatGPT** button, as depicted in *Figure
    14**.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.7 – Robusta with Slack as sink with ChatGPT](img/B22100_14_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.7 – Robusta with Slack as sink with ChatGPT
  prefs: []
  type: TYPE_NORMAL
- en: 'Upon clicking the button, you should receive a detailed explanation regarding
    the occurrence, common causes, potential troubleshooting steps, and viable solutions,
    as illustrated in *Figure 14**.8*. This feature significantly aids developers
    by saving them considerable time and reducing the hassle involved in troubleshooting
    issues. Utilizing GitOps with Argo CD, you can deploy not only Robusta but also
    the extension across multiple clusters, as we have repeatedly demonstrated throughout
    this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.8 – Robusta with Slack as sink with ChatGPT: support](img/B22100_14_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14.8 – Robusta with Slack as sink with ChatGPT: support'
  prefs: []
  type: TYPE_NORMAL
- en: Robusta aims to simplify the operational complexity of managing Kubernetes clusters,
    making it easier for teams to maintain **high availability** (**HA**), performance,
    and reliability of their containerized applications. By integrating with GitOps,
    Robusta enhances automation, ensures consistent environments through declarative
    configuration, and facilitates swift recovery and scalability, thereby streamlining
    the deployment process and reinforcing infrastructure resilience.
  prefs: []
  type: TYPE_NORMAL
- en: Private LLM solution with iitsAI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With tools such as **Robusta.dev**, we already have good support for observability
    and **incident management** (**IM**) in Kubernetes environments, but how can we
    further enhance productivity, onboard new developers, and improve existing ones?
    We are introducing an additional tool called **iitsAI**, from the **iits-consulting**
    company, operating under **iitsAI**. This tool allows developers to supplement
    their own data sources on top of a pre-trained module such as **Mistral 7B** and
    leverage multiple **large language models** (**LLMs;** **mixed models**).
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: '**Ollama** is a cross-platform framework that lets you use LLMs such as **Mistral
    7B** locally on your computer.'
  prefs: []
  type: TYPE_NORMAL
- en: An LLM is a type of AI program that can recognize and generate text, translate
    languages, write different kinds of creative content, and answer your questions
    in an informative way.
  prefs: []
  type: TYPE_NORMAL
- en: RAG is a technique that improves the accuracy and reliability of **generative
    AI** (**GenAI**) models by incorporating factual information from external sources.
  prefs: []
  type: TYPE_NORMAL
- en: '**Mistral 7B** is a 7.3 billion-parameter **neural network** (**NN**) model
    trained on a massive dataset of text and code that can perform various tasks,
    including generating text, translating languages, writing different kinds of creative
    content, and answering your questions in an informative way.'
  prefs: []
  type: TYPE_NORMAL
- en: '**iitsAI** offers a private LLM solution that runs on Kubernetes within your
    **own infrastructure**, enriched with your **own data**, providing you with complete
    end-to-end control. Alternatively, you can choose the hosted version by iits,
    available through a **sovereign cloud provider** in Germany. Both solutions include
    **single sign-on** (**SSO**) and fine-grained access control to the data through
    role mapping defined by you.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The functionality of LLMs is simplified as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The helpers of LLMs are large NNs trained on massive amounts of data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each LLM processes its part of the prompt and generates a response based on
    its knowledge and abilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The responses from the LLMs are then merged to create a comprehensive and informative
    response for the user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This way, complex tasks can be broken down into smaller parts and processed
    in parallel by multiple LLMs. The result is faster and more efficient processing
    of the prompt. Imagine a prompt that gets split into pieces and sent to different
    **AI helpers**. Each helper works on its piece, then all the answers are combined
    for a final response.
  prefs: []
  type: TYPE_NORMAL
- en: 'The tool built by iits provides the following architecture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.9 – Ollama with RAG: service architecture [8]](img/B22100_14_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 14.9 – Ollama with RAG: service architecture [8]'
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: '**Weaviate** is an open source vector database that enables you to store data
    objects and vectors.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Airbyte** is an open source data integration platform that helps you move
    data between different sources and destinations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The user inputs a prompt into a web UI, as they are accustomed to with **ChatGPT**,
    which references a model via **Ollama**, such as **Mistral 7B**, and provides
    the base LLM model in the background. Then, **iitsAI** developed a middleware
    to conserve resources and extract the best possible outcome from the prompt. The
    prompt is divided into slices, undergoes several iterations, and is processed
    through multiple **LLMs**. Here, the LLMs act as a vector database (**Weaviate**),
    which connects to **Airbyte** through a custom-developed connector or uses Airbyte
    to load documents from various sources and provide them to the LLM agents. In
    the end, the user receives a response to their inquiry based on the provided documents,
    which looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.10 – iitsAI and logistics industry develop an internal knowledge
    base](img/B22100_14_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.10 – iitsAI and logistics industry develop an internal knowledge base
  prefs: []
  type: TYPE_NORMAL
- en: The intriguing aspect of the solution is that it operates on Kubernetes and
    is deployed using GitOps. Consequently, the entire solution, from the UI to loading
    the base model and provisioning the files, is managed by the companies themselves
    on their own infrastructure. This autonomy is crucial for European businesses
    when employing technologies such as AI, Kubernetes, and GitOps.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s now explore how it can be integrated with GitOps and the opportunities
    this combination presents.
  prefs: []
  type: TYPE_NORMAL
- en: 'In use case A (*Figure 14**.11*), a product provided to various customers can
    be delivered by the development team. **Simultaneously**, the team can supply
    a knowledge base to the customers on how to use the product. Users can then resolve
    all necessary queries using simple language requests without the need to sift
    through external documentation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22100_14_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.11 – iitsAI and custom app knowledge base
  prefs: []
  type: TYPE_NORMAL
- en: 'For use case B (*Figure 14**.12*), as the platform team deploys the platform,
    they can also create an internal knowledge base about all the delivered tools,
    potential issues, releases, response times, FAQs, and so on, which can be accessed
    through a chat assistant in **natural language** (**NL**). This not only boosts
    efficiency but also eliminates several iterative steps, such as contacting the
    service desk, which typically involves searching the documentation provided and
    assisting at the first level of support:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22100_14_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.12 – iitsAI and platform knowledge base
  prefs: []
  type: TYPE_NORMAL
- en: 'Thanks to GitOps, the deployment is straightforward and can be scaled across
    clusters. Moreover, the GitOps approach aids in conserving resources since LLMs
    are **GPU-intensive**. It supports setups such as those shown in *Figure 14**.13*,
    where only the UI is deployed on the workload cluster, while the middleware, the
    vector database, and the base model can operate on a service cluster that provides
    **GPU** **node pools**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B22100_14_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.13 – iitsAI split UI and LLMs backend to save resources
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, GitOps offers us tremendous flexibility at this juncture, reminding
    us of our **Kubernetes Service Catalog** (**KSC**) from previous chapters and
    how one can control their stack using labels. This allows for even more finely-grained
    control of the deployments. By now integrating AI, as just demonstrated, we can
    proactively assist with troubleshooting and provide an interactive knowledge base,
    hopefully making the added value clear.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will explore potential challenges and opportunities
    associated with the future use of GitOps.
  prefs: []
  type: TYPE_NORMAL
- en: Future challenges and opportunities in GitOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, it’s crucial to address the collaborative dynamics and the
    overarching strategy required when multiple teams converge within the same operational
    framework, especially when they are required to share resources such as a repository.
    The key is to establish clear protocols from the outset, defining what is permissible
    and what needs coordination, much like setting contribution guidelines that dictate
    the sequence and considerations for changes.
  prefs: []
  type: TYPE_NORMAL
- en: This approach is reflective of the **open source software** (**OSS**) model,
    where contributors worldwide collaborate effectively on a project without it being
    owned by a single entity. Such a model underscores the potential of GitOps to
    harmonize efforts across diverse teams, transcending the traditional boundaries
    of DevOps. GitOps aims to unify development, operations, finance, sustainability,
    privacy, security, and other disciplines, enabling them to deliver a cohesive
    and robust product collectively.
  prefs: []
  type: TYPE_NORMAL
- en: Sustainability is poised to play a significant role in the realm of GitOps.
    Unlike traditional **continuous integration/continuous deployment** (**CI/CD**)
    pipelines that may run based on code changes, GitOps frequently reconciles the
    actual state of the system with the desired state defined in Git. While this ensures
    consistency and **reliability**, it also means that as the number of applications
    grows, resource consumption might increase correspondingly. This necessitates
    a thoughtful approach to how GitOps practices can be optimized to mitigate environmental
    impact without compromising the efficiency and reliability of the system. The
    future of GitOps will likely see innovations that allow it to scale sustainably,
    managing resource consumption wisely while maintaining **high standards** of automated,
    consistent, and declarative infrastructure management.
  prefs: []
  type: TYPE_NORMAL
- en: The role of GitOps in emerging technologies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the rapidly evolving landscape of technology, GitOps stands out as a pivotal
    methodology, particularly in the realm of emerging technologies. It represents
    a paradigm shift, emphasizing the use of Git as an SSOT and automating the deployment
    process, thereby intertwining development and operations more closely than ever
    before. This methodology is becoming increasingly vital as organizations navigate
    the complexities of modern software deployment, especially in cloud-native environments
    and when dealing with innovative technologies. This list summarizes the role of
    GitOps in emerging technologies:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Enhancing cloud-native ecosystems**: As organizations increasingly adopt
    cloud-native technologies, the complexity of managing these environments grows.
    GitOps provides a structured, predictable method of managing this complexity,
    using version control to manage the entire state of the cloud-native infrastructure.
    This is particularly beneficial for Kubernetes, serverless architectures, and
    service mesh technologies, where configuration and state are critical. GitOps
    not only simplifies the management of these technologies but also enhances security,
    auditability, and transparency, which are paramount in cloud-native ecosystems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Facilitating edge computing**: With the rise of edge computing, managing
    numerous remote environments consistently and securely has become a challenge.
    GitOps offers a way to deploy and manage applications across various edge locations
    reliably. By keeping configurations in Git, organizations can ensure that changes
    are traceable, verifiable, and automatically deployed, reducing the potential
    for human error and increasing operational efficiency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Accelerating AI and machine learning (ML) operations**: The integration of
    GitOps in AI and ML operations streamlines the deployment of complex AI models
    and the continuous delivery of ML infrastructure. It ensures that data scientists
    and ML engineers can focus on model development and experimentation without worrying
    about the underlying infrastructure. GitOps automates the deployment process,
    ensuring consistent, repeatable, and reliable delivery of AI applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Supporting Internet of Things (IoT) deployments**: IoT involves managing
    a vast number of devices, each potentially running different software versions.
    GitOps can play a crucial role in automating the deployment and management of
    software across these devices, ensuring consistency, reliability, and security
    at scale. The declarative approach of GitOps means that the desired state of the
    IoT infrastructure can be version-controlled and automatically applied, reducing
    the complexity and increasing the scalability of IoT operations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhancing security in DevSecOps**: In the DevSecOps world, integrating security
    into the **development and operations life cycle** is crucial. GitOps supports
    this by ensuring that all changes are reviewed, approved, and traceable through
    Git. This facilitates **rigorous audit trails**, quick rollbacks in case of issues,
    and a more secure infrastructure deployment pipeline, thereby enhancing the overall
    security posture of the organization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GitOps is not just a trend but a fundamental shift in how we manage emerging
    technologies. It bridges the gap between development and operations, ensuring
    faster, more secure, and more reliable software delivery. As we continue to embrace
    new technologies and face new challenges, the principles of GitOps provide a solid
    foundation for managing the complexity of modern IT environments, making it an
    indispensable tool in the arsenal of today’s technology leaders.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we hopefully gained clarity on how GitOps, through the use
    of various tools, enables both economic and ecological action. The importance
    of cultural change in the adoption of GitOps should also have become evident,
    as it allows numerous teams to collaborate and autonomously deploy tools, policies,
    and so on that align with the company’s interests. While interpreting future trends
    isn’t straightforward, the potential unlocked by combining the discussed AI tools
    should now be apparent. Ultimately, GitOps serves to deploy, expand, and maintain
    various tools or policies from different teams across a distributed cluster landscape
    or logically grouped clusters at scale.
  prefs: []
  type: TYPE_NORMAL
- en: In *Implementing GitOps with Kubernetes*, we have taken a hands-on approach
    to explore scalable and straightforward solutions grounded in real-world scenarios.
    From foundational concepts to advanced implementations, this book has aimed to
    equip you with the knowledge and tools necessary to harness the full potential
    of GitOps within Kubernetes environments. Through practical examples, insights
    from industry experts, and detailed explanations of best practices, we hope you
    now feel prepared to implement GitOps strategies effectively.
  prefs: []
  type: TYPE_NORMAL
- en: As you conclude this book, the next step is to apply what you’ve learned to
    real-world projects. Experiment with different tools, refine your workflows, and
    continually seek ways to optimize and secure your deployments. Stay engaged with
    the community, keep up with the latest trends, and never stop learning.
  prefs: []
  type: TYPE_NORMAL
- en: We wish you the best of luck on your GitOps journey ahead. May you achieve new
    heights in operational excellence, scalability, and innovation. Thank you for
    joining us on this journey, and we wish you success in all your GitOps endeavors.
    Wishing you all the best, Pietro and Artem.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*1*] [https://github.com/opencost/opencost](https://github.com/opencost/opencost)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*2*] [https://github.com/kubecost](https://github.com/kubecost)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*3*] [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/GitOps-for-Kubernetes-Deployment)Implementing-GitOps-with-Kubernetes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*4*] [https://github.com/kube-green/kube-green](https://github.com/kube-green/kube-green)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*5*] [https://github.com/armadaproject/armada](https://github.com/armadaproject/armada)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*6*] [https://home.robusta.dev](https://home.robusta.dev)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*7*] [https://github.com/robusta-dev/kubernetes-chatgpt-bot](https://github.com/robusta-dev/kubernetes-chatgpt-bot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*8*] [https://github.com/iits-consulting/otc-terraform-template](https://github.com/iits-consulting/otc-terraform-template)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
