["```\n    rob@rob-virtual-machine2:~$ docker info # no good, notice 'permission denied'\n    ```", "```\n    Client:\n    ```", "```\n     Context:    default\n    ```", "```\n     Debug Mode: false\n    ```", "```\n    Server:\n    ```", "```\n    ERROR: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.24/info: dial unix /var/run/docker.sock: connect: permission denied\n    ```", "```\n    errors pretty printing info\n    ```", "```\n    version.BuildInfo{Version:\"v3.5.3\", GitCommit:\"041ce5a2c17a58be0fcd5f5e16fb3e7e95fea622\", GitTreeState:\"dirty\", GoVersion:\"go1.15.8\"}\n    ```", "```\nrob@rob-virtual-machine2:~$ docker info # all good!\nClient:\n Context:    default\n Debug Mode: false\nServer:\n Containers: 0\n  Running: 0\n```", "```\n    ubuntu@ip-172-31-33-59 ~> kubectl version\n    ```", "```\n    Client Version: version.Info{Major:\"1\", Minor:\"22\", GitVersion:\"v1.22.13\", GitCommit:\"a43c0904d0de10f92aa3956c74489c45e6453d6e\", GitTreeState:\"clean\", BuildDate:\"2022-08-17T18:28:56Z\", GoVersion:\"go1.16.15\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n    ```", "```\n    Server Version: version.Info{Major:\"1\", Minor:\"22+\", GitVersion:\"v1.22.11-eks-18ef993\", GitCommit:\"b9628d6d3867ffd84c704af0befd31c7451cdc37\", GitTreeState:\"clean\", BuildDate:\"2022-07-06T18:06:23Z\", GoVersion:\"go1.16.15\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n    ```", "```\n    ubuntu@ip-172-31-33-59 ~> imgpkg version\n    ```", "```\n    imgpkg version 0.27.0\n    ```", "```\nubuntu@ip-172-31-33-59 ~> docker login registry.tanzu.vmware.com\nAuthenticating with existing credentials...\nLogin Succeeded\nubuntu@ip-172-31-33-59 ~>\n```", "```\nubuntu@ip-172-31-33-59 ~/t/packt> cat ./gcr-json-key.json | docker login -u _json_key --password-stdin gcr.io\nLogin Succeeded\n```", "```\nubuntu@ip-172-31-33-59:~/tap/packt$ export INSTALL_REGISTRY_USERNAME=_json_key\nubuntu@ip-172-31-33-59:~/tap/packt$ export INSTALL_REGISTRY_PASSWORD=$(cat gcr-json-key.json)\nubuntu@ip-172-31-33-59:~/tap/packt$ export INSTALL_REGISTRY_HOSTNAME=gcr.io\nubuntu@ip-172-31-33-59:~/tap/packt$ export INSTALL_REGISTRY_PROJECT_NAME=my-gcr-project\nubuntu@ip-172-31-33-59:~/tap/packt$ export TAP_VERSION=1.3.2\nubuntu@ip-172-31-33-59:~/tap/packt$ imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo ${INSTALL_REGISTRY_HOSTNAME}/${INSTALL_REGISTRY_PROJECT_NAME}/tap-packages\ncopy | exporting 177 images...\ncopy | will export registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:001224ba2c37663a9a412994f1086ddbbe40aaf959b30c465ad06c2a563f2b9f\n…many, many more lines\ncopy | exported 177 images\ncopy | importing 177 images...\n 6.77 GiB / 6.77 GiB [============================================================================================================] 100.00% 194.00 MiB/s 35s\ncopy | done uploading images\nSucceeded\n```", "```\nubuntu@ip-172-31-33-59:~/downloads$ mkdir -p $HOME/tanzu\nubuntu@ip-172-31-33-59:~/downloads$ tar -xvf tanzu-framework-linux-amd64.tar -C $HOME/tanzu # extract the tar file into the working directory.\ncli/\ncli/core/\ncli/core/v0.11.6/\ncli/core/v0.11.6/tanzu-core-linux_amd64\ncli/core/plugin.yaml\ncli/distribution/\ncli/distribution/linux/\ncli/distribution/linux/amd64/\ncli/distribution/linux/amd64/cli/\ncli/distribution/linux/amd64/cli/accelerator/\ncli/distribution/linux/amd64/cli/accelerator/v1.2.0/\ncli/distribution/linux/amd64/cli/accelerator/v1.2.0/tanzu-accelerator-linux_amd64\ncli/distribution/linux/amd64/cli/package/\ncli/distribution/linux/amd64/cli/package/v0.11.6/\ncli/distribution/linux/amd64/cli/package/v0.11.6/tanzu-package-linux_amd64\ncli/distribution/linux/amd64/cli/apps/\ncli/distribution/linux/amd64/cli/apps/v0.7.0/\ncli/distribution/linux/amd64/cli/apps/v0.7.0/tanzu-apps-linux_amd64\ncli/distribution/linux/amd64/cli/secret/\ncli/distribution/linux/amd64/cli/secret/v0.11.6/\ncli/distribution/linux/amd64/cli/secret/v0.11.6/tanzu-secret-linux_amd64\ncli/distribution/linux/amd64/cli/insight/\ncli/distribution/linux/amd64/cli/insight/v1.2.2/\ncli/distribution/linux/amd64/cli/insight/v1.2.2/tanzu-insight-linux_amd64\ncli/distribution/linux/amd64/cli/services/\ncli/distribution/linux/amd64/cli/services/v0.3.0/\ncli/distribution/linux/amd64/cli/services/v0.3.0/tanzu-services-linux_amd64\ncli/discovery/\ncli/discovery/standalone/\ncli/discovery/standalone/apps.yaml\ncli/discovery/standalone/services.yaml\ncli/discovery/standalone/secret.yaml\ncli/discovery/standalone/insight.yaml\ncli/discovery/standalone/package.yaml\ncli/discovery/standalone/accelerator.yaml\nubuntu@ip-172-31-33-59:~/downloads$ cd $HOME/tanzu\nubuntu@ip-172-31-33-59:~/tanzu$ export VERSION=v0.11.6\nubuntu@ip-172-31-33-59:~/tanzu$ sudo install cli/core/$VERSION/tanzu-core-linux_amd64 /usr/local/bin/tanzu  # move the executable into a well-known directory and make it executable.\nubuntu@ip-172-31-33-59:~/tanzu$ tanzu version\nversion: v0.11.6\nubuntu@ip-172-31-33-59:~/tanzu$ export TANZU_CLI_NO_INIT=true # instruct the CLI not to look in external repositories for plugins\nubuntu@ip-172-31-33-59:~/tanzu$ tanzu plugin install --local cli all  # install the plugins from the distributable tar file we just unpacked\nInstalling plugin 'accelerator:v1.2.0'\nInstalling plugin 'apps:v0.7.0'\nInstalling plugin 'insight:v1.2.2'\nInstalling plugin 'package:v0.11.6'\nInstalling plugin 'secret:v0.11.6'\nInstalling plugin 'services:v0.3.0'\n  successfully installed 'all' plugin\nubuntu@ip-172-31-33-59:~/tanzu$ tanzu plugin list\n  NAME                DESCRIPTION                                       SCOPE       DISCOVERY  VERSION  STATUS\n  login               Login to the platform                                                Standalone  default    v0.11.6  update available\n  management-cluster  Kubernetes management-cluster operations                                                 Standalone  default    v0.11.6  update available\n  package             Tanzu package management                                                     Standalone  default    v0.11.6  installed\n  pinniped-auth       Pinniped authentication operations (usually not directly invoked)                                  Standalone  default    v0.11.6  update available\n  secret              Tanzu secret management                                               Standalone  default    v0.11.6  installed\n  services            Explore Service Instance Classes, discover claimable Service Instances and manage Resource Claims  Standalone             v0.3.0   installed\n  apps                Applications on Kubernetes                                           Standalone             v0.7.0   installed\n  insight             post & query image, package, source, and vulnerability data                                        Standalone             v1.2.2   installed\n  accelerator         Manage accelerators in a Kubernetes cluster                                           Standalone             v1.2.0   installed\n```", "```\nubuntu@ip-172-31-33-59:~/downloads$ mkdir -p $HOME/tanzu-cluster-essentials  # create working directory\nubuntu@ip-172-31-33-59:~/downloads$ ls # check our downloaded file\ntanzu-cluster-essentials-linux-amd64-1.2.0.tgz\nubuntu@ip-172-31-33-59:~/downloads$ tar xvf ./tanzu-cluster-essentials-linux-amd64-1.2.0.tgz -C $HOME/tanzu-cluster-essentials    # unzip the downloaded file into the working directory\ninstall.sh\nuninstall.sh\nimgpkg\nkbld\nkapp\nytt\nubuntu@ip-172-31-33-59:~/downloads$ cd $HOME/tanzu-cluster-essentials\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$ kubectl config get-contexts  # check our Kubernetes cluster\n*         user@tap-install.us-west-2.eksctl.io             tap-install.us-west-2.eksctl.io                          user@tap-install.us-west-2.eksctl.io\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$ export INSTALL_BUNDLE=registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:e00f33b92d418f49b1af79f42cb13d6765f1c8c731f4528dfff8343af042dc3e   # Set some env vars for the install script to use\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$ export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$ export INSTALL_REGISTRY_USERNAME=myuser@myemail.com\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$ export INSTALL_REGISTRY_PASSWORD=<my_super_secret_password>\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$ ./install.sh  # this will install the kapp and secretgen controllers onto our Kubernetes cluster\n## Creating namespace tanzu-cluster-essentials\nnamespace/tanzu-cluster-essentials created\n… much more output\nSucceeded\nubuntu@ip-172-31-33-59:~/tanzu-cluster-essentials$\n```", "```\nubuntu@ip-172-31-33-59 ~/t/packt> kubectl create ns workload1\nnamespace/workload1 created\nubuntu@ip-172-31-33-59 ~/t/packt> tanzu secret registry add registry-credentials --server gcr.io --username _json_key --password-file ./gcr-json-key.json -n workload1\n| Adding registry secret 'registry-credentials'...\n Added registry secret 'registry-credentials' into namespace 'workload1'\nubuntu@ip-172-31-33-59 ~/t/packt>\n```", "```\nubuntu@ip-172-31-33-59:~/tap/packt$ cat <<EOF | kubectl -n workload1 apply -f –\napiVersion: v1\nkind: Secret\nmetadata:\n  name: tap-registry\n  annotations:\n    secretgen.carvel.dev/image-pull-secret: \"\"\ntype: kubernetes.io/dockerconfigjson\ndata:\n  .dockerconfigjson: e30K\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: default\nsecrets:\n  - name: registry-credentials\nimagePullSecrets:\n  - name: registry-credentials\n  - name: tap-registry\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: default-permit-deliverable\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: deliverable\nsubjects:\n  - kind: ServiceAccount\n    name: default\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: default-permit-workload\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: workload\nsubjects:\n  - kind: ServiceAccount\n    name: default\nEOF\nsecret/tap-registry created\nserviceaccount/default configured\nrolebinding.rbac.authorization.k8s.io/default-permit-deliverable created\nrolebinding.rbac.authorization.k8s.io/default-permit-workload created\nubuntu@ip-172-31-33-59:~/tap/packt$\n```", "```\nubuntu@ip-172-31-33-59:~/tap/packt$ kubectl create ns tap-install\nnamespace/tap-install created\nubuntu@ip-172-31-33-59:~/tap/packt$ tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/${INSTALL_REGISTRY_PROJECT_NAME}/tap-packages:${TAP_VERSION} -n tap-install\n Adding package repository 'tanzu-tap-repository'\n Validating provided settings for the package repository\n Creating package repository resource\n Waiting for 'PackageRepository' reconciliation for 'tanzu-tap-repository'\n 'PackageRepository' resource install status: Reconciling\n 'PackageRepository' resource install status: ReconcileSucceeded\nAdded package repository 'tanzu-tap-repository' in namespace 'tap-install'\nubuntu@ip-172-31-33-59:~/tap/packt$ tanzu package repository get tanzu-tap-repository --namespace tap-install\nNAME:          tanzu-tap-repository\nVERSION:       789358\nREPOSITORY:    gcr.io/fe-rhardt/tap-packages\nTAG:           1.2.1\nSTATUS:        Reconcile succeeded\nREASON:\nubuntu@ip-172-31-33-59:~/tap/packt$ tanzu package available list --namespace tap-install\n  NAME                                                 DISPLAY-NAME                                              SHORT-DESCRIPTION                                                                LATEST-VERSION\n  accelerator.apps.tanzu.vmware.com                    Application Accelerator for VMware Tanzu                                  Used to create new projects and configurations.                                               1.2.2\n  api-portal.tanzu.vmware.com                          API portal                                                     A unified user interface to enable search, discovery and try-out of API endpoints at ease.\n# … many more …\n```", "```\nubuntu@ip-172-31-33-59:~/tap/packt$ tanzu package install tap -p tap.tanzu.vmware.com -v $TAP_VERSION --values-file tap-values.yaml -n tap-install\n Installing package 'tap.tanzu.vmware.com'\n Getting package metadata for 'tap.tanzu.vmware.com'\n Creating service account 'tap-tap-install-sa'\n Creating cluster admin role 'tap-tap-install-cluster-role'\n Creating cluster role binding 'tap-tap-install-cluster-rolebinding'\n Creating secret 'tap-tap-install-values'\n Creating package resource\n Waiting for 'PackageInstall' reconciliation for 'tap'\n\\ 'PackageInstall' resource install status: Reconciling\n```", "```\nubuntu@ip-172-31-33-59 ~> kubectl get pkgi -n tap-install -w\nNAME                       PACKAGE NAME                                         PACKAGE VERSION   DESCRIPTION           AGE\napi-portal                 api-portal.tanzu.vmware.com                          1.0.24            Reconcile succeeded   72s\nappliveview-connector      connector.appliveview.tanzu.vmware.com               1.2.1             Reconcile succeeded   72s\nappsso                     sso.apps.tanzu.vmware.com                            1.0.0             Reconcile succeeded   38s\nbuildservice               buildservice.tanzu.vmware.com                        1.6.1             Reconciling           72s\ncartographer               cartographer.tanzu.vmware.com                        0.4.3             Reconcile succeeded   38s\n```", "```\nubuntu@ip-172-31-33-59 ~> kubectl get svc -n tanzu-system-ingress envoy\nNAME    TYPE           CLUSTER-IP       EXTERNAL-IP                         PORT(S)                      AGE\nenvoy   LoadBalancer   10.100.247.164   accd60a8feb5740b1ac24853ea17e546-817853481.us-west-2.elb.amazonaws.com   80:30409/TCP,443:30100/TCP   10m\nubuntu@ip-172-31-33-59 ~>\n```", "```\nubuntu@ip-172-31-33-59 ~> dig testing123.packtinstall.k10s.io\n; <<>> DiG 9.16.1-Ubuntu <<>> testing123.packtinstall.k10s.io\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 17729\n;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 65494\n;; QUESTION SECTION:\n;testing123.packtinstall.k10s.io. IN A\n;; ANSWER SECTION:\ntesting123.packtinstall.k10s.io. 300 IN    CNAME    accd60a8feb5740b1ac24853ea17e546-817853481.us-west-2.elb.amazonaws.com.\naccd60a8feb5740b1ac24853ea17e546-817853481.us-west-2.elb.amazonaws.com.  59 IN A    52.10.176.193\naccd60a8feb5740b1ac24853ea17e546-817853481.us-west-2.elb.amazonaws.com.  59 IN A    35.155.17.135\naccd60a8feb5740b1ac24853ea17e546-817853481.us-west-2.elb.amazonaws.com.  59 IN A    54.213.143.29\n```", "```\n*  Executing task: tilt: up - /Users/roberthardt/Downloads/tanzu-java-web-app 2/Tiltfile\nTilt started on http://localhost:10350/\nv0.26.3, built 2022-03-24\nInitial Build\nLoading Tiltfile at: /Users/roberthardt/Downloads/tanzu-java-web-app 2/Tiltfile\nERROR: Stop! user@tap-install.us-west-2.eksctl.io might be production.\nIf you're sure you want to deploy there, add:\n        allow_k8s_contexts('user@tap-install.us-west-2.eksctl.io')\nto your Tiltfile. Otherwise, switch k8s contexts and restart Tilt.\n```", "```\n~/D/tanzu-java-web-app> kubectl get kservice -n workload1\nNAME                 URL                         LATESTCREATED              LATESTREADY                READY   REASON\ntanzu-java-web-app   http://tanzu-java-web-app.workload1.packtinstall.k10s.io   tanzu-java-web-app-00002   tanzu-java-web-app-00002   True\n```", "```\n~/D/tanzu-java-web-app> kubectl delete workload -n workload1  --all\n```", "```\n~/D/tanzu-java-web-app> kubectl create secret generic -n workload1 git-ssh\n```", "```\n~/D/tanzu-java-web-app> kubectl apply -f ./config/workload.yaml -n workload1\n```", "```\n~/D/tanzu-java-web-app> kubectl get pods -n workload1\nNAME                                                   READY   STATUS      RESTARTS   AGE\ntanzu-java-web-app-00001-deployment-557f89455b-pg2td   2/2     Running     0          61s\ntanzu-java-web-app-build-1-build-pod                   0/1     Completed   0          2m21s\ntanzu-java-web-app-config-writer-7kl4k-pod             0/1     Completed   0          74s\n```"]