["```\nkubectl get <resource type> <resource name>\nkubectl describe <resource type> <resource name>\nkubectl logs <pod name>\n```", "```\nkubectl create -f guestbook-all-in-one.yaml\n```", "```\n    kubectl get all\n    ```", "```\n    kubectl get pods\n    ```", "```\n    kubectl get pods -o wide\n    ```", "```\nkubectl describe pods\n```", "```\nkubectl describe pod/<pod-name>\n```", "```\nNode:         aks-agentpool-39838025-vmss000000/10.240.0.4 \n```", "```\nStart Time:   Tue, 26 Jan 2021 02:10:33 +0000 \n```", "```\nLabels:app=guestbook\npod-template-hash=57d8c9fb45\ntier=frontend\n```", "```\nStatus:       Running\nIP:           10.244.0.44\nIPs:\n  IP:           10.244.0.44 \n```", "```\nContainers:\n  php-redis:\n    ...\n    Image:          gcr.io/google-samples/gb-frontend:v4\n    ...\n    Port:           80/TCP\n    ...\n    Requests:\n      cpu:     10m\n      memory:  10Mi\n    Environment:\n      GET_HOSTS_FROM:  dns\n    ...\n```", "```\nEvents:\n```", "```\nkubectl get events\n```", "```\nkubectl create -f guestbook-all-in-one.yaml\n```", "```\n    kubectl edit deployment/frontend\n    ```", "```\n    kubectl get pods\n    ```", "```\n    kubectl describe pods/<failed pod name>\n    ```", "```\n    kubectl edit deployment/frontend\n    ```", "```\n    kubectl get service \n    ```", "```\nkubectl scale --replicas=1 deployment/frontend\n```", "```\n    kubectl exec -it <frontend-pod-name> -- bash\n    ```", "```\n    apt update\n    apt install -y vim\n    ```", "```\n    vim guestbook.php\n    ```", "```\n    $host = 'localhost';\n    if(!defined('STDOUT')) define('STDOUT', fopen('php://stdout', 'w'));\n    fwrite(STDOUT, \"hostname at the beginning of 'set' command \"); fwrite(STDOUT, $host);\n    fwrite(STDOUT, \"\\n\");\n    ```", "```\n    exit\n    kubectl logs <frontend-pod-name>\n    ```", "```\nkubectl delete pod <podname>\n```", "```\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Server 1</title>\n  </head>\n  <body>\n    Server 1\n  </body>\n</html>\n```", "```\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Server 2</title>\n  </head>\n  <body>\n    Server 2\n  </body>\n</html>\n```", "```\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>All is fine here</title>\n  </head>\n  <body>\n    OK\n  </body>\n</html>\n```", "```\nkubectl create configmap server1 --from-file=index1.html\nkubectl create configmap server2 --from-file=index2.html\nkubectl create configmap healthy --from-file=healthy.html\n```", "```\n1   apiVersion: apps/v1\n2   kind: Deployment\n...\n17     spec:\n18       containers:\n19         - name: nginx-1\n20           image: nginx:1.19.6-alpine\n21           ports:\n22             - containerPort: 80\n23           livenessProbe:\n24             httpGet:\n25               path: /healthy.html\n26               port: 80\n27             initialDelaySeconds: 3\n28             periodSeconds: 3\n29           readinessProbe:\n30             httpGet:\n31               path: /index.html\n32               port: 80\n33             initialDelaySeconds: 3\n34             periodSeconds: 3\n35           volumeMounts:\n36             - name: html\n37               mountPath: /usr/share/nginx/html\n38             - name: index\n39               mountPath: /tmp/index1.html\n40               subPath: index1.html\n41             - name: healthy\n42               mountPath: /tmp/healthy.html\n43               subPath: healthy.html\n44           command: [\"/bin/sh\", \"-c\"]\n45           args: [\"cp /tmp/index1.html /usr/share/nginx/html/index.html; cp /tmp/healthy.html /usr/share/nginx/html/healthy.html; nginx; sleep inf\"]\n46       volumes:\n47         - name: index\n48           configMap:\n49             name: server1\n50         - name: healthy\n51           configMap:\n52             name: healthy\n53         - name: html\n54           emptyDir: {}\n```", "```\nkubectl create -f webdeploy1.yaml\nkubectl create -f webdeploy2.yaml\n```", "```\n1   apiVersion: v1\n2   kind: Service\n3   metadata:\n4     name: web\n5   spec:\n6     selector:\n7       app: web-server\n8     ports:\n9     - protocol: TCP\n10     port: 80\n11     targetPort: 80\n12   type: LoadBalancer\n```", "```\nkubectl create -f webservice.yaml\n```", "```\nkubectl get service\n```", "```\nchmod +x testWeb.sh\n./testWeb.sh <external-ip>\n```", "```\nkubectl get pods #note server1 pod name\nkubectl exec <server1 pod name> -- \\\n  mv /usr/share/nginx/html/index.html \\\n  /usr/share/nginx/html/index1.html\n```", "```\nkubectl get pods -w\n```", "```\n./testWeb.sh <external-ip>\n```", "```\nkubectl exec <server1 pod name> -- mv \\\n  /usr/share/nginx/html/index1.html \\\n  /usr/share/nginx/html/index.html\n```", "```\n./testWeb.sh <external-ip>\n```", "```\nkubectl exec <server 2 pod name> -- \\\n  rm /usr/share/nginx/html/healthy.html\n```", "```\nkubectl get pods -w\n```", "```\nkubectl describe pod <server2 pod name>\n```", "```\nkubectl delete deployment server1 server2\nkubectl delete service web\n```", "```\nkubectl get nodes\n```", "```\nkubectl get -o wide nodes\n```", "```\nkubectl top nodes\n```", "```\nkubectl describe node <node name>\n```", "```\n    kubectl get pods -n kube-system\n    ```", "```\n    kubectl describe pod coredns-<pod id> -n kube-system\n    ```", "```\nkubectl top pods --all-namespaces\n```", "```\nkubectl delete -f \n```"]