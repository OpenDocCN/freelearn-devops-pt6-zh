["```\napiVersion: policy.karmada.io/v1alpha1\nkind: PropagationPolicy\nmetadata:\n  name: cool-policy\nspec:\n  resourceSelectors:\n    - apiVersion: apps/v1\n      kind: Deployment\n      name: nginx\n  placement:\n    clusterAffinity:\n      clusterNames:\n        - member1\n        - member2 \n```", "```\n# examples/dynamic-dividing-scheduling/subscription.yaml\napiVersion: apps.clusternet.io/v1alpha1\nkind: Subscription\nmetadata:\n  name: dynamic-dividing-scheduling-demo\n  namespace: default\nspec:\n  subscribers: # filter out a set of desired clusters\n    - clusterAffinity:\n        matchExpressions:\n          - key: clusters.clusternet.io/cluster-id\n            operator: Exists\n  schedulingStrategy: Dividing\n  dividingScheduling:\n    type: Dynamic\n    dynamicDividing:\n      strategy: Spread # currently we only support Spread dividing strategy\n  feeds: # defines all the resources to be deployed with\n    - apiVersion: v1\n      kind: Namespace\n      name: qux\n    - apiVersion: v1\n      kind: Service\n      name: my-nginx-svc\n      namespace: qux\n    - apiVersion: apps/v1 # with a total of 6 replicas\n      kind: Deployment\n      name: my-nginx\n      namespace: qux \n```", "```\napiVersion: cluster.clusterpedia.io/v1alpha2\nkind: PediaCluster\nmetadata:\n  name: cluster-example\nspec:\n  apiserver: \"https://10.30.43.43:6443\"\n  kubeconfig:\n  caData:\n  tokenData:\n  certData:\n  keyData:\n  syncResources: [] \n```", "```\nkubectl get --raw=\"/apis/clusterpedia.io/v1beta1/resources/apis/apps/v1/deployments?clusters=cluster-1,cluster-2\" \n```", "```\nkubectl --cluster clusterpedia get deployments -l \"search.clusterpedia.io/clusters in (cluster-1,cluster-2)\" \n```", "```\nkubectl get --raw \"/apis/clusterpedia.io/v1beta1/collectionresources/any?onlyMetadata=true&groups=apps&resources=batch/jobs,batch/cronjobs\" \n```", "```\napiVersion: work.open-cluster-management.io/v1\nkind: ManifestWork\nmetadata:\n  namespace: <target managed cluster>\n  name: awesome-workload\nspec:\n  workload:\n    manifests:\n      - apiVersion: apps/v1\n        kind: Deployment\n        metadata:\n          name: hello\n          namespace: default\n        spec:\n          selector:\n            matchLabels:\n              app: hello\n          template:\n            metadata:\n              labels:\n                app: hello\n            spec:\n              containers:\n                - name: hello\n                  image: quay.io/asmacdo/busybox\n                  command:\n                    [\"sh\", \"-c\", 'echo \"Hello, Kubernetes!\" && sleep 3600'] \n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n  name: policy-namespace\n  namespace: policies\n  annotations:\n    policy.open-cluster-management.io/standards: NIST SP 800-53\n    policy.open-cluster-management.io/categories: CM Configuration Management\n    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration\nspec:\n  remediationAction: enforce\n  disabled: false\n  policy-templates:\n    - objectDefinition:\n        apiVersion: policy.open-cluster-management.io/v1\n        kind: ConfigurationPolicy\n        metadata:\n          name: policy-namespace-example\n        spec:\n          remediationAction: inform\n          severity: low\n          object-templates:\n            - complianceType: MustHave\n              objectDefinition:\n                kind: Namespace # must have namespace 'prod'\n                apiVersion: v1\n                metadata:\n                  name: prod \n```", "```\n$ gardenctl ls shoots\nprojects:\n- project: team-a\n  shoots:\n  - dev-eu1\n  - prod-eu1\n$ gardenctl target shoot prod-eu1\n[prod-eu1]\n$ gardenctl show prometheus\nNAME           READY     STATUS    RESTARTS   AGE       IP              NODE\nprometheus-0   3/3       Running   0          106d      10.241.241.42   ip-10-240-7-72.eu-central-1.compute.internal\nURL: https://user:password@p.prod-eu1.team-a.seed.aws-eu1.example.com \n```", "```\napiVersion: core.gardener.cloud/v1beta1\nkind: CloudProfile\nmetadata:\n  name: aws\nspec:\n  type: aws\n  kubernetes:\n    versions:\n    - version: 1.24.3\n    - version: 1.23.8\n      expirationDate: \"2022-10-31T23:59:59Z\"\n  machineImages:\n  - name: coreos\n    versions:\n    - version: 2135.6.0\n  machineTypes:\n  - name: m5.large\n    cpu: \"2\"\n    gpu: \"0\"\n    memory: 8Gi\n    usable: true\n  volumeTypes:\n  - name: gp2\n    class: standard\n    usable: true\n  - name: io1\n    class: premium\n    usable: true\n  regions:\n  - name: eu-central-1\n    zones:\n    - name: eu-central-1a\n    - name: eu-central-1b\n    - name: eu-central-1c\n  providerConfig:\n    apiVersion: aws.provider.extensions.gardener.cloud/v1alpha1\n    kind: CloudProfileConfig\n    machineImages:\n    - name: coreos\n      versions:\n      - version: 2135.6.0\n        regions:\n        - name: eu-central-1\n          ami: ami-034fd8c3f4026eb39\n          # architecture: amd64 # optional \n```", "```\napiVersion: gardener.cloud/v1alpha1\nkind: Shoot\nmetadata:\n  name: johndoe-aws\n  namespace: garden-dev\nspec:\n  cloudProfileName: aws\n  secretBindingName: core-aws\n  cloud:\n    type: aws\n    region: eu-west-1\n    providerConfig:\n      apiVersion: aws.cloud.gardener.cloud/v1alpha1\n      kind: InfrastructureConfig\n      networks:\n        vpc: # specify either 'id' or 'cidr'\n        # id: vpc-123456\n          cidr: 10.250.0.0/16\n        internal:\n        - 10.250.112.0/22\n        public:\n        - 10.250.96.0/22\n        workers:\n        - 10.250.0.0/19\n      zones:\n      - eu-west-1a\n    workerPools:\n    - name: pool-01\n    # Taints, labels, and annotations are not yet implemented. This requires interaction with the machine-controller-manager, see\n    # https://github.com/gardener/machine-controller-manager/issues/174\\. It is only mentioned here as future proposal.\n    # taints:\n    # - key: foo\n    #   value: bar\n    #   effect: PreferNoSchedule\n    # labels:\n    # - key: bar\n    #   value: baz\n    # annotations:\n    # - key: foo\n    #   value: hugo\n      machineType: m4.large\n      volume: # optional, not needed in every environment, may only be specified if the referenced CloudProfile contains the volumeTypes field\n        type: gp2\n        size: 20Gi\n      providerConfig:\n        apiVersion: aws.cloud.gardener.cloud/v1alpha1\n        kind: WorkerPoolConfig\n        machineImage:\n          name: coreos\n          ami: ami-d0dcef3\n        zones:\n        - eu-west-1a\n      minimum: 2\n      maximum: 2\n      maxSurge: 1\n      maxUnavailable: 0\n  kubernetes:\n    version: 1.11.0\n    ...\n  dns:\n    provider: aws-route53\n    domain: johndoe-aws.garden-dev.example.com\n  maintenance:\n    timeWindow:\n      begin: 220000+0100\n      end: 230000+0100\n    autoUpdate:\n      kubernetesVersion: true\n  backup:\n    schedule: \"*/5 * * * *\"\n    maximum: 7\n  addons:\n    kube2iam:\n      enabled: false\n    kubernetes-dashboard:\n      enabled: true\n    cluster-autoscaler:\n      enabled: true\n    nginx-ingress:\n      enabled: true\n      loadBalancerSourceRanges: []\n    kube-lego:\n      enabled: true\n      email: john.doe@example.com \n```"]