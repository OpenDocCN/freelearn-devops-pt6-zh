["```\n    $ aws ec2 create-tags --resources \"subnetid-12\" --tags Key=kubernetes.io/role/elb,Value=1\n    $ aws ec2 describe-subnets  --subnet-ids subnetid-12 --query 'Subnets[].Tags[]'\n    [{\n            \"Value\": \"myipv4cluster\",\n            \"Key\": \"eksctl.cluster.k8s.io/v1alpha1/cluster-name\"\n        },\n        ………\n        {\n            \"Value\": \"1\",\n            \"Key\": \"kubernetes.io/role/elb\"\n    ]\n    ```", "```\n    $ curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.5/docs/install/iam_policy.json\n    $ aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam-policy.json\n    { \"Policy\": {\"PolicyName\": \"AWSLoadBalancerControllerIAMPolicy\",\n    \"Arn\": \"arn:aws:iam::112233:policy/AWSLoadBalancerControllerIAMPolicy\",\n            ……….}}\n    ```", "```\n    $ eksctl create iamserviceaccount   --cluster myipv4cluster   --namespace kube-system   --name aws-load-balancer-controller   --attach-policy-arn arn:aws:iam::112233:policy/AWSLoadBalancerControllerIAMPolicy   --override-existing-serviceaccounts   --approve\n    ………\n    2022-12-12 18:46:51 [i]  created serviceaccount \"kube-system/aws-load-balancer-controller\"\n    ```", "```\n    $ helm repo add eks https://aws.github.io/eks-charts\n    $ helm repo update\n    Hang tight while we grab the latest from your chart repositories...\n    ...Successfully got an update from the \"eks\" chart repository\n    ….\n    Update Complete.\n    $ helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system \\\n      --set clusterName=myipv4cluster \\\n      --set serviceAccount.create=false \\\n      --set serviceAccount.name=aws-load-balancer-controller \\\n      --set image.repository=602401143452.dkr.ecr.eu-central-1.amazonaws.com/amazon/aws-load-balancer-controller \\\n      --set region=eu-central-1 \\\n      --set vpcId=vpc-6575786587\n    ```", "```\n    $ kubectl get deployment -n kube-system aws-load-balancer-controller\n    NAME      READY   UP-TO-DATE   AVAILABLE   AGE\n    aws-load-balancer-controller   2/2 2     2           37s\n    $ kubectl describe deployment  -n kube-system  aws-load-balancer-controller | grep Image\n    Image: 602401143452.dkr.ecr.eu-central-1.amazonaws.com/amazon/aws-load-balancer-controller:v2.4.5\n    ```", "```\n    ---\n    kind: Namespace\n    apiVersion: v1\n    metadata:\n      name: game-2048\n      labels:\n        name: game-2048\n    ```", "```\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      namespace: game-2048\n      name: deployment-2048\n    spec:\n      selector:\n        matchLabels:\n          app.kubernetes.io/name: app-2048\n      replicas: 3\n      template:\n        metadata:\n          labels:\n            app.kubernetes.io/name: app-2048\n        spec:\n          containers:\n          - image: public.ecr.aws/l6m2t8p7/docker-2048:latest\n            imagePullPolicy: Always\n            name: app-2048\n            ports:\n            - containerPort: 80\n    ```", "```\n    ---\n    apiVersion: v1\n    kind: Service\n    metadata:\n      namespace: game-2048\n      name: service-2048\n    spec:\n      ports:\n        - port: 80\n          targetPort: 80\n          protocol: TCP\n      type: NodePort\n      selector:\n        app.kubernetes.io/name: app-2048\n    ```", "```\n    apiVersion: networking.k8s.io/v1\n    kind: Ingress\n    metadata:\n      namespace: game-2048\n      name: ingress-2048\n      annotations:\n        alb.ingress.kubernetes.io/scheme: internet-facing\n        alb.ingress.kubernetes.io/target-type: ip\n    spec:\n      ingressClassName: alb\n      rules:\n        - http:\n            paths:\n            - path: /\n              pathType: Prefix\n              backend:\n                service:\n                  name: service-2048\n                  port:\n                    number: 80\n    ```", "```\n    $ kubectl get po -o wide -n game-204\n    NAME  READY   STATUS    RESTARTS   AGE   IP\n    deployment-2048-7ff458c9f-fwx6h   1/1     Running   0      26m   192.168.9.154    ….\n    deployment-2048-7ff458c9f-k5ns5   1/1     Running   0     26m   192.168.42.16    ….\n    deployment-2048-7ff458c9f-v6mqw   1/1     Running   0          26m   192.168.87.245   …\n    ```", "```\n    ---\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: nlb-service\n      namespace: game-2048\n      annotations:\n        service.beta.kubernetes.io/aws-load-balancer-type: external\n        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\n        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n    spec:\n      ports:\n        - port: 80\n          targetPort: 80\n          protocol: TCP\n      type: LoadBalancer\n      selector:\n        app.kubernetes.io/name: app-2048\n    ```", "```\n---\napiVersion: elbv2.k8s.aws/v1beta1\nkind: TargetGroupBinding\nmetadata:\n  name: existing-nlb\n  namespace: game-2048\nspec:\n  serviceRef:\n    name: nlb-service\n    port: 80\n  targetGroupARN: arn:aws:elasticloadbalancing:eu-central-1:112233:targetgroup/existing-target-group/234\n```"]