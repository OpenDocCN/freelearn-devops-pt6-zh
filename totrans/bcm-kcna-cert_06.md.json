["```\n$ minikube start\n😄  minikube v1.25.2 on Darwin 12.4\n✨  Using the docker driver based on existing profile\n👍  Starting control plane node minikube in cluster minikube\n🚜  Pulling base image ...\n🔄  Restarting existing docker container for \"minikube\" ...\n🐳  Preparing Kubernetes v1.23.3 on Docker 20.10.12 ...\n    ▪ kubelet.housekeeping-interval=5m\n🔎  Verifying Kubernetes components...\n    ▪ Using image kubernetesui/dashboard:v2.3.1\n    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5\n    ▪ Using image kubernetesui/metrics-scraper:v1.0.7\n🌟  Enabled addons: storage-provisioner, default-storageclass, dashboard\n🏄  Done! kubectl is now configured to use \"minikube\" cluster and \"default\" namespace by default\n```", "```\n$ minikube status\nminikube\ntype: Control Plane\nhost: Running\nkubelet: Running\napiserver: Running\nkubeconfig: Configured\n```", "```\n$ minikube kubectl -- create -f https://k8s.io/examples/controllers/nginx-deployment.yaml --namespace kcna\ndeployment.apps/nginx-deployment created\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                               READY    STATUS    RESTARTS   AGE\nnginx-deployment-9456bbbf9-cl95h   1/1      Running   0          10m\nnginx-deployment-9456bbbf9-ghxb2   1/1      Running   0          10m\nnginx-deployment-9456bbbf9-nvl7r   1/1      Running   0          10m\n```", "```\n$ minikube kubectl -- get replicasets -n kcna\nNAME                         DESIRED   CURRENT   READY   AGE\nnginx-deployment-9456bbbf9   3         3         3       12m\n```", "```\n$ minikube kubectl -- delete pods nginx-deployment-9456bbbf9-cl95h -n kcna\npod \"nginx-deployment-9456bbbf9-cl95h\" deleted\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                               READY    STATUS    RESTARTS   AGE\nnginx-deployment-9456bbbf9-9zv5c   1/1      Running   0          3s\nnginx-deployment-9456bbbf9-ghxb2   1/1      Running   0          42m\nnginx-deployment-9456bbbf9-nvl7r   1/1      Running   0          42m\n```", "```\n$ minikube kubectl -- scale deployment nginx-deployment --replicas 5 -n kcna\ndeployment.apps/nginx-deployment scaled\n```", "```\n$ minikube kubectl -- get replicaset -n kcna\nNAME                         DESIRED   CURRENT   READY   AGE\nnginx-deployment-9456bbbf9   5         5         4       52m\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                               READY    STATUS    RESTARTS   AGE\nnginx-deployment-9456bbbf9-9zv5c   1/1      Running   0          30m\nnginx-deployment-9456bbbf9-ghxb2   1/1      Running   0          52m\nnginx-deployment-9456bbbf9-hgjnq   1/1      Running   0          23s\nnginx-deployment-9456bbbf9-nvl7r   1/1      Running   0          52m\nnginx-deployment-9456bbbf9-pzm8q   1/1     Running   0          23s\n```", "```\n$ minikube kubectl -- get deployment -n kcna\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   5/5     5            5           9h\n```", "```\n$ minikube kubectl -- set image deployment/nginx-deployment nginx=nginx:1.20 -n kcna\ndeployment.apps/nginx-deployment image updated\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                                READY    STATUS              RESTARTS   AGE\nnginx-deployment-7b96fbf5d8-dwskw   0/1      ContainerCreating   0          2s\nnginx-deployment-7b96fbf5d8-grkv6   0/1      ContainerCreating   0          2s\nnginx-deployment-7b96fbf5d8-jcb4p   0/1      ContainerCreating   0          2s\nnginx-deployment-9456bbbf9-9zv5c    1/1      Running             0          6h\nnginx-deployment-9456bbbf9-ghxb2    1/1      Running             0          9h\nnginx-deployment-9456bbbf9-hgjnq    1/1      Running             0          2h\nnginx-deployment-9456bbbf9-nvl7r    1/1      Running             0          9h\nnginx-deployment-9456bbbf9-pzm8q    1/1      Terminating         0          2h\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                                READY    STATUS              RESTARTS   AGE\nnginx-deployment-7b96fbf5d8-6dh9q   0/1      ContainerCreating   0          2s\nnginx-deployment-7b96fbf5d8-dwskw   1/1      Running             0          25s\nnginx-deployment-7b96fbf5d8-grkv6   1/1      Running             0          25s\nnginx-deployment-7b96fbf5d8-jcb4p   1/1      Running             0          25s\nnginx-deployment-7b96fbf5d8-zt7bj   1/1     Running             0          4s\nnginx-deployment-9456bbbf9-ghxb2    1/1     Terminating         0          9h\nnginx-deployment-9456bbbf9-nvl7r    1/1     Terminating         0          9h\n```", "```\n$ minikube kubectl -- describe pod nginx-deployment-7b96fbf5d8-dwskw -n kcna | grep Image\n    Image:        nginx:1.20\n```", "```\n$ minikube kubectl -- rollout history deployment -n kcna\ndeployment.apps/nginx-deployment\nREVISION  CHANGE-CAUSE\n1         <none>\n2         <none>\n```", "```\n$ minikube kubectl -- rollout undo deployment/nginx-deployment -n kcna\ndeployment.apps/nginx-deployment rolled back\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                               READY    STATUS    RESTARTS   AGE\nnginx-deployment-9456bbbf9-6xpq2   1/1      Running   0          22s\nnginx-deployment-9456bbbf9-75m7d   1/1      Running   0          22s\nnginx-deployment-9456bbbf9-hbglw   1/1      Running   0          22s\nnginx-deployment-9456bbbf9-hxdjd   1/1      Running   0          16s\nnginx-deployment-9456bbbf9-mtxzm   1/1      Running   0          17s\n$ minikube kubectl -- get pod nginx-deployment-9456bbbf9-6xpq2 -n kcna -o yaml\napiVersion: v1\nkind: Pod\n… LONG OUTPUT OMITTED …\nspec:\n  containers:\n  - image: nginx:1.14.2\n    imagePullPolicy: IfNotPresent\n    name: nginx\n… LONG OUTPUT OMITTED …\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: kcna-pv-claim\nspec:\n  storageClassName: standard\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 3Gi\n```", "```\n$ minikube kubectl -- create -f kcna-pv-claim.yaml -n kcna\npersistentvolumeclaim/kcna-pv-claim created\n```", "```\n$ minikube kubectl -- get pv -n kcna\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                 STORAGECLASS   REASON   AGE\npvc-6b56c062-a36b-4bd5-9d92-f344d02aaf5c   3Gi        RWO             Delete           Bound     kcna/kcna-pv-claim   standard                74s\n```", "```\n$ minikube kubectl -- get deployment -n kcna\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   5/5     5            5           2d\n$ minikube kubectl -- delete deployment nginx-deployment -n kcna\ndeployment.apps \"nginx-deployment\" deleted\n```", "```\n$ cat nginx-deployment-with-volume.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-with-volume\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: kcna-volume\n          mountPath: \"/usr/share/nginx/html\"\n      volumes:\n      - name: kcna-volume\n        persistentVolumeClaim:\n          claimName: kcna-pv-claim\n```", "```\n$ minikube kubectl -- create -f nginx-deployment-with-volume.yaml -n kcna\ndeployment.apps/nginx-deployment-with-volume created\n$ minikube kubectl -- get pod -n kcna\nNAME                                            READY   STATUS    RESTARTS   AGE\nnginx-deployment-with-volume-6775557df5-bjmr6    1/1     Running   0          39s\n```", "```\n$ minikube kubectl -- -n kcna exec -it nginx-deployment-with-volume-6775557df5-bjmr6 -- bash\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/#\n```", "```\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/# mount | grep nginx\n/dev/vda1 on /usr/share/nginx/html type ext4 (rw,relatime)\n```", "```\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/# apt update\n… LONG OUTPUT OMITTED …\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/# apt -y install curl\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\n… LONG OUTPUT OMITTED …\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/ # curl localhost\n<html>\n<head><title>403 Forbidden</title></head>\n<body bgcolor=\"white\">\n<center><h1>403 Forbidden</h1></center>\n<hr><center>nginx/1.14.2</center>\n</body>\n</html>\n```", "```\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/# echo \"Kubernetes Rocks!\" > /usr/share/nginx/html/index.html\nroot@nginx-deployment-with-volume-6775557df5-bjmr6:/# curl localhost\nKubernetes Rocks!\n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: nginx-statefulset\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  serviceName: \"nginx\"\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: nginx-html\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: nginx-html\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"standard\"\n      resources:\n        requests:\n          storage: 1Gi\n```", "```\n$ minikube kubectl -- create secret generic kcna-secret --from-literal=\"username=kcnauser\" --from-literal=\"password=topsecret\" -n kcna\nsecret/kcna-secret created\n```", "```\n… BEGINNING OF THE SPEC OMITTED …\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: nginx-html\n          mountPath: /usr/share/nginx/html\n        - name: nginx-kcna-secret\n          mountPath: /etc/nginx/kcna/\n      volumes:\n      - name: nginx-kcna-secret\n        secret:\n          secretName: kcna-secret\n  volumeClaimTemplates:\n  - metadata:\n      name: nginx-html\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"standard\"\n      resources:\n        requests:\n          storage: 1Gi\n```", "```\n$ minikube kubectl -- apply -f statefulset_with_secret.yaml -n kcna\nstatefulset.apps/nginx-statefulset configured\n```", "```\n$ minikube kubectl -- get pods -n kcna\nNAME                                            READY   STATUS    RESTARTS   AGE\nnginx-statefulset-0                             1/1     Running   0          12s\nnginx-statefulset-1                             1/1     Running   0          15s\nnginx-statefulset-2                             1/1     Running   0          18s\n```", "```\n$ minikube kubectl -- -n kcna exec -it nginx-statefulset-0 -- bash\nroot@nginx-statefulset-0:/# cat /etc/nginx/kcna/username\nkcnauser\nroot@nginx-statefulset-0:/# cat /etc/nginx/kcna/password\ntopsecret\n```", "```\nNAME                                            READY   STATUS    RESTARTS   AGE     LABELS\nnginx-deployment-with-volume-6775557df5-f6ll7   1/1      Running   0          23h     app=nginx,pod-template-hash=6775557df5\nnginx-statefulset-0                             1/1     Running   0          46m     app=nginx,controller-revision-hash=nginx-statefulset-6fbdf55d78,statefulset.kubernetes.io/pod-name=nginx-statefulset-0\nnginx-statefulset-1                             1/1     Running   0          46m     app=nginx,controller-revision-hash=nginx-statefulset-6fbdf55d78,statefulset.kubernetes.io/pod-name=nginx-statefulset-1\nnginx-statefulset-2                             1/1      Running   0          46m     app=nginx,controller-revision-hash=nginx-statefulset-6fbdf55d78,statefulset .kubernetes.io/pod-name=nginx-statefulset-2\n```", "```\n  template:\n    metadata:\n      labels:\n        app: nginx\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n```", "```\n$ minikube kubectl -- create -f nginx-service.yaml -n kcna\nservice/nginx created\n$ minikube kubectl -- get service -n kcna\nNAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE\nnginx   ClusterIP   10.105.246.191   <none>        80/TCP    36s\n```", "```\n$ minikube kubectl -- get endpoints -n kcna\nNAME    ENDPOINTS                                               AGE\nnginx   172.17.0.2:80,172.17.0.6:80,172.17.0.7:80 + 1 more...   4m\n```", "```\n$ minikube kubectl -- -n kcna exec -it nginx-statefulset-0 -- bash\nroot@nginx-statefulset-0:/# apt update && apt -y install curl\n… LONG OUTPUT OMITTED …\nroot@nginx-statefulset-0:/# curl nginx\nKubernetes Rocks!\nroot@nginx-statefulset-0:/# curl nginx\nKubernetes Rocks!\nroot@nginx-statefulset-0:/# curl nginx\n<html>\n<head><title>403 Forbidden</title></head>\n<body bgcolor=\"white\">\n<center><h1>403 Forbidden</h1></center>\n<hr><center>nginx/1.14.2</center>\n</body>\n</html>\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    test: liveness\n  name: liveness-exec\nspec:\n  containers:\n  - name: liveness\n    image: k8s.gcr.io/busybox\n    args:\n    - /bin/sh\n    - -c\n    - touch /tmp/healthy; sleep 30; rm -f /tmp/healthy; sleep 600\n    livenessProbe:\n      exec:\n        command:\n        - cat\n        - /tmp/healthy\n      initialDelaySeconds: 5\n      periodSeconds: 5\n```", "```\n$ minikube kubectl -- create -f https://k8s.io/examples/pods/probe/exec-liveness.yaml -n kcna\npod/liveness-exec created\n```", "```\n$ minikube kubectl -- get pod -n kcna\nNAME                                            READY   STATUS    RESTARTS   AGE\nliveness-exec                                   1/1     Running   0          59s\n```", "```\n$ minikube kubectl -- get pod -n kcna\nNAME                                            READY   STATUS    RESTARTS      AGE\nliveness-exec                                   1/1     Running   1 (20s ago)   95s\n```", "```\n$ minikube kubectl -- describe pod liveness-exec -n kcna\n… LONG OUTPUT OMITTED …\nEvents:\n  Type     Reason     Age                From                Message\n  ----     ------     ----               ----               -------\n  Normal   Scheduled  85s                default-scheduler  Successfully assigned kcna/liveness-exec to minikube\n  Normal   Pulled     81s                kubelet             Successfully pulled image \"k8s.gcr.io/busybox\" in 3.4078911s\n  Warning  Unhealthy  41s (x3 over 51s)  kubelet            Liveness probe failed: cat: can't open '/tmp/healthy': No such file or directory\n  Normal   Killing    41s                kubelet             Container liveness failed liveness probe, will be restarted\n  Normal   Pulling    11s (x2 over 85s)  kubelet             Pulling image \"k8s.gcr.io/busybox\"\n  Normal   Created    10s (x2 over 81s)  kubelet             Created container liveness\n  Normal   Pulled     10s                kubelet             Successfully pulled image \"k8s.gcr.io/busybox\" in 1.2501457s\n  Normal   Started    9s (x2 over 81s)   kubelet             Started container liveness\n```"]