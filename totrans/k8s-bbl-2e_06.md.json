["```\n$ kubectl get namespaces\nNAME              STATUS   AGE\ndefault           Active   8d\nkube-node-lease   Active   8d\nkube-public       Active   8d\nkube-system       Active   8d \n```", "```\n$ kubectl get namespaces\nNAME              STATUS   AGE\ndefault           Active   8d\nkube-node-lease   Active   8d\nkube-public       Active   8d\nkube-system       Active   8d \n```", "```\n$ kubectl get namespaces\nNAME              STATUS   AGE\ndefault           Active   8d\nkube-node-lease   Active   8d\nkube-public       Active   8d\nkube-system       Active   8d \n```", "```\n$ kubectl describe namespaces default\nName:         default\nLabels:       kubernetes.io/metadata.name=default\nAnnotations:  <none>\nStatus:       Active\nNo resource quota.\nNo LimitRange resource. \n```", "```\n$ kubectl get namespaces default -o yaml > default-ns.yaml \n```", "```\n$ kubectl create ns custom-ns\nnamespace/custom-ns created \n```", "```\n$ kubectl get ns custom-ns\nNAME        STATUS   AGE\ncustom-ns   Active   35s \n```", "```\n# custom-ns-2.yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: custom-ns-2 \n```", "```\n$ kubectl apply -f custom-ns-2.yaml\nnamespace/custom-ns-2 created \n```", "```\n$ kubectl delete namespaces custom-ns\nnamespace \"custom-ns\" deleted \n```", "```\n$ kubectl delete -f custom-ns-2.yaml\nnamespace \"custom-ns-2\" deleted \n```", "```\n$ kubectl create ns custom-ns\n$ kubectl run nginx --image nginx:latest -n custom-ns\nPod/nginx created \n```", "```\n$ kubectl create configmap configmap-custom-ns --from-literal=Lorem=Ipsum -n custom-ns\nconfigmap/configmap-custom-ns created \n```", "```\n# pod-in-namespace.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx2\n  namespace: custom-ns\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest \n```", "```\n$ kubectl apply -f pod-in-namespace.yaml\npod/nginx2 created \n```", "```\n$ kubectl get pods -n custom-ns \nNAME     READY   STATUS    RESTARTS   AGE \nnginx    1/1     Running   0          9m23s \nnginx2   1/1     Running   0          94s \n```", "```\n$ kubectl get pods\nNo resources found in default namespace. \n```", "```\n$ kubectl get cm\nNAME               DATA   AGE\nkube-root-ca.crt   1      9d\n$ kubectl get cm -n custom-ns\nNAME                  DATA   AGE\nconfigmap-custom-ns   1      70m\nkube-root-ca.crt      1      76m \n```", "```\n$ kubectl config set-context --current --namespace=custom-ns\nContext \"minikube\" modified. \n```", "```\n$ kubectl config view --minify --output 'jsonpath={..namespace}'\ncustom-ns \n```", "```\n$ kubectl get pods\nNAME     READY   STATUS    RESTARTS   AGE\nnginx    1/1     Running   0          79m\nnginx2   1/1     Running   0          71m \n```", "```\nalias kubens='kubectl config set-context --current --namespace' \n```", "```\n$ kubens custom-ns\nContext \"minikube\" modified.\n$ kubectl config view --minify --output 'jsonpath={..namespace}'\ncustom-n\n# change to another namespace\n$ kubens default\nContext \"minikube\" modified.\n$ kubectl config view --minify --output 'jsonpath={..namespace}'\ndefault \n```", "```\n$  kubectl config set-context --current --namespace=default\nContext \"minikube\" modified. \n```", "```\n$ kubectl get all -n custom-ns \n```", "```\n$ kubectl run nginx --image nginx:latest\nPod/nginx created\n$ kubectl run nginx --image nginx:latest\nError from server (AlreadyExists): Pods \"nginx\" already exists \n```", "```\n$ kubectl get pods\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          64s \n```", "```\n$ kubectl get Pods --namespace custom-ns\nNAME     READY   STATUS    RESTARTS   AGE\nnginx    1/1     Running   0          89m\nnginx2   1/1     Running   0          23m \n```", "```\n$ kubectl api-resources --namespaced=false\nNAME                              SHORTNAMES   APIVERSION                        NAMESPACED   KIND\ncomponentstatuses                 cs           v1                                false        ComponentStatus\nnamespaces                        ns           v1                                false        Namespace\nnodes                             no           v1                                false        Node\npersistentvolumes                 pv           v1                                false        PersistentVolume\nâ€¦<removed for brevity>... \n```", "```\n$ kubectl api-resources --namespaced=true \n```", "```\n<service_name>.<namespace_name>.svc.cluster.local \n```", "```\n# pod-in-namespace-with-request.yaml \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-with-request\n  namespace: custom-ns\nspec:\n  containers:\n    - name: nginx\n      image: nginx:latest\n      resources:\n        requests:\n          memory: \"512Mi\"\n          cpu: \"250m\" \nrequest at the container level and set different ones for each container.\n```", "```\n# pod-in-namespace-with-request-and-limit.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-with-request-and-limit\n  namespace: quota-ns\nspec:\n  containers:\n    - name: nginx\n      image: nginx:latest\n      resources:\n        requests:\n          memory: \"512Mi\"\n          cpu: \"250m\"\n        limits:\n          memory: \"1Gi\"\n          cpu: \"1000m\" \n```", "```\n$ minikube addons enable metrics-server \n```", "```\n$ kubectl get po -n kube-system | grep metrics\nmetrics-server-7c66d45ddc-82ngt            1/1     Running   0               113m \n```", "```\n$ kubectl top node\nNAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%  \nminikube   181m         1%     806Mi           2% \n```", "```\n$ kubectl create ns quota-ns\nnamespace/quota-ns created \n```", "```\n# pod-with-request-and-limit-1.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-with-request-and-limit-1\n  namespace: quota-ns\nspec:\n  containers:\n    - name: nginx\n      image: nginx:latest\n      resources:\n        requests:\n          memory: \"100Gi\"\n          cpu: \"100m\"\n        limits:\n          memory: \"100Gi\"\n          cpu: \"500m\" \n```", "```\n$ kubectl apply -f pod-with-request-and-limit-1.yaml\npod/nginx-with-request-and-limit-1 created \n```", "```\n$ kubectl get pod -n quota-ns\nNAME                             READY   STATUS    RESTARTS   AGE\nnginx-with-request-and-limit-1   0/1     Pending   0          45s \n```", "```\n$ kubectl describe po nginx-with-request-and-limit-1 -n quota-ns\nName:             nginx-with-request-and-limit-1\nNamespace:        quota-ns\n...<removed for brevity>...\nStatus:           Pending\nIP:              \nIPs:              <none>\nContainers:\n  nginx:\n...<removed for brevity>...\n    Limits:\n      cpu:     500m\n      memory:  100Gi\n    Requests:\n      cpu:        100m\n      memory:     100Gi\n    Environment:  <none>\n...<removed for brevity>...\n  Warning  FailedScheduling  105s  default-scheduler  0/1 nodes are available: 1 Insufficient memory. preemption: 0/1 nodes are available: 1 No preemption victims found for incoming pod. \n```", "```\n# pod-with-request-and-limit-2.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-with-request-and-limit-2\n  namespace: quota-ns\nspec:\n  containers:\n    - name: nginx\n      image: nginx:latest\n      resources:\n        requests:\n          memory: \"1Gi\"\n          cpu: \"100m\"\n        limits:\n          memory: \"2Gi\"\n          cpu: \"500m\" \n```", "```\n$ kubectl apply -f pod-with-request-and-limit-2.yaml\npod/nginx-with-request-and-limit-2 created\n$ kubectl get po -n quota-ns\nNAME                             READY   STATUS    RESTARTS   AGE\nnginx-with-request-and-limit-1   0/1     Pending   0          8m24s\nnginx-with-request-and-limit-2   1/1     Running   0          20s \n```", "```\n# resourcequota.yaml\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: resourcequota\n  namespace: quota-ns\nspec:\n  hard:\n    requests.cpu: \"1000m\"\n    requests.memory: \"1Gi\"\n    limits.cpu: \"2000m\"\n    limits.memory: \"2Gi\" \n```", "```\n$ kubectl apply -f resourcequota.yaml\nresourcequota/resourcequota created\n$ kubectl get quota -n quota-ns\nNAME            AGE   REQUEST                                          LIMIT\nresourcequota   4s    requests.cpu: 100m/1, requests.memory: 1Gi/1Gi   limits.cpu: 500m/2, limits.memory: 2Gi/2Gi \n```", "```\n$ kubectl get po -n quota-ns\nNAME                             READY   STATUS    RESTARTS        AGE\nnginx-with-request-and-limit-2   1/1     Running   1 (5h41m ago)   7h18m\n$ kubectl top pod -n quota-ns\nNAME                             CPU(cores)   MEMORY \n```", "```\n# pod-with-request-and-limit-3.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-with-request-and-limit-3\n  namespace: quota-ns\nspec:\n  containers:\n    - name: nginx\n      image: nginx:latest\n      resources:\n        requests:\n          memory: \"3Gi\"\n          cpu: \"100m\"\n        limits:\n          memory: \"4Gi\"\n          cpu: \"500m\" \n```", "```\n$ kubectl apply -f pod-with-request-and-limit-3.yaml\nError from server (Forbidden): error when creating \"pod-with-request-and-limit-3.yaml\": pods \"nginx-with-request-and-limit-3\" is forbidden: exceeded quota: resourcequota, requested: limits.memory=4Gi,requests.memory=3Gi, used: limits.memory=2Gi,requests.memory=1Gi, limited: limits.memory=2Gi,requests.memory=1Gi \n```", "```\n# resourcequota-with-object-count.yaml\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: my-resourcequota\n  namespace: quota-ns\nspec:\n  hard:\n    requests.cpu: \"1000m\"\n    requests.memory: \"1Gi\"\n    limits.cpu: \"2000m\"\n    limits.memory: \"2Gi\"\n    configmaps: \"10\"\n    services: \"5\" \n```", "```\n$ kubectl apply -f resourcequota-with-object-count.yaml \n```", "```\n$ kubectl get resourcequotas -n quota-ns\nNAME            AGE   REQUEST                                          LIMIT\nresourcequota   15m   requests.cpu: 100m/1, requests.memory: 1Gi/1Gi   limits.cpu: 500m/2, limits.memory: 2Gi/2Gi \n```", "```\n$ kubectl delete -f resourcequota-with-object-count.yaml\nresourcequota \"my-resourcequota\" deleted \n```", "```\n# limitrange.yaml\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: my-limitrange\n  namespace: quota-ns\nspec:\n  limits:\n    - default: # this section defines default limits\n        cpu: 500m\n        memory: 256Mi\n      defaultRequest: # this section defines default requests\n        cpu: 500m\n        memory: 128Mi\n      max: # max and min define the limit range\n        cpu: \"1\"\n        memory: 1000Mi\n      min:\n        cpu: 100m\n        memory: 128Mi\n      type: Container \n```", "```\n$ kubectl apply -f limitrange.yaml \n```", "```\n$ kubectl get limitranges -n quota-ns\nNAME            CREATED AT\nmy-limitrange   2024-03-10T16:13:00Z\n$ kubectl describe limitranges my-limitrange -n quota-ns\nName:       my-limitrange\nNamespace:  quota-ns\nType        Resource  Min    Max     Default Request  Default Limit  Max Limit/Request Ratio\n----        --------  ---    ---     ---------------  -------------  -----------------------\nContainer   memory    128Mi  1000Mi  128Mi            256Mi          -\nContainer   cpu       100m   1       500m             500m           - \n```", "```\n$ kubectl delete limitranges my-limitrange -n quota-ns\nlimitrange \"my-limitrange\" deleted \n```"]