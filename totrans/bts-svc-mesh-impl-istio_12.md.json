["```\n$ kubectl apply -f Chapter12/online-boutique-orig/00-online-boutique-shop-ns.yaml\nnamespace/online-boutique created\n$ kubectl apply -f Chapter12/online-boutique-orig\n```", "```\n$ kubectl get po -n online-boutique\nNAME                        READY   STATUS    RESTARTS   AGE\nadservice-8587b48c5f-v7nzq               1/1     Running   0          48s\ncartservice-5c65c67f5d-ghpq2             1/1     Running   0          60s\ncheckoutservice-54c9f7f49f-9qgv5         1/1     Running   0          73s\ncurrencyservice-5877b8dbcc-jtgcg         1/1     Running   0          57s\nemailservice-5c5448b7bc-kpgsh            1/1     Running   0          76s\nfrontend-67f6fdc769-r8c5n                1/1     Running   0          68s\npaymentservice-7bc7f76c67-r7njd          1/1     Running   0          65s\nproductcatalogservice-67fff7c687-jrwcp   1/1     Running   0          62s\nrecommendationservice-b49f757f-9b78s     1/1     Running   0          70s\nredis-cart-58648d854-jc2nv               1/1     Running   0          51s\nshippingservice-76b9bc7465-qwnvz         1/1     Running   0          55s\n```", "```\n$ kubectl port-forward svc/frontend 8080:80 -n online-boutique\nForwarding from 127.0.0.1:8080 -> 8079\nForwarding from [::1]:8080 -> 8079\n```", "```\n    % kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml\n    ```", "```\n    $ kubectl apply -f Chapter11/05-GatekeeperConfig.yaml\n    config.config.gatekeeper.sh/config created\n    ```", "```\n    $ kubectl apply -f Chapter11/gatekeeper/01-istiopodlabelconstraint_template.yaml\n    constrainttemplate.templates.gatekeeper.sh/istiorequiredlabels created\n    $ kubectl apply -f Chapter11/gatekeeper/01-istiopodlabelconstraint.yaml\n    istiorequiredlabels.constraints.gatekeeper.sh/mesh-pods-must-have-app-and-version created\n    $ kubectl apply -f Chapter11/gatekeeper/02-istioportconstraints_template.yaml\n    constrainttemplate.templates.gatekeeper.sh/allowedistioserviceportname created\n    $ kubectl apply -f Chapter11/gatekeeper/02-istioportconstraints.yaml\n    allowedistioserviceportname.constraints.gatekeeper.sh/port-name-constraint created\n    ```", "```\n% kubectl delete ns online-boutique\nnamespace \" online-boutique \" deleted\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: online-boutique\n  labels:\n    istio-injection: enabled\n```", "```\n$ kubectl apply -f Chapter12/OPAGatekeeper/automaticsidecarinjection\nnamespace/online-boutiquecreated\n$ kubectl apply -f Chapter12/OPAGatekeeper/automaticsidecarinjection\nError from server (Forbidden): error when creating \"Chapter12/OPAGatekeeper/automaticsidecarinjection/02-carts-svc.yml\": admission webhook \"validation.gatekeeper.sh\" denied the request: [port-name-constraint] All services declaration must have port name with one of following  prefix http-, http2-,https-,grpc-,grpc-web-,mongo-,redis-,mysql-,tcp-,tls-\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  namespace: online-boutique\nspec:\n  selector:\n    matchLabels:\n      app: frontend\n  template:\n    metadata:\n      labels:\n        app: frontend\n        version: v1\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  namespace: online-boutique\nspec:\n  type: ClusterIP\n  selector:\n    app: frontend\n  ports:\n  - name: http-frontend\n    port: 80\n    targetPort: 8080\n```", "```\n% kubectl apply -f Chapter12/OPAGatekeeper/automaticsidecarinjection\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: online-boutique-ingress-gateway\n  namespace: online-boutique\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"onlineboutique.com\"\n```", "```\n$ kubectl apply -f Chapter12/trafficmanagement/01-gateway.yaml\ngateway.networking.istio.io/online-boutique-ingress-gateway created\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: onlineboutique-frontend-vs\n  namespace: online-boutique\nspec:\n  hosts:\n  - \"onlineboutique.com\"\n  gateways:\n  - online-boutique-ingress-gateway\n  http:\n  - route:\n    - destination:\n        host: frontend\n        subset: v1\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: frontend\n  namespace: online-boutique\nspec:\n  host: frontend\n  subsets:\n  - name: v1\n    labels:\n      app: frontend\n```", "```\n$ kubectl apply -f Chapter12/trafficmanagement/02-virtualservice-frontend.yaml\nvirtualservice.networking.istio.io/onlineboutique-frontend-vs created\ndestinationrule.networking.istio.io/frontend created\n```", "```\n$ kubectl apply -f Chapter12/trafficmanagement/03-virtualservicesanddr-otherservices.yaml\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: allow-egress-to-xyv.com\nspec:\n  hosts:\n  - \"xyz.com\"\n  ports:\n  - number: 80\n    protocol: HTTP\n    name: http\n  - number: 443\n    protocol: HTTPS\n    name: https\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  namespace: online-boutique\n  name: emailvirtualservice\nspec:\n  hosts:\n  - emailservice\n  http:\n  - timeout: 5s\n    route:\n    - destination:\n        host: emailservice\n        subset: v1\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  namespace: online-boutique\n  name: emailvirtualservice\nspec:\n  hosts:\n  - emailservice\n  http:\n  - timeout: 5s\n    route:\n    - destination:\n        host: emailservice\n        subset: v1\n    retries:\n      attempts: 2\n      perTryTimeout: 2s\n      retryOn: 5xx,gateway-error,reset,connect-failure,refused-stream,retriable-4xx\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  namespace: online-boutique\n  name: emaildr\nspec:\n  host: emailservice\n  trafficPolicy:\n      connectionPool:\n        http:\n          http2MaxRequests: 1\n          maxRequestsPerConnection: 1\n          http1MaxPendingRequests: 0\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n      app: emailservice\n```", "```\n      outlierDetection:\n        baseEjectionTime: 5m\n        consecutive5xxErrors: 1\n        interval: 90s\n        maxEjectionPercent: 50\n```", "```\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: strictmtls-online-boutique\n  namespace: online-boutique\nspec:\n  mtls:\n    mode: STRICT\n```", "```\n$ kubectl apply -f Chapter12/security/strictMTLS.yaml\npeerauthentication.security.istio.io/strictmtls-online-boutique created\n```", "```\n    $ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=Online Boutique./CN=onlineboutique.inc' -keyout onlineboutique.inc.key -out onlineboutique.inc.crt\n    Generating a 2048 bit RSA private key\n    writing new private key to 'onlineboutique.inc.key'\n    ```", "```\n    $ openssl req -out onlineboutique.com.csr -newkey rsa:2048 -nodes -keyout onlineboutique.com.key -subj \"/CN=onlineboutique.com/O=onlineboutique.inc\"\n    Generating a 2048 bit RSA private key\n    ...........................................................................+++\n    .........+++\n    writing new private key to 'onlineboutique.com.key'\n    ```", "```\n    $ openssl x509 -req -sha256 -days 365 -CA onlineboutique.inc.crt -CAkey onlineboutique.inc.key -set_serial 0 -in onlineboutique.com.csr -out onlineboutique.com.crt\n    Signature ok\n    subject=/CN= onlineboutique.com/O= onlineboutique.inc\n    ```", "```\n    $ kubectl create -n istio-system secret tls onlineboutique-credential --key=onlineboutique.com.key --cert=onlineboutique.com.crt\n    secret/onlineboutique-credential created\n    ```", "```\n    apiVersion: networking.istio.io/v1alpha3\n    kind: Gateway\n    metadata:\n      name: online-boutique-ingress-gateway\n      namespace: online-boutique\n    spec:\n      selector:\n        istio: ingressgateway\n      servers:\n      - port:\n          number: 443\n          name: https\n          protocol: HTTPS\n        tls:\n          mode: SIMPLE\n          credentialName: onlineboutique-credential\n        hosts:\n        - \"onlineboutique.com\"\n    ```", "```\n$ kubectl apply -f Chapter12/security/01-istio-gateway.yaml\n```", "```\n$ curl -v -HHost:onlineboutique.com --connect-to \"onlineboutique.com:443:aced3fea1ffaa468fa0f2ea6fbd3f612-390497785.us-east-1.elb.amazonaws.com\" --cacert onlineboutique.inc.crt --head  https://onlineboutique.com:443/\n..\n* Connected to aced3fea1ffaa468fa0f2ea6fbd3f612-390497785.us-east-1.elb.amazonaws.com (52.207.198.166) port 443 (#0)\n--\n* Server certificate:\n*  subject: CN=onlineboutique.com; O=onlineboutique.inc\n*  start date: Feb 14 23:21:40 2023 GMT\n*  expire date: Feb 14 23:21:40 2024 GMT\n*  common name: onlineboutique.com (matched)\n*  issuer: O=Online Boutique.; CN=onlineboutique.inc\n*  SSL certificate verify ok.\n..\n```", "```\napiVersion: security.istio.io/v1beta1\nkind: RequestAuthentication\nmetadata:\n name: frontend\n namespace: online-boutique\nspec:\n  selector:\n    matchLabels:\n      app: frontend\n  jwtRules:\n  - issuer: \"testing@secure.istio.io\"\n    jwksUri: \"https://raw.githubusercontent.com/istio/istio/release-1.17/security/tools/jwt/samples/jwks.json\"\n```", "```\n$ kubectl apply -f Chapter12/security/requestAuthentication.yaml\nrequestauthentication.security.istio.io/frontend created\n```", "```\n    TOKEN=$(curl -k https://raw.githubusercontent.com/istio/istio/release-1.17/security/tools/jwt/samples/demo.jwt -s); echo $TOKEN\n    eyJhbGciOiJSUzI1NiIsImtpZCI6IkRIRmJwb0lVcXJZOHQyen BBMnFYZkNtcjVWTzVaRXI0UnpIVV8tZW52dlEiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjQ2ODU5ODk3MDAsImZvbyI6ImJhciIsImlhdCI6MTUzMjM4OTcwMCwiaXNzIjoidGVzdGluZ0BzZWN1cmUuaXN0aW8uaW8iLCJzdWIiOiJ0ZXN0aW5nQHNlY3VyZS5pc3Rpby5pbyJ9\\. CfNnxWP2tcnR9q0vxyxweaF3ovQYHYZl82hAUsn21bwQd9zP7c-LS9qd_vpdLG4Tn1A15NxfCjp5f7QNBUo-KC9PJqYpgGbaXhaGx7bEdFWjcwv3nZzvc7M__ZpaCERdwU7igUmJqYGBYQ51vr2njU9ZimyKkfDe3axcyiBZde7G6dabliUosJvvKOPcKIWPccCgefSj_GNfwIip3-SsFdlR7BtbVUcqR-yv-XOxJ3Uc1MI0tz3uMiiZcyPV7sNCU4KRnemRIMHVOfuvHsU60_GhGbiSFzgPTAa9WTltbnarTbxudb_YEOx12JiwYToeX0DCPb43W1tzIBxgm8NxUg\n    ```", "```\n    $ curl -HHost:onlineboutique.com http://aced3fea1ffaa468fa0f2ea6fbd3f612-390497785.us-east-1.elb.amazonaws.com/ -o /dev/null --header \"Authorization: Bearer $TOKEN\" -s -w '%{http_code}\\n'\n    200\n    ```", "```\n    $ curl -HHost:onlineboutique.com http://aced3fea1ffaa468fa0f2ea6fbd3f612-390497785.us-east-1.elb.amazonaws.com/ -o /dev/null --header \"Authorization: Bearer BLABLAHTOKEN\" -s -w '%{http_code}\\n'\n    401\n    ```", "```\n    % curl -HHost:onlineboutique.com http://aced3fea1ffaa468fa0f2ea6fbd3f612-390497785.us-east-1.elb.amazonaws.com/ -o /dev/null  -s -w '%{http_code}\\n'\n    200\n    ```", "```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: require-jwt\n  namespace: online-boutique\nspec:\n  selector:\n    matchLabels:\n      app: frontend\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n       requestPrincipals: [\"testing@secure.istio.io/testing@secure.istio.io\"]\n```", "```\n$ kubectl apply -f Chapter12/security/requestAuthorizationPolicy.yaml\nauthorizationpolicy.security.istio.io/frontend created\n```", "```\n$ curl -HHost:onlineboutique.com http://aced3fea1ffaa468fa0f2ea6fbd3f612-390497785.us-east-1.elb.amazonaws.com/ -o /dev/null  -s -w '%{http_code}\\n'\n403\n```", "```\n    % git clone https://github.com/hashicorp-education/learn-consul-get-started-kubernetes.git\n    …..\n    Resolving deltas: 100% (313/313), done.\n    ```", "```\n        % brew tap hashicorp/tap\n        ```", "```\n    % brew install hashicorp/tap/consul-k8s\n    Running `brew update --auto-update`...\n    ==> Auto-updated Homebrew!\n    Updated 1 tap (homebrew/core).\n    You have 4 outdated formulae installed.\n    You can upgrade them with brew upgrade\n    or list them with brew outdated.\n    ==> Fetching hashicorp/tap/consul-k8s\n    ==> Downloading https://releases.hashicorp.com/consul-k8s/1.0.2/consul-k8s_1.0.2_darwin_arm64.zip\n    ######################################################################## 100.0%\n    ==> Installing consul-k8s from hashicorp/tap\n    consul-k8s on the Consul CLI:\n    ```", "```\n% consul-k8s version\n    consul-k8s v1.0.2\n```", "```\n% curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add –\n```", "```\napt-get install to install the consul-k8s CLI:\n\n```", "```\n\n*   For CentOS/RHEL, follow these steps:1.  Install yum-config-manager to manage your repositories:\n\n```", "```\n\n1.  Use yum-config-manager to add the official HashiCorp Linux repository:\n\n```", "```\n% sudo yum -y install consul-k8s\n```", "```\n% minikube start --profile dc1 --memory 4096 --kubernetes-version=v1.24.0\n```", "```\n% consul-k8s install -config-file=helm/values-v1.yaml -set global.image=hashicorp/consul:1.14.0\n==> Checking if Consul can be installed\n✓ No existing Consul installations found.\n✓ No existing Consul persistent volume claims found\n✓ No existing Consul secrets found.\n==> Consul Installation Summary\n    Name: consul\n    Namespace: consul\n….\n--> Starting delete for \"consul-server-acl-init-cleanup\" Job\n✓ Consul installed in namespace \"consul\".\n```", "```\n    % kubectl get po -n consul\n    NAME                    READY   STATUS    RESTARTS    AGE\n    consul-connect-injector-57dcdd54b7-hhxl4       1/1     Running   1 (21h ago)   21h\n    consul-server-0       1/1     Running   0             21h\n    consul-webhook-cert-manager-76bbf7d768-2kfhx   1/1     Running   0             21h\n    ```", "```\nCONSUL_HTTP_TOKENsecrets/consul-bootstrap-acl-token --template={{.data.token}} | base64 -d)\n```", "```\n% export CONSUL_HTTP_ADDR=https://127.0.0.1:8501\n```", "```\n% export CONSUL_HTTP_SSL_VERIFY=false\n```", "```\n    % kubectl port-forward pods/consul-server-0 8501:8501 --namespace consul\n    ```", "```\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n```", "```\n% kubectl create -f AppendixA/Consul/envoy-proxy-01.yaml -n appendix-consul\nconfigmap/envoy-dummy created\nservice/envoydummy created\ndeployment.apps/envoydummy created\nservicedefaults.consul.hashicorp.com/envoydummy created\nserviceaccount/envoydummy created\nservicedefaults.consul.hashicorp.com/curl created\nserviceaccount/curl created\npod/curl created\nservice/curl created\n```", "```\n% % kubectl get po -n appendix-consul\nNAME                          READY   STATUS    RESTARTS   AGE\ncurl                          2/2     Running   0          16s\nenvoydummy-77dfb5d494-2dx5w   2/2     Running   0          17s\n```", "```\n% kubectl get po/envoydummy-77dfb5d494-pcqs7 -n appendix-consul -o json | jq '.spec.containers[].image'\n\"envoyproxy/envoy:v1.22.2\"\n\"hashicorp/consul-dataplane:1.0.0\"\n% kubectl get po/envoydummy-77dfb5d494-pcqs7 -n appendix-consul -o json | jq '.spec.containers[].name'\n\"envoyproxy\"\n\"consul-dataplane\"\n```", "```\n% kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy:80\ncurl: (52) Empty reply from server\ncommand terminated with exit code 52\n```", "```\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: curl-to-envoydummy-api\n  namespace: appendix-consul\nspec:\n  destination:\n    name: envoydummy\n  sources:\n    - name: curl\n      action: allow\n```", "```\n% kubectl create -f AppendixA/Consul/curl-to-envoy-dummy-intentions.yaml\nserviceintentions.consul.hashicorp.com/curl-to-envoydummy-api created\n```", "```\n% kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1%\n```", "```\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceRouter\nmetadata:\n  name: envoydummy\nspec:\n  routes:\n    - match:\n        http:\n          pathPrefix: '/latest'\n      destination:\n        service: 'envoydummy2'\n```", "```\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceRouter\nmetadata:\n  name: envoydummy2\nspec:\n  routes:\n    - match:\n        http:\n          pathPrefix: '/old'\n      destination:\n        service: 'envoydummy'\n```", "```\n% kubectl apply -f AppendixA/Consul/envoy-proxy-02.yaml\n% kubectl apply -f AppendixA/Consul/routing-to-envoy-dummy.yaml -n appendix-consul\nservicerouter.consul.hashicorp.com/envoydummy configured\nservicerouter.consul.hashicorp.com/envoydummy2 configured\n```", "```\n    % kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy/new\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1%\n    ```", "```\n    % kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy/latest\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2%\n    ```", "```\n    % kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy2/new\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2%\n    ```", "```\n    % kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy2/old\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1%\n    ```", "```\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceRouter\nmetadata:\n  name: envoydummy2\nspec:\n  routes:\n    - match:\n        http:\n          pathPrefix: '/old'\n      destination:\n        service: 'envoydummy'\n        requestTimeout = \"20s\"\n        numRetries = 3\n        retryOnConnectFailure = true\n```", "```\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceSplitter\nmetadata:\n  name: envoydummy\nspec:\n  splits:\n    - weight: 20\n      service: envoydummy\n    - weight: 80\n      service: envoydummy2\n```", "```\n% kubectl apply -f AppendixA/Consul/splitter.yaml -n appendix-consul\nservicesplitter.consul.hashicorp.com/envoydummy created\n```", "```\n% for ((i=0;i<10;i++)); do kubectl exec -it pod/curl -n appendix-consul -- curl http://envoydummy/new ;done\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\n```", "```\n    % curl -L https://kuma.io/installer.sh | VERSION=2.0.2 sh -\n    INFO Welcome to the Kuma automated download!\n    INFO Kuma version: 2.0.2\n    INFO Kuma architecture: arm64\n    INFO Operating system: Darwin\n    INFO Downloading Kuma from: https://download.konghq.com/mesh-alpine/kuma-2.0.2-darwin-arm64.tar.gz\n    ```", "```\n    % kumactl install control-plane | kubectl apply -f -\n    ```", "```\n    % kubectl port-forward svc/kuma-control-plane -n kuma-system 5681:5681\n    ```", "```\n        kuma.io/sidecar-injection: enabled\n```", "```\n% kubectl create ns appendix-kuma\nnamespace/appendix-kuma created\n% kubectl apply -f AppendixA/Kuma/envoy-proxy-01.yaml\nconfigmap/envoy-dummy created\nservice/envoydummy created\ndeployment.apps/envoydummy created\nserviceaccount/envoydummy created\n```", "```\n% kubectl get po -n appendix-kuma\nNAME                          READY   STATUS    RESTARTS   AGE\ncurl                          2/2     Running   0          71s\nenvoydummy-767dbd95fd-tp6hr   2/2     Running   0          71s\nserviceaccount/curl created\npod/curl created\n```", "```\n% kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy:80\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1%\n```", "```\n% kubectl delete trafficpermissions/allow-all-traffic\n```", "```\napiVersion: kuma.io/v1alpha1\nkind: Mesh\nmetadata:\n  name: default\nspec:\n  mtls:\n    enabledBackend: ca-1\n    backends:\n    - name: ca-1\n      type: builtin\n```", "```\n% kubectl apply -f AppendixA/Kuma/enablemutualTLS.yaml\n```", "```\n% kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy:80\ncurl: (52) Empty reply from server\ncommand terminated with exit code 52\n```", "```\napiVersion: kuma.io/v1alpha1\nkind: TrafficPermission\nmesh: default\nmetadata:\n  name: allow-all-traffic-from-curl-to-envoyv1\nspec:\n  sources:\n    - match:\n        kuma.io/service: 'curl_appendix-kuma_svc'\n  destinations:\n    - match:\n        kuma.io/service: 'envoydummy_appendix-kuma_svc_80'\n```", "```\n% kubectl get dataplane/envoydummy-767dbd95fd-tp6hr -n appendix-kuma -o json | jq '.spec.networking.inbound[].tags'\n{\n  \"k8s.kuma.io/namespace\": \"appendix-kuma\",\n  \"k8s.kuma.io/service-name\": \"envoydummy\",\n  \"k8s.kuma.io/service-port\": \"80\",\n  \"kuma.io/protocol\": \"http\",\n  \"kuma.io/service\": \"envoydummy_appendix-kuma_svc_80\",\n  \"name\": \"envoydummy\",\n  \"pod-template-hash\": \"767dbd95fd\",\n  \"version\": \"v1\"\n}\n```", "```\n% kubectl apply -f AppendixA/Kuma/allow-traffic-curl-to-envoyv1.yaml\ntrafficpermission.kuma.io/allow-all-traffic-from-curl-to-envoyv1 created\n```", "```\n% kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy:80\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1%\n```", "```\n% for ((i=0;i<2;i++)); do kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy ;done\nV2----------Bootstrap Service Mesh Implementation with Istio----------V2\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1\n```", "```\n    apiVersion: kuma.io/v1alpha1\n    kind: TrafficRoute\n    mesh: default\n    metadata:\n      name: trafficroutingforlatest\n    spec:\n      sources:\n        - match:\n            kuma.io/service: curl_appendix-kuma_svc\n      destinations:\n        - match:\n            kuma.io/service: envoydummy_appendix-kuma_svc_80\n    ```", "```\n     conf:\n        http:\n        - match:\n            path:\n              prefix: \"/latest\"\n          destination:\n            kuma.io/service: envoydummy_appendix-kuma_svc_80\n            version: 'v2'\n    ```", "```\n        - match:\n            path:\n              prefix: \"/old\"\n          destination:\n            kuma.io/service: envoydummy_appendix-kuma_svc_80\n            version: 'v1'\n    ```", "```\n        destination:\n          kuma.io/service: envoydummy_appendix-kuma_svc_80\n    ```", "```\n    % for ((i=0;i<4;i++)); do kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy/latest ;done\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2\n    ```", "```\n    % for ((i=0;i<4;i++)); do kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy/old ;done\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    ```", "```\n    % for ((i=0;i<4;i++)); do kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy/xyz ;done\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2\n    V2----------Bootstrap Service Mesh Implementation with Istio----------V2\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    ```", "```\n  conf:\n    split:\n      - weight: 10\n        destination:\n          kuma.io/service: envoydummy_appendix-kuma_svc_80\n          version: 'v1'\n      - weight: 90\n        destination:\n          kuma.io/service: envoydummy_appendix-kuma_svc_80\n          version: 'v2'\n```", "```\n% for ((i=0;i<10;i++)); do kubectl exec -it pod/curl -n appendix-kuma -- curl http://envoydummy/xyz ;done\n```", "```\napiVersion: kuma.io/v1alpha1\nkind: Mesh\nmetadata:\n  name: team-digital\n```", "```\n% kubectl apply -f AppendixA/Kuma/team-digital-mesh.yaml\nmesh.kuma.io/team-digital created\n```", "```\nkuma.io/mesh: team-digital\n```", "```\nmesh: team-digital\n```", "```\napiVersion: kuma.io/v1alpha1\nkind: MeshGatewayInstance\nmetadata:\n  name: envoydummy-gateway-instance\n  namespace: appendix-kuma\nspec:\n  replicas: 1\n  serviceType: LoadBalancer\n  tags:\n    kuma.io/service: envoydummy-edge-gateway\n```", "```\napiVersion: kuma.io/v1alpha1\nkind: MeshGateway\nmesh: default\nmetadata:\n  name: envoydummy-edge-gateway\n  namespace: appendix-kuma\nspec:\n  selectors:\n  - match:\n      kuma.io/service: envoydummy-edge-gateway\n  conf:\n    listeners:\n      - port: 80\n        protocol: HTTP\n        hostname: mockshop.com\n        tags:\n          port: http/80\n```", "```\n    spec:\n      selectors:\n        - match:\n            kuma.io/service: envoydummy-edge-gateway\n            port: http/80\n    ```", "```\n      conf:\n        http:\n          rules:\n            - matches:\n                - path:\n                    match: PREFIX\n                    value: /\n              backends:\n                - destination:\n                    kuma.io/service: envoydummy_appendix-kuma_svc_80\n    ```", "```\n    kind: TrafficPermission\n    mesh: default\n    metadata:\n      name: allow-all-traffic-from-curl-to-envoyv1\n    spec:\n      sources:\n        - match:\n            kuma.io/service: 'envoydummy-edge-gateway'\n      destinations:\n        - match:\n            kuma.io/service: 'envoydummy_appendix-kuma_svc_80'\n    ```", "```\n    % kubectl apply -f AppendixA/Kuma/envoydummyGatewayInstance01.yaml\n    meshgatewayinstance.kuma.io/envoydummy-gateway-instance created\n    ```", "```\n    % kubectl apply -f AppendixA/Kuma/envoydummyGateway01.yaml\n    meshgateway.kuma.io/envoydummy-edge-gateway created\n    ```", "```\n    % kubectl apply -f AppendixA/Kuma/envoydummyGatewayRoute01.yaml\n    meshgatewayroute.kuma.io/envoydummy-edge-gateway-route created\n    ```", "```\n    $ kubectl apply -f AppendixA/Kuma/allow-traffic-edgegateway-to-envoy.yaml\n    trafficpermission.kuma.io/allow-all-traffic-from-curl-to-envoyv1 configured\n    ```", "```\n% kubectl get po -n appendix-kuma\nNAME                         READY   STATUS    RESTARTS   AGE\ncurl                         2/2     Running   0          22h\nenvoydummy-767dbd95fd-br2m6                    2/2     Running   0          22h\nenvoydummy-gateway-instance-75f87bd9cc-z2rx6   1/1     Running   0          93m\nenvoydummy2-694cbc4f7d-hrvkd                   2/2     Running   0          22h\n```", "```\n% kubectl get svc -n appendix-kuma\nNAME                  TYPE   CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nenvoydummy       ClusterIP      10.102.50.112   <none>        80/TCP         22h\nenvoydummy-gateway-instance   LoadBalancer   10.101.49.118   <pending>     80:32664/TCP   96m\n```", "```\n% minikube service envoydummy-gateway-instance --url -n appendix-kuma\nhttp://127.0.0.1:52346\n```", "```\n% curl -H \"host:mockshop.com\" http://127.0.0.1:52346/latest\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1\n```", "```\n    % curl --proto '=https' --tlsv1.2 -sSfL https://run.linkerd.io/install | sh\n    Downloading linkerd2-cli-stable-2.12.3-darwin...\n    Linkerd stable-2.12.3 was successfully installed\n    Add the linkerd CLI to your path with:\n      export PATH=$PATH:/Users/arai/.linkerd2/bin\n    ```", "```\n    export PATH=$PATH:/Users/arai/.linkerd2/bin\n    ```", "```\n    % linkerd check --pre\n    ```", "```\n    Status check results are √\n    ```", "```\n    linkerd namespace:\n    ```", "```\n% linkerd install --set proxyInit.runAsRoot=true | kubectl apply -f -\n```", "```\n% linkerd check\n```", "```\nStatus check results are √\n```", "```\n% kubectl get pods,services -n linkerd\nNAME                    READY   STATUS    RESTARTS   AGE\npod/linkerd-destination-86d68bb57-447j6       4/4     Running   0          49m\npod/linkerd-identity-5fbdcccbd5-lzfkj         2/2     Running   0          49m\npod/linkerd-proxy-injector-685cd5988b-5lmxq   2/2     Running   0          49m\nNAME   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nservice/linkerd-dst           ClusterIP    10.102.201.182   <none>        8086/TCP   49m\nservice/linkerd-dst-headless        ClusterIP   None             <none>        8086/TCP   49m\nservice/linkerd-identity        ClusterIP   10.98.112.229    <none>       8080/TCP   49m\nservice/linkerd-identity-headless       ClusterIP   None             <none>        8090/TCP   49m\nservice/linkerd-policy           ClusterIP    None             <none>        8090/TCP   49m\nservice/linkerd-policy-validator    ClusterIP   10.102.142.68    <none>        443/TCP    49m\nservice/linkerd-proxy-injector      ClusterIP   10.101.176.198   <none>        443/TCP    49m\nservice/linkerd-sp-validator        ClusterIP    10.97.160.235    <none>        443/TCP    49m\n```", "```\n          annotations:\n            linkerd.io/inject: enabled\n    ```", "```\n    % kubectl create ns appendix-linkerd\n    % kubectl apply -f AppendixA/Linkerd/envoy-proxy-01.yaml\n    ```", "```\n    % kubectl get po/curl -n appendix-linkerd -o json | jq '.spec.initContainers[].image, .spec.initContainers[].name'\n    \"cr.l5d.io/linkerd/proxy-init:v2.0.0\"\n    \"linkerd-init\"\n    % kubectl get po/curl -n appendix-linkerd -o json | jq '.spec.containers[].image, .spec.containers[].name'\n    \"cr.l5d.io/linkerd/proxy:stable-2.12.3\"\n    \"curlimages/curl\"\n    \"linkerd-proxy\"\n    \"curl\"\n    ```", "```\n% kubectl exec -it pod/curl -c curl -n appendix-linkerd -- curl http://envoydummy:80\nV1----------Bootstrap Service Mesh Implementation with Istio----------V1%\n```", "```\n    % linkerd upgrade --default-inbound-policy deny --set proxyInit.runAsRoot=true | kubectl apply -f -\n    ```", "```\n% kubectl exec -it pod/curl -c curl -n appendix-linkerd -- curl --head http://envoydummy:80\nHTTP/1.1 403 Forbidden\ncontent-length: 0\nl5d-proxy-error: unauthorized request on route\n```", "```\n    apiVersion: policy.linkerd.io/v1beta1\n    kind: Server\n    metadata:\n      namespace: appendix-linkerd\n      name: envoydummy\n      labels:\n        name: envoydummy\n    spec:\n      podSelector:\n        matchLabels:\n          name: envoydummy\n      port: envoydummy-http\n      proxyProtocol: HTTP/1\n    ```", "```\n% kubectl apply -f AppendixA/Linkerd/envoydummy-server.yaml\nserver.policy.linkerd.io/envoydummy created\n```", "```\n    apiVersion: policy.linkerd.io/v1alpha1\n    kind: AuthorizationPolicy\n    metadata:\n      name: authorise-curl\n      namespace: appendix-linkerd\n    spec:\n      targetRef:\n        group: policy.linkerd.io\n        kind: Server\n        name: envoydummy\n      requiredAuthenticationRefs:\n        - name: curl\n          kind: ServiceAccount\n    ```", "```\n    % kubectl apply -f AppendixA/Linkerd/authorize-curl-access-to-envoydummy.yaml\n    authorizationpolicy.policy.linkerd.io/authorise-curl created\n    ```", "```\n    % kubectl exec -it pod/curl -c curl -n appendix-linkerd – curl  http://envoydummy:80\n    V1----------Bootstrap Service Mesh Implementation with Istio----------V1\n    ```", "```\n    apiVersion: policy.linkerd.io/v1beta1\n    kind: HTTPRoute\n    metadata:\n      name: envoydummy-dummy-route\n      namespace: appendix-linkerd\n    spec:\n      parentRefs:\n        - name: envoydummy\n          kind: Server\n          group: policy.linkerd.io\n          namespace: appendix-linkerd\n      rules:\n        - matches:\n          - path:\n              value: \"/dummy/\"\n              type: \"PathPrefix\"\n            method: GET\n    ```", "```\n    apiVersion: policy.linkerd.io/v1alpha1\n    kind: AuthorizationPolicy\n    metadata:\n      name: authorise-curl\n      namespace: appendix-linkerd\n    spec:\n      targetRef:\n        group: policy.linkerd.io\n    HTTPRoute\n    envoydummy-dummy-route\n      requiredAuthenticationRefs:\n        - name: curl\n          kind: ServiceAccount\n    ```", "```\n\n```"]