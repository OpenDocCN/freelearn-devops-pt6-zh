- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bringing It All Together
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations on coming this far to the last chapter of the book! In all the
    previous chapters, we learned how different products inside the VMware Tanzu portfolio
    solve the challenges of modern application development, security, and operations
    with the outlined DevSecOps capabilities of Tanzu. This book was written to provide
    its readers with an introduction to the overall Tanzu capabilities so that they
    could appreciate what they could do with the whole set of products. VMware has
    done a great job with its vision for Tanzu to provide a one-stop shop for everything
    you need for your modern apps. As you can rightly imagine, there is a lot more
    in this portfolio that we did not cover in this book. Additionally, we just brushed
    the surface with regard to many of the products covered in this book. The idea
    was to provide enough details to understand the position of each product and help
    the reader play with them for learning purposes. This book could be the first
    stepping stone to begin a more in-depth learning journey for the products that
    are applicable to your real-life use cases.
  prefs: []
  type: TYPE_NORMAL
- en: As per the outline, we will cover a broader picture of Tanzu and its adoption
    options. We will also attempt to foresee the future of this ecosystem, so, let’s
    get started to get the book finished.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, to bring it all together, we’re going to cover the following
    main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu adoption options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu beyond this book
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The end-to-end picture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pros and cons of a single-vendor solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future of Kubernetes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is next for Tanzu?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu adoption options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At the time of writing, most of the products discussed in this book are standalone
    and can be consumed with à la carte pricing. However, VMware has bundled them
    together to provide a simplified and more cost-effective adoption experience.
    The following is the list of the bundles presently available that enterprises
    may choose from.
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu Standard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is the smallest commercially available Tanzu bundle to provide the minimal
    tools to deploy a multi-cloud Kubernetes platform. It mainly includes Tanzu Kubernetes
    Grid with essential capabilities of Tanzu Mission Control. Tanzu Standard also
    includes another flavor of Kubernetes offering that is specific to vSphere. Here,
    Kubernetes is integrated inside vSphere to make its adoption simpler for the virtual
    infrastructure admins to get a good understanding of the vSphere ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu Application Platform (TAP)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We covered this product bundle in depth in [*Chapter 8*](B18145_08.xhtml#_idTextAnchor150)*,
    Enhancing Developer Productivity with Tanzu Application Platform*. This bundle
    includes products that simplify the life of developers for building and deploying
    applications on a Kubernetes platform. As of writing this book, this product bundle
    is supported on Tanzu Kubernetes Grid, Amazon’s **Elastic Kubernetes Service**
    (**EKS**), **Azure Kubernetes Service** (**AKS**, and **Google Kubernetes Engine**
    (**GKE**) as a multi-cloud solution. While TAP includes several open source and
    individually available Tanzu products, the following list contains some of the
    major ones in this bundle:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tanzu Application Accelerator** – to define ready-to-use application templates
    with good defaults and required boilerplate code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tanzu Build Service** – to build application container images from the source
    code using the Cloud Native Buildpacks open source project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application Live View** – to monitor applications deployed to TAP for their
    software supply chain in progress and their metadata using Backstage, an open
    source project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Supply Chain Choreographer** – a tool based on an open source project named
    Cartographer, allowing you to define a preapproved path to production for applications
    based on the kind of application'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud Native Runtime** – a serverless container platform for Kubernetes based
    on an open-source project named Knative'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Figure 13**.1* shows the Application Accelerator module as a part of the broader
    TAP user interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.1 – Application templates from the TAP GUI](img/B18145_12_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.1 – Application templates from the TAP GUI
  prefs: []
  type: TYPE_NORMAL
- en: The next in the list is a bundle of products clubbed together for end-to-end
    Kubernetes operations – VMware Tanzu for Kubernetes Operations. Let’s take a look
    at it.
  prefs: []
  type: TYPE_NORMAL
- en: VMware Tanzu for Kubernetes Operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This product bundle is made for Kubernetes platform owners, giving them all
    the capabilities required to manage large Kubernetes foundations. It includes
    several products that we have covered in detail in this book already, as listed
    in the following points:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tanzu Kubernetes Grid** – the multi-cloud Kubernetes distribution'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tanzu Mission Control** – a single pane of glass to control and manage hundreds
    of Kubernetes clusters'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VMware Aria operations for Applications** – the full-stack observability
    tool providing visibility into infrastructure to applications deployed anywhere'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tanzu Service Mesh** – the cross-cluster networking tool for secure app-to-app
    traffic'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NSX Advanced Load Balancer** – the scalable and software-based application
    load balancer for ingress traffic control with the security features of a web
    application firewall'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Data Solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tanzu includes a set of data services that can be deployed on virtual machines,
    as Cloud Foundry-managed services, and as containers running on Kubernetes. This
    bundle includes enterprise-supported offerings of the following open source products:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GemFire** – a reliable distributed cache with reliable data storage based
    on the open source Apache Geode project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RabbitMQ** – a data queuing solution for asynchronous communication based
    on its open source distribution'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tanzu SQL** – including MySQL and PostgreSQL RDBMS database offerings based
    on their open source distributions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Greenplum** – a data analytics platform based on an open source PostgreSQL
    database'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have not covered this product set in the book, as it simply includes the
    open source products with minor changes and enterprise support.
  prefs: []
  type: TYPE_NORMAL
- en: VMware Spring Runtime
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We briefly covered this product offering in [*Chapter 2*](B18145_02.xhtml#_idTextAnchor033)*,
    Developing Cloud-Native Applications*. It includes commercial enterprise support
    for several open source application development frameworks, runtimes, and tools
    as listed in the following points:'
  prefs: []
  type: TYPE_NORMAL
- en: Several Spring Framework projects, including but not limited to Spring Boot,
    Spring Security, and many others
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Spring Cloud services:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spring API server
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration server
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Spring Cloud Kubernetes
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Spring Cloud Stream
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Spring Cloud Data Flow
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Open JDK – a flavor of Java runtime that is open source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Apache Tomcat server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to these Tanzu product bundles, there are other products that we
    have not covered in this book in detail. Let’s review them in the next section
    of the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu beyond this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The scope of this book was to cover those Tanzu products that play key roles
    in building, running, and managing modern containerized applications on top of
    Kubernetes platforms. However, the Tanzu ecosystem has a few more offerings that
    we have not covered so far, as listed in the following sub-sections.
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu Labs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tanzu Labs is a professional services wing under the Tanzu umbrella. It covers
    services that are outcome focused and consist of short-term engagements of typically
    6 to 12 weeks based on the scope of work. These services include consultation
    from highly trained architects and engineers in the respective area of work. Each
    engagement typically involves a combination of two full-time engineers or architects
    and one product manager. These professionals work with the customer’s team members
    following the practice of extreme programming. This way, the customer has the
    required, trained members to take ownership of the application or platform on
    which they are working without needing any more help after this short-term engagement.
    Tanzu Labs offers services in the following categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Building new apps** – an engagement to build a business-critical app from
    scratch to take the right first step'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Modernizing an existing app** – an engagement to modernize an existing legacy
    system to make it cloud-native, typically re-architecting it with modern tools,
    technologies, and platforms'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Building a platform** – an engagement to deploy a production-grade platform
    using multiple Tanzu products'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Transforming data** – an engagement around data service optimization, architecture,
    and deployment for the data products included in the Tanzu Data Services bundle'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Analyzing an application portfolio** – an engagement to analyze hundreds
    of applications in an organization to build a cloud migration plan for them to
    define one of the re-host, re-platform, relocate, re-architect, retain, and retire
    strategies for them'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tanzu Labs was also known as Pivotal Labs prior to the acquisition of Pivotal
    by VMware. This way, Tanzu Labs has a successful track record in providing these
    services for very large enterprises. Learn more about Tanzu Labs here: [https://tanzu.vmware.com/labs](https://tanzu.vmware.com/labs).'
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu Application Service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tanzu Application Service was formerly known as Pivotal Cloud Foundry, a commercially
    supported version of the open source Cloud Foundry platform. Like Kubernetes,
    Cloud Foundry is also a cloud-agnostic container platform that provides much-enhanced
    developer productivity. With just a small command, `cf push`, we can deploy a
    cloud-native application from a source to a container without any custom automation.
    Pivotal Cloud Foundry, and hence Tanzu Application Service, is a battle-tested
    technology that runs over a million containers, hosting mission-critical applications
    across the globe. The rise and popularity of Kubernetes overshadowed this technology
    but otherwise, it is a very mature and reliable container platform suitable for
    enterprises of any size and scale. Learn more about Tanzu Application Service
    here: [https://tanzu.vmware.com/application-service](https://tanzu.vmware.com/application-service).'
  prefs: []
  type: TYPE_NORMAL
- en: Azure Spring Apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In partnership, Microsoft and VMware launched a microservice platform on Azure
    that is powered by the Spring Framework, Tanzu, and AKS. It also supports the
    deployment of .NET Core and applications developed in other languages. Under the
    hood, this offering uses TAP capabilities (which we learned about in [*Chapter
    8*](B18145_08.xhtml#_idTextAnchor150)*, Enhancing Developer Productivity with
    Tanzu Application Platform*) on top of AKS. It provides Azure native customers
    with a familiar user interface to deploy their cloud-native applications using
    Tanzu’s developer productivity and Azure’s scalable infrastructure. Learn more
    about Azure Spring Apps here: [https://tanzu.vmware.com/azure-spring-apps](https://tanzu.vmware.com/azure-spring-apps).'
  prefs: []
  type: TYPE_NORMAL
- en: Concourse
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Concourse is a commercially supported but very mature, open source, and lightweight
    **continuous integration/continuous deployment** (**CI/CD**) automation platform
    under the Tanzu umbrella. With its horizontally scalable design and ability to
    run its workers in parallel as containers, it is used in very large CI/CD automation
    platforms in some big enterprises. *Figure 13**.2* shows one such complex pipeline
    on Concourse’s web console. This platform is fully driven by YAML-based declarative
    configuration, adhering to the GitOps model and monitored using its sleek web-based
    UI to check the configured pipeline status. Learn more about Concourse here: [https://tanzu.vmware.com/concourse](https://tanzu.vmware.com/concourse).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.2 – A complex Concourse pipeline](img/B18145_12_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.2 – A complex Concourse pipeline
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 13**.2* shows a complex CI/CD pipeline deployed on Concourse. The texts
    of the labels and different pipeline stages are not readable, as the idea here
    is to show how a complex pipeline would look on the Concourse GUI. The black labels
    on the left-hand side of a box show inputs of data and configuration to the corresponding
    pipeline tasks. The similar labels on the right show the output of the corresponding
    tasks, which can be input for the next task(s). The columns of boxes show different
    stages executed in the sequence from left to right. The boxes stacked in the same
    column show the tasks that could be executed in parallel in the same stage. A
    red box shows an unsuccessful task. A box with a yellow border shows the task
    currently being executed. The green boxes show either completed or pending tasks
    in reference to the current task being executed.'
  prefs: []
  type: TYPE_NORMAL
- en: With this, we covered some level of detail for all the offerings in the Tanzu
    portfolio. And now, let’s make more sense of that by covering an end-to-end picture
    involving most of the offerings of Tanzu.
  prefs: []
  type: TYPE_NORMAL
- en: The end-to-end picture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have covered over 20 different products in the Tanzu portfolio in various
    levels of detail in this book so far. Now is the time to club some of them together
    on a single page to understand how they work in tandem to provide a production-grade
    ecosystem for your applications with different levels of needs. *Figure 13**.3*
    shows the key products in the Tanzu portfolio that work together to provide a
    comprehensive Kubernetes platform that helps implement required DevSecOps practices
    around modern applications:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.3 – The end-to-end picture of Tanzu](img/B18145_12_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.3 – The end-to-end picture of Tanzu
  prefs: []
  type: TYPE_NORMAL
- en: 'The following points describe *Figure 13**.3*:'
  prefs: []
  type: TYPE_NORMAL
- en: 'An application could use the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Spring Runtime for OpenJDK, Tomcat, and the Spring Framework as required
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Data Services for required backend data storage
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Application Catalog for any open source software requirement
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: An application could be hosted on TAP, which uses several components internally
    to pave the application’s path to production
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TAP could use Harbor as a container image repository to place application-built
    images from Tanzu Build Service and use those images to deploy the containers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TAP could be deployed on one of the four Kubernetes distributions including
    the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Kubernetes Grid – deployed on vSphere for on-premises deployment and AWS
    or Azure for a public cloud deployment
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**EKS**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AKS**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GKE**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Service Mesh could connect required Kubernetes clusters for secure app-to-app
    traffic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Mission Control could manage the entire Kubernetes footprint for various
    types of policy control, life cycle management, backup/restore, and compliance
    audits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Aria operations for Applications could collect telemetry data from all
    the sources to provide end-to-end visibility of the health of all the monitored
    components at a central location
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition to this deployment option, there are also other possible ways to
    deploy an application in containers using relevant Tanzu products. One of them
    is to use the custom CI/CD tools instead of TAP and deploy the containers in the
    Kubernetes clusters deployed by Tanzu Kubernetes Grid. The relevance of all other
    products would remain the same. Additionally, the custom CI/CD flow could be deployed
    using Concourse.
  prefs: []
  type: TYPE_NORMAL
- en: After understanding the big summarized picture, let’s now understand what it
    means to get everything from a single vendor such as VMware in this case.
  prefs: []
  type: TYPE_NORMAL
- en: Pros and cons of a single-vendor solution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using an end-to-end solution such as Tanzu or a single public cloud has many
    advantages but also some disadvantages. An enterprise should consider these points
    carefully and create a technology platform adoption plan accordingly. The following
    points outline the pros and cons of using a single-vendor solution containing
    multiple products.
  prefs: []
  type: TYPE_NORMAL
- en: Pros
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is a big shift in the field of software to use open source technologies
    to avoid vendor lock-ins and gain the benefits of community collaboration. However,
    picking the right open source technology that is mature and supported is often
    a challenging and time-consuming process. That’s where a comprehensive technology
    platform such as Tanzu could be a big help, as it uses many cherry-picked, open
    source tools under the hood. This will save considerable effort for an enterprise,
    along with giving it the confidence to use open source technologies heavily.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When an enterprise picks different software solutions from different vendors
    or the open source community, it can be difficult to make those tools work together
    as intended. It is possible that nobody has ever tried and tested them in a single
    solution and that we will get unpleasant surprises as we move forward. Even if
    we make them work together at a certain point, there is no surety that upcoming
    versions of those tools from heterogeneous sources will keep working in harmony.
    That’s where an end-to-end solution such as Tanzu could be helpful, as all the
    products in the portfolio are designed and ensured to work together. Otherwise,
    there will be no clarity on which version of one product is compatible with one
    version of another product.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A large enterprise committing to buy multiple products from a single vendor
    could potentially get huge discounts on the license cost versus using different
    products from different vendors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In case of a big production outage, it would be helpful for an enterprise to
    have products from a single vendor in the solution rather than multiple vendors,
    or purely community-supported open source products. Having products from one vendor
    ensures required accountability without any questions of potential product compatibility
    issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using a platform such as Tanzu could result in operational efficiency gain,
    as there is a similar user experience while working on different tools. Common
    toolsets and user interfaces speed up the learning curve and the automation efforts
    around the platform. Eventually, this results in the agility and speed of modernization
    efforts in organizations using single-vendor solutions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An enterprise using multiple vendors for different products that are based on
    open source technologies could keep itself from heavily relying on one vendor
    for its success. A single-vendor solution could result in potential vendor lock-ins
    if the vendor does not use open source tools that are also supported by other
    vendors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Having all the products from a single vendor is like putting all eggs in one
    basket. If the basket is dropped, all the eggs will break. To avoid this situation,
    using more than one platform with the ability to move the applications around
    could be a useful mitigation strategy.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Having an end-to-end solution could possibly mean having a set of products that
    lacks some capabilities available in similar products from different vendors.
    It is possible that an enterprise may need to weigh its choices based on the need-to-have
    capabilities rather than good-to-have ones. Every software vendor has a few shinier
    and more mature products than others, so having multiple products from the same
    vendor could mean missing out on some of the great alternatives available on the
    market for a subset of the products in the portfolio.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In software solution architecture, there is no silver bullet for any problem.
    Decisions are taken based on what is more important for an enterprise, considering
    the benefits of one approach, and how the risks are planned to be addressed for
    the drawback of the same approach. Using an end-to-end platform such as Tanzu
    is no different in this case.
  prefs: []
  type: TYPE_NORMAL
- en: The future of Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While nobody can predict the future for sure, we can forecast a few things about
    Kubernetes based on the present technology adoption data and the pipeline work
    in progress in this ecosystem. As we learned in [*Chapter 7*](B18145_07.xhtml#_idTextAnchor131)*,
    Orchestrating Containers across Clouds with Tanzu Kubernetes Grid,* in relation
    to Tanzu Kubernetes Grid, the adoption of Kubernetes has reached unprecedented
    heights in the last 2 years. It has become home to most newly developed and many
    legacy applications. It is the new middleware that abstracts the underlying infrastructure,
    providing true application portability that was not available before the emergence
    of the containerization of applications. Containerization changed the way we architect
    and think about software development. This containerization technology spanned
    various platforms in the past few years, including Docker Swarm, Mesosphere, AWS
    Elastic Container Service, Cloud Foundry, and Kubernetes. While all of them are
    mature and reliable technologies, Kubernetes is undoubtedly the most popular choice
    in this space. With the rise of running software as containers, most software
    vendors package their products as container images that can run on Kubernetes.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, this is all a present-case scenario. Considering how things are moving
    today, we can attempt to predict Kubernetes’ tomorrow as outlined in the following
    points:'
  prefs: []
  type: TYPE_NORMAL
- en: As the layer of virtual infrastructure has become the new default infrastructure
    bottom for most applications, Kubernetes may take its place and become the default
    infrastructure layer for applications going forward. In a way, Kubernetes could
    become ubiquitous.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the age of microservices and the **Internet of Things** (**IoT**), applications
    have become very small and suitable for running in containers. At the same time,
    deploying them closer to the point of usage is deemed more optimal. With the spur
    of applications needing to run at edge locations such as stores, cellphone towers,
    ships, airplanes, homes, and branch offices, we would see the use cases of Kubernetes
    deployments at the edge increasing in the future. This will require capabilities
    such as Tanzu Kubernetes Grid for on-premises deployment, Tanzu Mission Control
    to centrally manage hundreds of clusters, and VMware Aria operations for Applications
    to monitor those clusters, running apps on them and the underlying infrastructure
    centrally.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the increasing use of Kubernetes, aspects such as TAP would become mainstream
    tools for hiding Kubernetes clusters as below-value-line concerns. Soon, Kubernetes
    cluster management would be considered as an overhead. Developers would be spending
    lesser time writing Kubernetes-specific configurations to deploy their apps on
    Kubernetes clusters and spending more time enriching the application functionality.
    As developers do not think of any server’s operating system-specific details before
    deploying their apps, they would similarly also stop thinking about the Kubernetes
    layer in near future.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before the emergence of public cloud platforms about a decade back, virtual
    servers were being treated as pets having names, receiving love and care, and
    having a long life. However, the API-based cloud infrastructure-as-code has made
    it so easy and required to create new servers in minutes that virtual servers
    are like cattle. The same is the case with Kubernetes clusters, which are considered
    pets today. With the need for more clusters, they may also be treated like cattle
    down the line.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With its ever-growing popularity and the collaboration of its vibrant community,
    we may see a lot of new capabilities added to Kubernetes in the future, solving
    many open problems around it that we need to leverage external tools to solve
    today.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kubernetes is here to stay for a long time but the way we care about it today
    could change tomorrow – and it should change because no business gets more revenue
    simply on the basis of running a healthy Kubernetes cluster. Kubernetes is just
    a layer of infrastructure enabling our revenue-generating apps to thrive.
  prefs: []
  type: TYPE_NORMAL
- en: What is next for Tanzu?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VMware created a new modern applications business unit in 2020 by clubbing the
    relevant products built internally and acquired from Pivotal, Bitnami, Heptio,
    and Wavefront. It is a well-thought-out portfolio covering most of the major areas
    of building, running, and managing modern apps in multi-cloud environments. All
    the products in this portfolio have good long roadmaps to add more capabilities
    and support for different cloud infrastructure providers. However, with the recent
    announcement of Broadcom Inc acquiring VMware, there are changes expected in how
    these products are grouped, along with other VMware and Broadcom’s existing products.
    More details will unfold in the future post-acquisition. In any case, we believe
    that the value these products bring to the table would not change even if their
    packaging or names changed in the future, so we also hope that the knowledge gained
    in this book will help its readers nevertheless.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Anything mentioned in the following list is a forward-looking statement predicting
    the future product roadmap. It is possible that some or all the listed items could
    be dropped from the roadmap without notice.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following list includes some of the existing work streams for different
    Tanzu products:'
  prefs: []
  type: TYPE_NORMAL
- en: Tanzu Mission Control and Tanzu Service Mesh could have an on-premises deployment
    variant in addition to the existing cloud-based **software-as-a-service** (**SaaS**)
    deployments to serve air-gapped deployments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Mission Control could have more capabilities to install and configure
    third-party software on the Kubernetes clusters under its management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware Aria operations for Applications could also have a log aggregation capability,
    along with metrics, histograms, and span logs, to have everything in one place
    as far as full-stack observability is concerned
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tanzu Kubernetes Grid and TAP could support more underlying cloud platforms,
    including OpenShift, Google Cloud Platform, and Oracle Cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Application Live View component of TAP could support custom modules developed
    by Tanzu customers as the plugins for the underlying open source Backstage project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s wrap up this chapter with a quick summary.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To conclude this book, we covered different commercial bundles available today
    in the market that club together different products in this book. We also learned
    about other products and bundles available under the Tanzu umbrella, including
    Tanzu Data for different types of backend data store requirements, Azure Spring
    Runtime to best utilize Azure cloud for Spring applications, and Tanzu Application
    Service, which is a commercial offering of Cloud Foundry and Concourse – a lightweight
    CI/CD automation tool. We also learned about the end-to-end deployment picture
    of Tanzu deployment using key products we covered in this book. We also learned
    what it means to embrace multiple products from a single vendor. While there are
    some drawbacks to picking a one-stop shop for many of your needs, there are also
    considerable benefits to doing so. Finally, we predicted the future of Kubernetes
    and Tanzu based on their current conditions.
  prefs: []
  type: TYPE_NORMAL
- en: With this, we conclude this book. Thank you for your learning journey with us
    so far! We hope that you learned about the Tanzu portfolio as per your expectations.
    As was said previously in the book, we have just scratched the surface. For more
    learning resources, refer to the *Appendix* section of the book.
  prefs: []
  type: TYPE_NORMAL
- en: Appendix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we have included additional learning resources around Tanzu
    and the references to create a Kubernetes cluster for the hands-on work required
    in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Additional learning resources from VMware
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are some good learning references to further explore Tanzu:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The official VMware Tanzu product documentation: [https://docs.vmware.com/allproducts.html#section](https://docs.vmware.com/allproducts.html#section)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'VMware provided on-demand training courses for developers and operators: [https://tanzu.vmware.com/education](https://tanzu.vmware.com/education)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hands-on workshops for Tanzu: [https://tanzu.vmware.com/developer/workshops/](https://tanzu.vmware.com/developer/workshops/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hands-on labs and courses related to Tanzu and building modern apps: [https://modernapps.ninja/](https://modernapps.ninja/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kubernetes courses: [https://kube.academy/](https://kube.academy/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tanzu channel on YouTube: [https://www.youtube.com/c/VMwareTanzu](https://www.youtube.com/c/VMwareTanzu)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Different ways to create a Kubernetes cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most of the chapters in the book list having a Kubernetes cluster as one of
    the prerequisites to follow the instructions in each chapter. While we have learned
    about three different approaches to creating Tanzu clusters in this book as referenced
    in the following points, there are also various other ways to get your Kubernetes
    cluster up and running with minimal effort. This section lists some of the many
    ways to create a Kubernetes cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Creating Tanzu Kubernetes Grid clusters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following list include ways to create Tanzu Kubernetes Grid clusters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tanzu Kubernetes Grid**: In [*Chapter 7*](B18145_07.xhtml#_idTextAnchor131)*,
    Orchestrating Containers across Clouds with Tanzu Kubernetes Grid*, we described
    how you can use Tanzu Kubernetes Grid to create a managed enterprise-ready Kubernetes
    cluster.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tanzu Mission Control**: Tanzu Mission Control makes it very simple and straightforward
    to create a Kubernetes cluster. We covered it in detail in *Chapter 9**, Managing
    and Controlling Kubernetes Clusters with Tanzu* *Mission Control*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**vSphere with Tanzu**: If you’re an existing vSphere cluster, you may have
    the ability to create clusters with a **Supervisor Cluster** already built into
    your virtual infrastructure. You can learn more here: [https://docs.vmware.com/en/VMware-vSphere/7.0/vmware-vsphere-with-tanzu/GUID-3B2102E6-D9AA-4FE6-B3AA-60B450BE8491.html](https://docs.vmware.com/en/VMware-vSphere/7.0/vmware-vsphere-with-tanzu/GUID-3B2102E6-D9AA-4FE6-B3AA-60B450BE8491.html).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating non-Tanzu Kubernetes clusters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following list include ways to create non-Tanzu Kubernetes clusters on
    public clouds, local desktop environment, and on the OpenShift platform:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating a local Kubernetes cluster using Docker Desktop: [https://docs.docker.com/desktop/kubernetes/](https://docs.docker.com/desktop/kubernetes/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating a local Minikube cluster: [https://minikube.sigs.k8s.io/docs/start/](https://minikube.sigs.k8s.io/docs/start/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating an AWS **Elastic Kubernetes Service** (**EKS**) cluster: [https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating a **Google Kubernetes Engine** (**GKE**) cluster: [https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating an **Azure Kubernetes Service** (**AKS**) cluster: [https://docs.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-portal?tabs=azure-cli](https://docs.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-portal?tabs=azure-cli)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating a Red Hat OpenShift cluster on IBM Cloud: [https://cloud.ibm.com/docs/openshift?topic=openshift-clusters&interface=ui](https://cloud.ibm.com/docs/openshift?topic=openshift-clusters&interface=ui)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
