["```\n $ export AWS_ACCESS_KEY_ID=XXXXXXXXX\n$ export AWS_SECRET_ACCESS_KEY=xxxxxxxxxx\n$ export AWS_DEFAULT_REGION=<st c=\"24521\">us-east-1</st>. We recommend that you run all the following examples in this region. If you are using a different region, some parameters, such as the <st c=\"24667\">Amazon Machine Image</st> (<st c=\"24689\">AMI</st>), require modifications.\n\t\t\t<st c=\"24718\">Try the following command; it returns your running instances.</st> <st c=\"24781\">If you donâ€™t have any, it will</st> <st c=\"24812\">be empty:</st>\n\n```", "```\n\n\t\t\t<st c=\"24850\">To create the simplest possible instance, run the following command.</st> <st c=\"24920\">This command creates an EC2 of the smallest instance type,</st> `<st c=\"24979\">t2.micro</st>`<st c=\"24987\">, using that AMI ID, which effectively means Amazon Linux 2023\\.</st> <st c=\"25051\">There will be more on AMIs in</st> [*<st c=\"25081\">Chapter 3</st>*](B22051_03.xhtml#_idTextAnchor054)<st c=\"25090\">:</st>\n\n```", "```\n\n\t\t\t<st c=\"25174\">Your command output should be similar to the following.</st> <st c=\"25231\">Bear in mind that part of the output was</st> <st c=\"25272\">omitted, but check whether your</st> `<st c=\"25304\">ImageId</st>` <st c=\"25311\">and</st> `<st c=\"25316\">InstanceType</st>` <st c=\"25328\">match:</st>\n\n```", "```\n\n\t\t\t<st c=\"25733\">If you run the previous</st> `<st c=\"25758\">describe</st>` <st c=\"25766\">command again, this time, the output will show your running instance.</st> <st c=\"25837\">Try it with the following filter, which only shows</st> `<st c=\"25888\">t2.micro</st>`<st c=\"25896\">-sized instances:</st>\n\n```", "```\n\n\t\t\t<st c=\"26065\">To terminate the instance, run the following command.</st> <st c=\"26120\">Replace the instance ID with</st> <st c=\"26149\">your own:</st>\n\n```", "```\n $ aws <command> <subcommand> [options and parameters]\n```", "```\n $ aws ec2 help\n$ aws ec2 describe-instances help\n```", "```\n     Resources:\n      NewEC2Instance:\n        Type: AWS::EC2::Instance\n        Properties:\n          ImageId: \"ami-0c101f26f147fa7fd\"\n          InstanceType: \"t2.micro\"\n    ```", "```\n     provider \"aws\"{\n        region = \"us-east-1\"\n    }\n    resource \"aws_instance\" \"ec2\" {\n      ami           = \"ami-0c101f26f147fa7fd\"\n      instance_type = \"t2.micro\"\n    }\n    ```", "```\n     $ terraform init\n    $ terraform apply\n    ```", "```\n    Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n      + create\n    Terraform will perform the following actions:\n      # aws_instance.ec2 will be created\n      + resource \"aws_instance\" \"ec2\" {\n     <st c=\"35964\">+ ami                            = \"ami-0c101f26f147fa7fd\"</st>\n     <st c=\"35995\">+ instance_type                  = \"t2.micro</st>\"\n          ###OUTPUT OMMITED###\n          + root_block_device {\n              + delete_on_termination = (known after apply)\n              + device_name           = (known after apply)\n              + encrypted             = (known after apply)\n              + iops                  = (known after apply)\n              + kms_key_id            = (known after apply)\n              + tags                  = (known after apply)\n              + tags_all              = (known after apply)\n              + throughput            = (known after apply)\n              + volume_id             = (known after apply)\n              + volume_size           = (known after apply)\n              + volume_type           = (known after apply)\n            }\n        }\n    Plan: 1 to add, 0 to change, 0 to destroy. Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve.\n     <st c=\"36629\">Enter a value: yes</st> aws_instance.ec2: Creating... aws_instance.ec2: Still creating... [10s elapsed]\n    aws_instance.ec2: Still creating... [20s elapsed]\n    aws_instance.ec2: Still creating... [30s elapsed]\n    aws_instance.ec2: Creation complete after 34s [id=i-0de732fda772c16cf] <st c=\"36899\">Apply complete!</st> <st c=\"36915\">Resources: 1 added, 0 changed, 0 destroyed.</st>\n    ```", "```\n     $ terraform destroy\n    ```", "```\n provider \"aws\"{\n    region = \"us-east-1\"\n}\nresource \"aws_instance\" \"ec2\" {\n  ami           = \"ami-0c101f26f147fa7fd\"\n  instance_type = \"t2.micro\" <st c=\"37745\">count         = 100</st> }\n```", "```\n\n```"]