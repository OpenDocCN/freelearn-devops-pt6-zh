["```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: kcna\n  name: pod-reader\nrules:\n- apiGroups: [\"\"] # \"\" indicates the core API group\n  resources: [\"pods\"]\n  verbs: [\"get\", \"watch\", \"list\"] # the actions allowed on resources\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-pods\n  namespace: kcna\nsubjects:\n# subjects can be multiple users, groups or service accounts\n- kind: User\n  name: jack # name is case sensitive\n  apiGroup: rbac.authorization.k8s.io # the standard API group for all RBAC resources\nroleRef:\n  # roleRef specifies the binding to a Role or ClusterRole\n  kind: Role # either a Role or ClusterRole\n  name: pod-reader # name of the Role or ClusterRole to bind to\n  apiGroup: rbac.authorization.k8s.io\n```", "```\n$ minikube kubectl -- create -f role.yaml -n kcna\nrole.rbac.authorization.k8s.io/pod-reader created\n$ minikube kubectl -- create -f rolebinding.yaml -n kcna\nrolebinding.rbac.authorization.k8s.io/read-pods created\n```", "```\n$ minikube kubectl -- auth can-i get pods --as=jack\nno\n```", "```\n$ minikube kubectl -- auth can-i get pods -n kcna --as=jack\nyes\n```", "```\n$ minikube kubectl -- auth can-i create pods -n kcna --as=jack\nno\n$ minikube kubectl -- auth can-i delete pods -n kcna --as=jack\nno\n```"]