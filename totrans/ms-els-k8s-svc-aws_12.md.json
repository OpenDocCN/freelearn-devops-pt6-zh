["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: empty-dir-example\nspec:\n  volumes:\n  - name: shared-data\n    emptyDir: {}\n  containers:\n  - name: nginx-container\n    image: nginx\n    volumeMounts:\n    - name: shared-data\n      mountPath: /usr/share/nginx/html\n  - name: debian-container\n    image: debian\n    volumeMounts:\n    - name: shared-data\n      mountPath: /pod-data\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"echo Hello from Debian > /pod-data/index.html\"]\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: host-path-example\nspec:\n  containers:\n  - image: nginx\n    name: test\n    volumeMounts:\n    - mountPath: /usr/share/nginx/html\n      name: shared-data\n  volumes:\n  - name: shared-data\n    hostPath:\n            path: /data\n```", "```\n    $ eksctl create iamserviceaccount  --name ebs-csi-controller-sa --namespace kube-system --cluster myipv4cluster   --override-existing-serviceaccounts --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy  --approve --role-name AmazonEKS_EBS_CSI_DriverRole --role-only\n    ```", "```\n    $ eksctl create addon --name aws-ebs-csi-driver --cluster myipv4cluster  --service-account-role-arn arn:aws:iam::11223344:role/AmazonEKS_EBS_CSI_DriverRole  --force\n    2022-09-22 19:59:19 []  Kubernetes version \"1.20\" in use by cluster \"myipv4cluster\"\n    ………\n    2022-09-22 20:00:28 []  addon \"aws-ebs-csi-driver\" active\n    ```", "```\n    $ kubectl get pods -n kube-system | grep ebs\n    ebs-csi-controller-2233-p75xg   6/6     Running   1\n    ebs-csi-controller-3444-rb9zg   6/6     Running   0\n    ebs-csi-node-94pgc              3/3     Running   0\n    ebs-csi-node-mwdqc              3/3     Running   0\n    ebs-csi-node-t9h77              3/3     Running   0\n    $ kubectl logs deployment/ebs-csi-controller -n kube-system -c csi-provisioner\n    ………\n    I0922 19:59:53.169651       1 leaderelection.go:258] successfully acquired lease kube-system/ebs-csi-aws-com\n    ………\n    ```", "```\n    $ curl -o iam-policy-example.json https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/docs/iam-policy-example.json\n    $ aws iam create-policy --policy-name AmazonEKS_EFS_CSI_Driver_Policy --policy-document file://iam-policy-example.json\n    ```", "```\n    $ eksctl create iamserviceaccount  --cluster myipv4cluster     --namespace kube-system  --name efs-csi-controller-sa --attach-policy-arn arn:aws:iam::11223344:policy/AmazonEKS_EFS_CSI_Driver_Policy     --approve  --region eu-central-1\n    2022-09-22 20:32:29 []  3 existing iamserviceaccount(s) (kube-system/ebs-csi-controller-sa,kube-system/eni-allocator,kube-system/multus) will be exclude\n    ………\n    022-09-22 20:32:59 []  created serviceaccount \"kube-system/efs-csi-controller-sa\"\n    $ kubectl describe sa efs-csi-controller-sa -n kube-system\n    Name:                efs-csi-controller-sa\n    ……\n    Annotations:         eks.amazonaws.com/role-arn: arn:aws:iam::076637564853:role/eksctl-myipv4cluster-addon-iamserviceaccount-Role1-P08589EN3NY7\n    …..\n    ```", "```\n$ helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/\n$ helm repo update\n$ helm search repo aws-efs-csi-driver\nNAME CHART VERSION   APP VERSION     DESCRIPTION\naws-efs-csi-driver/aws-efs-csi-driver   2.2.7 1.4.0 A Helm chart for AWS EFS CSI Driver\n$ helm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver --namespace kube-system --set image.repository=602401143452.dkr.ecr.eu-central-1.amazonaws.com/eks/aws-efs-csi-driver --set controller.serviceAccount.create=false --set controller.serviceAccount.name=efs-csi-controller-sa\n$ kubectl get pod -n kube-system -l \"app.kubernetes.io/name=aws-efs-csi-driver,app.kubernetes.io/instance=aws-efs-csi-driver\"\nNAME                 READY   STATUS    RESTARTS   AGE\nefs-csi-controller-122-hrzfg          3/3     Running   0\nefs-csi-controller-1234-q8wpt         3/3     Running   0\nefs-csi-node-2g46k                    3/3     Running   0\nefs-csi-node-59rsx                    3/3     Running   0\nefs-csi-node-ncsk8                    3/3     Running   0\n$ kubectl logs deployment/efs-csi-controller -n kube-system -c csi-provisioner\n………\nI0922 20:51:53.306805       1 leaderelection.go:253] successfully acquired lease kube-system/efs-csi-aws-com\n……\n```", "```\n$ kubectl get storageclass\nNAME  PROVISIONER  RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\ngp2 (default)   kubernetes.io/aws-ebs   Delete          WaitForFirstConsumer   false                  50d\n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gp3\nprovisioner: ebs.csi.aws.com # Amazon EBS CSI driver\nparameters:\n  type: gp3\n  encrypted: 'true'\nvolumeBindingMode: WaitForFirstConsumer\nreclaimPolicy: Delete\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ebs-claim\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: gp3\n  resources:\n    requests:\n      storage: 4Gi\n```", "```\n$ kubectl create -f ebs-pvc.yaml\npersistentvolumeclaim/ebs-claim created\n$ kubectl get pvc\nNAME STATUS VOLUME CAPACITYACCESS MODES STORAGECLASS   AGE\nebs-claim   Pending          gp3            10s\n$ kubectl get pv\nNo resources found\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: app\nspec:\n  containers:\n  - name: app\n    image: debian\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"while true; do echo $(date -u) >> /data/out.txt; sleep 5; done\"]\n    volumeMounts:\n    - name: persistent-storage\n      mountPath: /data\n  volumes:\n  - name: persistent-storage\n    persistentVolumeClaim:\n      claimName: ebs-claim\n```", "```\n$ kubectl create -f ebs-pod.yaml\npod/app created\n$ kubectl get pvc\nNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE\nebs-claim   Bound    pvc-18661cce-cda5-4779-86b4-21cb76a5ecc0   4Gi        RWO            gp3            30m\n$ kubectl get pv\nNAME CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM\npvc-1 4Gi RWO Delete  Bound    default/ebs-claim   gp3     17s\n```", "```\n$ kubectl describe pv pvc-1\nName:              pvc-1\nLabels:            <none>\n…\nStorageClass:      gp3\nStatus:            Bound\nClaim:             default/ebs-claim\nReclaim Policy:    Delete\nAccess Modes:      RWO\nVolumeMode:        Filesystem\nCapacity:          4Gi\nNode Affinity:\n  Required Terms:\n    Term 0: topology.ebs.csi.aws.com/zone in [eu-central-1b]\nMessage:\nSource:\n    Type:  CSI ( (CSI) volume source)\n    Driver:            ebs.csi.aws.com\n    FSType:            ext4\n    VolumeHandle:      vol-00f7c5d865ef5c14f\n    ReadOnly:          false\n    …\n```", "```\n$ aws efs create-file-system --region eu-central-1  --performance-mode generalPurpose --query 'FileSystemId' --output text\nfs-078166286587fc22\n```", "```\n$ aws ec2 describe-subnets  --filters \"Name=vpc-id,Values=vpc-123\" --query 'Subnets[*].{SubnetId: SubnetId,AvailabilityZone: AvailabilityZone,CidrBlock: CidrBlock}'  --output table\n+------------------+--------------------+-----------------+\n| AvailabilityZone |     CidrBlock      |   SubnetId         |\n+------------------+--------------------+-----------------+\n|  eu-central-1a   |  192.168.96.0/19   |  subnet-1  |\n|  eu-central-1b   |  192.168.32.0/19   |  subnet-2  |\n|  eu-central-1a   |  192.168.0.0/19    |  subnet-3  |\n|  eu-central-1c   |  192.168.160.0/19  |  subnet-4  |\n|  eu-central-1c   |  192.168.64.0/19   |  subnet-5  |\n+------------------+--------------------+-----------------+\n$ aws ec2 describe-instances --filters \"Name=tag:aws:eks:cluster-name,Values=myipv4cluster\"   --query \"Reservations[*].Instances[*].{Instance:InstanceId,Subnet:SubnetId,PrivateIP:PrivateIpAddress}\"  --output table\n+---------------------+------------------+----------------+\n|      Instance       |    PrivateIP     |          Subnet   |\n+---------------------+------------------+-------- -------+\n|  i-01437f1b219217d8a|  192.168.12.212  |  subnet-3  |\n|  i-0f74d4d5b7e5dc146|  192.168.70.114  |  subnet-5  |\n|  i-04c48cc4d2ac11ca6|  192.168.63.61   |  subnet-2  |\n+---------------------+------------------+----------------+\n```", "```\n$ aws ec2 describe-instances --filters \"Name=tag:aws:eks:cluster-name,Values=myipv4cluster\"    --query \"Reservations[*].Instances[*].SecurityGroups[*]\"  --output table\n|GroupId  |                GroupName                 |\n+-----------------------+--------------------------------+\n|  sg-123 |  eks-cluster-sg-myipv4cluster-940370103  |\n|  sg-123 |  eks-cluster-sg-myipv4cluster-940370103  |\n|  sg-123 |  eks-cluster-sg-myipv4cluster-940370103  |\n+-----------------------+---------------------------------+\n```", "```\n$ aws efs create-mount-target --file-system-id fs-078166286587fc22--security-groups sg-123 --subnet-id subnet-3\n<repeat for remaining subnets>\n$ aws efs describe-mount-targets --file-system-id fs-078166286587fc22 --query \"MountTargets[*].{id:MountTargetId,az:AvailabilityZoneName,subnet:SubnetId,EFSIP:IpAddress}\" --output\n+----------------+----------------+-----------+-----------+\n| EFSIP          |      az        |     id    | subnet     |\n+----------------+----------------+-----------------------+\n|  192.168.10.59 |  eu-central-1a |  fsmt-22  |  subnet-3  |\n|  192.168.66.201|  eu-central-1c |  fsmt-33  |  subnet-4  |\n|  192.168.34.140|  eu-central-1b |  fsmt-44  |  subnet-5  |\n+----------------+----------------+-----------+-----------+\n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-sc\nprovisioner: efs.csi.aws.com\nparameters:\n  provisioningMode: efs-ap\n  fileSystemId: fs-078166286587fc22\n  directoryPerms: \"700\"\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: efs-claim\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: efs-sc\n  resources:\n    requests:\n      storage: 5Gi\n```", "```\n$ kubectl get pvc\nNAME STATUS VOLUME CAPACITY ACCESS MODES   STORAGECLASS   AGE\nebs-claim Bound  pvc-1   4Gi    RWO     gp3            14h\nefs-claim Bound  pvc-2   5Gi   RWX      efs-sc         4s\n$kubectl get pv\nNAME CAPACITY ACCESS MODES RECLAIM STATUS CLAIM SC REASON AGE\npvc-1 4Gi RWO Delete Bound default/ebs-claim gp3 16h\npvc-2 5Gi RWX Delete Bound default/efs-claim efs-sc  2m1s\n```", "```\n$ kubectl logs efs-csi-controller-xx -n kube-system  -c csi-provisioner   --tail 10\n………\nI1005 10:55:45.301869   1 event.go:282] Event (v1.ObjectReference {Kind:\"PersistentVolumeClaim\", Namespace:\"default\", Name:\"efs-claim\", UID:\"323\", APIVersion:\"v1\", ResourceVersion:\"15905560\", FieldPath:\"\"}): type: 'Normal' reason: 'Provisioning' External provisioner is provisioning volume for claim \"default/efs-claim\"\nI1005 10:55:46.515609       1 controller.go:838] successfully created PV pvc-2 for PVC efs-claim and csi volume name fs-078166286587fc22::fsap-013a6156108263624\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: efs-app\nspec:\n  containers:\n    - name: app\n      image: centos\n      command: [\"/bin/sh\"]\n      args: [\"-c\", \"while true; do echo $(date -u) >> /data/out; sleep 5; done\"]\n      volumeMounts:\n        - name: persistent-storage\n          mountPath: /data\n  volumes:\n    - name: persistent-storage\n      persistentVolumeClaim:\n        claimName: efs-claim\n```", "```\n$ kubectl exec -it efs-app -- tail /data/out\nWed Oct 5 20:56:03 UTC 2022\nWed Oct 5 20:56:08 UTC 2022\n```"]