["```\n# mysql-statefulset.yaml\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mysql-stateful\n  labels:\n    app: mysql\n  namespace: mysql\nspec:\n  serviceName: mysql-headless\n  replicas: 3\n  selector:\n    matchLabels:\n      app: mysql\n      environment: test\n# (to be continued in the next paragraph) \n```", "```\n# (continued)\n  template:\n    metadata:\n      labels:\n        app: mysql\n        environment: test\n    spec:\n      containers:\n        - name: mysql\n          image: mysql:8.2.0\n          ports:\n            - containerPort: 3306\n          volumeMounts:\n            - name: mysql-data\n              mountPath: /var/lib/mysql\n          env:\n            - name: MYSQL_ROOT_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: mysql-secret\n                  key: MYSQL_ROOT_PASSWORD\n            - name: MYSQL_USER\n              valueFrom:\n                secretKeyRef:\n                  name: mysql-secret\n                  key: MYSQL_USER\n            - name: MYSQL_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: mysql-secret\n                  key: MYSQL_PASSWORD\n# (to be continued in the next paragraph) \n```", "```\n# (continued)\n  volumeClaimTemplates:\n    - metadata:\n        name: mysql-data\n      spec:\n        accessModes:\n          - \"ReadWriteOnce\"\n        resources:\n          requests:\n            storage: 1Gi \n```", "```\n# mysql-headless-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-headless\n  namespace: mysql\nspec:\n  selector:\n    app: mysql\n    environment: test\n  clusterIP: None\n  ports:\n    - port: 3306 \n```", "```\n    $ kubectl apply â€“f mysql-ns.yaml\n    namespace/mysql created \n    ```", "```\n    $ kubectl create secret generic mysql-secret \\\n      --from-literal=MYSQL_ROOT_PASSWORD='mysqlroot' \\\n      --from-literal=MYSQL_USER='mysqluser' \\\n      --from-literal=MYSQL_PASSWORD='mysqlpassword' \\\n      -n mysql\n    secret/mysql-secret created \n    ```", "```\n    $ kubectl apply -f mysql-headless-service.yaml\n    service/mysql-headless created \n    ```", "```\n    $ kubectl apply -f mysql-statefulset.yaml\n    statefulset.apps/mysql-stateful created \n    ```", "```\n    $ kubectl describe statefulset mysql-stateful -n mysql\n    $  kubectl get sts -n mysql\n    NAME             READY   AGE\n    mysql-stateful   3/3     2m3s \n    ```", "```\n    $ kubectl get pod -n mysql\n    NAME               READY   STATUS    RESTARTS   AGE\n    mysql-stateful-0   1/1     Running   0          2m32s\n    mysql-stateful-1   1/1     Running   0          2m29s\n    mysql-stateful-2   1/1     Running   0          2m25s \n    ```", "```\n    $ kubectl -n mysql describe pod mysql-stateful-0\n    Name:             mysql-stateful-0\n    Namespace:        mysql\n    Priority:         0\n    Service Account:  default\n    ...<removed for brevity>...\n    Volumes:\n      mysql-data:\n        Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n        ClaimName:  mysql-data-mysql-stateful-0\n        ReadOnly:   false\n    ...<removed for brevity>... \n    ```", "```\n$ kubectl -n mysql describe pod mysql-stateful-1\nName:             mysql-stateful-1\nNamespace:        mysql\nPriority:         0\n...<removed for brevity>...\nVolumes:\n  mysql-data:\n    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n    ClaimName:  mysql-data-mysql-stateful-1\n    ReadOnly:   false\n...<removed for brevity>... \n```", "```\n    $  kubectl get pvc -n mysql\n    NAME                          STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\n    mysql-data-mysql-stateful-0   Bound    pvc-453dbfee-6076-48b9-8878-e7ac6f79d271   1Gi        RWO            standard       <unset>                 8m38s\n    mysql-data-mysql-stateful-1   Bound    pvc-36494153-3829-42aa-be6d-4dc63163ea38   1Gi        RWO            standard       <unset>                 8m35s\n    mysql-data-mysql-stateful-2   Bound    pvc-6730af33-f0b6-445d-841b-4fbad5732cde   1Gi        RWO            standard       <unset>                 8m31s \n    ```", "```\n    $ kubectl get pv\n    NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                               STORAGECLASS   VOLUMEATTRIBUTESCLASS   REASON   AGE\n    pvc-36494153-3829-42aa-be6d-4dc63163ea38   1Gi        RWO            Delete           Bound    mysql/mysql-data-mysql-stateful-1   standard       <unset>                          11m\n    pvc-453dbfee-6076-48b9-8878-e7ac6f79d271   1Gi        RWO            Delete           Bound    mysql/mysql-data-mysql-stateful-0   standard       <unset>                          11m\n    pvc-6730af33-f0b6-445d-841b-4fbad5732cde   1Gi        RWO            Delete           Bound    mysql/mysql-data-mysql-stateful-2   standard       <unset>                          11m \n    ```", "```\n# k8sutils.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: k8sutils\n  # namespace: default\nspec:\n  containers:\n    - name: k8sutils\n      image: quay.io/iamgini/k8sutils:debian12-1.1\n      command:\n        - sleep\n        - \"infinity\"\n      # imagePullPolicy: IfNotPresent\n  restartPolicy: Always \n```", "```\n$ kubectl apply -f k8sutils.yaml -n mysql\npod/k8sutils created \n```", "```\n    $ kubectl exec -it -n mysql k8sutils -- /bin/bash\n    root@k8sutils:/# \n    ```", "```\n    root@k8sutils:/# mysql -u root -p -h mysql-headless.mysql.svc.cluster.local\n    Enter password: <mysqlroot>\n    Welcome to the MariaDB monitor.  Commands end with ; or \\g.\n    Your MySQL connection id is 8\n    Server version: 8.2.0 MySQL Community Server - GPL\n    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n    Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n    MySQL [(none)]> show databases;\n    +--------------------+\n    | Database           |\n    +--------------------+\n    | information_schema |\n    | mysql              |\n    | performance_schema |\n    | sys                |\n    +--------------------+\n    4 rows in set (0.003 sec)\n    MySQL [(none)]> \n    ```", "```\n    root@k8sutils:/# nslookup mysql-headless\n    Server:         10.96.0.10\n    Address:        10.96.0.10#53\n    Name:   mysql-headless.mysql.svc.cluster.local\n    Address: 10.244.0.14\n    Name:   mysql-headless.mysql.svc.cluster.local\n    Address: 10.244.0.15\n    Name:   mysql-headless.mysql.svc.cluster.local\n    Address: 10.244.0.16 \n    ```", "```\n    root@k8sutils:/# mysql -u root -p -h mysql-stateful-0.mysql-headless\n    Enter password: <mysqlroot>\n    Welcome to the MariaDB monitor.  Commands end with ; or \\g.\n    Your MySQL connection id is 8\n    Server version: 8.2.0 MySQL Community Server - GPL\n    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n    Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n    MySQL [(none)]> \n    ```", "```\n    MySQL [(none)]> create database ststest;\n    Query OK, 1 row affected (0.002 sec)\n    MySQL [(none)]> exit;\n    Bye \n    ```", "```\n    $ kubectl delete po -n mysql mysql-stateful-0 \n    ```", "```\n$ kubectl get po -n mysql\nNAME               READY   STATUS    RESTARTS   AGE\nk8sutils           1/1     Running   0          35m\nmysql-stateful-0   1/1     Running   0          6s\nmysql-stateful-1   1/1     Running   0          52m\nmysql-stateful-2   1/1     Running   0          51m \n```", "```\n    root@k8sutils:/# mysql -u root -p -h mysql-stateful-0.mysql-headless\n    Enter password: <mysqlroot>\n    Welcome to the MariaDB monitor.  Commands end with ; or \\g.\n    Your MySQL connection id is 8\n    Server version: 8.2.0 MySQL Community Server - GPL\n    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n    Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n    MySQL [(none)]> show databases;\n    +--------------------+\n    | Database           |\n    +--------------------+\n    | information_schema |\n    | mysql              |\n    | performance_schema |\n    | ststest            |\n    | sys                |\n    +--------------------+\n    5 rows in set (0.003 sec) \n    ```", "```\n$ kubectl delete po -n mysql mysql-stateful-0 mysql-stateful-1 mysql-stateful-2\npod \"mysql-stateful-0\" deleted\npod \"mysql-stateful-1\" deleted\npod \"mysql-stateful-2\" deleted \n```", "```\n$ kubectl get pod -n mysql\nNAME               READY   STATUS    RESTARTS   AGE\nk8sutils           1/1     Running   0          47m\nmysql-stateful-0   1/1     Running   0          44s\nmysql-stateful-1   1/1     Running   0          43s\nmysql-stateful-2   1/1     Running   0          41s \n```", "```\n$ kubectl describe pod -n mysql -l app=mysql |egrep 'ClaimName|Name:'\nName:             mysql-stateful-0\n    ClaimName:  mysql-data-mysql-stateful-0\n    ConfigMapName:           kube-root-ca.crt\nName:             mysql-stateful-1\n    ClaimName:  mysql-data-mysql-stateful-1\n    ConfigMapName:           kube-root-ca.crt\nName:             mysql-stateful-2\n    ClaimName:  mysql-data-mysql-stateful-2\n    ConfigMapName:           kube-root-ca.crt \n```", "```\n    $ kubectl scale statefulset -n mysql mysql-stateful --replicas 4\n    statefulset.apps/mysql-stateful scaled \n    ```", "```\n    $ kubectl get pod -n mysql\n    NAME               READY   STATUS    RESTARTS   AGE\n    k8sutils           1/1     Running   0          56m\n    mysql-stateful-0   1/1     Running   0          9m13s\n    mysql-stateful-1   1/1     Running   0          9m12s\n    mysql-stateful-2   1/1     Running   0          9m10s\n    mysql-stateful-3   1/1     Running   0          4s \n    ```", "```\n$ kubectl describe sts -n mysql mysql-stateful\nName:               mysql-stateful\nNamespace:          mysql\n...<removed for brevity>...\nEvents:\n  Type    Reason                   Age                 From                    Message\n  ----    ------                   ----                ----                    -------\n  Normal  SuccessfulCreate         23m (x2 over 75m)   statefulset-controller  create Pod mysql-stateful-0 in StatefulSet mysql-stateful successful\n  Normal  RecreatingTerminatedPod  11m (x13 over 23m)  statefulset-controller  StatefulSet mysql/mysql-stateful is recreating terminated Pod mysql-stateful-0\n  Normal  SuccessfulDelete         11m (x13 over 23m)  statefulset-controller  delete Pod mysql-stateful-0 in StatefulSet mysql-stateful successful\n  Normal  SuccessfulCreate         2m28s               statefulset-controller  create Claim mysql-data-mysql-stateful-3 Pod mysql-stateful-3 in StatefulSet mysql-stateful success\n  Normal  SuccessfulCreate         2m28s               statefulset-controller  create Pod mysql-stateful-3 in StatefulSet mysql-stateful successful\nLet us scale down our StatefulSet object imperatively and check the Pods as follows:\n$ kubectl scale statefulset -n mysql mysql-stateful --replicas 2\nstatefulset.apps/mysql-stateful scaled \n```", "```\n$  kubectl get pod -n mysql\nNAME               READY   STATUS    RESTARTS   AGE\nk8sutils           1/1     Running   0          61m\nmysql-stateful-0   1/1     Running   0          15m\nmysql-stateful-1   1/1     Running   0          15m \n```", "```\n    $ kubectl get pvc -n mysql\n    NAME                          STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\n    mysql-data-mysql-stateful-0   Bound    pvc-453dbfee-6076-48b9-8878-e7ac6f79d271   1Gi        RWO            standard       <unset>                 79m\n    mysql-data-mysql-stateful-1   Bound    pvc-36494153-3829-42aa-be6d-4dc63163ea38   1Gi        RWO            standard       <unset>                 79m\n    mysql-data-mysql-stateful-2   Bound    pvc-6730af33-f0b6-445d-841b-4fbad5732cde   1Gi        RWO            standard       <unset>                 79m\n    mysql-data-mysql-stateful-3   Bound    pvc-6ec1ee2a-5be3-4bf9-84e5-4f5aee566c11   1Gi        RWO            standard       <unset>                 7m4s \n    ```", "```\napiVersion: apps/v1\nkind: StatefulSet\n...\nspec:\n  persistentVolumeClaimRetentionPolicy:\n    whenDeleted: Retain\n    whenScaled: Delete\n... \n```", "```\n$ kubectl delete sts -n mysql mysql-stateful\nstatefulset.apps \"mysql-stateful\" deleted \n```", "```\n$ kubectl delete sts -n mysql mysql-stateful --cascade=orphan \n```", "```\n$ kubectl delete -n mysql pvc mysql-data-mysql-stateful-0 mysql-data-mysql-stateful-1 mysql-data-mysql-stateful-2 mysql-data-mysql-stateful-3\npersistentvolumeclaim \"mysql-data-mysql-stateful-0\" deleted\npersistentvolumeclaim \"mysql-data-mysql-stateful-1\" deleted\npersistentvolumeclaim \"mysql-data-mysql-stateful-2\" deleted\npersistentvolumeclaim \"mysql-data-mysql-stateful-3\" deleted \n```", "```\n    $ cp mysql-statefulset.yaml mysql-statefulset-rolling-update.yaml \n    ```", "```\n    # mysql-statefulset-rolling-update.yaml\n    apiVersion: apps/v1\n    kind: StatefulSet\n    metadata:\n      name: mysql-stateful\n      labels:\n        app: mysql\n      namespace: mysql\n    spec:\n      serviceName: mysql-headless\n      **podManagementPolicy:****OrderedReady**\n      updateStrategy:\n        type: RollingUpdate\n        rollingUpdate:\n          **partition:****0**\n      replicas: 3\n    ...<removed for brevity>...\n    (Refer to the GitHub repo for full YAML) \n    ```", "```\n    $ kubectl apply -f mysql-statefulset-rolling-update.yaml\n    statefulset.apps/mysql-stateful created \n    ```", "```\n$ kubectl get pods -n mysql\nNAME               READY   STATUS    RESTARTS      AGE\nk8sutils           1/1     Running   1 (21h ago)   23h\nmysql-stateful-0   1/1     Running   0             65s\nmysql-stateful-1   1/1     Running   0             62s\nmysql-stateful-2   1/1     Running   0             58s \n```", "```\n    $ kubectl exec -it -n mysql k8sutils -- /bin/bash\n    root@k8sutils:/# mysql -u root -p -h mysql-stateful-0.mysql-headless\n    Enter password: <mysqlroot>\n    Welcome to the MariaDB monitor.  Commands end with ; or \\g.\n    ...<removed for brevity>...\n    MySQL [(none)]> create database stsrolling;\n    Query OK, 1 row affected (0.027 sec)\n    MySQL [(none)]> exit; \n    ```", "```\n    # mysql-statefulset-rolling-update.yaml\n    ...<removed for brevity>...\n        spec:\n          containers:\n            - name: mysql\n              image: mysql:8.3.0\n    ...<removed for brevity>... \n    ```", "```\n    $ kubectl apply -f mysql-statefulset-rolling-update.yaml\n    statefulset.apps/mysql-stateful configured \n    ```", "```\n    $ kubectl rollout status statefulset -n mysql\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for partitioned roll out to finish: 1 out of 3 new pods have been updated...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for partitioned roll out to finish: 2 out of 3 new pods have been updated...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    partitioned roll out complete: 3 new pods have been updated... \n    ```", "```\n    $ kubectl describe sts -n mysql mysql-stateful\n    Name:               mysql-stateful\n    Namespace:          mysql\n    ...<removed for brevity>...\n    Events:\n      Type     Reason                   Age                From                    Message\n      ----     ------                   ----               ----                    -------\n    ...<removed for brevity>...\n      Normal   SuccessfulDelete         72s (x7 over 73s)  statefulset-controller  delete Pod mysql-stateful-2 in StatefulSet mysql-stateful successful\n      Normal   RecreatingTerminatedPod  72s (x7 over 72s)  statefulset-controller  StatefulSet mysql/mysql-stateful is recreating terminated Pod mysql-stateful-2\n      Warning  FailedDelete             72s                statefulset-controller  delete Pod mysql-stateful-2 in StatefulSet mysql-stateful failed error: pods \"mysql-stateful-2\" not found\n      Normal   SuccessfulDelete         70s (x2 over 71s)  statefulset-controller  delete Pod mysql-stateful-1 in StatefulSet mysql-stateful successful\n      Normal   RecreatingTerminatedPod  70s                statefulset-controller  StatefulSet mysql/mysql-stateful is recreating terminated Pod mysql-stateful-1 \n    ```", "```\n    $ kubectl describe pod -n mysql mysql-stateful-0|grep Image\n        Image:          mysql:8.3.0\n        Image ID:       docker.io/library/mysql@sha256:9de9d54fecee6253130e65154b930978b1fcc336bcc86dfd06e89b72a2588ebe \n    ```", "```\n    $ kubectl exec -it -n mysql k8sutils -- /bin/bash\n    root@k8sutils:/# mysql -u root -p -h mysql-stateful-0.mysql-headless\n    Enter password: **<mysqlroot>**\n    ...<removed for brevity>...\n    Server version: **8.3.0 MySQL Community Server - GPL**\n    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n    Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n    MySQL [(none)]> show databases;\n    +--------------------+\n    | Database           |\n    +--------------------+\n    | information_schema |\n    | mysql              |\n    | performance_schema |\n    **| stsrolling         |**\n    | sys                |\n    +--------------------+\n    5 rows in set (0.004 sec)\n    MySQL [(none)]> \n    ```", "```\n    ...<removed for brevity>...\n    spec:\n      serviceName: mysql-headless\n      podManagementPolicy: OrderedReady\n      updateStrategy:\n        type: RollingUpdate\n        rollingUpdate:\n          **partition: 3**\n    ...<removed for brevity>...\n    Also, update the image to 8.4.0 as follows:\n    ...\n        spec:\n          containers:\n            - name: mysql\n              **image: mysql:8.4.0**\n    ...<removed for brevity>... \n    ```", "```\n    $ kubectl apply -f mysql-statefulset-rolling-update.yaml\n    statefulset.apps/mysql-stateful configured \n    ```", "```\n    ...\n    spec:\n      serviceName: mysql-headless\n      podManagementPolicy: OrderedReady\n      updateStrategy:\n        type: RollingUpdate\n        rollingUpdate:\n          partition: 2\n      replicas: 3\n    ... \n    ```", "```\n    $ kubectl apply -f mysql-statefulset-rolling-update.yaml\n    statefulset.apps/mysql-stateful configured \n    ```", "```\n    $ kubectl rollout status statefulset -n mysql\n    Waiting for partitioned roll out to finish: 0 out of 1 new pods have been updated...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    partitioned roll out complete: 1 new pods have been updated... \n    ```", "```\n    $ kubectl describe pod -n mysql mysql-stateful-0|grep Image\n        Image:          mysql:8.3.0\n        Image ID:       docker-pullable://mysql@sha256:9de9d54fecee6253130e65154b930978b1fcc336bcc86dfd06e89b72a2588ebe\n    $ kubectl describe pod -n mysql mysql-stateful-2|grep Image\n        Image:          mysql:8.4.0\n        Image ID:       docker-pullable://mysql@sha256:4a4e5e2a19aab7a67870588952e8f401e17a330466ecfc55c9acf51196da5bd0 \n    ```", "```\n    $ kubectl exec -it -n mysql k8sutils -- /bin/bash\n    root@k8sutils:/# mysql -u root -p -h mysql-stateful-2.mysql-headless\n    Enter password: <mysqlroot>\n    Welcome to the MariaDB monitor.  Commands end with ; or \\g.\n    Your MySQL connection id is 11\n    Server version: 8.4.0 MySQL Community Server - GPL\n    ... \n    ```", "```\n    ...\n      updateStrategy:\n        type: RollingUpdate\n        rollingUpdate:\n          partition: 0\n    ... \n    ```", "```\n    $ kubectl apply -f mysql-statefulset-rolling-update.yaml\n    statefulset.apps/mysql-stateful configured \n    ```", "```\n    $ kubectl rollout status statefulset -n mysql\n    Waiting for partitioned roll out to finish: 1 out of 3 new pods have been updated...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for partitioned roll out to finish: 2 out of 3 new pods have been updated...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    Waiting for 1 pods to be ready...\n    partitioned roll out complete: 3 new pods have been updated... \n    ```"]