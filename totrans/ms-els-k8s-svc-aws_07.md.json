["```\n$ export CNI_VER=$(kubectl describe daemonset aws-node --namespace kube-system | grep Image | cut -d \"/\" -f 2 | sed -e 's/amazon-k8s-cni-init:\\(.*\\)-eksbuild.1/\\1/')\n$ echo $CNI_VER\nv1.11.3 amazon-k8s-cni:v1.11.3-eksbuild.1\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/v1.9.1/config/v1.9/aws-k8s-cni.yaml\n```", "```\n$ kubectl set env daemonset aws-node                            -n kube-system ENABLE_PREFIX_DELEGATION=true\n```", "```\n$ eksctl create addon --name vpc-cni --version $CNI_VER --cluster $CLUSTERNAME –force\n```", "```\n$ kubectl get daemonset/aws-node --namespace kube-system --show-managed-fields -o yaml\n```", "```\n..\nmanagedFields:\n  - apiVersion: apps/v1\n    fieldsType: FieldsV1\n    fieldsV1:\n```", "```\n$ eksctl get addons --cluster $CLUSTERNAME --region $AWS_REGION\n```", "```\nvpc-cni v1.9.1-eksbuild.1       ACTIVE  0       arn:aws:iam::119991111:role/eksctl-mycluster-addon-vpc-cni-Role1-4454        v1.10.2-eksbuild.1,v1.10.1-eksbuild.1,v1.9.3-eksbuild.1\n```", "```\n$ eksctl update addon --name vpc-cni --version 1.9.3 --cluster $CLUSTERNAME --region $AWS_REGION --force\n```", "```\n$ kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_EXTERNALSNAT=true\n```", "```\n$ kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true\n```", "```\napiVersion: crd.k8s.amazonaws.com/v1alpha1\nkind: ENIConfig\nmetadata:\n  name: eu-central-1a\nspec:\n  securityGroups:\n    - sg-67346437643864389\n  subnet: subnet-7847489798437\n```", "```\n$ kubectl set env daemonset aws-node -n kube-system ENI_CONFIG_LABEL_DEF=topology.kubernetes.io/zone\n```"]