["```\n    az aks update -n handsonaks \\\n    -g rg-handsonaks --attach-acr <acrName>\n    ```", "```\n    az ad sp create-for-rbac --name \"cicd-pipeline\" \\\n    --sdk-auth --role contributor\n    ```", "```\n    1   <html>\n    2   <head>\n    3       <title>Version 1</title>\n    4   </head>\n    5   <body>\n    6       <h1>Version 1</h1>\n    7   </body>\n    8   </html>\n    ```", "```\n    1   FROM nginx:1.19.7-alpine\n    2   COPY index.html /usr/share/nginx/html/index.html\n    ```", "```\n    4   # Controls when the action will run. \n    5   on:\n    6     # Triggers the workflow on push or pull request events but only for the main branch\n    7     push:\n    8       branches: [ main ]\n    9       paths: \n    10      - Chapter15/**\n    11      - .github/workflows/pipeline.yaml  \n    12    # Allows you to run this workflow manually from the Actions tab\n    13    workflow_dispatch:\n    ```", "```\n    18  jobs:\n    19    # This workflow contains a single job called \"CI\"\n    20    CI:\n    21      # The type of runner that the job will run on\n    22      runs-on: ubuntu-latest\n    ```", "```\n    25      steps:\n    26        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n    27        - name: Git checkout\n    28          uses: actions/checkout@v2\n    ```", "```\n    30        - name: az CLI login\n    31          uses: azure/login@v1\n    32          with:\n    33            creds: ${{ secrets.AZURE_CREDENTIALS }}\n    34\n    35        - name: ACR login\n    36          run: az acr login -n $ACRNAME\n    ```", "```\n    39        - name: Build and push image\n    40          uses: docker/build-push-action@v2\n    41          with:\n    42            context: ./Chapter15\n    43            push: true\n    44            tags: ${{ env.ACRNAME }}.azurecr.io/website/website:${{ github.run_number }}\n    ```", "```\n    46    CD:\n    47      runs-on: ubuntu-latest\n    48      needs: CI\n    49      steps:\n    ```", "```\n    50        - name: Git checkout\n    51          uses: actions/checkout@v2\n    ```", "```\n    53        - name: Azure Kubernetes set context\n    54          uses: Azure/aks-set-context@v1\n    55          with:\n    56            creds: ${{ secrets.AZURE_CREDENTIALS }}\n    57            resource-group: rg-handsonaks\n    58            cluster-name: handsonaks\n    ```", "```\n    60        - name: Helm upgrade\n    61          run: |\n    62            helm upgrade website Chapter15/website --install \\\n    63              --set image.repository=$ACRNAME.azurecr.io/website/website \\\n    64              --set image.tag=${{ github.run_number }}\n    ```", "```\n    66        - name: Get service IP\n    67          run: |\n    68            PUBLICIP=\"\"\n    69            while [ -z $PUBLICIP ]; do\n    70              echo \"Waiting for public IP...\"\n    71              PUBLICIP=$(kubectl get service website -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n    72              [ -z \"$PUBLICIP\" ] && sleep 10\n    73            done\n    74            echo $PUBLICIP\n    ```", "```\nhelm uninstall website\naz group delete -n rg-pipelines --yes\n```", "```\naz group delete -n rg-handsonaks --yes\n```"]