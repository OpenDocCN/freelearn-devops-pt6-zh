["```\n# ingress/portal-ingress.yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: portal-ingress\n  namespace: ingress-demo\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n    - host: **k8sbible.local**\n      http:\n        paths:\n          - **path:****/video**\n            pathType: Prefix\n            backend:\n              service:\n                **name:****video-service**\n                port:\n                  number: 8080\n          - **path:****/shopping**\n            pathType: Prefix\n            backend:\n              service:\n                **name:****shopping-service**\n                port:\n                  number: 8080 \n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.11.2/deploy/static/provider/cloud/deploy.yaml \n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.11.2/deploy/static/provider/aws/deploy.yaml \n```", "```\n$ minikube start --cni calico --nodes 3 --kubernetes-version=v1.31.0 \n```", "```\n$ minikube addons enable ingress\nðŸ’¡  ingress is an addon maintained by Kubernetes. For any concerns contact minikube on GitHub.\n...<removed for brevity>...\nðŸ”Ž  Verifying ingress addon...\nðŸŒŸ  The 'ingress' addon is enabled \n```", "```\n$ kubectl get pods -n ingress-nginx\nNAME                                        READY   STATUS      RESTARTS   AGE\ningress-nginx-admission-create-rsznt        0/1     Completed   0          78s\ningress-nginx-admission-patch-4c7xh         0/1     Completed   0          78s\ningress-nginx-controller-6fc95558f4-zdhp7   1/1     Running     0          78s \n```", "```\n# ingress/portal-ingress.yaml\n...\nspec:\n  rules:\n    - host: k8sbible.local\n      http:\n        paths:\n          - path: /video\n            pathType: Prefix\n            backend:\n              service:\n                name: video-service\n                port:\n                  number: 8080\n... \n```", "```\n...\n          - path: /shopping\n            pathType: Prefix\n            backend:\n              service:\n                name: shopping-service\n                port:\n                  number: 8080\n...\nFinally, the following rule tells the ingress to serve the **blog-service** when users access **k8sbible.local/ or k8sbible.local:**\n...\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: blog-service\n                port:\n                  number: 8080 \n```", "```\n$ kubectl apply -f ingress/\nnamespace/ingress-demo created\nconfigmap/blog-configmap created\ndeployment.apps/blog created\nservice/blog-service created\ningress.networking.k8s.io/portal-ingress created\nconfigmap/shopping-configmap created\ndeployment.apps/shopping created\nservice/shopping-service created\nconfigmap/video-configmap created\ndeployment.apps/video created\nservice/video-service created \n```", "```\n$ kubectl get po,svc,ingress -n ingress-demo\nNAME                            READY   STATUS    RESTARTS   AGE\npod/blog-675df44d5-5s8sg        1/1     Running   0          88s\npod/shopping-6f88c5f485-lw6ts   1/1     Running   0          88s\npod/video-7d945d8c9f-wkxc5      1/1     Running   0          88s\nNAME                       TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/blog-service       ClusterIP   10.111.70.32    <none>        8080/TCP   88s\nservice/shopping-service   ClusterIP   10.99.103.137   <none>        8080/TCP   88s\nservice/video-service      ClusterIP   10.109.3.177    <none>        8080/TCP   88s\nNAME                                       CLASS   HOSTS            ADDRESS         PORTS   AGE\ningress.networking.k8s.io/portal-ingress   nginx   k8sbible.local   192.168.39.18   80      88s \n```", "```\n# k8sbible minikube\n192.168.39.18 k8sbible.local \n```", "```\n$ kubectl get IngressClass -o yaml\napiVersion: v1\nitems:\n- apiVersion: networking.k8s.io/v1\n  kind: IngressClass\n  metadata:\n    name: nginx\n    annotations:\n      ingressclass.kubernetes.io/is-default-class: \"true\"\n...<removed for brevity>...\n  spec:\n    controller: k8s.io/ingress-nginx \n```", "```\n$ az aks create --resource-group myResourceGroup --name myAKSCluster --node-count 2 --network-plugin azure --enable-managed-identity -a ingress-appgw --appgw-name MyAppGateway --appgw-subnet-cidr \"10.2.0.0/16\" --generate-ssh-keys \n```", "```\n$ az aks get-credentials --resource-group k8sforbeginners-rg --name k8sforbeginners-aks-agic\nMerged \"k8sforbeginners-aks-agic\" as current context in .kube/config \n```", "```\n# aks-agic/portal-ingress.yaml\n...\nspec:\n  **ingressClassName:****azure-application-gateway**\n... \n```", "```\n$ kubectl apply -f aks_agic/ \n```", "```\n$ kubectl get ingress\nNAME              CLASS    HOSTS   ADDRESS         PORTS   AGE\nexample-ingress   <none>   *       52.191.222.39   80      36m \n```", "```\n# gateway_api/gatewayclass.yaml\napiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  name: dev-cluster-gateway\nspec:\n  controllerName: \"example.net/gateway-controller\" \n```", "```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: dev-gateway\n  namespace: gateway-api-demo\nspec:\n  gatewayClassName: dev-cluster-gateway\n  listeners:\n    - name: http\n      protocol: HTTP\n      port: 80 \n```", "```\n# gateway-api/httproute.yaml\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: dev-httproute\n  namespace: gateway-api-demo\nspec:\n  parentRefs:\n    - name: dev-cluster-gateway\n      kind: Gateway\n      namespace: gateway-api-demo\n  hostnames:\n    - \"k8sbible.local\"\n  rules:\n    - matches:\n        - path:\n            type: PathPrefix\n            value: /video\n      backendRefs:\n        - name: video-service\n          port: 80 \n```", "```\n$ ETCDCTL_API=3 etcdctl \\\n  --endpoints=[https://127.0.0.1:2379] \\\n  --cacert=/etc/kubernetes/pki/etcd/ca.crt \\\n  --cert=/etc/kubernetes/pki/etcd/server.crt \\\n  --key=/etc/kubernetes/pki/etcd/server.key \\\n  snapshot save /tmp/snapshot-pre-patch.db \n```", "```\n$ etcdutl --write-out=table snapshot status snapshot.db \n```", "```\n$ etcdutl --data-dir <data-dir-location> snapshot restore snapshot.db \n```", "```\n...\n--etcd-servers=$NEW_ETCD_CLUSTER\n... \n```", "```\n    ...\n    --audit-log-path=/var/log/audit.log\n    --audit-policy-file=/etc/kubernetes/audit-policy.yaml\n    ... \n    ```", "```\n$ kubectl get events \n```", "```\n$ kubectl get events --field-selector involvedObject.name=todo-pod \n```", "```\n$ kubectl logs todo-app \n```", "```\n$ kubectl logs todo-app -c app-container \n```", "```\n$ kubectl logs -f todo-app \n```", "```\n$ kubectl logs todo-app --previous \n```", "```\n$ kubectl get pods -l todo -o json | jq -r '.items[] | .metadata.name' | xargs -I {} kubectl logs {} \n```", "```\n$ kubectl explain pod \n```", "```\n$ kubectl explain pod.spec \n```", "```\n$ kubectl get po -n trouble-ns\nNAME                   READY   STATUS    RESTARTS   AGE\nblog-675df44d5-gkrt2   1/1     Running   0          29m \n```", "```\n$ kubectl exec blog-675df44d5-gkrt2 -- env \n```", "```\n$ kubectl exec blog-675df44d5-gkrt2 -c blog -- env \n```", "```\n$ kubectl exec -it blog-675df44d5-gkrt2 -n trouble-ns -- /bin/bash\nroot@blog-675df44d5-gkrt2:/app# whoami;hostname;uptime\nroot\nblog-675df44d5-gkrt2\n14:36:03 up 10:19,  0 user,  load average: 0.17, 0.07, 0.69\nroot@blog-675df44d5-gkrt2:/app# \n```", "```\n$ kubectl cp troubles/test.txt blog-675df44d5-gkrt2:/app/test.txt -n trouble-ns\n$ kubectl exec -it blog-675df44d5-gkrt2 -n trouble-ns -- ls -l /app\ntotal 8\n-rw-r--r-- 1 root root 902 Aug 20 16:52 app.py\n-rw-r--r-- 1 1000 1000  20 Aug 31 14:42 test.txt \n```", "```\n$ kubectl cp blog-675df44d5-gkrt2:/app/app.py /tmp/app.py  -n trouble-ns \n```", "```\n$ kubectl debug -it pod/video-7d945d8c9f-wkxc5 --image=quay.io/iamgini/k8sutils:debian12 -c k8sutils -n ingress-demo\nroot@video-7d945d8c9f-wkxc5:/# nslookup video-service\nServer:         10.96.0.10\nAddress:        10.96.0.10#53\nName:   video-service.ingress-demo.svc.cluster.local\nAddress: 10.109.3.177\nroot@video-7d945d8c9f-wkxc5:/# curl http://video-service:8080\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>Welcome</title>\n      <style>\n        body {\n          background-color: yellow;\n          text-align: center;\n...<removed for brevity>... \n```"]