["```\n# Helm install macOS\n```", "```\nbrew install Helm\n```", "```\n# Helm install Windows\n```", "```\nchoco install kubernetes-helm\n```", "```\n# Add a repo (Add bitnami repo to your local repo list)\n```", "```\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n```", "```\n# For private repository, use additional authentication flags\n```", "```\n# To view the list of possible authentication flags\n```", "```\nhelm repo add --help\n```", "```\n# Update the charts in all the added repo's\n```", "```\nhelm repo update\n```", "```\n# Update the charts in a specific repo.\n```", "```\nhelm repo update bitnami\n```", "```\n# Search for charts with the given name within the added repo\n```", "```\nhelm search repo wordpress\n```", "```\n# Search charts in ArtifactHub, a famous open-source repo  \n```", "```\nhelm search hub wordpress\n```", "```\n#List all the repositories added\n```", "```\nhelm repo list\n```", "```\n# Install a chart\n```", "```\n# Format\n```", "```\nhelm install <release-name> <chart-name>\n```", "```\n# Example\n```", "```\nhelm install redis bitnami/redis\n```", "```\n# Each chart will support a list of variables to be set\n```", "```\n# Variables can be hierarchical. For example, the 'enabled' flag is under the 'auth' hierarchy in the bitnami/redis chart.\n```", "```\nhelm install redis bitnami/redis --set auth.enabled=false\n```", "```\n# Install with a value set in the values file\n```", "```\nhelm install redis bitnami/redis -f values.yaml\n```", "```\n# If the same variable is present in both the command line set and value file, the command line set takes precedence. \n```", "```\nhelm install redis bitnami/redis -f values.yaml --set auth.enabled=false\n```", "```\n# Update a release\n```", "```\n# Format\n```", "```\nhelm upgrade <release-name> <chart-name>\n```", "```\n# Example\n```", "```\nhelm upgrade redis bitnami/redis -f values.yaml --set auth.enabled=true\n```", "```\n# Roll back a release \n```", "```\n# Format\n```", "```\nhelm rollback <release-name> <release>\n```", "```\n# Example, roll back redis to the first release version \n```", "```\nhelm rollback redis 1\n```", "```\n# Uninstall format\n```", "```\nhelm uninstall <release-name>\n```", "```\n# Uninstall redis release \n```", "```\nhelm uninstall redis\n```", "```\n# List all the Helm releases in the target cluster\n```", "```\nhelm list\n```", "```\n# Find the status of a release named redis\n```", "```\nhelm status redis\n```", "```\n# Variable reference syntax - {{ variable-hierarchy }}\n```", "```\n# Examples  \n```", "```\n# Refer deployment.yaml line no 9\n```", "```\n{{ .Values.replicaCount }}\n```", "```\n# Refer _helpers.tpl line no 50\n```", "```\n{{ .Release.Name }}\n```", "```\n# Refer _helpers.tpl line no 40\n```", "```\napp.kubernetes.io/version: {{ .Chart.AppVersion | quote }}\n```", "```\n# Refer ingress.yaml line no 9\n```", "```\n{{- if semverCompare \">=1.19-0\" .Capabilities.KubeVersion.GitVersion -}}\n```", "```\napiVersion: networking.k8s.io/v1\n```", "```\n{{- else if semverCompare \">=1.14-0\" .Capabilities.KubeVersion.GitVersion -}}\n```", "```\napiVersion: networking.k8s.io/v1beta1\n```", "```\n{{- else -}}\n```", "```\napiVersion: extensions/v1beta1\n```", "```\n{{- end }}\n```", "```\n# Refer serviceaccount.yaml line no 8\n```", "```\n# We create a scope block with variable Values.serviceAccount.annotations\n```", "```\n{{- with .Values.serviceAccount.annotations }}\n```", "```\nannotations:\n```", "```\n  {{- toYaml . | nindent 4 }}\n```", "```\n{{- end }}\n```", "```\n# Refer NOTES.txt line no 2\n```", "```\n# Loops over the hosts with an inner loop on path\n```", "```\n{{- range $host := .Values.ingress.hosts }}\n```", "```\n  {{- range .paths }}\n```", "```\n  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}\n```", "```\n  {{- end }}\n```", "```\n{{- end }}\n```", "```\n# Template named hello-world.selectorLabels is defined in the _helpers.tps line no 45\n```", "```\n# hello-world is a release name prefix added to avoid name conflicts when we have sub-charts and dependent charts.\n```", "```\n{{- define \"hello-world.selectorLabels\" -}}\n```", "```\napp.kubernetes.io/name: {{ include \"hello-world.name\" . }}\n```", "```\napp.kubernetes.io/instance: {{ .Release.Name }}\n```", "```\n{{- end }}\n```", "```\n# deployment.yaml line number 12\n```", "```\n# Template included with the name\n```", "```\nmatchLabels:\n```", "```\n  {{- include \"hello-world.selectorLabels\" . | nindent 6 }}\n```", "```\nresources:\n```", "```\n- deployment.yaml\n```", "```\ncommonLabels:\n```", "```\n    team-name: alpha\n```", "```\nnamespace: test\n```", "```\n# Installing in macOS with Homebrew\n```", "```\nbrew update\n```", "```\nbrew install kubevela\n```", "```\n# Installing in macOS with script \n```", "```\ncurl -fsSl https://kubevela.io/script/install.sh | bash -s 1.3.0\n```", "```\n# Installing in windows with a script\n```", "```\npowershell -Command \"iwr -useb https://kubevela.io/script/install.ps1 | iex\"\n```", "```\n# Using the CLI\n```", "```\nvela install\n```", "```\n# Using a Helm chart\n```", "```\nhelm repo add kubevela https://charts.kubevela.net/core\n```", "```\nhelm repo update\n```", "```\nhelm install --create-namespace -n vela-system kubevela kubevela/vela-core --version 1.3.0 --wait\n```", "```\n# View list of Add-ons available\n```", "```\nvela add-on list\n```", "```\n# Install the application management dashboard add-on\n```", "```\nvela add-on enable velaux\n```", "```\n# List of Components\n```", "```\nkubectl get ComponentDefinition -n vela-system\n```", "```\n# List of Traits\n```", "```\nkubectl get TraitDefinition -n vela-system\n```", "```\n# List of Policies\n```", "```\nkubectl get PolicyDefinition -n vela-system\n```", "```\n# List of Workflows\n```", "```\nkubectl get WorkflowStepDefinition -n vela-system\n```"]