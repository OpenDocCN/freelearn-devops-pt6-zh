["```\n\n$ q chat\n```", "```\n\n$ Generate Terraform code for an Amazon EKS cluster with:\n- Cluster name \"eks-genai-demo\" in us-west-2 region using EKS v1.32\n- Dedicated VPC (CIDR 10.0.0.0/16) with public/private subnets across 3 AZs\n- 1 NAT gateway for internet access from private subnets\n- Standard EKS Managed add-ons (Amazon VPC CNI, CoreDNS, kube-proxy)\n- Output cluster endpoint and access information\nProvide modular, well-commented code with appropriate provider configurations and use open-source terraform modules where possible.\n```", "```\n\n$ Update the previous EKS cluster Terraform code to use the following provider versions:\n- Terraform version >= 1.9\n- AWS provider >= 5.63\n- Helm provider >= 2.15\n- Kubernetes provider >= 2.32\nEnsure all provider configurations are explicitly defined with these version constraints in the required_providers block, and the code remains compatible with these newer versions.\n```", "```\n\n$ Please create a simple TODO application with the following specifications:\nFunctionality\n- Create new tasks with title and description\n- Mark tasks as complete/incomplete\n- Delete tasks\n- View all tasks\nTechnical Requirements\n- Create a single application\n- Use in-memory storage for tasks (no need for a database)\n- Follow good coding practices with appropriate comments\nDocker Requirements\n- Create a Dockerfile to containerize the application\n- The Dockerfile should follow best practices\n- Make it simple to build and run.\n```", "```\n\n$ Build and run the container image locally using Docker.\n```", "```\n\n$ docker images\n$ docker ps\n```", "```\n\n$ Create necessary manifest files to deploy this application to a kubernetes cluster. Run two replicas of this app and expose it via ClusterIP service.\n```"]