["```\n$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\n$ chmod 700 get_helm.sh\n$ ./get_helm.sh\n```", "```\n    $ aws ec2 create-volume --size=10 --availability-zone=us-east-1a --volume-type=gp2\n    ```", "```\n    $ aws ec2 describe-instances | grep InstanceId\n    ```", "```\n    $ aws ec2 attach-volume --device /dev/sdf --instance-id <WORKER_NODE_ID> --volume-id <YOUR_VOLUME_ID>\n    ```", "```\n    apiVersion: v1\n    kind: PersistentVolume\n    metadata:\n      name : percona-pv1\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      capacity:\n        storage: 5Gi\n      persistentVolumeReclaimPolicy: Retain\n      awsElasticBlockStore:\n        volumeID: <YOUR EBS VOLUME ID HERE>\n        fsType: xfs\n    ```", "```\n    $ kubectl apply -f pv-percona.yaml\n    ```", "```\n    kind: PersistentVolumeClaim\n    apiVersion: v1\n    metadata:\n      name: percona-pvc\n    spec:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 5Gi\n    ```", "```\n      storageClassName: \"\"\n    ```", "```\n    $ kubectl apply -f pv-percona.yaml\n    ```", "```\n    $ kubectl create secret generic mysql-root \\\n         --from-literal=mysql-root-passwd=MyP@ssW0rcl \\\n         --dry-run -o yaml | kubectl apply -f -\n    ```", "```\n    ---\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: percona\n    spec:\n      selector:\n        matchLabels:\n          app: percona\n      template:\n        metadata:\n          labels:\n            app: percona\n        spec:\n          containers:\n          - image: percona\n            name: percona\n            env:\n            - name: MYSQL_ROOT_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: mysql-root\n                  key: mysql-root-passwd\n            ports:\n            - containerPort: 3306\n              name: percona\n    ```", "```\n            volumeMounts:\n            - name: percona-volume\n              mountPath: /var/lib/mysql\n    ```", "```\n         volumes:\n            - name: percona-volume\n              persistentVolumeClaim:\n                claimName: percona-pvc\n    ```", "```\n    $ kubectl apply -f deployment-percona.yaml\n    ```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: gp2\n```", "```\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\n```", "```\nparameters:\n  type: gp2\n  fsType: ext4\n```", "```\nprovisioner: kubernetes.io/aws-ebs\nreclaimPolicy: Retain\nallowVolumeExpansion: true\nvolumeBindingMode: Immediate\n```", "```\n    kind: PersistentVolumeClaim\n    apiVersion: v1\n    metadata:\n      name: percona-pvc-gp2\n    spec:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 5Gi\n      storageClassName: gp2\n    ```", "```\n                claimName: percona-pvc-gp2\n    ```", "```\n    $ kubectl apply -f pv-percona.yaml\n    $ kubectl apply -f deployment-percona.yaml\n    ```", "```\n    $ kubectl create ns openebs\n    ```", "```\n    $ helm repo add openebs https://openebs.github.io/charts\n    ```", "```\n    $ helm repo update\n    ```", "```\n    $ helm install --namespace openebs openebs openebs/openebs\n    ```", "```\n    $ kubectl get pods -n openebs\n    ```", "```\n$ kubectl get sc\n```", "```\n---\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: openebs-pvc\nspec:\n  storageClassName: openebs-jiva-default\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5G\n---\n```", "```\n    apiVersion: storage.k8s.io/v1\n    kind: StorageClass\n    metadata:\n      name: openebs-jiva-3r\n      annotations:\n        openebs.io/cas-type: jiva\n        cas.openebs.io/config: |\n          - name: ReplicaCount\n            value: \"3\"\n          - name: StoragePool\n            value: default\n    provisioner: openebs.io/provisioner-iscsi\n    ```", "```\n    $ kubectl apply -f sc-openebs-jiva.yaml\n    ```", "```\n      storageClassName: openebs-jiva-3r\n    ```", "```\n                claimName: percona-pvc-openebs\n    ```", "```\n    $ kubectl apply -f pvc-percona.yaml\n    $ kubectl apply -f deployment-percona.yaml\n    ```"]