["```\nresource \"aws_ecr_repository\" \"myapp\" {\n  name                 = \"myapp\"\n  image_tag_mutability = \"MUTABLE\"\n  image_scanning_configuration {\n    scan_on_push = true }}\noutput \"repo-url\" {\n  value = aws_ecr_repository.myapp.repository_url}\n```", "```\n$ aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp\nWARNING! Your password will be stored unencrypted in /home/ec2-user/.docker/config.json.\n……\nLogin Succeeded\n```", "```\n{ \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:BatchGetImage\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:GetAuthorizationToken\"\n            ],\n            \"Resource\": \"*\"}]}\n```", "```\nresource \"aws_ecr_repository_policy\" \"apppolicy\" {\n  repository = aws_ecr_repository.myapp.name\n  policy = <<EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowCrossAccountPush\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::22334455:root\"\n            },\n            \"Action\": [\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:PutImage\",\n                \"ecr:UploadLayerPart\"\n            ]}]}\nEOF\n}\n```", "```\n#!/usr/bin/env python3\n'''simple API server that returns Hello World'''\nfrom fastapi import FastAPI\napp = FastAPI()\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello World\"}\n```", "```\nnyio==3.6.1\nclick==8.1.3\nfastapi==0.83.0\nh11==0.13.0\nhttptools==0.5.0\nidna==3.3\nimportlib-metadata==4.12.0\npydantic==1.10.2\npython-dotenv==0.21.0\nPyYAML==6.0\nsniffio==1.3.0\nstarlette==0.19.1\ntyping-extensions==4.3.0\nuvicorn==0.18.3\nuvloop==0.16.0\nwatchfiles==0.17.0\nwebsockets==10.3\nzipp==3.8.1\n```", "```\nFROM python:3.9\nRUN pip install --upgrade pip\nRUN adduser worker\nUSER worker\nWORKDIR /home/worker\nENV PATH=\"/home/worker/.local/bin:${PATH}\"\nCOPY ./requirements.txt /home/worker/requirements.txt\nRUN pip install --no-cache-dir --upgrade -r /home/worker/requirements.txt\nCOPY ./main.py /home/worker/main.py\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\", \"--reload\"]\n```", "```\n$ docker build -t myapi:0.0.1 .\n$ docker run -p 8080:8080 --rm myapi:0.0.1\n……\nINFO:     Uvicorn running on http://0.0.0.0:8080\nINFO:     Application startup complete.\n```", "```\n$ aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp\nWARNING! Your password will be stored unencrypted in /home/ec2-user/.docker/config.json.\n……\n$ docker tag myapi:0.0.1 1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp:0.0.1\n$ docker images\nREPOSITORY  TAG IMAGE ID       CREATED         SIZE\n1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp   0.0.1        c163cea7a037   9 hours ago     1.01GB\n$ docker push 1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp   :0.0.1\nThe push refers to repository [1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp]\ne6aadc5ffa3e: Pushed\n……\n54b354c15c5a: Pushed\n0.0.1: digest: sha256:193687f5606a46e61634b1020edaea6e347281ea ba8ff41d328371982a533efc size: 3264\n```", "```\nresource \"aws_ecr_pull_through_cache_rule\" \"example\" {\n  ecr_repository_prefix = \"ecr-public\"\n  upstream_registry_url = \"public.ecr.aws\"\n}\n```", "```\n$ aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 1122334.dkr.ecr.eu-central-1.amazonaws.com/ecr-public\nWARNING! Your password will be stored unencrypted in /home/ec2-user/.docker/config.json.\n……\n$ docker pull  1122334.dkr.ecr.eu-central-1.amazonaws.com/ecr-public/docker/library/alpine:latest\nlatest: Pulling from ecr-public/docker/library/alpine\nDigest: sha256:bc41182d7ef5ffc53a40b044e725193bc10142a1243f395 ee852a8d9730fc2ad\nStatus: Downloaded newer image for 1122334.dkr.ecr.eu-central-1.amazonaws.com/ecr-public/docker/library/alpine:latest\n1122334.dkr.ecr.eu-central-1.amazonaws.com/ecr-public/docker/library/alpine:latest\n```", "```\ndata \"aws_caller_identity\" \"current\" {}\nresource \"aws_ecr_replication_configuration\" \"euwest1\" {\n  replication_configuration {\n    rule {\n      destination {\n        region      = \"eu-west-1\"\n        registry_id = data.aws_caller_identity.current.account_id\n      }\n      repository_filter {\n        filter      = \"myapp\"\n        filter_type = \"PREFIX_MATCH\"\n      }\n    }\n  }\n}\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-deployment\nspec:\n  selector:\n    matchLabels:\n      app: fastapi\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: fastapi\n    spec:\n      containers:\n      - name: fastapi\n        image: \"1122334.dkr.ecr.eu-central-1.amazonaws.com/myapp:0.0.2\"\n```", "```\n---\napiVersion: v1\nkind: Service\nmetadata:\n name: fastapi-dev\nspec:\n type: NodePort\n selector:\n   app: fastapi\n ports:\n - nodePort: 32410\n   protocol: TCP\n   port: 8080\n   targetPort: 8080\n```", "```\n$ kubectl get pod <podname> -o jsonpath={.status.hostIP}\n```"]