["```\ncat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nEOF\nsudo yum install -y kubectl \n```", "```\n    sudo apt-get update\n    sudo apt-get install -y apt-transport-https ca-certificates curl\n    ```", "```\n    sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\n    echo \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install -y kubectl\n    ```", "```\n    kubectl version --client\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install \\\n        ca-certificates \\\n        curl \\\n        gnupg \\\n        lsb-release\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n    echo \\\n      \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n      $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install docker-ce docker-ce-cli containerd.io\n    ```", "```\n    sudo docker ps\n    #optional - running your first docker container\n    sudo docker run hello-world\n    ```", "```\n    sudo mkdir -p /etc/containerd\n    containerd config default | sudo tee /etc/containerd/config.toml\n    ```", "```\n    sudo systemctl restart containerd\n    ```", "```\n    curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -\n    sudo apt-get install apt-transport-https --yes\n    ```", "```\n    echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install helm\n    ```", "```\n    helm version\n    ```", "```\n    curl -L https://github.com/kubernetes/kompose/releases/download/v1.26.0/kompose-linux-amd64 -o kompose\n    chmod +x kompose\n    sudo mv ./kompose /usr/local/bin/kompose\n    ```", "```\n    wget https://raw.githubusercontent.com/kubernetes/kompose/master/examples/docker-compose-v3.yaml -O docker-compose.yaml\n    kompose convert\n    ```", "```\n    kubectl apply -f .\n    ```", "```\nsudo swapoff -a\n```", "```\nsudo docker ps\n```", "```\ntelnet 127.0.0.1 6443\n```", "```\ncat <<EOF | sudo tee /etc/modules-load.d/k8s.conf\nbr_netfilter\nEOF\ncat <<EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsudo sysctl --system\n```", "```\nkubectl version --client\n```", "```\n    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n    sudo install minikube-linux-amd64 /usr/local/bin/minikube\n    ```", "```\n    minikube –-help\n    ```", "```\n    minikube start\n    ```", "```\n    minikube start --memory 8192 --cpus 4\n    ```", "```\nkubectl get node \n```", "```\nalias k=kubectl \nk get no\n```", "```\nminikube stop\nminikube config set memory 8192\nminikube config set cpus 4\nminikube start\n```", "```\nminikube delete --all\n```", "```\n    sudo apt-get update\n    sudo apt-get install -y apt-transport-https ca-certificates curl\n    sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\n    echo \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install -y kubelet kubeadm \n    ```", "```\n    sudo apt-get update\n    sudo apt-get install -y kubelet kubeadm kubectl \n    ```", "```\n    sudo apt-mark hold kubelet kubeadm kubectl \n    ```", "```\nsudo kubeadm config images pull\n```", "```\nsudo kubeadm init --pod-network-cidr=192.168.0.0/16\n```", "```\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n```", "```\nexport KUBECONFIG=/etc/kubernetes/admin.conf\n```", "```\n    kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml\n    kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml\n    ```", "```\n    watch kubectl get pods -n calico-system\n    ```", "```\nkubectl get pods -n calico-system -w\n```", "```\n    kubectl taint nodes --all node-role.kubernetes.io/master-\n    ```", "```\n    kubectl get no\n    ```", "```\n    kubectl get no -o wide\n    ```", "```\nsudo kubeadm join --token <token> <control-plane-host>:<control-plane-port> --discovery-token-ca-cert-hash sha256:<hash>\n```", "```\nsudo kubeadm join 172.16.16.129:6443 --token k626hm.oqwyac35h43x80mg   --discovery-token-ca-cert-hash sha256:889983\na6b87643e598b88533dbe3a68643a623b9a0ed9380561c6a7dbb93b3f0\n```"]