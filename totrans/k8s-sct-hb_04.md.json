["```\n$ gpg --generate-key\n```", "```\n$ gpg --list-keys\n      00FFFE11421E1F1EED1EEE811E11E111D1111111\nuid          [ultimate] test-key-2 <kubernetes@secrets.com>\nsub   rsa3072 2023-08-27 [E] [expires: 2025-08-26]\n```", "```\njwt-key:\n  value: secret-key\n```", "```\ncreation_rules:\n    - pgp: >-\n        gpg-key\n```", "```\nhelm secrets enc values.yaml\n```", "```\njwt-key:\n    value:  ENC[AES256_GCM,data:9/0gmkCNm2DbEw==,iv:dbthtzx1t8KUHazh7v48T7ASep0rTbYJBrl/jEw6zWE=,tag:MLVXlruHpkMxYihPvNieVQ==,type:str]\nsops:\n...\n    pgp:\n          enc: |\n            -----BEGIN PGP MESSAGE-----\n             -----END PGP MESSAGE-----\n    version: 3.7.3\n```", "```\n$ kubectl create secret generic opaque-example-from-literals --from-literal=literal1=text-for-literal-1 --dry-run=client\nsecret/opaque-example-from-literals created (dry run)\n```", "```\n$ kubectl create secret generic opaque-example-from-literals --from-literal=literal1=text-for-literal-1 --dry-run=client -o yaml\nsecret/opaque-example-from-literals created (dry run)\napiVersion: v1\ndata:\n  literal1: dGV4dC1mb3ItbGl0ZXJhbC0x\nkind: Secret\nmetadata:\n  creationTimestamp: null\n  name: opaque-example-from-literals\n```", "```\n$ secretKey=$(openssl rand -hex 32)\n$ echo \"$secretKey\"\n80a3284da641ac728b5585fd913b0e60e9c4f61ffe2cfb6f456c16a312552e11\n$ echo \"$secretKey\" |md5sum\n6a59e95805ea05ff21a708038be9b130\necho \"$secretKey\"\n```", "```\n$ kubectl create secret generic aes-key --from-literal=key=$secretKey -o yaml\napiVersion: v1\ndata:\n  key: ODBhMzI4NGRhNjQxYWM3MjhiNTU4NWZkOTEzYjBlNjBlOWM0ZjYxZmZlMmNmY jZmNDU2YzE2YTMxMjU1MmUxMQ==\nkind: Secret\nmetadata:\n..\ntype: Opaque\n```", "```\napiVersion: v1\nkind: Pod\n...\n      command: [\"/bin/sh\",\"-c\"]\n      args: [\"echo $(key) | md5sum\"]\n      envFrom:\n        - secretRef:\n            name:  aes-key\n```", "```\n$ kubectl logs print-env-pod\n6a59e95805ea05ff21a708038be9b130  -\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: aes-key\ntype: Opaque\ndata:\n  key: 80a3284da641ac728b5585fd913b0e60e9c4f61ffe2cfb6f456c16a312552e11\n```", "```\n$ kubectl apply -f base_64_example.yaml\n$ kubectl logs -f print-env-pod\nfc7d115eb58e428c53b346659e7604d6\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ingress-tls\ntype: kubernetes.io/tls\ndata:\n  tls.crt: aW52YWxpZC1zZWNyZXQ=\n  tls.key: aW52YWxpZC1zZWNyZXQ=\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: basic-auth-secret\ntype: kubernetes.io/basic-auth\nstringData:\n  no-username: a-user\n  password: a-password\n  another-key: some-value\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: docker-credentials\ntype: kubernetes.io/dockercfg\ndata:\n  .dockercfg: |\n     UkVQTEFDRV9XSVRIX0JBU0U2NA==\n```", "```\nkubectl apply -f docker-credentials.yaml\nThe Secret \"docker-credentials\" is invalid: data[.dockercfg]: Invalid value: \"<secret contents redacted>\": invalid character 'R' looking for beginning of value\n```", "```\n$ kubectl describe deployment.apps/nginx-deployment\nName:                   nginx-deployment\nNamespace:              default\nCreationTimestamp:      Wed, 28 Jun 2023 23:53:22 +0100\n...\nPod Template:\n  Labels:  app=nginx\n  Annotations:      test-annotation: nginx\n  Containers:\n   nginx:\n...\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   nginx-deployment-544dc8b7c4 (1/1 replicas created)\nEvents:          <none>\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n...\n    spec:\n      containers:\n        - name: nginx\n          image: nginx\n          volumeMounts:\n            - name: users-volume\n              mountPath: /users.json\n      volumes:\n        - name: users-volume\n          secret:\n            secretName: user-file\n```", "```\nkubectl describe pod nginx-5d66b7fbc-7cb7g\n...\n  Warning  FailedMount  36s (x9 over 2m44s)  kubelet            MountVolume.SetUp failed for volume \"users-volume\" : secret \"user-file\" not found\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n    - name: nginx\n      image: nginx\n      envFrom:\n        - secretRef:\n            name: does-not-exist\n  restartPolicy: Always\n```", "```\n$ kubectl get po\nNAME      READY STATUS                       RESTARTS   AGE\nnginx-pod 0/1   CreateContainerConfigError   0          3s\n```", "```\n$ kubectl describe pod nginx-pod\nWarning  Failed 3s (x8 over 87s) kubelet Error: secret \"does-not-exist\" not found\nNormal   Pulled 3s               kubelet Successfully pulled image \"nginx\" in 968.341209ms\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ingress-tls\ntype: kubernetes.io/tls\ndata:\n  tls.crt: aW52YWxpZC1zZWNyZXQ=\n  tls.key: aW52YWxpZC1zZWNyZXQ=\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: nginx-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: \"true\"\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  tls:\n    - hosts:\n        - bad-ssl\n      secretName: ingress-tls\n  rules:\n    - host: bad-ssl\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: nginx-service\n                port:\n                  number: 80\n```", "```\n$ kubectl get ing\nNAME            CLASS   HOSTS     ADDRESS        PORTS     AGE\nnginx-ingress   nginx   bad-ssl   192.168.49.2   80, 443   2m36s\n```", "```\n$ kubectl get events\n...\n11m         Normal    Pulled              pod/webpage                              Container image \"nginx:stable\" already present on machine\n```", "```\n$ kubectl describe ing\n...\nEvents:\n  Type    Reason  Age                From                      Message\n  ----    ------  ----               ----                      -------\n  Normal  Sync    35s (x2 over 37s)  nginx-ingress-controller  Scheduled for sync\n```", "```\nkubectl logs -f ingress-nginx-controller-755dfbfc65-vf7v6 -n ingress-nginx\n...\nW0701 10:18:30.928989       7 backend_ssl.go:45] Error obtaining X.509 certificate: unexpected error creating SSL Cert: no valid PEM formatted block found\n...\nW0701 10:18:35.203316       7 controller.go:1348] Unexpected error validating SSL certificate \"default/ingress-tls\" for server \"bad-ssl\": x509: certificate is not valid for any names, but wanted to match bad-ssl\n```"]