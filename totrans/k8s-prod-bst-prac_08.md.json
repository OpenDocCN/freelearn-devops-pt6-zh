["```\n# ignoring git folder\n.git\n#ignoring visual studio code related temp data\n.vs\n.vscode\n# other files and CI manifests\n.DS_Store\n.dockerignore\n.editorconfig\n.gitignore\n.gitlab-ci.yml\n.travis.yml\n# ignore all files and directories starting with temp \n# in any subdirectory \n*/temp*\n# ignore all files and directories starting with temp\n# in any subdirectory two levels below root\n*/*/temp*\n# ignore all files and directories starting with temp\n# followed by any character \ntemp? \n```", "```\nFROM node:14.15 AS base\nADD . /app\nWORKDIR /app\nRUN npm install\nFROM gcr.io/distroless/nodejs AS stage2\nCOPY --from=base /app /app\nWORKDIR /app\nEXPOSE 8080\nCMD [\"server.js\"]\n```", "```\n    $ TRIVYVERSION=$(curl –silent \"https://api.github.com/repos/aquasecurity/trivy/releases/latest\" | grep '\"tag_name\":' | \\\n    sed -E 's/.*\"v([^\"]+)\".*/\\1/')\n    ```", "```\n    $ curl --silent --location \"https://github.com/aquasecurity/trivy/releases/download/v${TRIVYVERSION}/trivy_${TRIVYVERSION}_Linux-64bit.tar.gz\" | tar xz -C /tmp\n    $ sudo mv /tmp/trivy /usr/local/bin\n    ```", "```\n    $ trivy --version\n    Version: 0.14.0\n    ```", "```\n    $ trivy alpine:3.12\n    ```", "```\n    $ trivy mongo:4.4\n    ```", "```\n    $ time docker run --rm debian:buster-slim sh -c \"apt-get update && apt-get install curl -y\"\n    real    0m43.837s\n    user    0m0.024s\n    sys     0m0.043s\n    ```", "```\n    $ time docker run --rm alpine:3.12 sh -c \"apk update && apk add --update curl\"\n    real    0m2.644s\n    user    0m0.034s\n    sys     0m0.021s\n    ```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    test: liveness\n  name: liveness-execaction\nspec:\n  containers:\n  - name: liveness\n    image: k8s.gcr.io/busybox\n    args:\n    - /bin/sh\n    - -c\n    - touch /tmp/alive; sleep 30; rm -rf /tmp/alive; sleep 300\n    livenessProbe:\n      exec:\n        command:\n        - cat\n        - /tmp/alive\n      initialDelaySeconds: 10\n      periodSeconds: 10\n```", "```\n    $ kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.4.1/components.yaml\n    ```", "```\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n      name: nginx-hpa\n      namespace: default\n    spec:\n      replicas: 1\n      selector:\n        matchLabels:\n          app: nginx-hpa\n      template:\n        metadata:\n          labels:\n            app: nginx-hpa\n        spec:\n          containers:\n          - name: nginx-hpa\n            image: nginx:1.19.6\n            ports:\n            - containerPort: 80\n            resources:\n              requests:\n                cpu: \"200m\"\n    ```", "```\n    $ kubectl apply -f deployment-nginx.yaml\n    ```", "```\n    $ kubectl get deployments\n    NAME        READY   UP-TO-DATE   AVAILABLE   AGE\n    nginx-hpa   1/1     1            1           11s\n    ```", "```\n    apiVersion: autoscaling/v1\n    kind: HorizontalPodAutoscaler\n    metadata:\n    name: nginx-autoscale \n      namespace: default\n    spec:\n      scaleTargetRef:\n        apiVersion: apps/v1\n        kind: Deployment\n        name: nginx-hpa\n      minReplicas: 1\n      maxReplicas: 5\n      targetCPUUtilizationPercentage: 50\n    ```", "```\n    $ kubectl apply -f hpa-nginx.yaml\n    ```", "```\n    $ kubectl get hpa\n    NAME              REFERENCE              TARGETS         MINPODS   MAXPODS   REPLICAS   AGE\n    nginx-autoscale   Deployment/nginx-hpa   0%/50%   1         5         0          15s\n    ```"]