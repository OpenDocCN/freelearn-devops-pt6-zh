- en: '14'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Conclusion and the Future of Kubernetes Secrets Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This handbook provided you with the fundamental components to secure your container
    orchestration platform, serving as a reference to continuously improve your security
    posture while having observed the needs of external solutions to enhance or address
    the current Kubernetes design when it comes to Secrets management.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this last chapter, we are going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: The current state of Kubernetes and what it brings to Secrets management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The future brought by the Kubernetes projects and how to influence it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to stay up to date with the latest trends and practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The current state of Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the widespread adoption of Kubernetes, this handbook shows solutions that
    can leverage Kubernetes native constructs as an internal vault solution as well
    as external ones from Azure, AWS, GCP, and HashiCorp. A combination of the two
    might be required to improve the security posture when managing Secrets for both
    the platform components and applications.
  prefs: []
  type: TYPE_NORMAL
- en: These solutions serve as safeguards to sensitive information stored within Kubernetes
    clusters and revolve around the principle of storing, managing, and distributing
    API keys, passwords, and certificates with no or limited security exposure safely
    and securely.
  prefs: []
  type: TYPE_NORMAL
- en: Native solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Kubernetes project uses **Kubernetes Enhancement Proposal** (**KEP**) to
    document the design changes with the targeted releases for the alpha, beta, and
    **general availability** (**GA**) of these sets of changes.
  prefs: []
  type: TYPE_NORMAL
- en: The KMS provider
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'KEP has been documenting security changes concerning the native Kubernetes
    Secrets management since version 1.25 with the following themes:'
  prefs: []
  type: TYPE_NORMAL
- en: Implement seamless key rotation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduce health checks for reliability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve performance without compromising resilience and security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve end-to-end observability between the Kubernetes API server, the KMS
    plugin, and the KMS with auditing capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These improvements are in sync with the challenges we have observed and mitigated
    through this handbook, improving and helping to maintain a Kubernetes cluster’s
    security posture.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the time of writing, the latest release of Kubernetes is 1.28\. It brings
    a set of improvements regarding the native Secrets management, as documented within
    *KEP-3299,* *KMSv2 Improvements*:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the changes:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecation of the previous `KMSv1` feature in favor of `KMSv2`; this change
    leads toward the GA of `KMSv2`, which is scheduled in version 1.29.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementation of a new `KMSv2KDF` feature gate or the generation of a new DEK
    per encryption. This change provides the operation team with an optional behavior
    that can be enabled to comply with regulations where the default `KMSv2` behavior
    of generating a single DEK at the Kubernetes API server startup time is not acceptable.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is the KEP 3299 GitHub link: [https://github.com/kubernetes/enhancements/blob/master/keps/sig-auth/3299-kms-v2-improvements/README.md](https://github.com/kubernetes/enhancements/blob/master/keps/sig-auth/3299-kms-v2-improvements/README.md).'
  prefs: []
  type: TYPE_NORMAL
- en: See the *Key value data* section in [*Chapter 3*](B20970_03.xhtml#_idTextAnchor064),
    *Encrypting Secrets the Kubernetes-Native Way*, for an overview of the technical
    evolution between the `KMSv1` and `KMv2` implementations.
  prefs: []
  type: TYPE_NORMAL
- en: Note that `KMSv2` is still considered *beta* in version 1.28 of Kubernetes and
    is targeted for a GA status with version 1.29 (at the time of writing).
  prefs: []
  type: TYPE_NORMAL
- en: The CSI Secrets Store
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'CSI Secrets Store could be considered an external solution to Kubernetes due
    to its dependency on an external vault service. However, the CSI Secrets Store
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: Based on the **Container Storage Interface** (**CSI**) architecture which is
    a native Kubernetes interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carried over by a Kubernetes project’s **Special Interest** **Group** (**SIG**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leveraging native Kubernetes API objects without the need for an agent, a sidecar
    container, or non-native Kubernetes patterns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is the link to the CSI Secrets Store project: [https://secrets-store-csi-driver.sigs.k8s.io/](https://secrets-store-csi-driver.sigs.k8s.io/).'
  prefs: []
  type: TYPE_NORMAL
- en: Not only this model can ease the injection of Secrets from an external vault
    into applications, but it can also synchronize Secrets as native Kubernetes Secret
    objects if needed.
  prefs: []
  type: TYPE_NORMAL
- en: Sync Secret capability
  prefs: []
  type: TYPE_NORMAL
- en: When using the Sync Secret feature, the CSI Secrets Store will synchronize external
    Secrets as native Kubernetes Secret objects which requires setting up an encryption
    of data at rest to ensure the sensitive data payloads from these objects are encrypted.
  prefs: []
  type: TYPE_NORMAL
- en: See the *Key value data* section from [*Chapter 3*](B20970_03.xhtml#_idTextAnchor064)*,
    Encrypting Secrets the Kubernetes-Native Way*, for an overview of the different
    options.
  prefs: []
  type: TYPE_NORMAL
- en: 'Like with Kubernetes’s `kms` provider, the CSI Secrets Store is following the
    same minimal requirements to embrace a DevSecOps model, which includes the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A native CSI model for the platform team to implement a simple connectivity
    towards external vault services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A self-service model via the native Kubernetes API objects for application teams
    to consume Secrets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metrics, logging, and secret auto-rotation, to comply with security regulations
    and frameworks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Visibility from a roadmap perspective and the current implementation status,
    which is available here: [https://secrets-store-csi-driver.sigs.k8s.io/design-docs](https://secrets-store-csi-driver.sigs.k8s.io/design-docs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The CSI Secrets Store project is an elegant and native solution that is getting
    more and more popular and even becoming fully integrated within enterprise Kubernetes
    distributions such the Red Hat OpenShift version 4.14.
  prefs: []
  type: TYPE_NORMAL
- en: External solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous section, we looked at the Kubernetes project’s roadmaps for
    its native solutions since they are open source. However, that is something difficult
    to do here as not all the solutions are open source.
  prefs: []
  type: TYPE_NORMAL
- en: The external solutions that we have reviewed within this handbook are the most
    common ones as they lead their segment or are native to the cloud providers.
  prefs: []
  type: TYPE_NORMAL
- en: Like the Kubernetes projects, these ecosystem solutions are rapidly evolving
    to support more patterns and improve business continuity planning, but more importantly,
    improve the security posture for both the platform and applications running on
    it.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the plethora of solutions, let’s zoom in on just one example at the time
    of writing. A recent addition from HashiCorp, called Vault Radar, provides scanners
    to identify Secrets being leaked or hard coded within the application code. Vault
    Radar offers remediation paths for security exposures and prioritizes these by
    ranking by risks.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to improving and maintaining a security posture and with the increased
    adoption of multi-cloud architecture, identifying such sprawl of sensitive information
    is critical to reducing surface attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The future state of Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When thinking about the future state of a piece of software or a solution,
    there are two considerations:'
  prefs: []
  type: TYPE_NORMAL
- en: The desires or needs that are linked to specific, future, and missing use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing roadmap, its relationship with the current architecture, and how
    to include future enhancements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we’ve observed in this handbook, there is not one software to address all
    needs. It often involves combining multiple projects and composing a solution
    toward our end goal while managing Secrets for both the Kubernetes platform and
    applications running on it. As such, let’s have a solution-driven overview of
    what we would expect for the future.
  prefs: []
  type: TYPE_NORMAL
- en: Food for thought and enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting with the native stack offered by the Kubernetes project, the proposed
    changes and roadmap are documented in KEP-3299\. The same goes for the design
    documents from the SIG in charge of CSI Secrets Store.
  prefs: []
  type: TYPE_NORMAL
- en: 'Generally speaking, and with all respect to Kubernetes’ API-driven design,
    the following topics would be greatly welcomed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`aesgcm` and `aescbc`, come with a set of challenges that relatively complexify
    the implementation, exposing their encryption keys or the lack of a commercial
    version of a KMS plugin to provide enterprise support and services. This change
    could also help with not only encrypting the sensitive data payload stored in
    `etcd` but any other data payload from API objects. A deployment definition, as
    an example, can provide enough valuable information about the platform and applications
    to be exploited by malicious attackers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dynamic secret**: The ability to update the secret based on specific scenarios,
    which is a requirement to comply with most, if not all, regulations and frameworks.
    Efforts on that matter are being considered within the following initiatives:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KEP-3299 has priority in terms of automating the rotation of the encryption
    to reduce potential attacks
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: CSI Secrets Store triggers an update of the secret payload when the external
    source is changing.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: While both previous points could observe and act on the life cycle of key or
    secret, auditing the actual usage and uniqueness of a secret payload would be
    greatly appreciated to reduce the sprawl of the same payload across multiple platforms
    and applications, thus leading to large-scale exposure when the related payload
    is compromised
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`etcd` so that it doesn’t have potential security exposures, what about replacing
    this data store with an external vault that leverages the Kubernetes KMS plugin
    provider? This would greatly ease the burden in terms of knowledge, the cost in
    terms of time and knowledge, and maintenance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`etcd` data store. The premise of such a solution is to have multiple service
    instances (at least three for obvious high-availability requirements) bound to
    a defined network segment and to hold a part of the encryption key within the
    boundaries of a defined network segment. Using such an encryption key service
    model along with the `aesgcm` and `aescbc` to be safer than they are today with
    limited external services to be deployed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enrich the logging capabilities**: With **security information and event
    management** (**SIEM**) systems, a more detailed view of the security posture
    could be provided from a secret-related point of view. This is often a request
    from enterprise organizations that want to leverage the power of a centralized
    logging system to correlate events and quickly audit potentially impacted systems
    during a security incident response, especially considering the sprawl of objects
    in multi-platform and multi-cloud architecture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are five examples that you could think of after reading this handbook
    and implementing the shared solutions.
  prefs: []
  type: TYPE_NORMAL
- en: How to share your thoughts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We all have ideas to improve the usability and requirements to support the organization’s
    survival. Like the five previous examples, these might not be part of any request
    for enhancements, roadmap, or design documents from any software projects and
    vendors yet.
  prefs: []
  type: TYPE_NORMAL
- en: So, how can we influence the development? The general rule is to open an issue
    or a ticket to express your enhancement request.
  prefs: []
  type: TYPE_NORMAL
- en: For proprietary solutions, this would be translated by contacting the vendor
    and asking to open a ticket related to your enhancement, which might (or might
    not) find its way to the vendor’s engineering organization. At this stage, the
    evolution of such a request is about the same as following the activity of a black
    hole.
  prefs: []
  type: TYPE_NORMAL
- en: For open source projects, including Kubernetes, the process is much more open.
    First, it is recommended to discuss your thoughts with the appropriate SIG on
    Slack or at meetups. This will allow you to discover if a similar workstream is
    currently in progress to which you can contribute or if it is a good idea to introduce
    it to the Kubernetes project development teams.
  prefs: []
  type: TYPE_NORMAL
- en: 'At this stage, the next step is to create a new issue on the Kubernetes repository.
    Let’s look at GitHub issue #111532 concerning the default behavior of the Kubernetes
    API server regarding the `EncryptionConfiguration` API object:'
  prefs: []
  type: TYPE_NORMAL
- en: '*What would you like to* *be added?*'
  prefs: []
  type: TYPE_NORMAL
- en: '*The current behavior of the EncryptionConfiguration API for the provider list
    is order-based, so the API server must be restarted for it to acknowledge a newly*
    *defined order.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*As an example, let’s consider moving from* *this definition:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '*Moving to the following one will require the API server to* *be restarted:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*With proposal #111405, the necessary construct enables* *this implementation.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Why is* *this needed?*'
  prefs: []
  type: TYPE_NORMAL
- en: '*The current behavior is the source of disruption from a service perspective,
    requires a user with elevated privileges, and does not allow the KMS provider’s
    plugin capabilities to be leveraged within the context of the managed Kubernetes
    offering (no access to the control* *plane nodes).*'
  prefs: []
  type: TYPE_NORMAL
- en: '*This change will improve the* *following aspects:*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Day 2 operations; move the EncryptionConfiguration API to a regular CRUD*
    *API object*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Resilience and service continuity by avoiding having to restart the* *API
    server*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The usage of the KMS provider plugin to manage* *Kubernetes offerings*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note about GitHub issue #111532'
  prefs: []
  type: TYPE_NORMAL
- en: This example is an as-is extract from this book’s GitHub repository without
    language fixing or formatting applied.
  prefs: []
  type: TYPE_NORMAL
- en: The template is simple – a clear explanation of the what and the why with clear
    example(s) and, if you can, the how with the code to illustrate the change.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Kubernetes SIG authentication in charge of the KMSv2 implementation picked
    up GitHub issue #111532 and addressed the request for enhancement by implementing
    the code change from GitHub #111919\. The outcome of this change is the configuration
    being reloaded without the need to restart the Kubernetes API server when the
    `EncryptionConfiguration` API object is modified.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following links will provide you with direct access to the resources so
    that you can contribute to the Kubernetes project:'
  prefs: []
  type: TYPE_NORMAL
- en: 'How to reach out to the Kubernetes community: [https://kubernetes.io/community/](https://kubernetes.io/community/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Kubernetes GitHub organization: [https://github.com/kubernetes](https://github.com/kubernetes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Kubernetes SIGs: [https://github.com/kubernetes-sigs](https://github.com/kubernetes-sigs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub issue #111532 used as an example: [https://github.com/kubernetes/kubernetes/issues/111532#issue-1321971248](https://github.com/kubernetes/kubernetes/issues/111532#issue-1321971248)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub issue #111919 used to address enhancement #111532: [https://github.com/kubernetes/kubernetes/issues/111919](https://github.com/kubernetes/kubernetes/issues/111919)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While it might seem rather intimidating to introduce an issue for such a large
    project, the open source communities around Kubernetes have been building a safe
    space for anyone to share their ideas and experiences. Now, it is your turn to
    contribute!
  prefs: []
  type: TYPE_NORMAL
- en: Continuous improvement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This handbook took a continuous improvement approach by considering the DevSecOps
    best practices. When designing, architecting, implementing, and securing any platform
    or software, various principles should be considered. Let’s take a look.
  prefs: []
  type: TYPE_NORMAL
- en: Skill acquisition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most security exposures are linked to a lack of knowledge or awareness. One
    of the DevSecOps principles is cross-team collaboration so that members can share
    their experiences and discoveries as they all share the same responsibilities
    to ensure secure systems for their end users and customers.
  prefs: []
  type: TYPE_NORMAL
- en: Participating in training, webinars, and meetups should be a priority for any
    organization to understand the importance of security and to improve its security
    posture.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, contribute to open source projects by sharing experience, knowledge,
    code, and ideas that will contribute back to your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Start early, fail fast, and iterate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most organizations still tend to consider a waterfall approach when it comes
    to building infrastructure with limited innovation.
  prefs: []
  type: TYPE_NORMAL
- en: While this project methodology is more than valid for many domains, waiting
    until the last moment to implement a solution could lead to significant delays
    with suboptimal outcomes or worse, a project failure.
  prefs: []
  type: TYPE_NORMAL
- en: Another reason to consider adopting such a methodology is limited innovation
    for the last two decades in building new platforms. As a result, the adoption
    of Kubernetes is often done with the relics of legacy patterns, which has led
    to suboptimal implementation or additional burdens for both the application and
    operation teams.
  prefs: []
  type: TYPE_NORMAL
- en: A good practice for cloud-native platforms such as Kubernetes is to start the
    implementation early with all the stakeholders involved and learn alongside the
    project with continuous feedback on success, failures, and future improvements.
    This will lead to a hybrid project model that fits both the waterfall and agile
    project management styles so that it suits the enterprise’s needs for planning
    and accelerated delivery.
  prefs: []
  type: TYPE_NORMAL
- en: Automation as a strategy and Everything as Code (EaC)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most security breaches are related to a lack of automation. When teams are working
    on security topics or incidents, they often perform the tasks on systems, document
    them in tickets, and the effort stops there.
  prefs: []
  type: TYPE_NORMAL
- en: As a best practice, every single action toward implementing a system should
    be codified, reviewed through a source revision system, and automated. This includes
    the activities of all teams as they are all responsible from a security standpoint
    for both existing procedures and future ones that are linked to incidents or newly
    discovered vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: From there, constant drift detection needs to be in place to guarantee all systems
    are retrofitted with the latest security remediations.
  prefs: []
  type: TYPE_NORMAL
- en: A good practice is to consider **Everything as Code** (**EaC**) for automating
    your infrastructure, application, governance, compliance, and security. When doing
    so, the entire stack, from the hardware up to the application running in containers,
    along with the business continuity plan, can be part of your **continuous integration
    and continuous delivery** (**CI/CD**) pipelines. This approach will serve as the
    gatekeeper against deploying critical applications on unsafe platforms.
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Threat modeling identifies potential security threats and vulnerabilities early
    on in the implementation and deployment of platforms and applications. The security
    team should be part of the core team of each domain to help discover what could
    go wrong and plan the relevant mitigations.
  prefs: []
  type: TYPE_NORMAL
- en: By leveraging a collaboration culture with the appropriate tooling, threat modeling
    helps to create a proactive security posture, thereby reducing and even preventing
    major security issues before they become real.
  prefs: []
  type: TYPE_NORMAL
- en: Incident response
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While implementing all these solutions as preventive measures, security incidents
    will occur or later happen. The DevSecOps practices include a response plan to
    simplify how security incidents are handled as soon as they are detected. The
    security team will train the organization by defining its roles, communication
    channels, and the required actions to contain and mitigate the security exposure.
  prefs: []
  type: TYPE_NORMAL
- en: The incident response should not just be a documented process but a regular
    exercise to be randomly triggered and can be gamified like a Locked Shield to
    upskill the teams when they’re experiencing a cyberattack.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a link illustrating an annual Lock Shield scenario at an international
    level: [https://ccdcoe.org/exercises/locked-shields/](https://ccdcoe.org/exercises/locked-shields/).'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations – you’ve made it! You’ve read this handbook, which acts as a
    reference for any organization adopting Kubernetes and is concerned with the topic
    of Secrets management. Often considered under control from a legacy platform perspective,
    it is a completely different story when it comes to Kubernetes as the leading
    cloud-native container platform.
  prefs: []
  type: TYPE_NORMAL
- en: The handbook provides a comprehensive walkthrough with technical examples about
    how to address the challenges, respond to the questions of business continuity,
    and provide the necessary considerations about auditing and compliance. But all
    these will not make much sense if they’re considered as an endgame with a one-time
    implementation approach instead of adopting a DevSecOps mindset.
  prefs: []
  type: TYPE_NORMAL
- en: While most consider DevSecOps as a buzzword, it is a fundamental shift that
    organizations can embrace to rapidly learn and adopt new technologies. This method
    calls for cross-collaboration between all teams supporting an organization’s infrastructure.
    By fostering a culture of *sharing is caring*, the tasks of automating the security
    policies, checks, and remediations will become an organic activity without the
    need to consider security as a bottleneck to innovation.
  prefs: []
  type: TYPE_NORMAL
- en: Adopting the culture, process, and technology shared in this handbook will allow
    organizations to deliver value faster to their customers in a more secure, reliable,
    and compliant way.
  prefs: []
  type: TYPE_NORMAL
- en: Technology is easy and should not be a substitute for organizational change.
    Hopefully, this book helped you with selecting the appropriate toolset to manage
    your Secrets and sparked your transformation journey of infusing a culture of
    DevSecOps and continuous change.
  prefs: []
  type: TYPE_NORMAL
