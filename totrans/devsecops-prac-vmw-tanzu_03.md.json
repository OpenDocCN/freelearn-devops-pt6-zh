["```\n    $ kubectl config use-context <CONTEXT-NAME>\n    ```", "```\n    $ docker login -u p********t\n    ```", "```\n    Password:\n    ```", "```\n    Login Succeeded\n    ```", "```\n    $ docker login registry.tanzu.vmware.com\n    ```", "```\n    Username: p********t@*******.io\n    ```", "```\n    Password:\n    ```", "```\n    Login Succeeded\n    ```", "```\n    $ imgpkg copy -b \"registry.tanzu.vmware.com/build-service/bundle:1.3.0\" --to-repo p********t/build-service-1-3\n    ```", "```\n    copy | exporting 17 images...\n    ```", "```\n    copy | will export registry.tanzu.vmware.com/build-service/bundle@sha256:0e64239d34119c1b8140d457a238050751360617d8e8b64703d8b7b4f944054a\n    ```", "```\n    ..\n    ```", "```\n    copy | will export registry.tanzu.vmware.com/build-service/smart-warmer@sha256:4d865b7f4c10c1099ae9648a64e6e7da097d0a375551e8fd2ef80a6d1fc50176\n    ```", "```\n    copy | exported 17 images\n    ```", "```\n    copy | importing 17 images...\n    ```", "```\n     443.39 MiB / 443.64 MiB [==============================================================================================]  99.94% 1.92 MiB/s 3m51s\n    ```", "```\n    copy | done uploading images\n    ```", "```\n    copy | Warning: Skipped layer due to it being non-distributable. If you would like to include non-distributable layers, use the --include-non-distributable-layers flag\n    ```", "```\n    Succeeded\n    ```", "```\n    $ imgpkg pull -b \"p********t/build-service-1-3:1.3.0\" -o /tmp/bundle\n    ```", "```\n    Pulling bundle 'index.docker.io/p********t/build-service-1-3@sha256:0e64239d34119c1b8140d457a238050751360617d8e8b64703d8b7b4f944054a'\n    ```", "```\n      Extracting layer 'sha256:872d56ff2b8ef97689ecaa0901199d84e7f7ae55bfef3ad9c7effa14b02e6dfd' (1/1)\n    ```", "```\n    Locating image lock file images...\n    ```", "```\n    The bundle repo (index.docker.io/p********t/build-service-1-3) is hosting every image specified in the bundle's Images Lock file (.imgpkg/images.yml)\n    ```", "```\n    Succeeded\n    ```", "```\n    $ ytt -f /tmp/bundle/values.yaml -f /tmp/bundle/config/ -v kp_default_repository='p********t/build-service-1-3' -v kp_default_repository_username='p********t' -v kp_default_repository_password='**********' -v pull_from_kp_default_repo=true -v tanzunet_username='p********t@*******.io' -v tanzunet_password='**********' | kbld -f /tmp/bundle/.imgpkg/images.yml -f- | kapp deploy -a tanzu-build-service -f- -y\n    ```", "```\n    resolve | final: build-init -> index.docker.io/p********t/build-service-1-3@sha256:838e8f1ad7be81e8dab637259882f9c4daea70c42771264f96be4b57303d85f2\n    ```", "```\n    resolve | final: completion -> index.docker.io/p********t/build-service-1-3@sha256:765dafb0bb1503ef2f9d2deb33b476b14c85023e5952f1eeb46a983feca595c6\n    ```", "```\n    ..\n    ```", "```\n    ..\n    ```", "```\n    Succeeded\n    ```", "```\n$ kp clusterbuilder list\n```", "```\nNAME       READY    STACK                          IMAGE\nbase       true     io.buildpacks.stacks.bionic p********t/build-service-1-3:clusterbuilder-base@sha256:7af47645c47b305caa1b14b3900dbca206025e30b684e9cd32b6d27f9942661f\ndefault    true     io.buildpacks.stacks.bionic    p********t/build-service-1-3:clusterbuilder-default@sha256:7af47645c47b305caa1b14b3900dbca206025e30b684e9cd32b6d27f9942661f\nfull       true     io.buildpacks.stacks.bionic    p********t/build-service-1-3:clusterbuilder-full@sha256:714990fdf5e90039024bceafd5f499830235f1b5f51477a3434f3b297646b3d0\ntiny       true     io.paketo.stacks.tiny          p********t/build-service-1-3:clusterbuilder-tiny@sha256:29d03b1d4f45ce6e7947ab2bf862023f47d5a6c84e634727900a1625e661ee3b\n```", "```\n$ kp image list\nError: no image resources found\n```", "```\n$ DOCKER_PASSWORD=\"**********\" kp secret create tbs-dockerhub-cred –dockerhub p********t\nSecret \"tbs-dockerhub-cred\" created\n```", "```\n$ kp image create tbs-spring-petclinic --tag p********t/tbs-spring-petclinic:1.0 --wait --git  https://github.com/PacktPublishing/DevSecOps-in-Practice-with-VMware-Tanzu/tree/main/spring-petclinic --git-revision main\n```", "```\n$ kp image list\nNAME                    READY    LATEST REASON    LATEST IMAGE                                                     NAMESPACE\ntbs-spring-petclinic    True     CONFIG           index.docker.io/p********t/tbs-spring-petclinic@sha256:45688e54b22ee96e798f3f28e09a81020acc69fa0db806690aeb2ba07ae3ab00    default\n```", "```\n$ kp build list\nBUILD    STATUS     BUILT IMAGE                                                     REASON    IMAGE RESOURCE\n1        SUCCESS    index.docker.io/p********t/tbs-spring-petclinic@sha256:45688e54b22ee96e798f3f28e09a81020acc69fa0db806690aeb2ba07ae3ab00    CONFIG    tbs-spring-petclinic\n```", "```\n$ kp build list\nBUILD    STATUS      BUILT IMAGE                                                              REASON    IMAGE RESOURCE\n1        SUCCESS     index.docker.io/p********t/tbs-spring-petclinic@sha256:45688e54b22ee96e798f3f28e09a81020acc69fa0db806690aeb2ba07ae3ab00    CONFIG    tbs-spring-petclinic\n2        BUILDING                                  COMMIT    tbs-spring-petclinic\n```", "```\n$ kp build logs tbs-spring-petclinic\n..\n..\nSaving p********t/tbs-spring-petclinic:1.0...\n*** Images (sha256:322010cd44fa9dc3bcb0bfadc7ba6873fb65f1bfe4f0bbe6cf6dc9d4e3112e84):\n      p********t/tbs-spring-petclinic:1.0\n      index.docker.io/p********t/tbs-spring-petclinic:1.0-b2.20211213.072737\n===> COMPLETION\nBuild successful\n```", "```\n$ kubectl get TanzuNetDependencyUpdater -A\nNAMESPACE       NAME                 DESCRIPTORVERSION   READY\nbuild-service   dependency-updater   100.0.240           True\n```", "```\n$ kapp delete -a tanzu-build-service\n```"]