["```\n$ brew update\n```", "```\n$ brew install awscli\n```", "```\n$ aws --version\naws-cli/1.15.0 Python/3.6.5 Darwin/17.5.0 botocore/1.10.0\n```", "```\n$ aws configure\nAWS Access Key ID [None]: <Your Access KeyID>\nAWS Secret Access Key [None]: <Your Secret Access Key>\nDefault region name [None]: us-east-1\nDefault output format [None]:\n```", "```\n$ aws iam get-user\n{\n   \"User\": {\n       \"Path\": \"/\",\n       \"UserName\": \"chap6\",\n       \"UserId\": \"*********************\",\n       \"Arn\": \"arn:aws:iam::***************:user/chap6\",\n       \"CreateDate\": \"2018-04-14T04:22:21Z\"\n    }\n}\n```", "```\n$ aws ec2 create-vpc --cidr-block 192.168.0.0/16\n{\n    \"Vpc\": {\n        \"CidrBlock\": \"192.168.0.0/16\",\n        \"DhcpOptionsId\": \"dopt-3d901958\",\n        \"State\": \"pending\",\n        \"VpcId\": \"vpc-69cfbd12\",\n        \"InstanceTenancy\": \"default\",\n       \"Ipv6CidrBlockAssociationSet\": [],\n        \"CidrBlockAssociationSet\": [\n            {\n                \"AssociationId\": \"vpc-cidr-assoc-c35411ae\",\n                \"CidrBlock\": \"192.168.0.0/16\",\n                \"CidrBlockState\": {\n                    \"State\": \"associated\"\n                }\n            }\n        ],\n        \"IsDefault\": false,\n        \"Tags\": []\n    }\n}\n```", "```\n$ aws ec2 create-subnet --vpc-id vpc-69cfbd12 --cidr-block 192.168.0.0/24 --availability-zone us-east-1a\n{\n    \"Subnet\": {\n        \"AvailabilityZone\": \"us-east-1a\",\n        \"AvailableIpAddressCount\": 251,\n        \"CidrBlock\": \"192.168.0.0/24\",\n        \"DefaultForAz\": false,\n        \"MapPublicIpOnLaunch\": false,\n        \"State\": \"pending\",\n        \"SubnetId\": \"subnet-6296863f\",\n        \"VpcId\": \"vpc-69cfbd12\",\n       \"AssignIpv6AddressOnCreation\": false,\n       \"Ipv6CidrBlockAssociationSet\": []\n    }\n}\n```", "```\n$ aws ec2 create-subnet --vpc-id vpc-69cfbd12 --cidr-block 192.168.1.0/24 --availability-zone us-east-1b\n{\n    \"Subnet\": {\n        \"AvailabilityZone\": \"us-east-1b\",\n        \"AvailableIpAddressCount\": 251,\n        \"CidrBlock\": \"192.168.1.0/24\",\n        \"DefaultForAz\": false,\n        \"MapPublicIpOnLaunch\": false,\n        \"State\": \"pending\",\n        \"SubnetId\": \"subnet-ce947da9\",\n        \"VpcId\": \"vpc-69cfbd12\",\n       \"AssignIpv6AddressOnCreation\": false,\n       \"Ipv6CidrBlockAssociationSet\": []\n    }\n}\n```", "```\n$ aws ec2 describe-subnets --filters \"Name=vpc-id,Values=vpc-69cfbd12\" --query \"Subnets[*].{Vpc:VpcId,CIDR:CidrBlock,AZ:AvailabilityZone,Id:SubnetId}\" --output=table\n---------------------------------------------------------------------\n|                          DescribeSubnets                          |\n+------------+------------------+-------------------+---------------+\n|     AZ     |      CIDR        |       Id          |      Vpc      |\n+------------+------------------+-------------------+---------------+\n|  us-east-1a|  192.168.0.0/24  |  subnet-6296863f  |  vpc-69cfbd12 |\n|  us-east-1b|  192.168.1.0/24  |  subnet-ce947da9  |  vpc-69cfbd12 |\n+------------+------------------+-------------------+---------------+\n```", "```\n$ aws ec2 create-internet-gateway\n{\n   \"InternetGateway\": {\n       \"Attachments\": [],\n       \"InternetGatewayId\": \"igw-e50b849d\",\n       \"Tags\": []\n    }\n}\n```", "```\n$ aws ec2 attach-internet-gateway --vpc-id vpc-69cfbd12 --internet-gateway-id igw-e50b849d\n```", "```\n$ aws ec2 create-route-table --vpc-id vpc-69cfbd12\n{\n    \"RouteTable\": {\n       \"Associations\": [],\n       \"PropagatingVgws\": [],\n       \"RouteTableId\": \"rtb-a9e791d5\",\n       \"Routes\": [\n            {\n               \"DestinationCidrBlock\": \"192.168.0.0/16\",\n               \"GatewayId\": \"local\",\n               \"Origin\": \"CreateRouteTable\",\n               \"State\": \"active\"\n            }\n        ],\n       \"Tags\": [],\n       \"VpcId\": \"vpc-69cfbd12\"\n    }\n}\n```", "```\n$ aws ec2 create-route --route-table-id rtb-a9e791d5 --gateway-id igw-e50b849d --destination-cidr-block 0.0.0.0/0\n```", "```\n$ aws ec2 associate-route-table --route-table-id rtb-a9e791d5 --subnet-id subnet-6296863f\n```", "```\n$ aws ec2 modify-subnet-attribute --subnet-id subnet-6296863f --map-public-ip-on-launch\n```", "```\n$ aws ec2 allocate-address\n{\n   \"PublicIp\": \"18.232.18.38\",\n   \"AllocationId\": \"eipalloc-bad28bb3\",\n   \"Domain\": \"vpc\"\n}\n```", "```\n$ aws ec2 create-nat-gateway --subnet-id subnet-6296863f --allocation-id eipalloc-bad28bb3\n{\n   \"NatGateway\": {\n       \"CreateTime\": \"2018-04-14T18:49:36.000Z\",\n       \"NatGatewayAddresses\": [\n            {\n               \"AllocationId\": \"eipalloc-bad28bb3\"\n            }\n       ],\n       \"NatGatewayId\": \"nat-0b12be42c575bba43\",\n       \"State\": \"pending\",\n       \"SubnetId\": \"subnet-6296863f\",\n       \"VpcId\": \"vpc-69cfbd12\"\n    }\n}\n```", "```\n$ aws ec2 create-route-table --vpc-id vpc-69cfbd12\n{\n   \"RouteTable\": {\n       \"Associations\": [],\n       \"PropagatingVgws\": [],\n       \"RouteTableId\": \"rtb-70f1870c\",\n       \"Routes\": [\n            {\n               \"DestinationCidrBlock\": \"192.168.0.0/16\",\n               \"GatewayId\": \"local\",\n               \"Origin\": \"CreateRouteTable\",\n               \"State\": \"active\"\n            }\n        ],\n       \"Tags\": [],\n       \"VpcId\": \"vpc-69cfbd12\"\n    }\n}\n```", "```\n$ aws ec2 create-route --route-table-id rtb-70f1870c --nat-gateway-id nat-0b12be42c575bba43 --destination-cidr-block 0.0.0.0/0\n```", "```\n$ aws ec2 associate-route-table --route-table-id rtb-70f1870c --subnet-id subnet-ce947da9\n```", "```\n$ aws ec2 create-security-group --vpc-id vpc-69cfbd12 --group-name public --description \"public facing host\"\n{\n   \"GroupId\": \"sg-dd8a3f94\"\n}\n```", "```\n$ aws ec2 authorize-security-group-ingress --group-id sg-dd8a3f94 --protocol tcp --port 22 --cidr 0.0.0.0/0\n```", "```\n$ aws ec2 authorize-security-group-ingress --group-id sg-dd8a3f94 --protocol tcp --port 80 --cidr 0.0.0.0/0\n```", "```\n$ aws ec2 create-security-group --vpc-id vpc-69cfbd12 --group-name private --description \"private subnet host\"\n{\n   \"GroupId\": \"sg-a18c39e8\"\n}\n```", "```\n$ aws ec2 authorize-security-group-ingress --group-id sg-a18c39e8 --protocol tcp --port 22 --source-group sg-dd8a3f94\n```", "```\n$ aws ec2 describe-security-groups --filters \"Name=vpc-id, Values=vpc-69cfbd12\" --query \"SecurityGroups[*].{id:GroupId,name:GroupName}\" --output table\n----------------------------\n|  DescribeSecurityGroups  |\n+--------------+-----------+\n|      id      |   name    |\n+--------------+-----------+\n|  sg-2ed56067 |  default  |\n|  sg-a18c39e8 |  private  |\n|  sg-dd8a3f94 |  public   |\n+--------------+-----------+\n```", "```\n$ aws ec2 import-key-pair --key-name=chap6-key --public-key-material \"`cat ~/.ssh/id_rsa.pub`\"\n```", "```\n$ aws ec2 run-instances --image-id ami-1853ac65 --instance-type t2.nano --key-name chap6-key --security-group-ids sg-dd8a3f94 --subnet-id subnet-6296863f\n```", "```\n$ aws ec2 run-instances --image-id ami-1853ac65 --instance-type t2.nano --key-name chap6-key --security-group-ids sg-a18c39e8 --subnet-id subnet-ce947da9\n```", "```\n$ aws ec2 describe-instances --filters \"Name=vpc-id,Values=vpc-69cfbd12\" --query \"Reservations[*].Instances[*].{id:InstanceId,PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,Subnet:SubnetId}\" --output=table\n-------------------------------------------------------------------------------\n|                             DescribeInstances                              |\n+---------------+-----------------+------------------+------------------------+\n|   PrivateIP   |   PublicIP     |     Subnet       |          id            |\n+---------------+-----------------+------------------+------------------------+\n|  192.168.0.206|  34.228.228.140|  subnet-6296863f|  i-03a0e49d26a2dafa4   |\n|  192.168.1.218|  None           | subnet-ce947da9|  i-063080766d2f2f520   |\n+---------------+-----------------+------------------+------------------------+\n```", "```\n$ ssh -A ec2-user@34.228.228.140\nThe authenticity of host '34.228.228.140 (34.228.228.140)' can't be established.\nECDSA key fingerprint is SHA256:lE7hoBhHntVDvRItnasqyHRynajn2iuHJ7U3nsWySRU.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '34.228.228.140' (ECDSA) to the list of known hosts.\n       __|  __|_  )\n       _|  (    /   Amazon Linux AMI\n      ___|\\___|___|\nhttps://aws.amazon.com/amazon-linux-ami/2017.09-release-notes/\n8 package(s) needed for security, out of 13 available\nRun \"sudo yum update\" to apply all updates.\n[ec2-user@ip-192-168-0-206 ~]$\n```", "```\n[ec2-user@ip-192-168-0-206 ~]$ sudo yum -y install nginx\n[ec2-user@ip-192-168-0-206 ~]$ sudo service nginx start\nStarting nginx:                                            [ OK  ]\n```", "```\n$ ssh 192.168.1.218\n```", "```\n[ec2-user@ip-192-168-1-218 ~]$ sudo yum -y update\n```", "```\n// download the latest stable kops binary\n$ curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\n$ chmod +x kops-linux-amd64\n$ sudo mv kops-linux-amd64 /usr/local/bin/kops\n// verify the command is workable\n$ kops version\nVersion 1.9.0 (git-cccd71e67)\n```", "```\n$ export AWS_ACCESS_KEY_ID=${string of 20 capital character combination}\n$ export AWS_SECRET_ACCESS_KEY=${string of 40 character and number combination}\n```", "```\n$ kops create cluster --name my-cluster.k8s-cookbook.net --state=s3://kubernetes-cookbook --zones us-east-1a --cloud aws --network-cidr 10.0.0.0/16 --master-size t2.large --node-size t2.medium --node-count 2 --networking calico --topology private --ssh-public-key ~/.ssh/id_rsa.pub --bastion --yes\n...\nI0408 15:19:21.794035   13144 executor.go:91] Tasks: 105 done / 105 total; 0 can run\nI0408 15:19:21.794111   13144 dns.go:153] Pre-creating DNS records\nI0408 15:19:22.420077   13144 update_cluster.go:248] Exporting kubecfg for cluster\nkops has set your kubectl context to my-cluster.k8s-cookbook.net Cluster is starting.  It should be ready in a few minutes.\n...\n```", "```\n//check the cluster\n$ kops get cluster --state s3://kubernetes-cookbook\nNAME                         CLOUD  ZONES\nmy-cluster.k8s-cookbook.net  aws    us-east-1a\n```", "```\n// install kubectl on local\n$ curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\n$ chmod +x kubectl\n$ sudo mv kubectl /usr/local/bin/\n// check the nodes in cluster on AWS\n$ kubectl get nodes\nNAME                          STATUS    ROLES     AGE       VERSION\nip-10-0-39-216.ec2.internal   Ready     master    2m        v1.8.7\nip-10-0-40-26.ec2.internal    Ready     node      31s       v1.8.7\nip-10-0-50-147.ec2.internal   Ready     node      33s       v1.8.7\n```", "```\n//add private key to ssh authentication agent\n$ ssh-add ~/.ssh/id_rsa\n\n//use your private key with flag “-i”\n//we avoid it since the private key is in default location, ~/.ssh/id_rsa\n//also use -A option to forward an authentication agent\n$ ssh -A admin@bastion.my-cluster.k8s-cookbook.net\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sun Apr  8 19:37:31 2018 from 10.0.2.167\n// access the master node with its private IP\nadmin@ip-10-0-0-70:~$ ssh 10.0.39.216\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sun Apr  8 19:36:22 2018 from 10.0.0.70\nadmin@ip-10-0-39-216:~$\n```", "```\n$ kops delete cluster --name my-cluster.k8s-cookbook.net --state s3://kubernetes-cookbook --yes\nDeleted cluster: \"my-cluster.k8s-cookbook.net\"\n```", "```\n# kops create cluster --master-count 1 --node-count 2 --zones us-east-1a,us-east-1b,us-east-1c --node-size t2.micro --master-size t2.small --topology private --networking calico --authorization=rbac --cloud-labels \"Environment=dev\" --state $KOPS_STATE_STORE --name k8s-cookbook.net \nI0408 16:10:12.212571 34744 create_cluster.go:1318] Using SSH public key: /Users/k8s/.ssh/id_rsa.pub I0408 16:10:13.959274 34744 create_cluster.go:472] Inferred --cloud=aws from zone \"us-east-1a\" \nI0408 16:10:14.418739 34744 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet us-east-1a \nI0408 16:10:14.418769 34744 subnets.go:184] Assigned CIDR 172.20.64.0/19 to subnet us-east-1b I0408 16:10:14.418777 34744 subnets.go:184] Assigned CIDR 172.20.96.0/19 to subnet us-east-1c \nI0408 16:10:14.418785 34744 subnets.go:198] Assigned CIDR 172.20.0.0/22 to subnet utility-us-east-1a I0408 16:10:14.418793 34744 subnets.go:198] Assigned CIDR 172.20.4.0/22 to subnet utility-us-east-1b \nI0408 16:10:14.418801 34744 subnets.go:198] Assigned CIDR 172.20.8.0/22 to subnet utility-us-east-1c ... \nFinally configure your cluster with: kops update cluster k8s-cookbook.net --yes\n```", "```\n# kops validate cluster\nUsing cluster from kubectl context: k8s-cookbook.net\nValidating cluster k8s-cookbook.net\nINSTANCE GROUPS\nNAME                  ROLE   MACHINETYPE   MIN    MAX    SUBNETS\nmaster-us-east-1a     Master t2.small      1      1      us-east-1a\nnodes                 Node   t2.micro      2      2      us-east-1a,us-east-1b,us-east-1c\nNODE STATUS           \nNAME                              ROLE   READY                 \nip-172-20-44-140.ec2.internal     node   True\nip-172-20-62-204.ec2.internal     master True\nip-172-20-87-38.ec2.internal      node   True\nYour cluster k8s-cookbook.net is ready\n```", "```\n# cat aws-service.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      run: nginx\n  template:\n    metadata:\n      labels:\n        run: nginx\n    spec:\n      containers:\n        - image: nginx\n          name: nginx\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n    - port: 80\n      targetPort: 80\n  type: LoadBalancer\n  selector:\n    run: nginx\n```", "```\n# kubectl create -f aws-service.yaml \ndeployment.apps \"nginx\" created \nservice \"nginx\" created \n```", "```\n# kubectl describe svc nginx\nName:                     nginx\nNamespace:                default\nLabels:                   <none>\nAnnotations:              <none>\nSelector:                 run=nginx\nType:                     LoadBalancer\nIP:                       100.68.35.30\nLoadBalancer Ingress:     a9da4ef1d402211e8b1240ef0c7f25d3-1251329976.us-east-1.elb.amazonaws.com\nPort:                     <unset>  80/TCP\nTargetPort:               80/TCP\nNodePort:                 <unset>  31384/TCP\nEndpoints:                100.124.40.196:80,100.99.102.130:80,100.99.102.131:80\nSession Affinity:         None\nExternal Traffic Policy:  Cluster\nEvents:\n  Type    Reason                Age   From                Message\n  ----    ------                ----  ----                -------\n  Normal  EnsuringLoadBalancer  2m    service-controller  Ensuring load balancer\n  Normal  EnsuredLoadBalancer   2m    service-controller  Ensured load balancer \n```", "```\n# aws elb describe-load-balancers --load-balancer-names a9da4ef1d402211e8b1240ef0c7f25d3 --output text\nLOADBALANCERDESCRIPTIONS     a9da4ef1d402211e8b1240ef0c7f25d3-1251329976.us-east-1.elb.amazonaws.com Z35SXDOTRQ7X7K 2018-04-14T20:30:45.990Z       a9da4ef1d402211e8b1240ef0c7f25d3-1251329976.us-east-1.elb.amazonaws.com a9da4ef1d402211e8b1240ef0c7f25d3    internet-facing       vpc-07374a7c\nAVAILABILITYZONES     us-east-1a\nAVAILABILITYZONES     us-east-1b\nAVAILABILITYZONES     us-east-1c\nHEALTHCHECK   2      10     TCP:31384     5      6\nINSTANCES     i-03cafedc27dca591b\nINSTANCES     i-060f9d17d9b473074\nLISTENER      31384  TCP    80     TCP\nSECURITYGROUPS sg-3b4efb72\nSOURCESECURITYGROUP   k8s-elb-a9da4ef1d402211e8b1240ef0c7f25d3   516726565417\nSUBNETS subnet-088f9d27\nSUBNETS subnet-e7ec0580\nSUBNETS subnet-f38191ae\n```", "```\n// list all storageclass\n# kubectl get storageclass\nNAME            PROVISIONER             AGE\ndefault         kubernetes.io/aws-ebs   2h\ngp2 (default)   kubernetes.io/aws-ebs   2h\nIn this recipe, we'll reuse the PVC example we mentioned in Chapter 2-6:\n# cat chapter2/2-6_volumes/2-6-7_pvc.yaml\napiVersion: \"v1\"\nkind: \"PersistentVolumeClaim\"\nmetadata:\n  name: \"pvclaim01\"\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n// create pvc\n# kubectl create -f chapter2/2-6_volumes/2-6-7_pvc.yaml\npersistentvolumeclaim \"pvclaim01\" created\n// check pvc is created successfully.\n# kubectl get pvc\nNAME        STATUS    VOLUME                                     CAPACITY   \npvclaim01   Bound     pvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36   1Gi        \nACCESS    MODES   STORAGECLASS   AGE\nRWO            gp2            16m\n```", "```\n# kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   \npvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36   1Gi        RWO\nRECLAIM POLICY   STATUS    CLAIM               STORAGECLASS   REASON    AGE\nDelete           Bound     default/pvclaim01   gp2                      16m\n```", "```\n# kubectl describe pv pvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36\nName:            pvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36\nLabels:          failure-domain.beta.kubernetes.io/region=us-east-1\n                 failure-domain.beta.kubernetes.io/zone=us-east-1a\nAnnotations:     kubernetes.io/createdby=aws-ebs-dynamic-provisioner\n                 pv.kubernetes.io/bound-by-controller=yes\n                 pv.kubernetes.io/provisioned-by=kubernetes.io/aws-ebs\nClaim:           default/pvclaim01\n...\nSource:\n    Type:       AWSElasticBlockStore (a Persistent Disk resource in AWS)\n    VolumeID:   aws://us-east-1a/vol-035ca31b9cc1820d7\n    FSType:     ext4\n    Partition:  0\n    ReadOnly:   false\n```", "```\n// aws ec2 describe-volumes --filter Name=tag-value,Values=$PV_NAME\n# aws ec2 describe-volumes --filter Name=tag-value,Values=\"pvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36\"{\n    \"Volumes\": [\n        {\n            \"AvailabilityZone\": \"us-east-1a\",\n             \"Tags\": [\n                {   \"Value\": \"k8s-cookbook.net\",\n                    \"Key\": \"KubernetesCluster\" },\n                {   \"Value\": \"default\",\n                    \"Key\": \"kubernetes.io/created-for/pvc/namespace\" },\n                {   \"Value\": \"k8s-cookbook.net-dynamic-pvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36\",\n                    \"Key\": \"Name\" },\n                {   \"Value\": \"pvclaim01\",\n                    \"Key\": \"kubernetes.io/created-for/pvc/name\" },\n                {   \"Value\": \"owned\",\n                    \"Key\": \"kubernetes.io/cluster/k8s-cookbook.net\" },\n                {   \"Value\": \"pvc-e3d881d4-402e-11e8-b124-0ef0c7f25d36\",\n                    \"Key\": \"kubernetes.io/created-for/pv/name\" }],\n            \"VolumeType\": \"gp2\",\n            \"VolumeId\": \"vol-035ca31b9cc1820d7\",\n         ...\n        }    \n   ]\n}\n```", "```\n// kops get instancegroups or kops get ig \n# kops get instancegroups --name k8s-cookbook.net \nNAME ROLE MACHINETYPE MIN MAX ZONES \nmaster-us-east-1a Master t2.small 1 1 us-east-1a \nnodes Node t2.micro 2 2 us-east-1a,us-east-1b,us-east-1c \n```", "```\n# kops validate cluster\nUsing cluster from kubectl context: k8s-cookbook.net\nValidating cluster k8s-cookbook.net\nINSTANCE GROUPS\nNAME                  ROLE   MACHINETYPE   MIN    MAX    SUBNETS\nmaster-us-east-1a     Master t2.small      1      1      us-east-1a\nnodes                 Node   t2.micro      2      2      us-east-1a,us-east-1b,us-east-1c\nNODE STATUS\nNAME                         ROLE   READY\nip-172-20-44-140.ec2.internal       node   True\nip-172-20-62-204.ec2.internal       master True\nip-172-20-87-38.ec2.internal node   True\nYour cluster k8s-cookbook.net is ready\n```", "```\n// kops edit ig nodes\n# kops edit instancegroups nodes --name k8s-cookbook.net\napiVersion: kops/v1alpha2\nkind: InstanceGroup\nmetadata:\n  creationTimestamp: 2018-04-14T19:06:47Z\n  labels:\n    kops.k8s.io/cluster: k8s-cookbook.net\n  name: nodes\nspec:\n  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08\n  machineType: t2.micro\n  maxSize: 2\n  minSize: 2\n  nodeLabels:\n    kops.k8s.io/instancegroup: nodes\n  role: Node\n  subnets:\n  - us-east-1a\n  - us-east-1b\n  - us-east-1c\n```", "```\n# kops update cluster k8s-cookbook.net --yes\n...\nI0414 21:23:52.505171   16291 update_cluster.go:291] Exporting kubecfg for cluster\nkops has set your kubectl context to k8s-cookbook.net\nCluster changes have been applied to the cloud.\nChanges may require instances to restart: kops rolling-update cluster\n```", "```\n# kops validate cluster\nUsing cluster from kubectl context: k8s-cookbook.net\nValidating cluster k8s-cookbook.net\nINSTANCE GROUPS\nNAME                  ROLE   MACHINETYPE   MIN    MAX    SUBNETS\nmaster-us-east-1a     Master t2.small      1      1      us-east-1a\nnodes                 Node   t2.micro      3      3      us-east-1a,us-east-1b,us-east-1c\nNODE STATUS\nNAME                         ROLE   READY\nip-172-20-119-170.ec2.internal      node   True\nip-172-20-44-140.ec2.internal       node   True\nip-172-20-62-204.ec2.internal       master True\nip-172-20-87-38.ec2.internal node   True\n```", "```\n# kops edit ig master-us-east-1a\napiVersion: kops/v1alpha2\nkind: InstanceGroup\nmetadata:\n  creationTimestamp: 2018-04-14T19:06:47Z\n  labels:\n    kops.k8s.io/cluster: k8s-cookbook.net\n  name: master-us-east-1a\nspec:\n  image: kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-02-08\n  machineType: t2.small\n  maxSize: 1\n  minSize: 1\n  nodeLabels:\n    kops.k8s.io/instancegroup: master-us-east-1a\n  role: Master\n  subnets:\n  - us-east-1a\n```", "```\n# kops update cluster k8s-cookbook.net\n...\nWill modify resources:\n  AutoscalingGroup/master-us-east-1a.masters.k8s-cookbook.net\n       MinSize                1 -> 2\n       MaxSize                1 -> 2\nMust specify --yes to apply changes\n```", "```\n# kops update cluster k8s-cookbook.net –-yes && kops rolling-update cluster\n...\nUsing cluster from kubectl context: k8s-cookbook.net\nNAME                  STATUS NEEDUPDATE    READY  MIN    MAX    NODES\nmaster-us-east-1a     Ready  0             2      2      2      1\nnodes                 Ready  0             3      3      3      3\nNo rolling-update required.\n```", "```\n// launch a cluster with additional parameter --kubernetes-version 1.8.7 # kops create cluster --master-count 1 --node-count 2 --zones us-east-1a,us-east-1b,us-east-1c --node-size t2.micro --master-size t2.small --topology private --networking calico --authorization=rbac --cloud-labels \"Environment=dev\" --state $KOPS_STATE_STORE --kubernetes-version 1.8.7 --name k8s-cookbook.net --yes \n```", "```\n# kubectl get nodes \nNAME STATUS ROLES AGE VERSION \nip-172-20-44-128.ec2.internal Ready master 3m v1.8.7 \nip-172-20-55-191.ec2.internal Ready node 1m v1.8.7 \nip-172-20-64-30.ec2.internal Ready node 1m v1.8.7\n```", "```\n# kops upgrade cluster k8s-cookbook.net --yes \nITEM PROPERTY OLD NEW \nCluster KubernetesVersion 1.8.7 1.9.3 \nUpdates applied to configuration. You can now apply these changes, \nusing `kops update cluster k8s-cookbook.net` \n```", "```\n// update cluster\n# kops update cluster k8s-cookbook.net\n...\nWill modify resources:\n  LaunchConfiguration/master-us-east-1a.masters.k8s-cookbook.net\n       UserData\n                             ...\n                             +   image: gcr.io/google_containers/kube-apiserver:v1.9.3\n                             -   image: gcr.io/google_containers/kube-apiserver:v1.8.7\n                             ...\n                             +   image: gcr.io/google_containers/kube-controller\nmanager:v1.9.3\n                             -   image: gcr.io/google_containers/kube-controller-manager:v1.8.7\n                             ...\n                                 hostnameOverride: '@aws'\n                             +   image: gcr.io/google_containers/kube-proxy:v1.9.3\n                             -   image: gcr.io/google_containers/kube-proxy:v1.8.7\n                                 logLevel: 2\n                               kubeScheduler:\n                             +   image: gcr.io/google_containers/kube-scheduler:v1.9.3\n                             -   image: gcr.io/google_containers/kube\nscheduler:v1.8.7\n                             ...\nMust specify --yes to apply changes\n```", "```\n// run the same command with --yes \n# kops update cluster k8s-cookbook.net --yes \n... \nkops has set your kubectl context to k8s-cookbook.net \nCluster changes have been applied to the cloud. \nChanges may require instances to restart: kops rolling-update cluster \n```", "```\n# kops rolling-update cluster --yes\nUsing cluster from kubectl context: k8s-cookbook.net\nNAME                  STATUS        NEEDUPDATE    READY  MIN    MAX    NODES\nmaster-us-east-1a     NeedsUpdate   1             0      1      1      1\nnodes                 NeedsUpdate   2             0      2      2      2\nI0414 22:45:05.887024   51333 rollingupdate.go:193] Rolling update completed for cluster \"k8s-cookbook.net\"!\n```", "```\n# kubectl get nodes\nNAME                            STATUS    ROLES     AGE       VERSION\nip-172-20-116-81.ec2.internal   Ready     node      14m       v1.9.3\nip-172-20-41-113.ec2.internal   Ready     master    17m       v1.9.3\nip-172-20-56-230.ec2.internal   Ready     node      8m        v1.9.3\n```"]