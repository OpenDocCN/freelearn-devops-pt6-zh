["```\n    $ sudo nano /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg\n    ```", "```\nnetwork: {config: disabled}\n```", "```\n    $ sudo nano /etc/netplan/50-cloud-init.yaml\n    ```", "```\n    network:\n      version: 2\n      renderer: networkd\n      ethernets:\n        eth0:\n          dhcp4: no\n          addresses:\n            - 192.168.0.11/24\n          gateway4: 192.168.0.1\n          nameservers:\n              addresses: [8.8.8.8, 1.1.1.1]\n    ```", "```\n    $ sudo netplan apply \n    ```", "```\n    $ sudo nano /boot/firmware/cmdline.txt\n    ```", "```\n    cgroup_memory=1 cgroup_enable=memory\n    ```", "```\n    $ sudo nano /etc/hostname\n    ```", "```\nmaster\n```", "```\n    $ sudo nano /etc/hosts\n    ```", "```\n127.0.0.1 localhost master\n```", "```\n    $ sudo reboot\n    ```", "```\n    $ curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--write-kubeconfig-mode 644 --no-deploy traefik --disable traefik\" sh -s -\n    ```", "```\n    $ PUBLIC_IP=YOUR_PUBLIC_IP|YOUR_PRIVATE_IP\n    $ curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--write-kubeconfig-mode 644 --no-deploy traefik --disable traefik --tls-san \"$PUBLIC_IP\" --node-external-ip \"$PUBLIC_IP\"\" sh -s -\n    ```", "```\n    $ kubectl run nginx --image=nginx --restart=Never\n    $ kubectl expose pod/nginx --port=8001 --target-port=80 --type=LoadBalancer\n    ```", "```\n$ curl http://YOUR_PUBLIC_OR_PRIVATE_IP:8001\n```", "```\n$ curl http://YOU_PRIVATE_IP:8001\n```", "```\n    $ ssh ubuntu@MASTER_PUBLIC_OR_PRIVATE_IP\n    ```", "```\n    $ sudo cat /var/lib/rancher/k3s/server/node-token\n    ```", "```\n    $ ssh ubuntu@WORKER_PUBLIC_OR_PRIVATE_IP\n    ```", "```\n    $ export TOKEN=YOUR_MASTER_TOKEN\n    ```", "```\n    $ curl -sfL https://get.k3s.io | sh -s - agent --server https://MASTER_PUBLIC_OR_PRIVATE_IP:6443 --token ${TOKEN} --with-node-id\n    ```", "```\n    $ exit\n    ```", "```\n    $ ssh ubuntu@MASTER_PUBLIC_OR_PRIVATE_IP\n    ```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ ssh ubuntu@WORKER_PUBLIC_OR_PRIVATE_IP\n    ```", "```\n    $ curl -sfL https://github.com/k3s-io/k3s/releases/download/v1.21.1%2Bk3s1/k3s-arm64 > k3s > k3s | chmod +x k3s;sudo mv k3s /sbin\n    ```", "```\n    $ export TOKEN=YOUR_MASTER_TOKEN\n    $ sudo k3s agent --server https://myserver:6443 \n      --token ${TOKEN} --with-node-id &\n    ```", "```\n    $ exit\n    ```", "```\n    $ ssh ubuntu@MASTER_IP\n    ```", "```\n    $ kubectl label nodes node_name kubernetes.io/role=worker\n    ```", "```\n    $ exit\n    ```", "```\n    $ curl -LO https://dl.k8s.io/release/v1.22.0/bin/darwin/amd64/kubectl\n    $ chmod +x ./kubectl\n    $ sudo mv ./kubectl /usr/local/bin/kubectl\n    $ sudo chown root: /usr/local/bin/kubectl\n    ```", "```\n$ curl -LO \"https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl\"\n$ sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n```", "```\n    server: https://127.0.0.1:6443\n    ```", "```\nserver: https://MASTER_IP:6443\n```", "```\n    $ chmod 0400 ~/.kube/config\n    ```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ ssh root@IP_DATASTORE\n    ```", "```\n    $ apt-get update\n    $ apt-get install docker.io -y\n    $ docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=k3s123- \\\n    -e MYSQL_DATABASE=\"k8s\" -e MYSQL_USER=\"k3sadm\" \\\n    -e MYSQL_PASSWORD=\"k3s456-\" \\\n    -p 3306:3306 \\\n    -v /opt/mysql:/var/lib/mysql \\\n    mysql:5.7\n    ```", "```\n    $ exit\n    ```", "```\n    $ curl -sfL https://get.k3s.io | K3S_DATASTORE_ENDPOINT=\"mysql://k3sadm:k3s456-@tcp(YOUR_CLOUD_INSTANCE_IP:3306)/k8s\" INSTALL_K3S_EXEC=\"--write-kubeconfig-mode 644 --no-deploy traefik --disable traefik\" sh -s -\n    ```", "```\n    $ sudo cat /var/lib/rancher/k3s/server/node-token\n    ```", "```\n    $ exit\n    ```", "```\n    curl -sfL https://get.k3s.io | K3S_TOKEN=MASTER_TOKEN sh -s - agent --server https://MASTER_IP:6443\n    ```", "```\n    $ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\n    $ chmod 700 get_helm.sh\n    $ ./get_helm.sh\n    ```", "```\n    $ brew install helm\n    ```", "```\n    $ helm repo add bitnami https://charts.bitnami.com/bitnami\n    ```", "```\n    $ curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--write-kubeconfig-mode 644 --no-deploy traefik --disable traefik\" sh -s -\n    ```", "```\n    $ kubectl create ns nginx-ingress\n    ```", "```\n    $ helm repo add ingress-nginx \\\n    https://kubernetes.github.io/ingress-nginx \n    ```", "```\n    $ helm repo update \n    ```", "```\n    $ helm install nginx-ingress \\\n      ingress-nginx/ingress-nginx \\\n      -n nginx-ingress\n    ```", "```\n    $ kubectl create deployment nginx --image=nginx\n    ```", "```\n    $ kubectl expose deployment/nginx --port=8001 \\\n      --target-port=80 --type=ClusterIP --name=nginx-srv\n    ```", "```\n    apiVersion: networking.k8s.io/v1\n    kind: Ingress\n    metadata:\n      name: my-ingress\n      annotations:\n        nginx.ingress.kubernetes.io/rewrite-target: /\n    spec:\n      rules:\n      - http:\n          paths:\n          - path: /mypath\n            pathType: Prefix\n            backend:\n              service:\n                name: nginx-srv\n                port:\n                  number: 8001\n    ```", "```\n    $ kubectl create -f my-ingress.yaml\n    ```", "```\n    $ curl http://LB_IP/my-path\n    ```", "```\n    $ kubectl get services -n nginx-ingress\n    ```", "```\n    $ ssh ubuntu@AGENT_NODE_IP\n    ```", "```\n    $ k3s-agent-uninstall.sh\n    $ sudo rm -R /etc/rancher\n    $ sudo rm -R /var/lib/rancher\n    ```", "```\n    $ exit\n    ```", "```\n    $ ssh ubuntu@MASTER_NODE_IP\n    ```", "```\n    $ k3s-uninstall.sh\n    $ sudo rm -R /etc/rancher\n    $ sudo rm -R /var/lib/rancher\n    ```", "```\n    $ exit\n    ```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ kubectl run nginx --image=nginx --restart=Never\n    ```", "```\n    $ kubectl expose pod/nginx --port=8001 \\\n      --target-port=80 \\\n      --type=LoadBalancer\n    ```", "```\n    $ kubectl get services\n    ```", "```\n    $ journalctl -f\n    ```", "```\n    $ systemctl status k3s\n    ```", "```\n    $ systemctl status k3s-agent\n    ```"]