["```\nlist_of_products = products.search(search_criteria);\ndisplay(list_of_products); \n```", "```\ncd chapter17/openunison-istio\n./deploy_openunison_istio.sh \n```", "```\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - k8sou.apps.192-168-2-114.nip.io\n    - k8sdb.apps.192-168-2-114.nip.io\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n    tls:\n      httpsRedirect: true\n  - hosts:\n    - k8sou.apps.192-168-2-114.nip.io\n    - k8sdb.apps.192-168-2-114.nip.io\n    port:\n      name: https-443\n      number: 443\n      protocol: HTTPS\n    tls:\n      credentialName: ou-tls-certificate\n      mode: SIMPLE \n```", "```\n - hosts:\n    - k8sapi.192-168-2-114.nip.io\n    port:\n      name: https-443\n      number: 443\n      protocol: HTTPS\n    tls:\n**mode:****PASSTHROUGH** \n```", "```\nspec:\n  gateways:\n  - openunison-gateway-orchestra\n  hosts:\n  - k8sou.apps.192-168-2-114.nip.io\n  - k8sdb.apps.192-168-2-114.nip.io\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: openunison-orchestra\n        port:\n          number: 80 \n```", "```\nspec:\n  host: openunison-orchestra\n  trafficPolicy:\n    loadBalancer:\n      consistentHash:\n        httpCookie:\n          name: openunison-orchestra\n          path: /\n          ttl: 0s\n    tls:\n      mode: ISTIO_MUTUAL \n```", "```\n@app.route('/')\ndef hello():\n    retVal = {\n        \"msg\":\"hello world!\",\n        \"host\":\"%s\" % socket.gethostname()\n    }\n    return json.dumps(retVal) \n```", "```\n$ curl http://service.192-168-2-114.nip.io/\n{\"msg\": \"hello world!\", \"host\": \"run-service-785775bf98-fln49\"}% \n```", "```\n$ helm install orchestra-token-api token-login -n openunison -f /tmp/openunison-values.yaml\nNAME: orchestra-token-api\nLAST DEPLOYED: Tue Aug 31 19:41:30 2021\nNAMESPACE: openunison\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None \n```", "```\n$ ./deploy-auth.sh\nsecret/cacerts configured\npod \"istiod-75d8d56b68-tm6b7\" deleted\nrequestauthentication.security.istio.io/hello-world-auth created\nauthorizationpolicy.security.istio.io/simple-hellow-world created \n```", "```\napiVersion: security.istio.io/v1\nkind: RequestAuthentication\nmetadata:\n  name: hello-world-auth\n  namespace: istio-hello-world\nspec:\n  jwtRules:\n  - audiences:\n    - kubernetes\n    issuer: https://k8sou.192-168-2-119.nip.io/auth/idp/k8sIdp\n    jwksUri: https://k8sou.192-168-2-119.nip.io/auth/idp/k8sIdp/certs\n    outputPayloadToHeader: User-Info\n  selector:\n    matchLabels:\n      app: run-service \n```", "```\n{\n  \"iss\": \"https://k8sou.192-168-2-119.nip.io/auth/idp/k8sIdp\",\n  \"aud\": \"kubernetes\",\n  \"exp\": 1630421193,\n  \"jti\": \"JGnXlj0I5obI3Vcmb1MCXA\",\n  \"iat\": 1630421133,\n  \"nbf\": 1630421013,\n  \"sub\": \"mmosley\",\n  \"name\": \" Mosley\",\n  \"groups\": [\n    \"cn=group2,ou=Groups,DC=domain,DC=com\",\n    \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"\n  ],\n  \"preferred_username\": \"mmosley\",\n  \"email\": \"mmosley@tremolo.dev\"\n} \n```", "```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: simple-hellow-world\n  namespace: istio-hello-world\nspec:\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        requestPrincipals:\n        - '*'\n  selector:\n    matchLabels:\n      app: run-service \n```", "```\ncurl -v http://service.192-168-2-119.nip.io/\n*   Trying 192.168.2.119:80...\n* TCP_NODELAY set\n* Connected to service.192-168-2-119.nip.io (192.168.2.119) port 80 (#0)\n> GET / HTTP/1.1\n> Host: service.192-168-2-119.nip.io\n> User-Agent: curl/7.68.0\n> Accept: */*\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 403 Forbidden\n< content-length: 19\n< content-type: text/plain\n< date: Tue, 31 Aug 2021 20:23:14 GMT\n< server: istio-envoy\n< x-envoy-upstream-service-time: 2\n<\n* Connection #0 to host service.192-168-2-119.nip.io left intact \n```", "```\ncurl -H \"Authorization: Bearer $(curl --insecure -u 'mmosley:start123' https://k8sou.apps.192-168-2-119.nip.io/k8s-api-token/token/user 2>/dev/null| jq -r '.token.id_token')\" http://service.192-168-2-119.nip.io/ \n{\"msg\": \"hello world!\", \"host\": \"run-service-785775bf98-6bbwt\"} \n```", "```\nkubectl delete authorizationpolicy simple-hellow-world -n istio-hello-world\nauthorizationpolicy.security.istio.io \"simple-hellow-world\" deleted \n```", "```\n---\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: service-level-az\n  namespace: istio-hello-world\nspec:\n  action: ALLOW\n  selector:\n    matchLabels:\n      app: run-service\n  rules:\n  - when:\n    - key: request.auth.claims[groups]\n      values: [\"cn=group2,ou=Groups,DC=domain,DC=com\"] \n```", "```\ncurl -H \"Authorization: Bearer $(curl --insecure -u 'jjackson:start123' https://k8sou.192-168-2-119.nip.io/k8s-api-token/token/user 2>/dev/null| jq -r '.token.id_token')\" http://service.192-168-2-119.nip.io/\nRBAC: access denied \n```", "```\n{\n  \"iss\": \"https://k8sou.192-168-2-119.nip.io/auth/idp/k8sIdp\",\n  \"aud\": \"kubernetes\",\n  \"exp\": 1630455027,\n  \"jti\": \"Ae4Nv22HHYCnUNJx780l0A\",\n  \"iat\": 1630454967,\n  \"nbf\": 1630454847,\n  \"sub\": \"jjackson\",\n  \"name\": \" Jackson\",\n**\"groups\":****\"cn=k8s-create-ns,ou=Groups,DC=domain,DC=com\"****,**\n  \"preferred_username\": \"jjackson\",\n  \"email\": \"jjackson@tremolo.dev\"\n} \n```", "```\ncurl  -H \"Authorization: Bearer $(curl --insecure -u 'mmosley:start123' https://k8sou.192-168-2-119.nip.io/k8s-api-token/token/user 2>/dev/null| jq -r '.token.id_token')\" http://service.192-168-2-119.nip.io/headers 2>/dev/null | jq -r '.headers'\nHost: service.192-168-2-119.nip.io\nUser-Agent: curl/7.75.0\nAccept: */*\nX-Forwarded-For: 192.168.2.112\nX-Forwarded-Proto: http\nX-Request-Id: 6397d068-537e-94b7-bf6b-a7c649db5b3d\nX-Envoy-Attempt-Count: 1\nX-Envoy-Internal: true\nX-Forwarded-Client-Cert: By=spiffe://cluster.local/ns/istio-hello-world/sa/default;Hash=1a58a7d0abf62d32811c084a84f0a0f42b28616ffde7b6b840c595149d99b2eb;Subject=\"\";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account\nUser-Info: eyJpc3MiOiJodHRwczovL2s4c291LjE5Mi0xNjgtMi0xMTkubmlwLmlvL2F1dGgvaWRwL2\ns4c0lkcCIsImF1ZCI6Imt1YmVybmV0ZXMiLCJleHAiOjE2MzA1MTY4MjQsImp0aSI6InY0e\nkpCNzdfRktpOXJoQU5jWDVwS1EiLCJpYXQiOjE2MzA1MTY3NjQsIm5iZiI6MTYzMDUxNj\nY0NCwic3ViIjoibW1vc2xleSIsIm5hbWUiOiIgTW9zbGV5IiwiZ3JvdXBzIjpbImNuPWdy\nb3VwMixvdT1Hcm91cHMsREM9ZG9tYWluLERDPWNvbSIsImNuPWs4cy1jbHVzdGVyLWFkbW\nlucyxvdT1Hcm91cHMsREM9ZG9tYWluLERDPWNvbSJdLCJwcmVmZXJyZWRfdXNlcm5hbWUi\nOiJtbW9zbGV5IiwiZW1haWwiOiJtbW9zbGV5QHRyZW1vbG8uZGV2In0=\nX-B3-Traceid: 28fb185aa113ad089cfac2d6884ce9ac\nX-B3-Spanid: d40f1784a6685886\nX-B3-Parentspanid: 9cfac2d6884ce9ac\nX-B3-Sampled: 1 \n```", "```\n{\n  \"iss\": \"https://k8sou.192-168-2-119.nip.io/auth/idp/k8sIdp\",\n  \"aud\": \"kubernetes\",\n  \"exp\": 1630508679,\n  \"jti\": \"5VoEAAgv1rkpf1vOJ9uo-g\",\n  \"iat\": 1630508619,\n  \"nbf\": 1630508499,\n  \"sub\": \"mmosley\",\n  \"name\": \" Mosley\",\n  \"groups\": [\n    \"cn=group2,ou=Groups,DC=domain,DC=com\",\n    \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"\n  ],\n  \"preferred_username\": \"mmosley\",\n  \"email\": \"mmosley@tremolo.dev\"\n} \n```", "```\n@app.route('/who-am-i')\n    def who_am_i():\n      user_info = request.headers[\"User-Info\"]\n      user_info_json = base64.b64decode(user_info).decode(\"utf8\")\n      user_info_obj = json.loads(user_info_json)\n      ret_val = {\n        \"name\": user_info_obj[\"sub\"],\n        \"groups\": user_info_obj[\"groups\"]\n      }\n      return json.dumps(ret_val) \n```", "```\nkubectl exec -ti run-service-785775bf98-g86gl -n istio-hello-world – bash\n# export USERINFO=$(echo -n '{\"sub\":\"marc\",\"groups\":[\"group1\",\"group2\"]}' | base64 -w 0)\n# curl -H \"User-Info: $USERINFO\" http://localhost:8080/who-am-i\n{\"name\": \"marc\", \"groups\": [\"group1\", \"group2\"]} \n```", "```\n$ kubectl run -i --tty curl --image=alpine --rm=true – sh\n/ # apk update add curl\n/ # curl -H \"User-Info $(echo -n '{\"sub\":\"marc\",\"groups\":[\"group1\",\"group2\"]}' | base64 -w 0)\" http://run-service.istio-hello-world.svc/who-am-i\nRBAC: access denied \n```", "```\nexport USERINFO=$(echo -n '{\"sub\":\"marc\",\"groups\":[\"group1\",\"group2\"]}' | base64 -w 0)\ncurl  -H \"Authorization: Bearer $(curl --insecure -u 'mmosley:start123' https://k8sou.192-168-2-119.nip.io/k8s-api-token/token/user 2>/dev/null| jq -r '.token.id_token')\" -H \"User-Info: $USERINFO\" http://service.192-168-2-119.nip.io/who-am-i\n{\"name\": \"mmosley\", \"groups\": [\"cn=group2,ou=Groups,DC=domain,DC=com\", \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"]} \n```", "```\npackage istio.authz\nimport input.attributes.request.http as http_request\nimport input.parsed_path\ndefault allow = false\ncontains_element(arr, elem) = true {\n    arr[_] = elem\n} else = false { true }\nverify_headers() = payload {\n    startswith(http_request.headers[\"authorization\"], \"Bearer \")\n    [header, payload, signature] := io.jwt.decode(trim_prefix(http_request.headers[\"authorization\"], \"Bearer \"))\n} else = false {true}\nallow {\n    payload := verify_headers()   \n    payload.groups\n    contains_element(payload.groups,\"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\")\n    not contains_element(payload.groups,\"cn=group2,ou=Groups,DC=domain,DC=com\")\n}\nallow {\n    payload := verify_headers()   \n    payload.groups\n    payload.groups == \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"\n} \n```", "```\n$ curl -v -H \"Authorization: Bearer $(curl --insecure -u 'mmosley:start123' https://k8sou.apps.192-168-2-96.nip.io/k8s-api-token/token/user 2>/dev/null| jq -r '.token.id_token')\" http://service.192-168-2-96.nip.io/headers\n*   Trying 192.168.2.96:80...\n* Connected to service.192-168-2-96.nip.io (192.168.2.96) port 80\n> GET /headers HTTP/1.1\n> Host: service.192-168-2-96.nip.io\n> User-Agent: curl/8.4.0\n> Accept: */*\n> Authorization: Bearer …\n> \n< HTTP/1.1 403 Forbidden\n< date: Tue, 27 Feb 2024 19:49:49 GMT\n< server: istio-envoy\n< content-length: 0\n< x-envoy-upstream-service-time: 8\n< \n* Connection #0 to host service.192-168-2-96.nip.io left intact \n```", "```\n$ curl -H \"Authorization: Bearer $(curl --insecure -u 'pipeline_svc_account:start123' https://k8sou.apps.192-168-2-96.nip.io/k8s-api-token/token/user 2>/dev/null| jq -r '.token.id_token')\" http://service.192-168-2-96.nip.io/headers \n{\"headers\": \"Host: service.192-168-2-96.nip.io\\r\\nUser-Agent: curl/8.4.0\\r\\nAccept: */*\\r\\nX-Forwarded-For: 192.168.3.6\\r\\nX-Forwar… \n```", "```\nhelm install openunison-service-auth openunison-service-auth -n openunison\nNAME: openunison-service-auth\nLAST DEPLOYED: Mon Sep 13 01:08:09 2021\nNAMESPACE: openunison\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None \n```", "```\ncd write-checks/\n./deploy_write_checks.sh\ngetting oidc config\ngetting jwks\nnamespace/write-checks created\nconfigmap/service-source created\ndeployment.apps/write-checks created\nservice/write-checks created\ngateway.networking.istio.io/service-gateway created\nvirtualservice.networking.istio.io/service-vs created\nrequestauthentication.security.istio.io/write-checks-auth created\nauthorizationpolicy.security.istio.io/service-level-az created \n```", "```\napiVersion: security.istio.io/v1beta1\nkind: RequestAuthentication\nmetadata:\n  name: write-checks-auth\n  namespace: write-checks\nspec:\n  jwtRules:\n  - audiences:\n    - users\n    - checkfunds\n    - pullfunds\n    forwardOriginalToken: true\n    issuer: https://k8sou.apps.192-168-2-119.nip.io/auth/idp/service-idp\n    jwksUri: https://k8sou.apps.192-168-2-119.nip.io/auth/idp/service-idp/certs\n    outputPayloadToHeader: User-Info\n  selector:\n    matchLabels:\n      app: write-checks \n```", "```\n./call_service.sh\n{\n  \"msg\": \"hello world!\",\n  \"host\": \"write-checks-84cdbfff74-tgmzh\",\n  \"user_jwt\": \"...\",\n  \"pod_jwt\": \"...\",\n  \"impersonated_jwt\": \"...\",\n  \"call_funds_status_code\": 200,\n  \"call_funds_text\": \"{\\\"funds_available\\\": true, \\\"user\\\": \\\"mmosley\\\"}\",\n  \"actor_token\": \"...\",\n  \"delegation_token\": \"...\",\n  \"pull_funds_text\": \"{\\\"funds_pulled\\\": true, \\\"user\\\": \\\"mmosley\\\", \\\"actor\\\": \\\"system:serviceaccount:write-checks:default\\\"}\"\n} \n```", "```\n{\n  \"iss\": \"https://k8sou.192-168-2-119.nip.io/auth/idp/service-idp\",\n  \"aud\": \"checkfunds\",\n  \"exp\": 1631497059,\n  \"jti\": \"C8Qh8iY9FJdFzEO3pLRQzw\",\n  \"iat\": 1631496999,\n  \"nbf\": 1631496879,\n  \"nonce\": \"bec42c16-5570-4bd8-9038-be30fd216016\",\n  \"sub\": \"mmosley\",\n  \"name\": \" Mosley\",\n  \"groups\": [\n    \"cn=group2,ou=Groups,DC=domain,DC=com\",\n    \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"\n  ],\n  \"preferred_username\": \"mmosley\",\n  \"email\": \"mmosley@tremolo.dev\",\n  \"amr\": [\n    \"pwd\"\n  ]\n} \n```", "```\n{\n  \"iss\": \"https://k8sou.192-168-2-119.nip.io/auth/idp/service-idp\",\n**\"aud\"****:****\"users\"****,**\n  \"exp\": 1631497059,\n  \"jti\": \"C8Qh8iY9FJdFzEO3pLRQzw\",\n  \"iat\": 1631496999,\n  \"nbf\": 1631496879,\n**\"sub\"****:****\"mmosley\"****,**\n  \"name\": \" Mosley\",\n  \"groups\": [\n    \"cn=group2,ou=Groups,DC=domain,DC=com\",\n    \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"\n  ],\n  \"preferred_username\": \"mmosley\",\n  \"email\": \"mmosley@tremolo.dev\",\n  \"amr\": [\n    \"pwd\"\n  ]\n} \n```", "```\n# let's first get the original JWT. We'll\n# use this as an input for impersonation\naz_header = request.headers[\"Authorization\"]\nuser_jwt = az_header[7:] \n```", "```\n# next, get the pod's ServiceAccount token\n# so we can identify the pod to the IdP for\n# an impersonation token\npod_jwt = Path('/var/run/secrets/kubernetes.io/serviceaccount/token').read_text() \n```", "```\n# with the subject (user) jwt and the pod\n# jwt we can now request an impersonated\n# token for our user from openunison\nimpersonation_request = {\n  \"grant_type\":\"urn:ietf:params:oauth:grant-type:token-exchange\",\n  \"audience\":\"checkfunds\",\n  \"subject_token\":user_jwt,\n  \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\",\n  \"client_id\":\"sts-impersonation\"\n}\nimpersonation_headers = {\n  \"Authorization\": \"Bearer %s\" % pod_jwt\n} \n```", "```\nresp = requests.post(\"https://k8sou.apps.IPADDR.nip.io/auth/idp/service-idp/token\",verify=False,data=impersonation_request,headers=impersonation_headers)\nresponse_payload = json.loads(resp.text)\nimpersonated_id_token = response_payload[\"id_token\"]\n# with the impersonated user's id_token, call another\n# service as that user\ncall_funds_headers = {\n  \"Authorization\": \"Bearer %s\" % impersonated_id_token\n}\nresp = requests.get(\"http://write-checks.IPADDR.nip.io/check-funds\",verify=False,headers=call_funds_headers) \n```", "```\nINFO  AccessLog - [AzSuccess] - service-idp - https://k8sou.apps.192-168-2-119.nip.io/auth/idp/service-idp/token - username=system:serviceaccount:write-checks:default,ou=oauth2,o=Tremolo - client 'sts-impersonation' impersonating 'mmosley', jti : 'C8Qh8iY9FJdFzEO3pLRQzw' \n```", "```\n{\n  \"iss\": \"https://k8sou.apps.192-168-2-119.nip.io/auth/idp/service-idp\",\n  \"aud\": \"pullfunds\",\n  \"exp\": 1631497059,\n  \"jti\": \"xkaQhMgKgRvGBqAsOWDlXA\",\n  \"iat\": 1631496999,\n  \"nbf\": 1631496879,\n  \"nonce\": \"272f1900-f9d9-4161-a31c-6c6dde80fcb9\",\n  \"sub\": \"mmosley\",\n  \"amr\": [\n    \"pwd\"\n  ],\n  \"name\": \" Mosley\",\n  \"groups\": [\n    \"cn=group2,ou=Groups,DC=domain,DC=com\",\n    \"cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\"\n  ],\n  \"preferred_username\": \"mmosley\",\n  \"email\": \"mmosley@tremolo.dev\",\n**\"act\"****:** **{**\n**\"sub\"****:****\"system:serviceaccount:write-checks:default\"****,**\n**\"amr\"****:** **[**\n**\"k8s-sa\"**\n **]****,**\n **.**\n **.**\n **.**\n **}**\n} \n```", "```\nclient_credentials_grant_request = {\n  \"grant_type\": \"client_credentials\",\n  \"client_id\" : \"sts-delegation\"\n}\ndelegation_headers = {\n  \"Authorization\": \"Bearer %s\" % pod_jwt\n}\nresp = requests.post(\"https://k8sou.IPADDR.nip.io/auth/idp/service-idp/token\",verify=False,data=client_credentials_grant_request,headers=delegation_headers)\nresponse_payload = json.loads(resp.text)\nactor_token = response_payload[\"id_token\"] \n```", "```\ndelegation_request = {\n  \"grant_type\":\"urn:ietf:params:oauth:grant-type:token-exchange\",\n  \"audience\":\"pullfunds\",\n  \"subject_token\":user_jwt,\n  \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\",\n  \"client_id\":\"sts-delegation\",\n  \"actor_token\": actor_token,\n  \"actor_token_type\": \"urn:ietf:params:oauth:token-type:id_token\"\n}\nresp = requests.post(\"https://k8sou.IPADDR.nip.io/auth/idp/service-idp/token\",verify=False,data=delegation_request)\nresponse_payload = json.loads(resp.text)\ndelegation_token = response_payload[\"id_token\"] \n```", "```\ncall_headers = {\n  \"Authorization\": \"Bearer %s\" % pod_jwt\n}\nresp = requests.post(\"https://write-checks.IPADDR.nip.io/check-funds?user=mmosley\",verify=False,data=impersonation_request,headers=call_headers) \n```"]