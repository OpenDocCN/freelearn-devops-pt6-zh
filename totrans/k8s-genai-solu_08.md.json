["```\n\napiVersion: v1\nkind: Service\nmetadata: \n  name: my-llama-svc\n  annotations:\n     service.beta.kubernetes.io/aws-load-balancer-type: \"external\"\n     service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\nspec:\n  type: LoadBalancer\n  ...\n```", "```\n\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: ingress-example\nspec:\n  podSelector:\n    matchLabels:\n      app: backend\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: frontend\n```", "```\n\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: rag-app-ingress-policy\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: rag-app\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app.kubernetes.io/name: chatbot-ui\n    ports:\n    - protocol: TCP\n      port: 80\n```", "```\n\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\n...\n```", "```\n\naws ec2 create-placement-group --group-name custom-placement-group --strategy cluster\n```", "```\n\n{\n  \"LaunchTemplateData\": {\n    \"Placement\": {\n      \"GroupName\": \"custom-placement-group\"\n    },\n   #      Other Launch Details, such as instance types, key pair\n  }\n}\n```", "```\n\nmodule \"eks\" {\n  source = \"terraform-aws-modules/eks/aws\"\n  cluster_name    = local.name\n...\n  # Allow EFA traffic\n  enable_efa_support = true\n...\n  eks_managed_node_groups = {\n    nvidia-efa = {\n      # Expose all available EFA interfaces on the launch template\n      enable_efa_support = true\n      labels = {\n        \"vpc.amazonaws.com/efa.present\" = \"true\"\n        \"nvidia.com/gpu.present\"        = \"true\"\n      }\n...\n```"]