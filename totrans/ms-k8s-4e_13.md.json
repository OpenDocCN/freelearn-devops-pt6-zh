["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: now\nspec:\n  containers:\n    - name: now\n      image: g1g1/py-kube:0.3\n      command: [\"/bin/bash\", \"-c\", \"while true; do sleep 10; date; done\"] \n```", "```\n$ k apply -f now-pod.yaml\npod/now created \n```", "```\n$ kubectl logs now\nSat Jan  4 00:32:38 UTC 2020\nSat Jan  4 00:32:48 UTC 2020\nSat Jan  4 00:32:58 UTC 2020\nSat Jan  4 00:33:08 UTC 2020\nSat Jan  4 00:33:18 UTC 2020 \n```", "```\n$ k logs <pod name> -c <container name> \n```", "```\nk logs -l <label> \n```", "```\ntype NodeMetrics struct {\n    metav1.TypeMeta\n    metav1.ObjectMeta\n    Timestamp metav1.Time\n    Window    metav1.Duration\n    Usage corev1.ResourceList\n}\n// NodeMetricsList is a list of NodeMetrics.\ntype NodeMetricsList struct {\n    metav1.TypeMeta\n    // Standard list metadata.\n    // More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n    metav1.ListMeta\n    // List of node metrics.\n    Items []NodeMetrics\n} \n```", "```\n// ResourceList is a set of (resource name, quantity) pairs.\ntype ResourceList map[ResourceName]resource.Quantity \n```", "```\ntype Quantity struct {\n    // i is the quantity in int64 scaled form, if d.Dec == nil\n    i int64Amount\n\n    // d is the quantity in inf.Dec form if d.Dec != nil\n    d infDecAmount\n    // s is the generated value of this quantity to avoid recalculation\n    s string\n    // Change Format at will. See the comment for Canonicalize for more details.\n    Format\n} \n```", "```\n$ helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/\n$ helm upgrade --install metrics-server metrics-server/metrics-server\nRelease \"metrics-server\" does not exist. Installing it now.\nNAME: metrics-server\nLAST DEPLOYED: Sun Oct  9 14:11:54 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\n***********************************************************************\n* Metrics Server                                                      *\n***********************************************************************\n  Chart version: 3.8.2\n  App version:   0.6.1\n  Image tag:     k8s.gcr.io/metrics-server/metrics-server:v0.6.1\n*********************************************************************** \n```", "```\n$ minikube addons enable metrics-server\n    â–ª Using image k8s.gcr.io/metrics-server/metrics-server:v0.4.2\n![](img/B18998_13_001.png)  The 'metrics-server' addon is enabled \n```", "```\n$ k get --raw \"/apis/metrics.k8s.io/v1beta1/nodes\" | jq .\n{\n  \"kind\": \"NodeMetricsList\",\n  \"apiVersion\": \"metrics.k8s.io/v1beta1\",\n  \"metadata\": {},\n  \"items\": [\n    {\n      \"metadata\": {\n        \"name\": \"kind-control-plane\",\n        \"creationTimestamp\": \"2022-10-09T21:24:12Z\",\n        \"labels\": {\n          \"beta.kubernetes.io/arch\": \"arm64\",\n          \"beta.kubernetes.io/os\": \"linux\",\n          \"kubernetes.io/arch\": \"arm64\",\n          \"kubernetes.io/hostname\": \"kind-control-plane\",\n          \"kubernetes.io/os\": \"linux\",\n          \"node-role.kubernetes.io/control-plane\": \"\",\n          \"node.kubernetes.io/exclude-from-external-load-balancers\": \"\"\n        }\n      },\n      \"timestamp\": \"2022-10-09T21:24:05Z\",\n      \"window\": \"20.022s\",\n      \"usage\": {\n        \"cpu\": \"115537281n\",\n        \"memory\": \"47344Ki\"\n      }\n    }\n  ]\n} \n```", "```\n$ k top nodes\nNAME                 CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%\nkind-control-plane   125m         3%     46Mi            1% \n```", "```\n$ k top pods -A\nNAMESPACE            NAME                                         CPU(cores)   MEMORY(bytes)\ndefault              metrics-server-554f79c654-hw2c7              4m           18Mi\nkube-system          coredns-565d847f94-t8knf                     2m           12Mi\nkube-system          coredns-565d847f94-wdqzx                     2m           14Mi\nkube-system          etcd-kind-control-plane                      24m          28Mi\nkube-system          kindnet-fvfs7                                1m           7Mi\nkube-system          kube-apiserver-kind-control-plane            43m          339Mi\nkube-system          kube-controller-manager-kind-control-plane   18m          48Mi\nkube-system          kube-proxy-svdc6                             1m           11Mi\nkube-system          kube-scheduler-kind-control-plane            4m           21Mi\nlocal-path-storage   local-path-provisioner-684f458cdd-24w88      2m           6Mi \n```", "```\n$ git clone https://github.com/prometheus-operator/kube-prometheus.git\nCloning into 'kube-prometheus'...\nremote: Enumerating objects: 17062, done.\nremote: Counting objects: 100% (185/185), done.\nremote: Compressing objects: 100% (63/63), done.\nremote: Total 17062 (delta 135), reused 155 (delta 116), pack-reused 16877\nReceiving objects: 100% (17062/17062), 8.76 MiB | 11.63 MiB/s, done.\nResolving deltas: 100% (11135/11135), done. \n```", "```\n$ kubectl create -f manifests/setup\ncustomresourcedefinition.apiextensions.k8s.io/alertmanagerconfigs.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/alertmanagers.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/podmonitors.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/probes.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/prometheuses.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/prometheusrules.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/servicemonitors.monitoring.coreos.com created\ncustomresourcedefinition.apiextensions.k8s.io/thanosrulers.monitoring.coreos.com created\nnamespace/monitoring created \n```", "```\n$ kubectl create -f manifests\n... \n```", "```\n$ k get deployments -n monitoring\nNAME                  READY   UP-TO-DATE   AVAILABLE   AGE\nblackbox-exporter     1/1     1            1           3m38s\ngrafana               1/1     1            1           3m37s\nkube-state-metrics    1/1     1            1           3m37s\nprometheus-adapter    2/2     2            2           3m37s\nprometheus-operator   1/1     1            1           3m37s\n$ k get statefulsets -n monitoring\nNAME                READY   AGE\nalertmanager-main   3/3     2m57s\nprometheus-k8s      2/2     2m57s\n$ k get daemonsets -n monitoring\nNAME            DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE\nnode-exporter   1         1         1       1            1           kubernetes.io/os=linux   4m4s\n$ k get services -n monitoring\nNAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE\nalertmanager-main       ClusterIP   10.96.231.0     <none>        9093/TCP,8080/TCP            4m25s\nalertmanager-operated   ClusterIP   None            <none>        9093/TCP,9094/TCP,9094/UDP   3m35s\nblackbox-exporter       ClusterIP   10.96.239.94    <none>        9115/TCP,19115/TCP           4m25s\ngrafana                 ClusterIP   10.96.80.116    <none>        3000/TCP                     4m24s\nkube-state-metrics      ClusterIP   None            <none>        8443/TCP,9443/TCP            4m24s\nnode-exporter           ClusterIP   None            <none>        9100/TCP                     4m24s\nprometheus-adapter      ClusterIP   10.96.139.149   <none>        443/TCP                      4m24s\nprometheus-k8s          ClusterIP   10.96.51.85     <none>        9090/TCP,8080/TCP            4m24s\nprometheus-operated     ClusterIP   None            <none>        9090/TCP                     3m35s\nprometheus-operator     ClusterIP   None            <none>        8443/TCP                     4m24s \n```", "```\n$ k port-forward -n monitoring statefulset/prometheus-k8s 9090\nForwarding from 127.0.0.1:9090 -> 9090\nForwarding from [::1]:9090 -> 9090 \n```", "```\n$ k get prometheusrules -n monitoring\nNAME                              AGE\nalertmanager-main-rules           11h\ngrafana-rules                     11h\nkube-prometheus-rules             11h\nkube-state-metrics-rules          11h\nkubernetes-monitoring-rules       11h\nnode-exporter-rules               11h\nprometheus-k8s-prometheus-rules   11h\nprometheus-operator-rules         11h \n```", "```\n$ k get prometheusrules node-exporter-rules -n monitoring -o yaml | grep NodeFilesystemAlmostOutOfSpace -A 14\n    - alert: NodeFilesystemAlmostOutOfSpace\n      annotations:\n        description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\n          has only {{ printf \"%.2f\" $value }}% available space left.\n        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace\n      expr: |\n        (\n          node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\n        and\n          node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n        )\n      for: 30m\n      labels:\n        severity: warning\n    - alert: NodeFilesystemAlmostOutOfSpace\n      annotations:\n        description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\n          has only {{ printf \"%.2f\" $value }}% available space left.\n        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace\n        summary: Filesystem has less than 3% space left.\n      expr: |\n        (\n          node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\n        and\n          node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\n        )\n      for: 30m\n      labels:\n        severity: critical \n```", "```\n$ k port-forward -n monitoring deploy/grafana 3000\nForwarding from 127.0.0.1:3000 -> 3000\nForwarding from [::1]:3000 -> 3000 \n```", "```\n$ helm repo add jaegertracing https://jaegertracing.github.io/helm-charts\n\"jaegertracing\" has been added to your repositories\n$ helm search repo jaegertracing\nNAME                            CHART VERSION   APP VERSION DESCRIPTION\njaegertracing/jaeger            0.62.1          1.37.0      A Jaeger Helm chart for Kubernetes\njaegertracing/jaeger-operator   2.36.0          1.38.0      jaeger-operator Helm chart for Kubernetes \n```", "```\n$ helm repo add jetstack https://charts.jetstack.io\n\"jetstack\" has been added to your repositories\n$ helm install \\\n  cert-manager jetstack/cert-manager \\\n  --namespace cert-manager \\\n  --create-namespace \\\n  --version v1.9.1 \\\n  --set installCRDs=true\nNAME: cert-manager\nLAST DEPLOYED: Mon Oct 17 10:28:43 2022\nNAMESPACE: cert-manager\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\ncert-manager v1.9.1 has been deployed successfully!\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\nhttps://cert-manager.io/docs/configuration/\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\nhttps://cert-manager.io/docs/usage/ingress/ \n```", "```\n$ helm install jaeger jaegertracing/jaeger-operator \\\n       -n observability --create-namespace\nNAME: jaeger\nLAST DEPLOYED: Mon Oct 17 10:30:58 2022\nNAMESPACE: observability\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\njaeger-operator is installed.\nCheck the jaeger-operator logs\n  export POD=$(kubectl get pods -l app.kubernetes.io/instance=jaeger -l app.kubernetes.io/name=jaeger-operator --namespace observability --output name)\n  kubectl logs $POD --namespace=observability \n```", "```\n$ k get deploy -n observability\nNAME                     READY   UP-TO-DATE   AVAILABLE   AGE\njaeger-jaeger-operator   1/1     1            1           3m21s \n```", "```\n$ cat <<EOF | k apply -f -\napiVersion: jaegertracing.io/v1\nkind: Jaeger\nmetadata:\n  name: simplest\n  namespace: observability\nEOF\njaeger.jaegertracing.io/simplest created\n$ k get jaegers -n observability\nNAME       STATUS   VERSION   STRATEGY   STORAGE   AGE\nsimplest                                           5m54s \n```", "```\n$ k port-forward deploy/simplest 8080:16686 -n observability\nForwarding from 127.0.0.1:8080 -> 16686\nForwarding from [::1]:8080 -> 16686 \n```", "```\n$ k describe no kind-control-plane | grep Conditions -A 6\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Fri, 21 Oct 2022 01:09:33 -0700   Mon, 17 Oct 2022 10:27:24 -0700   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Fri, 21 Oct 2022 01:09:33 -0700   Mon, 17 Oct 2022 10:27:24 -0700   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Fri, 21 Oct 2022 01:09:33 -0700   Mon, 17 Oct 2022 10:27:24 -0700   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Fri, 21 Oct 2022 01:09:33 -0700   Mon, 17 Oct 2022 10:27:52 -0700   KubeletReady                 kubelet is posting ready status \n```"]