["```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: default\n  name: pod-and-pod-logs-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\", \"pods/log\"]\n  verbs: [\"get\", \"list\"] \n```", "```\nkubectl api-resources -o wide | grep Ingress\ningressclasses networking.k8s.io/v1 false IngressClass [create delete deletecollection get list patch update watch]\ningresses ing networking.k8s.io/v1 true Ingress [create delete deletecollection get list patch update watch] \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cluster-pod-and-pod-logs-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\", \"pods/log\"]\n  verbs: [\"get\", \"list\"] \n```", "```\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: admin\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: 'true'\nrules:\n.\n.\n.\naggregationRule:\n  clusterRoleSelectors:\n    - matchLabels:\n        rbac.authorization.k8s.io/aggregate-to-admin: 'true' \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: aggregate-superwidget-admin\n  labels:\n    # Add these permissions to the \"admin\" default role.\n    rbac.authorization.k8s.io/aggregate-to-admin: \"true\"\nrules:\n- apiGroups: [\"myapi\"]\n  resources: [\"superwidgets\"]\n  verbs: [\"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\"] \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: pod-and-pod-logs-reader\n  namespace: default\nsubjects:\n- kind: ServiceAccount\n  name: mysa\n  namespace: default\n  apiGroup: rbac.authorization.k8s.io\n- kind: User\n  name: podreader\n- kind: Group\n  name: podreaders\nroleRef:\n  kind: Role\n  name: pod-and-pod-logs-reader\n  apiGroup: rbac.authorization.k8s.io \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cluster-pod-and-pod-logs-reader\nsubjects:\n- kind: ServiceAccount\n  name: mysa\n  namespace: default\n  apiGroup: rbac.authorization.k8s.io\n- kind: User\n  name: podreader\n- kind: Group\n  name: podreaders\nroleRef:\n  kind: ClusterRole\n  name: cluster-pod-and-pod-logs-reader\n  apiGroup: rbac.authorization.k8s.io \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: pod-and-pod-logs-reader\n  namespace: default\nsubjects:\n- kind: ServiceAccount\n  name: mysa\n  namespace: default\n  apiGroup: rbac.authorization.k8s.io\n- kind: User\n  name: podreader\n- kind: Group\n  name: podreaders\nroleRef:\n  kind: ClusterRole\n  name: cluster-pod-and-pod-logs-reader\n  apiGroup: rbac.authorization.k8s.io \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: ou-cluster-admins\nsubjects:\n- kind: Group\n  name: cn=k8s-cluster-admins,ou=Groups,DC=domain,DC=com\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io \n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: ou-cluster-admins\nsubjects:\n- kind: User\n  name: https://k8sou.apps.192-168-2-131.nip.io/auth/idp/k8sIdp#mmosley\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io \n```", "```\napiVersion: audit.k8s.io/v1\nkind: Policy\nrules:\n  - level: Request\n    userGroups: [\"system:nodes\"]\n    verbs: [\"update\",\"patch\"]\n    resources:\n      - group: \"\" # core\n        resources: [\"nodes/status\", \"pods/status\"]\n    omitStages:\n      - \"RequestReceived\" \n```", "```\ncd Kubernetes-An-Enterprise-Guide-Third-Edition/chapter2\nkind delete cluster -n cluster01\n./create-cluster.sh\ncd  ../chapter6/user-auth\n./deploy_openunison_imp_impersonation.sh \n```", "```\n    $ cd chapter7\n    $ docker exec -ti cluster01-control-plane mkdir /etc/kubernetes/audit\n    $ docker cp cm/k8s-audit-policy.yaml cluster01-control-plane:/etc/kubernetes/audit/ \n    ```", "```\n    $ docker exec -ti cluster01-control-plane mkdir /var/log/k8s \n    ```", "```\n- --tls-private-key-file=/etc/kubernetes/pki/apiserver.key\n**-****--audit-log-path=/var/log/k8s/audit.log**\n**-****--audit-log-maxage=1**\n**-****--audit-log-maxbackup=10**\n**-****--audit-log-maxsize=10**\n**-****--audit-policy-file=/etc/kubernetes/audit/k8s-audit-policy.yaml** \n```", "```\n    - mountPath: /usr/share/ca-certificates\n      name: usr-share-ca-certificates\n      readOnly: true\n    **-****mountPath:****/var/log/k8s**\n    **name:****var-log-k8s**\n    **readOnly:****false**\n    **-****mountPath:****/etc/kubernetes/audit**\n    **name:****etc-kubernetes-audit**\n    **readOnly:****true** \n    ```", "```\n     - hostPath:\n          path: /usr/share/ca-certificates\n          type: DirectoryOrCreate\n        name: usr-share-ca-certificates\n    **-****hostPath:**\n    **path:****/var/log/k8s**\n    **type:****DirectoryOrCreate**\n    **name:****var-log-k8s**\n    **-****hostPath:**\n    **path:****/etc/kubernetes/audit**\n    **type:****DirectoryOrCreate**\n    **name:****etc-kubernetes-audit** \n    ```", "```\n$ kubectl get pod kube-apiserver-cluster01-control-plane -n kube-system\nNAME                                     READY   STATUS       RESTARTS   AGE\nkube-apiserver-cluster01-control-plane   1/1     Running      0          47s \n```", "```\n$ docker exec cluster01-control-plane  tail /var/log/k8s/audit.log \n```", "```\n{\"kind\":\"Event\",\"apiVersion\":\"audit.k8s.io/v1\",\"level\":\"Metadata\",\"auditID\":\"451ddf5d-763c-4d7c-9d89-7afc6232e2dc\",\"stage\":\"ResponseComplete\",\"requestURI\":\"/apis/discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes\",\"verb\":\"get\",\"user\":{\"username\":\"system:apiserver\",\"uid\":\"7e02462c-26d1-4349-92ec-edf46af2ab31\",\"groups\":[\"system:masters\"]},\"sourceIPs\":[\"::1\"],\"userAgent\":\"kube-apiserver/v1.21.1 (linux/amd64) kubernetes/5e58841\",\"objectRef\":{\"resource\":\"endpointslices\",\"namespace\":\"default\",\"name\":\"kubernetes\",\"apiGroup\":\"discovery.k8s.io\",\"apiVersion\":\"v1\"},\"responseStatus\":{\"metadata\":{},\"code\":200},\"requestReceivedTimestamp\":\"2021-07-12T08:53:55.345776Z\",\"stageTimestamp\":\"2021-07-12T08:53:55.365609Z\",\"annotations\":{\"authorization.k8s.io/decision\":\"allow\",\"authorization.k8s.io/reason\":\"\"}} \n```", "```\n    PS C:\\Users\\mlb> kubectl create ns not-going-to-work\n    Error from server (Forbidden): namespaces is forbidden: User \"jjackson\" cannot create resource \"namespaces\" in API group \"\" at the cluster scope \n    ```", "```\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRole\n    metadata:\n      name: cluster-create-ns\n    rules:\n    - apiGroups: [\"\"]\n      resources: [\"namespaces\"]\n      verbs: [\"create\"] \n    ```", "```\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRoleBinding\n    metadata:\n      name: cluster-create-ns\n    subjects:\n    - kind: User\n      name: jjackson\n      apiGroup: rbac.authorization.k8s.io\n    roleRef:\n      kind: ClusterRole\n      name: cluster-create-ns\n      apiGroup: rbac.authorization.k8s.io \n    ```", "```\n    PS C:\\Users\\mlb> kubectl create ns not-going-to-work\n    namespace/not-going-to-work created \n    ```", "```\n    root@cluster01-control-plane:/# curl -L https://github.com/liggitt/audit2rbac/releases/download/v0.8.0/audit2rbac-linux-amd64.tar.gz 2>/dev/null > audit2rbac-linux-amd64.tar.gz\n    root@cluster01-control-plane:/# tar -xvzf audit2rbac-linux-amd64.tar.gz \n    ```", "```\n    PS C:\\Users\\mlb> kubectl create ns still-not-going-to-work\n    Error from server (Forbidden): namespaces is forbidden: User \"jjackson\" cannot create resource \"namespaces\" in API group \"\" at the cluster scope \n    ```", "```\n    root@cluster01-control-plane:/# ./audit2rbac --filename=/var/log/k8s/audit.log  --user=jjackson\n    Opening audit source...\n    Loading events...\n    Evaluating API calls...\n    Generating roles...\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRole\n    metadata:\n      annotations:\n        audit2rbac.liggitt.net/version: v0.8.0\n      labels:\n        audit2rbac.liggitt.net/generated: \"true\"     audit2rbac.liggitt.net/user: jjackson\n      name: audit2rbac:jjackson\n    rules:\n    - apiGroups:\n      - \"\"   resources:\n      - namespaces\n      verbs:\n      - create\n    ---\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRoleBinding\n    metadata:\n      annotations:\n        audit2rbac.liggitt.net/version: v0.8.0\n      labels:\n        audit2rbac.liggitt.net/generated: \"true\"     audit2rbac.liggitt.net/user: jjackson\n      name: audit2rbac:jjackson\n    roleRef:|\n      apiGroup: rbac.authorization.k8s.io\n      kind: ClusterRole|\n      name: audit2rbac:jjackson\n    subjects:\n    - apiGroup: rbac.authorization.k8s.io\n      kind: User\n      name: jjackson\n    Complete! \n    ```", "```\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRole\n    metadata:\n      name: create-ns-audit2rbac\n    rules:\n    - apiGroups:\n      - \"\"\n      resources:\n      - namespaces\n      verbs:\n      - create\n    ---\n    apiVersion: rbac.authorization.k8s.io/v1\n    kind: ClusterRoleBinding\n    metadata:\n      name: create-ns-audit2rbac\n    roleRef:\n      apiGroup: rbac.authorization.k8s.io\n      kind: ClusterRole\n      name: create-ns-audit2rbac\n    subjects:\n    - apiGroup: rbac.authorization.k8s.io\n      kind: Group\n      name: cn=k8s-create-ns,ou=Groups,DC=domain,DC=com \n    ```"]