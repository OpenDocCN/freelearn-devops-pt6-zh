["```\n$ k config view\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: DATA+OMITTED\n    server: https://127.0.0.1:50615\n  name: kind-kind\ncontexts:\n- context:\n    cluster: kind-kind\n    user: kind-kind\n  name: kind-kind\ncurrent-context: kind-kind\nkind: Config\npreferences: {}\nusers:\n- name: kind-kind\n  user:\n    client-certificate-data: REDACTED\n    client-key-data: REDACTED \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: \"\"\n  labels:\n    name: \"\"\n  namespace: \"\"\n  annotations: []\n  generateName: \"\"\nspec:\n     ... \n```", "```\nspec:\n  containers: [\n      ...\n  ],\n  \"restartPolicy\": \"\",\n  \"volumes\": [] \n```", "```\nname: \"\",\nimage: \"\",\ncommand: [\"\"],\nargs: [\"\"],\nenv:\n    - name: \"\",\n      value: \"\"\nimagePullPolicy: \"\",\nports: \n    - containerPort\": 0,\n      name: \"\",\n      protocol: \"\"\nresources:\n  requests:\n    cpu: \"\"\n    memory: \"\"\n  limits:\n    cpu: \"\"\n    memory: \"\" \n```", "```\nkubectl explain pod\nkubectl explain pod.spec \n```", "```\nFROM busybox\nCMD ash -c \"echo 'Started...'; while true ; do sleep 10 ; done\" \n```", "```\n$ docker build . -t g1g1/hue-learn:0.3\n$ docker build . -t g1g1/hue-learn:0.4\n$ docker push g1g1/hue-learn:0.3\n$ docker push g1g1/hue-learn:0.4 \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hue-learner\n  labels:\n    app: hue\n    service: learner\n    runtime-environment: production\n    tier: internal-service \n```", "```\nspec:\n  containers:\n  - name: hue-learner\n    image: g1g1/hue-learn:0.3 \n```", "```\n resources:\n      requests:\n        cpu: 200m\n        memory: 256Mi \n```", "```\n env:\n    - name: DISCOVER_QUEUE\n      value: dns\n    - name: DISCOVER_STORE\n      value: dns \n```", "```\n$ k get po -n kube-system --show-labels\nNAME                                         READY   STATUS    RESTARTS   AGE    LABELS\ncoredns-64897985d-gzrm4                      1/1     Running   0          2d2h   k8s-app=kube-dns,pod-template-hash=64897985d\ncoredns-64897985d-m8nm9                      1/1     Running   0          2d2h   k8s-app=kube-dns,pod-template-hash=64897985d\netcd-kind-control-plane                      1/1     Running   0          2d2h   component=etcd,tier=control-plane\nkindnet-wx7kl                                1/1     Running   0          2d2h   app=kindnet,controller-revision-hash=9d779cb4d,k8s-app=kindnet,pod-template-generation=1,tier=node\nkube-apiserver-kind-control-plane            1/1     Running   0          2d2h   component=kube-apiserver,tier=control-plane\nkube-controller-manager-kind-control-plane   1/1     Running   0          2d2h   component=kube-controller-manager,tier=control-plane\nkube-proxy-bgcrq                             1/1     Running   0          2d2h   controller-revision-hash=664d4bb79f,k8s-app=kube-proxy,pod-template-generation=1\nkube-scheduler-kind-control-plane            1/1     Running   0          2d2h   component=kube-scheduler,tier=control-plane \n```", "```\n$ k get po -n kube-system -l k8s-app=kube-dns\nNAME                      READY   STATUS    RESTARTS   AGE\ncoredns-64897985d-gzrm4   1/1     Running   0          2d2h\ncoredns-64897985d-m8nm9   1/1     Running   0          2d2h \n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hue-learn\n  labels:\n    app: hue\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: hue\n  template:\n    metadata:\n      labels:\n        app: hue\n    spec:\n      containers:\n      - name: hue-learner\n        image: g1g1/hue-learn:0.3\n        resources:\n          requests:\n            cpu: 200m\n            memory: 256Mi\n        env:\n        - name: DISCOVER_QUEUE\n          value: dns\n        - name: DISCOVER_STORE\n          value: dns \n```", "```\n$ k create -f hue-learn-deployment.yaml\ndeployment.apps/hue-learn created\n$ k get deployment hue-learn\nNAME        READY   UP-TO-DATE   AVAILABLE   AGE\nhue-learn   3/3     3            3           25s\n$ k get pods -l app=hue\nNAME                         READY   STATUS    RESTARTS   AGE\nhue-learn-67d4649b58-qhc88   1/1     Running   0          45s\nhue-learn-67d4649b58-qpm2q   1/1     Running   0          45s\nhue-learn-67d4649b58-tzzq7   1/1     Running   0          45s \n```", "```\n$ k describe deployment hue-learn\nName:                   hue-learn\nNamespace:              default\nCreationTimestamp:      Tue, 21 Jun 2022 21:11:50 -0700\nLabels:                 app=hue\nAnnotations:            deployment.kubernetes.io/revision: 1\nSelector:               app=hue\nReplicas:               3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=hue\n  Containers:\n   hue-learner:\n    Image:      g1g1/hue-learn:0.3\n    Port:       <none>\n    Host Port:  <none>\n    Requests:\n      cpu:     200m\n      memory:  256Mi\n    Environment:\n      DISCOVER_QUEUE:  dns\n      DISCOVER_STORE:  dns\n    Mounts:            <none>\n  Volumes:             <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   hue-learn-67d4649b58 (3/3 replicas created)\nEvents:\n  Type    Reason             Age   From                   Message\n  ----    ------             ----  ----                   -------\n  Normal  ScalingReplicaSet  106s  deployment-controller  Scaled up replica set hue-learn-67d4649b58 to 3 \n```", "```\n$ k get pods -o jsonpath='{.items[*].spec.containers[0].image}' -l app=hue | xargs printf \"%s\\n\"\ng1g1/hue-learn:0.3\ng1g1/hue-learn:0.3\ng1g1/hue-learn:0.3 \n```", "```\n$ k apply -f hue-learn-deployment-0.4.yaml\nWarning: resource deployments/hue-learn is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.\ndeployment.apps/hue-learn configured\n$ k get pods -o jsonpath='{.items[*].spec.containers[0].image}' -l app=hue | xargs printf \"%s\\n\"\ng1g1/hue-learn:0.4\ng1g1/hue-learn:0.4\ng1g1/hue-learn:0.4 \n```", "```\n$ kubectl get pods\nNAME                         READY   STATUS        RESTARTS   AGE\nhue-learn-67d4649b58-fgt7m   1/1     Terminating   0          99s\nhue-learn-67d4649b58-klhz5   1/1     Terminating   0          100s\nhue-learn-67d4649b58-lgpl9   1/1     Terminating   0          101s\nhue-learn-68d74fd4b7-bxxnm   1/1     Running       0          4s\nhue-learn-68d74fd4b7-fh55c   1/1     Running       0          3s\nhue-learn-68d74fd4b7-rnsj4   1/1     Running       0          2s \n```", "```\ndocker push g1g1/hue-reminders:3.0 \n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hue-reminders\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: hue\n      service: reminders\n  template:\n    metadata:\n      name: hue-reminders\n      labels:\n        app: hue\n        service: reminders\n    spec:\n      containers:\n      - name: hue-reminders\n        image: g1g1/hue-reminders:3.0\n        ports:\n        - containerPort: 8080 \n```", "```\n$ k create -f hue-reminders-deployment.yaml\ndeployment.apps/hue-reminders created\n$ k get pods\nNAME                            READY   STATUS    RESTARTS   AGE\nhue-learn-68d74fd4b7-bxxnm      1/1     Running   0          12h\nhue-learn-68d74fd4b7-fh55c      1/1     Running   0          12h\nhue-learn-68d74fd4b7-rnsj4      1/1     Running   0          12h\nhue-reminders-9bdcd7489-4jqhc   1/1     Running   0          11s\nhue-reminders-9bdcd7489-bxh59   1/1     Running   0          11s \n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: hue-reminders\n  labels:\n    app: hue\n    service: reminders\nspec:\n  ports:\n  - port: 8080\n    targetPort: 80\n    protocol: TCP\n  selector:\n    app: hue\n    service: reminders \n```", "```\n$ k create -f hue-reminders-service.yaml\nservice/hue-reminders created\n$ k describe svc hue-reminders\nName:              hue-reminders\nNamespace:         default\nLabels:            app=hue\n                   service=reminders\nAnnotations:       <none>\nSelector:          app=hue,service=reminders\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.152.254\nIPs:               10.96.152.254\nPort:              <unset>  8080/TCP\nTargetPort:        8080/TCP\nEndpoints:         10.244.0.32:8080,10.244.0.33:8080\nSession Affinity:  None\nEvents:            <none> \n```", "```\n$ k exec hue-learn-68d74fd4b7-bxxnm -- printenv | grep HUE_REMINDERS_SERVICE \n```", "```\n$ k delete po hue-learn-68d74fd4b7-bxxnm\npod \"hue-learn-68d74fd4b7-bxxnm\" deleted \n```", "```\n$ k get pods | grep hue-learn\nhue-learn-68d74fd4b7-fh55c      1/1     Running   0          13h\nhue-learn-68d74fd4b7-rnsj4      1/1     Running   0          13h\nhue-learn-68d74fd4b7-rw4qr      1/1     Running   0          2m \n```", "```\n$ k exec hue-learn-68d74fd4b7-rw4qr -- printenv | grep HUE_REMINDERS_SERVICE\nHUE_REMINDERS_SERVICE_PORT=8080\nHUE_REMINDERS_SERVICE_HOST=10.96.152.254 \n```", "```\n<service name>.<namespace>.svc.cluster.local\n$ kubectl exec hue-learn-68d74fd4b7-rw4qr -- nslookup hue-reminders.default.svc.cluster.local\nServer:     10.96.0.10\nAddress:    10.96.0.10:53\nName:   hue-reminders.default.svc.cluster.local\nAddress: 10.96.152.254 \n```", "```\n$ kubectl exec hue-learn-68d74fd4b7-fh55c -- wget -q -O - hue-reminders.default.svc.cluster.local:8080\nDentist appointment at 3pm\nDinner at 7pm \n```", "```\nDentist appointment at 3pm\nDinner at 7pm \n```", "```\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    protocol: TCP\n    name: http\n  - port: 443\n    protocol: TCP\n    name: https\n  selector:\n    app: hue-reminders \n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minimal-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx-example\n  rules:\n  - http:\n      paths:\n      - path: /testpath\n        pathType: Prefix\n        backend:\n          service:\n            name: test\n            port:\n              number: 80 \n```", "```\n$ k3d cluster create --agents 2\n...\nINFO[0026] Cluster 'k3s-default' created successfully!\n$ k get no\nNAME                       STATUS   ROLES                  AGE   VERSION\nk3d-k3s-default-agent-0    Ready    <none>                 22s   v1.23.6+k3s1\nk3d-k3s-default-agent-1    Ready    <none>                 22s   v1.23.6+k3s1\nk3d-k3s-default-server-0   Ready    control-plane,master   31s   v1.23.6+k3s1 \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: trouble-shooter\n  labels:\n    role: trouble-shooter\nspec:\n  nodeSelector:\n    kubernetes.io/hostname: k3d-k3s-default-agent-1\n  containers:\n  - name: trouble-shooter\n    image: g1g1/py-kube:0.3\n    command: [\"bash\"]\n    args: [\"-c\", \"echo started...; while true ; do sleep 1 ; done\"] \n```", "```\n$ k apply -f trouble-shooter.yaml\npod/trouble-shooter created\n$ k get po trouble-shooter -o jsonpath='{.spec.nodeName}'\nk3d-k3s-default-agent-1 \n```", "```\n$ k apply -f hue-learn-deployment.yaml\ndeployment.apps/hue-learn created\n$ k apply -f hue-reminders-deployment.yaml\ndeployment.apps/hue-reminders created \n```", "```\n$ k get po -o wide\nNAME                            READY   STATUS    RESTARTS   AGE     IP          NODE                       NOMINATED NODE   READINESS GATES\ntrouble-shooter                 1/1     Running   0          2m20s   10.42.2.4   k3d-k3s-default-agent-1    <none>           <none>\nhue-learn-67d4649b58-tklxf      1/1     Running   0          18s     10.42.1.8   k3d-k3s-default-server-0   <none>           <none>\nhue-learn-67d4649b58-wk55w      1/1     Running   0          18s     10.42.0.3   k3d-k3s-default-agent-0    <none>           <none>\nhue-learn-67d4649b58-jkwwg      1/1     Running   0          18s     10.42.2.5   k3d-k3s-default-agent-1    <none>           <none>\nhue-reminders-9bdcd7489-2j65p   1/1     Running   0          6s      10.42.2.6   k3d-k3s-default-agent-1    <none>           <none>\nhue-reminders-9bdcd7489-wntpx   1/1     Running   0          6s      10.42.0.4   k3d-k3s-default-agent-0    <none>           <none> \n```", "```\n$ k taint nodes k3d-k3s-default-server-0 control-plane=true:NoExecute\nnode/k3d-k3s-default-server-0 tainted \n```", "```\n$ k get nodes k3d-k3s-default-server-0 -o jsonpath='{.spec.taints[0]}'\nmap[effect:NoExecute key:control-plane value:true] \n```", "```\n$ k get po -o wide\nNAME                            READY   STATUS    RESTARTS   AGE     IP          NODE                      NOMINATED NODE   READINESS GATES\ntrouble-shooter                 1/1     Running   0          33m     10.42.2.4   k3d-k3s-default-agent-1   <none>           <none>\nhue-learn-67d4649b58-wk55w      1/1     Running   0          31m     10.42.0.3   k3d-k3s-default-agent-0   <none>           <none>\nhue-learn-67d4649b58-jkwwg      1/1     Running   0          31m     10.42.2.5   k3d-k3s-default-agent-1   <none>           <none>\nhue-reminders-9bdcd7489-2j65p   1/1     Running   0          30m     10.42.2.6   k3d-k3s-default-agent-1   <none>           <none>\nhue-reminders-9bdcd7489-wntpx   1/1     Running   0          30m     10.42.0.4   k3d-k3s-default-agent-0   <none>           <none>\nhue-learn-67d4649b58-bl8cn      1/1     Running   0          2m53s   10.42.0.5   k3d-k3s-default-agent-0   <none>           <none> \n```", "```\ntolerations:\n- key: \"control-plane\"\n  operator: \"Equal\"\n  value: \"true\"\n  effect: \"NoSchedule\" \n```", "```\naffinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/hostname\n            operator: NotIn\n            values:\n            - k3d-k3s-default-agent-1 \n```", "```\n affinity:\n        podAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchExpressions:\n              - key: role\n                operator: In\n                values:\n                - trouble-shooter\n            topologyKey: topology.kubernetes.io/zone # for clusters on cloud providers \n```", "```\n$ k apply -f hue-reminders-deployment-with-pod-affinity.yaml\ndeployment.apps/hue-reminders configured\n$ k get po -o wide\nNAME                             READY   STATUS    RESTARTS   AGE    IP          NODE                      NOMINATED NODE   READINESS GATES\ntrouble-shooter                  1/1     Running   0          117m   10.42.2.4   k3d-k3s-default-agent-1   <none>           <none>\nhue-learn-67d4649b58-wk55w       1/1     Running   0          115m   10.42.0.3   k3d-k3s-default-agent-0   <none>           <none>\nhue-learn-67d4649b58-jkwwg       1/1     Running   0          115m   10.42.2.5   k3d-k3s-default-agent-1   <none>           <none>\nhue-learn-67d4649b58-bl8cn       1/1     Running   0          87m    10.42.0.5   k3d-k3s-default-agent-0   <none>           <none>\nhue-reminders-544d96785b-pd62t   0/1     Pending   0          50s    10.42.2.4   k3d-k3s-default-agent-1   <none>           <none>\nhue-reminders-544d96785b-wpmjj   0/1     Pending   0          50s    10.42.2.4   k3d-k3s-default-agent-1   <none>           <none> \n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hue-reminders\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: hue\n      service: reminders\n  template:\n    metadata:\n      name: hue-reminders\n      labels:\n        app: hue\n        service: reminders\n    spec:\n      topologySpreadConstraints:\n        - maxSkew: 1\n          topologyKey: node.kubernetes.io/instance-type\n          whenUnsatisfiable: DoNotSchedule\n          labelSelector:\n            matchLabels:\n              app: hue\n              service: hue-reminders\n      containers:\n      - name: hue-reminders\n        image: g1g1/hue-reminders:3.0\n        ports:\n        - containerPort: 80 \n```", "```\n$  k apply -f hue-reminders-deployment-with-spread-contraitns.yaml\ndeployment.apps/hue-reminders created\n$ k get po -o wide -l app=hue,service=reminders\nNAME                             READY   STATUS    RESTARTS   AGE     IP           NODE                      NOMINATED NODE   READINESS GATES\nhue-reminders-6664fccb8f-8bvf6   1/1     Running   0          4m40s   10.42.0.11   k3d-k3s-default-agent-0   <none>           <none>\nhue-reminders-6664fccb8f-8qrbl   1/1     Running   0          3m59s   10.42.0.12   k3d-k3s-default-agent-0   <none>           <none>\nhue-reminders-6664fccb8f-b5pbp   1/1     Running   0          56s     10.42.2.14   k3d-k3s-default-agent-1   <none>           <none> \n```", "```\nkind: Namespace\napiVersion: v1\nmetadata:\n  name: restricted\n  labels:\n    name: restricted \n```", "```\n$ kubectl create -f restricted-namespace.yaml\nnamespace \"restricted\" created \n```", "```\n$ k config set-context k3d-k3s-restricted --cluster k3d-k3s-default --namespace=restricted --user restricted@k3d-k3s-default\nContext \"restricted\" created.\n$ k config use-context restricted\nSwitched to context \"restricted\". \n```", "```\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: DATA+OMITTED\n    server: https://0.0.0.0:53829\n  name: k3d-k3s-default\ncontexts:\n- context:\n    cluster: k3d-k3s-default\n    user: admin@k3d-k3s-default\n  name: k3d-k3s-default\n- context:\n    cluster: \"\"\n    namespace: restricted\n    user: restricted@k3d-k3s-default\n  name: restricted\ncurrent-context: restricted\nkind: Config\npreferences: {}\nusers:\n- name: admin@k3d-k3s-default\n  user:\n    client-certificate-data: REDACTED\n    client-key-data: REDACTED \n```", "```\nusers:\n- name: restricted@k3d-k3s-default\n  user:\n    client-certificate-data: REDACTED\n    client-key-data: REDACTED \n```", "```\n$ k create -f hue-finance-deployment.yaml\ndeployment.apps/hue-finance created\n$ k get pods\nNAME                           READY   STATUS    RESTARTS   AGE\nhue-finance-84c445f684-vh8qv   1/1     Running   0          7s\nhue-finance-84c445f684-fjkxs   1/1     Running   0          7s\nhue-finance-84c445f684-sppkq   1/1     Running   0          7s \n```", "```\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: staging\ncommonLabels:\n    environment: staging\nbases:\n  - ../base\npatchesStrategicMerge:\n  - hue-learn-patch.yaml\nresources:\n  - namespace.yaml \n```", "```\n$ tree\n.\n├── base\n│   ├── hue-learn.yaml\n│   └── kustomization.yaml\n├── overlays\n│   ├── production\n│   │   ├── kustomization.yaml\n│   │   └── namespace.yaml\n│   └── staging\n│       ├── hue-learn-patch.yaml\n│       ├── kustomization.yaml\n│       └── namespace.yaml \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hue-learner\n  labels:\n    tier: internal-service\nspec:\n  containers:\n  - name: hue-learner\n    image: g1g1/hue-learn:0.3\n    resources:\n      requests:\n        cpu: 200m\n        memory: 256Mi\n    env:\n    - name: DISCOVER_QUEUE\n      value: dns\n    - name: DISCOVER_STORE\n      value: dns \n```", "```\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\ncommonLabels:\n  app: hue\nresources:\n  - hue-learn.yaml \n```", "```\n$ k kustomize base\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: hue\n    tier: internal-service\n  name: hue-learner\nspec:\n  containers:\n  - env:\n    - name: DISCOVER_QUEUE\n      value: dns\n    - name: DISCOVER_STORE\n      value: dns\n    image: g1g1/hue-learn:0.3\n    name: hue-learner\n    resources:\n      requests:\n        cpu: 200m\n        memory: 256Mi \n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: staging \n```", "```\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: staging\ncommonLabels:\n    environment: staging\nbases:\n  - ../../base\npatchesStrategicMerge:\n  - hue-learn-patch.yaml\nresources:\n  - namespace.yaml \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hue-learner\nspec:\n  containers:\n  - name: hue-learner\n    image: g1g1/hue-learn:0.4 \n```", "```\n- op: replace\n  path: /spec/containers/0/image\n  value: g1g1/hue-learn:0.4 \n```", "```\n$ k kustomize overlays/staging\napiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    environment: staging\n  name: staging\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: hue\n    environment: staging\n    tier: internal-service\n  name: hue-learner\n  namespace: staging\nspec:\n  containers:\n  - env:\n    - name: DISCOVER_QUEUE\n      value: dns\n    - name: DISCOVER_STORE\n      value: dns\n    image: g1g1/hue-learn:0.4\n    name: hue-learner\n    resources:\n      requests:\n        cpu: 200m\n        memory: 256Mi \n```", "```\n$ k apply -k overlays/staging\nnamespace/staging created\npod/hue-learner created \n```", "```\n$ k get po -n staging\nNAME          READY   STATUS    RESTARTS   AGE\nhue-learner   1/1     Running   0          21s \n```", "```\n$ k get po hue-learner -n staging -o jsonpath='{.spec.containers[0].image}'\ng1g1/hue-learn:0.4 \n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: factorial5\nspec:\n  template:\n    metadata:\n      name: factorial5\n    spec:\n      containers:\n      - name: factorial5\n        image: g1g1/py-kube:0.3\n        command: [\"python\",\n                  \"-c\",\n                  \"import math; print(math.factorial(5))\"]\n      restartPolicy: Never \n```", "```\n$ k create -f factorial-job.yaml\njob.batch/factorial5 created\n$ k get jobs\nNAME         COMPLETIONS   DURATION   AGE\nfactorial5   1/1           4s         27s \n```", "```\n$ k get po -l job-name=factorial5\nNAME               READY   STATUS      RESTARTS   AGE\nfactorial5-dddzz   0/1     Completed   0          114s \n```", "```\n$ k logs factorial5-dddzz\n120 \n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: sleep20\nspec:\n  completions: 3\n  parallelism: 6\n  template:\n    metadata:\n      name: sleep20\n    spec:\n      containers:\n      - name: sleep20\n        image: g1g1/py-kube:0.3\n        command: [\"python\",\n                  \"-c\",\n                  \"import time; print('started...');\n                   time.sleep(20); print('done.')\"]\n      restartPolicy: Never \n```", "```\n$ k create -f parallel-job.yaml\njob.batch/sleep20 created \n```", "```\n$ k get pods -l job-name=sleep20\nNAME            READY   STATUS      RESTARTS   AGE\nsleep20-fqgst   0/1     Completed   0          4m5s\nsleep20-2dv8h   0/1     Completed   0          4m5s\nsleep20-kvn28   0/1     Completed   0          4m5s \n```", "```\n$ kubectl get jobs\nNAME         COMPLETIONS   DURATION   AGE\nfactorial5   1/1           2s         6h59m\nsleep20      3/3           3m7s       5h54m\n$ kubectl delete job factorial5\njob.batch \"factorial5\" deleted\n$ kubectl delete job sleep20\njob.batch \"sleep20\" deleted \n```", "```\napiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: cron-demo\nspec:\n  schedule: \"*/1 * * * *\"\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            cronjob-name: cron-demo\n        spec:\n          containers:\n            - name: cron-demo\n              image: g1g1/py-kube:0.3\n              args:\n                - python\n                - -c\n                - from datetime import datetime; print(f'[{datetime.now()}] CronJob demo here...remember to stretch')\n          restartPolicy: OnFailure \n```", "```\n$ k get cj\nNAME        SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\ncron-demo   */1 * * * *   False     0        <none>          16s\n$ k get job\nNAME                 COMPLETIONS   DURATION   AGE\ncron-demo-27600079   1/1           3s         2m45s\ncron-demo-27600080   1/1           3s         105s\ncron-demo-27600081   1/1           3s         45s\n$ k get pods\nNAME                       READY   STATUS      RESTARTS   AGE\ncron-demo-27600080-dmcmq   0/1     Completed   0          2m6s\ncron-demo-27600081-gjsvd   0/1     Completed   0          66s\ncron-demo-27600082-sgjlh   0/1     Completed   0          6s \n```", "```\n$ k logs cron-demo-27600082-sgjlh\n[2022-06-23 17:22:00.971343] CronJob demo here...remember to stretch \n```", "```\n$ k delete job -l name=cron-demo\njob.batch \"cron-demo-27600083\" deleted\njob.batch \"cron-demo-27600084\" deleted\njob.batch \"cron-demo-27600085\" deleted \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: music\n    service: music\n  name: hue-music\nspec:\n  containers:\n    - image: g1g1/hue-music\n      livenessProbe:\n        httpGet:\n          path: /pulse\n          port: 8888\n          httpHeaders:\n            - name: X-Custom-Header\n              value: ItsAlive\n        initialDelaySeconds: 30\n        timeoutSeconds: 1\n      name: hue-music \n```", "```\nreadinessProbe:\n  exec:\n    command:\n        - /usr/local/bin/checker\n        - --full-check\n        - --data-service=hue-multimedia-service\n  initialDelaySeconds: 60\n  timeoutSeconds: 5 \n```", "```\nports:\n- name: liveness-port\n  containerPort: 8080\n  hostPort: 8080\nlivenessProbe:\n  httpGet:\n    path: /healthz\n    port: liveness-port\n  failureThreshold: 1\n  periodSeconds: 10\nstartupProbe:\n  httpGet:\n    path: /healthz\n    port: liveness-port\n  failureThreshold: 30\n  periodSeconds: 10 \n```", "```\nkind: Pod\nmetadata:\n  name: hue-fitness\nspec:\n  containers:\n  - name: hue-fitness\n    image: busybox\n  initContainers:\n  - name: install\n    image: busybox \n```", "```\nKind: Pod\n...\nspec:\n  readinessGates:\n    - conditionType: \"www.example.com/feature-1\"\nstatus:\n  conditions:\n    - type: Ready  # this is a builtin PodCondition\n      status: \"False\"\n      lastProbeTime: null\n      lastTransitionTime: 2023-01-01T00:00:00Z\n    - type: \"www.example.com/feature-1\"   # an extra PodCondition\n      status: \"False\"\n      lastProbeTime: null\n      lastTransitionTime: 2023-01-01T00:00:00Z\n  containerStatuses:\n    - containerID: docker://abcd...\n      ready: true\n... \n```", "```\napiVersion: apps/v1\nkind-fission | fission\nkind: DaemonSet\nmetadata:\n  name: hue-collect-proxy kind-fission | fission\n  labels:\n    tier: stats\n    app: hue-collect-proxy\nspec:\n  selector:\n    matchLabels:\n      tier: stats\n      app: hue-collect-proxy\n  template:\n    metadata:\n      labels:\n        tier: stats\n        app: hue-collect-proxy\n    spec:\n      hostPID: true\n      hostIPC: true\n      hostNetwork: true\n      containers:\n      - name: hue-collect-proxy\n        image: busybox \n```"]