- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: 'Wrapping Up: GenAI Coding Assistants and Further Reading'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结：GenAI编码助手与进一步阅读
- en: In the last few years, GenAI has significantly evolved, and there are now numerous
    GenAI-based coding assistants that can help with creating, launching, and monitoring
    K8s clusters. Since the field is evolving at a rapid pace, in this chapter, we
    will cover some of the coding assistants, evolving trends, and good references
    to read for further information.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的几年中，GenAI已经取得了显著发展，现在有许多基于GenAI的编码助手可以帮助创建、启动和监控K8s集群。由于这一领域的快速发展，本章将介绍一些编码助手、发展趋势以及一些有价值的参考资料，供进一步阅读。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主要话题：
- en: GenAI-powered coding assistants
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GenAI驱动的编码助手
- en: GenAI-powered observability and optimization
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GenAI驱动的可观察性和优化
- en: Amazon Q Developer walk-through with Amazon EKS
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊Q开发者通过Amazon EKS的操作演示
- en: References for further reading
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进一步阅读的参考资料
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In this chapter, we will be using the following services, some of which require
    you to set up an account:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用以下服务，其中一些需要您设置帐户：
- en: AWS ([https://signin.aws.amazon.com/signup?request_type=register](https://signin.aws.amazon.com/signup?request_type=register))
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS ([https://signin.aws.amazon.com/signup?request_type=register](https://signin.aws.amazon.com/signup?request_type=register))
- en: Docker Desktop ([https://www.docker.com/products/docker-desktop/](https://www.docker.com/products/docker-desktop/))
    or `Finch` ([https://runfinch.com/](https://runfinch.com/))
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Desktop ([https://www.docker.com/products/docker-desktop/](https://www.docker.com/products/docker-desktop/))
    或 `Finch` ([https://runfinch.com/](https://runfinch.com/))
- en: GenAI-powered coding assistants
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GenAI驱动的编码助手
- en: 'GenAI-powered assistants are transforming K8s cluster creation, deployment,
    and management by automating config file creation, workload scaling, and monitoring.
    Some GenAI-based coding assistants that can help with K8s clusters are the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: GenAI驱动的助手正在通过自动化配置文件创建、工作负载扩展和监控来改变K8s集群的创建、部署和管理。一些能够帮助管理K8s集群的GenAI编码助手包括：
- en: '`Amazon Q Developer` ([https://aws.amazon.com/q/developer/](https://aws.amazon.com/q/developer/)):
    This is Amazon’s GenAI assistant, designed to help with cloud-based development,
    including K8s management on **Amazon** **Elastic Kubernetes Service** (**EKS**).
    It simplifies writing deployment manifests, automating **infrastructure as code**
    (**IaC**), and diagnosing issues in K8s deployment. It can also assist with optimizing
    cluster configurations by providing recommendations for resource allocation, autoscaling
    settings, and networking configurations. In this chapter, we will provide a walk-through
    on how to use AWS Q Developer for an EKS cluster deployment. We chose Amazon Q
    Developer for the walk-through since we are operating in an AWS environment.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Amazon Q Developer` ([https://aws.amazon.com/q/developer/](https://aws.amazon.com/q/developer/)):
    这是亚马逊的GenAI助手，旨在帮助云端开发，包括在**Amazon Elastic Kubernetes Service** (**EKS**) 上的K8s管理。它简化了部署清单的编写，自动化了**基础设施即代码**（**IaC**）以及诊断K8s部署中的问题。它还可以通过提供资源分配、自动扩展设置和网络配置的建议来帮助优化集群配置。在本章中，我们将提供一个如何使用AWS
    Q Developer进行EKS集群部署的操作演示。我们选择了Amazon Q Developer进行演示，因为我们是在AWS环境中操作。'
- en: '`GitHub Copilot` ([https://github.com/features/copilot](https://github.com/features/copilot)):
    This is an AI-powered coding assistant that can integrate into IDEs, such as Visual
    Studio Code and JetBrains. It can create K8s deployment code, such as deployment
    manifests, Helm charts, and CI/CD pipeline configurations. By providing inline
    suggestions and auto-completion, Copilot can accelerate K8s automation and ensure
    adherence to best practices.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GitHub Copilot` ([https://github.com/features/copilot](https://github.com/features/copilot)):
    这是一个由AI驱动的编码助手，可以集成到IDE中，如Visual Studio Code和JetBrains。它可以创建K8s部署代码，例如部署清单、Helm
    charts和CI/CD流水线配置。通过提供内联建议和自动补全，Copilot可以加速K8s自动化并确保遵循最佳实践。'
- en: '`Google Gemini Code Assist` ([https://codeassist.google/products/business](https://codeassist.google/products/business)):
    This coding assistant can work across the software development life cycle. It
    can help with K8s workload optimization and infrastructure management and provide
    insights into scaling policies, cluster health, and performance tuning. By leveraging
    AI, Gemini suggests ways to optimize cost efficiency and minimize downtime, especially
    for GKE clusters.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Google Gemini Code Assist` ([https://codeassist.google/products/business](https://codeassist.google/products/business))：这个编码助手可以跨越软件开发生命周期工作。它可以帮助优化K8s工作负载和基础设施管理，并提供有关扩展策略、集群健康状况和性能调优的见解。通过利用AI，Gemini建议优化成本效率和最小化停机时间的方式，特别是对于GKE集群。'
- en: '`Microsoft Copilot in Azure` ([https://azure.microsoft.com/en-us/products/copilot](https://azure.microsoft.com/en-us/products/copilot)):
    This can assist developers working with **Azure Kubernetes Service** (**AKS**).
    It provides recommendations for cluster scaling, node pool configurations, and
    security policies. Azure AI Copilot also integrates with Terraform and Bicep,
    allowing DevOps teams to automate K8s infrastructure provisioning efficiently.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft Copilot in Azure` ([https://azure.microsoft.com/en-us/products/copilot](https://azure.microsoft.com/en-us/products/copilot))：这个工具可以帮助在**Azure
    Kubernetes Service**（**AKS**）中工作的开发人员。它提供集群扩展、节点池配置和安全策略的建议。Azure AI Copilot还与Terraform和Bicep集成，使DevOps团队能够高效地自动化K8s基础设施的配置。'
- en: '`IBM watsonx Code Assistant` ([https://www.ibm.com/products/watsonx-code-assistant](https://www.ibm.com/products/watsonx-code-assistant)):
    This is particularly useful for teams using OpenShift and K8s in hybrid cloud
    environments. It automates application containerization, suggesting optimizations
    for container images, network policies, and security hardening. It also integrates
    with Red Hat OpenShift GitOps, allowing AI-driven automation of CI/CD pipelines
    and application deployment strategies.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IBM watsonx Code Assistant` ([https://www.ibm.com/products/watsonx-code-assistant](https://www.ibm.com/products/watsonx-code-assistant))：这个工具对于在混合云环境中使用OpenShift和K8s的团队特别有用。它自动化应用程序容器化，建议对容器镜像、网络策略和安全加固的优化。它还与Red
    Hat OpenShift GitOps集成，允许通过AI驱动的自动化来优化CI/CD管道和应用程序部署策略。'
- en: 'K8sGPT ([https://k8sgpt.ai/](https://k8sgpt.ai/)): This is an open source tool
    that brings AI-powered diagnostics to K8s clusters by leveraging GenAI to identify,
    analyze, and explain issues. It can be run locally using a CLI or deployed in
    a K8s cluster for continuous analysis. It supports a variety of AI backends, including
    OpenAI, or even local LLMs through tools such as Ollama or LangChain, giving teams
    flexibility based on their data privacy needs. It scans various K8s resources,
    such as Pods, Services, Deployments, and Nodes, and detects problems such as crash
    loops, configuration errors, or failed health checks. Instead of K8s error messages,
    K8sGPT can provide clear, human-readable explanations along with suggested remediation
    steps, making it especially helpful for developers and SREs troubleshooting complex
    environments.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: K8sGPT ([https://k8sgpt.ai/](https://k8sgpt.ai/))：这是一个开源工具，通过利用GenAI识别、分析和解释问题，将AI驱动的诊断引入K8s集群。它可以通过CLI在本地运行，或者部署在K8s集群中进行持续分析。它支持多种AI后端，包括OpenAI，甚至通过Ollama或LangChain等工具支持本地LLM，给团队根据数据隐私需求提供灵活性。它扫描各种K8s资源，如Pods、Services、Deployments和Nodes，并检测诸如崩溃循环、配置错误或健康检查失败等问题。与K8s的错误信息不同，K8sGPT可以提供清晰、易懂的解释以及建议的修复步骤，特别有助于开发人员和SRE排除复杂环境中的故障。
- en: For example, instead of a vague `CrashLoopBackOff` error, K8sGPT might explain
    that a Pod is crashing because it’s missing a required secret or has a misconfigured
    environment variable.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，K8sGPT可能会解释，Pod崩溃是因为缺少所需的密钥或环境变量配置错误，而不是模糊的`CrashLoopBackOff`错误。
- en: In this section, we explored several GenAI-powered coding assistants that aid
    in software deployment, generating IaC, and debugging K8s clusters. However, when
    working with AI-generated configurations, such as Amazon Q Developer or any other
    GenAI assistant, it’s essential to validate output manually and test it in a staging
    environment before deployment. Tools such as `terraform plan`, `docker scan`,
    and `kubeval` can help verify syntactic correctness and highlight configuration
    issues. Consider using policy-as-code frameworks, such as **Open Policy Agent**
    (**OPA**), to enforce security standards automatically.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探索了几种由 GenAI 驱动的编码助手，它们帮助软件部署、生成 IaC（基础设施即代码）并调试 K8s 集群。然而，在使用 AI 生成的配置时，例如
    Amazon Q Developer 或任何其他 GenAI 助手，手动验证输出并在部署前在预演环境中进行测试是非常必要的。像 `terraform plan`、`docker
    scan` 和 `kubeval` 这样的工具可以帮助验证语法正确性并突出配置问题。考虑使用政策即代码框架，如 **开放政策代理** (**OPA**)，来自动执行安全标准。
- en: In the next section, we will discuss how GenAI is transforming the K8s observability
    and optimization landscape.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论 GenAI 如何改变 K8s 可观测性和优化领域。
- en: GenAI-powered observability and optimization
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GenAI 驱动的可观测性和优化
- en: 'Besides generating the K8s manifest files, GenAI is also transforming K8s operations
    by automating security, monitoring, and optimization. These AI-powered solutions
    are making K8s environments more efficient, cost-effective, and self-healing.
    Some good examples are the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除了生成 K8s 清单文件，GenAI 还通过自动化安全、监控和优化来改变 K8s 操作。这些 AI 驱动的解决方案正在使 K8s 环境变得更加高效、具有成本效益且具有自愈能力。以下是一些很好的例子：
- en: '**AI-powered K8s autoscaling**: Traditional K8s autoscalers rely on CPU and
    memory thresholds, but AI-powered autoscalers predict workload demands and dynamically
    adjust resources to optimize performance and costs. Tools such as StormForge ([https://stormforge.io/](https://stormforge.io/))
    and PredictKube ([https://dysnix.com/predictkube](https://dysnix.com/predictkube))
    leverage **machine learning** (**ML**) to enhance autoscaling strategies, preventing
    over-provisioning while ensuring availability during traffic spikes.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI 驱动的 K8s 自动伸缩**：传统的 K8s 自动伸缩器依赖于 CPU 和内存阈值，但 AI 驱动的自动伸缩器预测工作负载需求并动态调整资源，以优化性能和成本。像
    StormForge ([https://stormforge.io/](https://stormforge.io/)) 和 PredictKube ([https://dysnix.com/predictkube](https://dysnix.com/predictkube))
    等工具利用 **机器学习** (**ML**) 来增强自动伸缩策略，防止过度配置，同时确保在流量高峰时保持可用性。'
- en: '**AI-assisted K8s governance and policy enforcement**: AI-driven governance
    tools enforce compliance and security policies in K8s clusters. By integrating
    ML models trained in historical data and policy violations, one can go beyond
    static rule definitions. For example, one can analyze historical policy violations
    and detect patterns, such as which resources are most affected and under what
    conditions. Based on learned patterns, AI can suggest new rules to tighten access
    beyond the static rules for policy enforcers, such as OPA.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI 辅助的 K8s 治理和策略执行**：AI 驱动的治理工具在 K8s 集群中执行合规性和安全政策。通过集成基于历史数据和策略违规情况训练的机器学习模型，可以超越静态规则定义。例如，可以分析历史上的策略违规情况并检测出模式，如哪些资源最常受影响以及在什么条件下发生。基于学习到的模式，AI
    可以建议新规则，进一步加强访问控制，超越静态规则以执行政策的工具，如 OPA。'
- en: '**GenAI for K8s workflows and observability**: AI-powered observability tools
    analyze logs, metrics, and traces to identify anomalies before they impact applications.
    Solutions such as New Relic AI ([https://newrelic.com/platform/new-relic-ai](https://newrelic.com/platform/new-relic-ai))
    and Dynatrace Davis AI ([https://www.dynatrace.com/platform/artificial-intelligence/](https://www.dynatrace.com/platform/artificial-intelligence/))
    can automate root cause analysis and alert prioritization, helping DevOps reduce
    downtime and improve troubleshooting efficiency. Prometheus with AI models enhances
    smart alerting by filtering out non-critical events and focusing on actionable
    insights.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GenAI 在 K8s 工作流和可观测性中的应用**：AI 驱动的可观测性工具分析日志、指标和追踪，以便在应用程序受到影响之前识别异常。像 New
    Relic AI ([https://newrelic.com/platform/new-relic-ai](https://newrelic.com/platform/new-relic-ai))
    和 Dynatrace Davis AI ([https://www.dynatrace.com/platform/artificial-intelligence/](https://www.dynatrace.com/platform/artificial-intelligence/))
    等解决方案可以自动化根本原因分析和警报优先级排序，帮助 DevOps 降低停机时间并提高故障排除效率。带有 AI 模型的 Prometheus 通过筛选掉非关键事件并专注于可操作的洞察来增强智能警报功能。'
- en: '**Envoy AI Gateway** ([https://aigateway.envoyproxy.io/docs/](https://aigateway.envoyproxy.io/docs/)):
    This was developed to simplify the increasingly complex task of connecting modern
    applications to GenAI services. Built on Envoy Proxy, the project offers a unified
    layer to manage LLM/AI traffic at scale. Key goals of the project include providing
    seamless routing and policy control for GenAI workloads, supporting automatic
    failover for resilient service delivery, securing AI traffic with upstream authorization,
    and enabling usage limits through a flexible policy framework. At its core, Envoy
    AI Gateway aims to make GenAI infrastructure easier to integrate and safer to
    operate. To use Envoy AI Gateway’s observability capabilities, users can configure
    Prometheus to scrape metrics exposed by the gateway, which include AI-specific
    insights such as token usage, time to first token, and per-token latency. These
    metrics follow OpenTelemetry’s GenAI semantic conventions and are designed to
    give visibility into how GenAI models are performing in production.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Envoy AI网关** ([https://aigateway.envoyproxy.io/docs/](https://aigateway.envoyproxy.io/docs/))：该项目旨在简化将现代应用连接到GenAI服务的日益复杂的任务。基于Envoy
    Proxy构建，该项目提供了一个统一的层来管理大规模的LLM/AI流量。该项目的主要目标包括为GenAI工作负载提供无缝路由和策略控制，支持自动故障转移以确保服务的可用性，通过上游授权确保AI流量的安全，并通过灵活的策略框架启用使用限制。Envoy
    AI网关的核心目标是使GenAI基础设施更易于集成并更安全地运营。要使用Envoy AI网关的可观察性功能，用户可以配置Prometheus来抓取网关公开的指标，其中包括AI特定的见解，如令牌使用情况、首次令牌的时间和每个令牌的延迟。这些指标遵循OpenTelemetry的GenAI语义约定，旨在提供关于GenAI模型在生产环境中表现的可见性。'
- en: '**Generative AI for K8s IaC**: AI-powered assistants accelerate K8s infrastructure
    deployment by automatically generating YAML, Terraform, and Helm configurations.
    Tools such as Amazon Q Developer enable teams to describe their desired infrastructure
    in plain language and receive optimized configurations.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用于K8s IaC的生成性AI**：AI驱动的助手通过自动生成YAML、Terraform和Helm配置，加速了K8s基础设施的部署。像Amazon
    Q Developer这样的工具使团队能够用简单的语言描述他们希望的基础设施，并获得优化的配置。'
- en: '**AI-powered K8s cost optimization (FinOps)**: Optimizing cloud costs in K8s
    environments is challenging due to the dynamic nature of workloads. AI-powered
    FinOps solutions such as Harness ([https://www.harness.io/solutions/finops-excellence](https://www.harness.io/solutions/finops-excellence))
    and Cast AI ([https://cast.ai/](https://cast.ai/)) can analyze cluster utilization,
    suggest cost-saving measures, and adjust resource allocations to minimize waste.
    These tools help organizations optimize their K8s spending while maintaining application
    performance.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI驱动的K8s成本优化（FinOps）**：在K8s环境中优化云成本具有挑战性，因为工作负载具有动态特性。AI驱动的FinOps解决方案，如Harness
    ([https://www.harness.io/solutions/finops-excellence](https://www.harness.io/solutions/finops-excellence))
    和Cast AI ([https://cast.ai/](https://cast.ai/))，可以分析集群利用率，提出节省成本的措施，并调整资源分配以减少浪费。这些工具帮助组织在保持应用性能的同时优化K8s开支。'
- en: '**GenAI-powered K8s ChatOps**: AI-driven ChatOps tools enhance K8s management
    by enabling conversational interactions within platforms such as Slack and Microsoft
    Teams. Botkube AI Assistant ([https://botkube.io/](https://botkube.io/)) allows
    users to query K8s clusters and execute commands via chat, while K8sGPT functions
    as an AI-powered K8s SRE, diagnosing and resolving cluster issues autonomously.
    AI-driven self-healing mechanisms can detect failures, restart Pods, and proactively
    fix issues without manual intervention.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GenAI驱动的K8s ChatOps**：AI驱动的ChatOps工具通过在Slack和Microsoft Teams等平台中实现对话交互，增强了K8s管理。Botkube
    AI助手 ([https://botkube.io/](https://botkube.io/)) 允许用户通过聊天查询K8s集群并执行命令，而K8sGPT则充当AI驱动的K8s
    SRE，自动诊断和解决集群问题。AI驱动的自愈机制可以检测故障，重新启动Pods，并主动修复问题，无需人工干预。'
- en: In this section, we explored various AI-powered tools that can help transform
    K8s environments. These tools can be leveraged to automate key K8s operations
    such as autoscaling, security, cost optimization, and observability. In the next
    section, we’ll walk through how to use a GenAI assistant to simplify the development
    of K8s applications.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们探讨了多种AI驱动的工具，这些工具可以帮助转型K8s环境。这些工具可以用于自动化K8s的关键操作，如自动扩缩容、安全性、成本优化和可观察性。在下一部分，我们将演示如何使用GenAI助手简化K8s应用的开发。
- en: Amazon Q Developer walk-through with EKS
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Q开发者与EKS的演示
- en: In this section, we will explore how GenAI-powered assistants, such as Amazon
    Q Developer, can simplify the development of GenAI applications, streamline the
    creation and management of K8s clusters, and simplify deployments. Amazon Q Developer
    introduced a new *agentic experience* directly within the **command-line interface**
    (**CLI**), offering a dynamic and interactive coding experience. Agentic experiences
    refer to systems that actively assist users by understanding context, offering
    suggestions, and helping guide task completion. Amazon Q Developer iteratively
    refines changes based on your feedback and leverages information from your CLI
    environment to assist with local file operations, querying AWS resources, writing
    code, and automatically debugging issues.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨如何通过 GenAI 驱动的助手，例如 Amazon Q Developer，简化 GenAI 应用程序的开发，简化 K8s 集群的创建和管理，并简化部署过程。Amazon
    Q Developer 在 **命令行界面** (**CLI**) 中引入了全新的 *代理体验*，提供动态互动的编码体验。代理体验指的是那些通过理解上下文、提供建议并帮助指导任务完成的系统，积极协助用户。Amazon
    Q Developer 会根据你的反馈不断优化变更，并利用来自你的 CLI 环境的信息来协助本地文件操作、查询 AWS 资源、编写代码并自动调试问题。
- en: Important note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When using GenAI-powered assistants for coding and executing local tasks such
    as running commands, always review generated code and commands thoroughly. Ensure
    they are secure, appropriate for your environment, and won’t unintentionally affect
    critical resources or data.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 GenAI 驱动的助手进行编码和执行本地任务（如运行命令）时，请始终仔细检查生成的代码和命令。确保它们是安全的，适合你的环境，并且不会无意中影响关键资源或数据。
- en: 'Let’s get started:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: Install *Amazon Q Developer for command line* by following the instructions
    at [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 按照 [https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html](https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html)
    上的说明安装 *Amazon Q Developer for command line*。
- en: 'Open a terminal or command-line application and initiate a conversation with
    Amazon Q Developer using the following command:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端或命令行应用程序，使用以下命令与 Amazon Q Developer 开始对话：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You will be directed to the **AWS Builder ID** login page ([https://docs.aws.amazon.com/signin/latest/userguide/sign-in-aws_builder_id.html](https://docs.aws.amazon.com/signin/latest/userguide/sign-in-aws_builder_id.html))
    to allow permission to Amazon Q Developer for command line.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你将被引导到 **AWS Builder ID** 登录页面 ([https://docs.aws.amazon.com/signin/latest/userguide/sign-in-aws_builder_id.html](https://docs.aws.amazon.com/signin/latest/userguide/sign-in-aws_builder_id.html))，以便授予
    Amazon Q Developer 命令行的权限。
- en: 'Type the following query in the CLI. Amazon Q Developer will process your input,
    considering the provided context, call the **Amazon Bedrock API**, and respond
    with an output as shown in *Figure 14**.1*:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CLI 中输入以下查询。Amazon Q Developer 将处理你的输入，考虑提供的上下文，调用 **Amazon Bedrock API**，并以
    *图 14.1* 所示的输出响应：
- en: '![Figure 14.1 – Kubectl command generation using Amazon Q Developer](img/B31108_14_01.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.1 – 使用 Amazon Q Developer 生成 Kubectl 命令](img/B31108_14_01.jpg)'
- en: Figure 14.1 – Kubectl command generation using Amazon Q Developer
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.1 – 使用 Amazon Q Developer 生成 Kubectl 命令
- en: 'Now, let’s ask the GenAI assistant to create the IaC templates for creating
    a new Amazon EKS cluster along with a VPC, private and public subnets, and so
    on. Use the following prompt in the CLI:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们请求 GenAI 助手为创建一个新的 Amazon EKS 集群以及 VPC、私有和公共子网等创建 IaC 模板。在 CLI 中使用以下提示：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Within a few seconds, Amazon Q Developer will generate Terraform code to create
    an Amazon VPC, EKS cluster, and so on, along with Terraform provider configuration,
    input variables, and outputs, as shown in *Figure 14**.2*:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟内，Amazon Q Developer 将生成 Terraform 代码，以创建 Amazon VPC、EKS 集群等，并包含 Terraform
    提供程序配置、输入变量和输出，如 *图 14.2* 所示：
- en: '![Figure 14.2 – Terraform code generation using Amazon Q Developer](img/B31108_14_02.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.2 – 使用 Amazon Q Developer 生成 Terraform 代码](img/B31108_14_02.jpg)'
- en: Figure 14.2 – Terraform code generation using Amazon Q Developer
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.2 – 使用 Amazon Q Developer 生成 Terraform 代码
- en: We ran this prompt and uploaded the generated files to the GitHub repository
    at [https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/amazon-q-demo](https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/amazon-q-demo).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们运行了这个提示并将生成的文件上传到 GitHub 仓库，地址为 [https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/amazon-q-demo](https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/amazon-q-demo)。
- en: 'GenAI-powered coding assistants may use older versions of Terraform providers
    or modules, based on their training data. In the generated code, it used `Terraform
    version >= 1.0.0`, `AWS provider >= 5.0.0`, and so on. We can also give a follow-up
    prompt to use specific versions of these providers, as shown here:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 GenAI 的编码助手可能使用较旧版本的 Terraform 提供程序或模块，具体取决于其训练数据。在生成的代码中，使用了 `Terraform
    version >= 1.0.0`、`AWS provider >= 5.0.0` 等等。我们还可以给出后续提示，以使用这些提供程序的特定版本，如下所示：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Amazon Q Developer will reason the prompt, start reading the Terraform files
    from the local filesystem, and suggest the changes, as shown in Figure 14.3:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q Developer 将解析提示，开始从本地文件系统读取 Terraform 文件，并建议修改，如图 14.3 所示：
- en: '![Figure 14.3 – Output of Amazon Q Developer](img/B31108_14_03.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.3 – Amazon Q Developer 的输出](img/B31108_14_03.jpg)'
- en: Figure 14.3 – Output of Amazon Q Developer
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.3 – Amazon Q Developer 的输出
- en: You can review the generated Terraform code and ask the agent to plan and deploy
    it to the AWS account using natural language prompts.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看生成的 Terraform 代码，并通过自然语言提示要求代理进行规划并将其部署到 AWS 账户中。
- en: 'Similarly, you can use Amazon Q Developer to automatically generate complete
    project code from the ground up, such as for a to-do application that provides
    basic functionality to manage to-do tasks. Run the following prompt in an empty
    directory to generate a to-do application:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以使用 Amazon Q Developer 自动生成完整的项目代码，从零开始创建，例如一个提供基本功能以管理待办任务的待办事项应用。在空目录中运行以下提示以生成一个待办事项应用：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Within no time, Amazon Q Developer will start creating a hierarchal project
    structure, source code files, Dockerfile for containerization, documentation,
    and so on. We executed this prompt and provided the generated files in the GitHub
    repository at [https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/todo-app](https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/todo-app).
    It created the project structure and files shown in Figure 14.4:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 不久后，Amazon Q Developer 将开始创建分层项目结构、源代码文件、用于容器化的 Dockerfile、文档等。我们执行了这个提示，并在
    GitHub 仓库中提供了生成的文件，地址是 [https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/todo-app](https://github.com/PacktPublishing/Kubernetes-for-Generative-AI-Solutions/tree/main/ch14/todo-app)。它创建了如图
    14.4 所示的项目结构和文件：
- en: '![Figure 14.4 – Output of Amazon Q Developer](img/B31108_14_04.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.4 – Amazon Q Developer 的输出](img/B31108_14_04.jpg)'
- en: Figure 14.4 – Output of Amazon Q Developer
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.4 – Amazon Q Developer 的输出
- en: 'Review the generated files. To test the application locally, we can prompt
    Amazon Q Developer to build the container image and run it using Docker or Finch.
    Use the following prompt to build and run the container image:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 审查生成的文件。为了在本地测试应用，我们可以提示 Amazon Q Developer 构建容器镜像并使用 Docker 或 Finch 运行它。使用以下提示构建并运行容器镜像：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'On a different terminal, you use the following commands to verify the container
    image and running container:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个终端中，你可以使用以下命令验证容器镜像和运行中的容器：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, we can take this a step further by asking the AI assistant to create
    the necessary K8s manifest files and deploy the application to a K8s cluster.
    Use the following prompt to create the K8s Deployment and Service resources:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以更进一步，要求 AI 助手创建必要的 K8s 清单文件并将应用部署到 K8s 集群中。使用以下提示来创建 K8s 部署和服务资源：
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Within a few seconds, Amazon Q Developer will generate K8s deployment, service,
    and namespace manifest files, among others, to deploy the to-do application to
    a K8s cluster, as shown in Figure 14.5:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟内，Amazon Q Developer 将生成 K8s 部署、服务和命名空间清单文件等，用于将待办事项应用部署到 K8s 集群中，如图 14.5
    所示：
- en: '![Figure 14.5 – K8s manifest files created by Amazon Q Developer](img/B31108_14_05.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.5 – Amazon Q Developer 创建的 K8s 清单文件](img/B31108_14_05.jpg)'
- en: Figure 14.5 – K8s manifest files created by Amazon Q Developer
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.5 – Amazon Q Developer 创建的 K8s 清单文件
- en: In this section, we have explored how AI coding assistants such as Amazon Q
    Developer simplify software development tasks, including generating K8s configuration
    files and IaC templates for creating AWS and EKS resources. We have interacted
    with these assistants using natural language prompts, instructing them to perform
    various tasks such as building a container image, running applications locally,
    and modifying the generated code to meet specific requirements. In the next section,
    we will provide references for further reading on this topic.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了像 Amazon Q Developer 这样的 AI 编码助手如何简化软件开发任务，包括生成 K8s 配置文件和创建 AWS 及
    EKS 资源的 IaC 模板。我们使用自然语言提示与这些助手进行交互，指导它们执行各种任务，如构建容器镜像、在本地运行应用程序，并修改生成的代码以满足特定要求。在下一节中，我们将提供关于这个主题进一步阅读的参考资料。
- en: References for further reading
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读的参考资料
- en: '[https://kubernetes.io/docs/](https://kubernetes.io/docs/): Official Kubernetes
    documentation, always up to date and comprehensive'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/docs/](https://kubernetes.io/docs/): 官方 Kubernetes 文档，始终更新且内容全面'
- en: '[https://github.com/kubernetes/kubernetes](https://github.com/kubernetes/kubernetes):
    The core Kubernetes GitHub repo with source code'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/kubernetes/kubernetes](https://github.com/kubernetes/kubernetes):
    核心 Kubernetes GitHub 仓库，包含源代码'
- en: '[https://training.linuxfoundation.org/certification/](https://training.linuxfoundation.org/certification/):
    The Linux Foundation, in partnership with the `Certified Kubernetes Administrator`
    (CKA), `Certified Kubernetes Application Developer` (CKAD), and `Certified Kubernetes
    Security` `Specialist` (`CKS`)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://training.linuxfoundation.org/certification/](https://training.linuxfoundation.org/certification/):
    Linux 基金会与 `Certified Kubernetes Administrator`（CKA）、`Certified Kubernetes Application
    Developer`（CKAD）和 `Certified Kubernetes Security Specialist`（CKS）合作的认证项目'
- en: '[https://kubernetes.io/blog/](https://kubernetes.io/blog/): The official blog
    with updates, best practices, and use cases'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/blog/](https://kubernetes.io/blog/): 官方博客，更新内容、最佳实践和使用案例'
- en: '[https://kubernetes.io/community/](https://kubernetes.io/community/): Community
    hub for contributing, SIGs, events, and getting involved'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://kubernetes.io/community/](https://kubernetes.io/community/): 社区中心，用于贡献、SIGs、事件和参与'
- en: '[https://www.cncf.io/projects/kubernetes/](https://www.cncf.io/projects/kubernetes/):
    K8s page on CNCF – project status, governance, and landscape'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.cncf.io/projects/kubernetes/](https://www.cncf.io/projects/kubernetes/):
    CNCF 上关于 K8s 的页面 - 项目状态、治理和整体情况'
- en: '[https://github.com/aws-ia/terraform-aws-eks-blueprints](https://github.com/aws-ia/terraform-aws-eks-blueprints):
    Official EKS blueprints using Terraform – modular and production-ready'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/aws-ia/terraform-aws-eks-blueprints](https://github.com/aws-ia/terraform-aws-eks-blueprints):
    使用 Terraform 的官方 EKS 蓝图 - 模块化且适用于生产环境'
- en: '[https://awslabs.github.io/data-on-eks/](https://awslabs.github.io/data-on-eks/):
    Data on EKS is a tool to build, deploy, and scale Data & ML platforms on EKS'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://awslabs.github.io/data-on-eks/](https://awslabs.github.io/data-on-eks/):
    Data on EKS 是一个在 EKS 上构建、部署和扩展数据与 ML 平台的工具'
- en: '[https://aws.github.io/aws-eks-best-practices/](https://aws.github.io/aws-eks-best-practices/):
    Official *Amazon EKS Best Practices Guide*, covering security, networking, scaling,
    GitOps, and more'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://aws.github.io/aws-eks-best-practices/](https://aws.github.io/aws-eks-best-practices/):
    官方 *Amazon EKS 最佳实践指南*，涵盖安全、网络、扩展性、GitOps 等内容'
- en: '[https://wellarchitectedlabs.com/architecture-guides/containers/eks-best-practices/](https://wellarchitectedlabs.com/architecture-guides/containers/eks-best-practices/):
    *AWS Well-Architected Labs* guide for EKS with practical labs and architecture
    reviews'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://wellarchitectedlabs.com/architecture-guides/containers/eks-best-practices/](https://wellarchitectedlabs.com/architecture-guides/containers/eks-best-practices/):
    *AWS Well-Architected Labs* 为 EKS 提供的实验室指南和架构审查'
- en: Summary
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered how GenAI-based coding assistants are transforming
    the way K8s clusters are being built, deployed, and monitored. These tools automate
    IaC, optimize workloads, and enhance observability. Key assistants include Amazon
    Q Developer, GitHub Copilot, Google Gemini Code Assist, Microsoft Azure Copilot,
    IBM watsonx Code Assistant, and K8sGPT. They support everything from writing deployment
    manifests and Terraform configurations to real-time diagnostics and optimization
    of cluster performance.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了基于 GenAI 的编码助手如何改变构建、部署和监控 K8s 集群的方式。这些工具自动化 IaC，优化工作负载，并增强可观察性。关键的助手包括
    Amazon Q Developer、GitHub Copilot、Google Gemini Code Assist、Microsoft Azure Copilot、IBM
    watsonx Code Assistant 和 K8sGPT。它们支持从编写部署清单和 Terraform 配置到实时诊断和优化集群性能的所有内容。
- en: GenAI tools also boost observability, security, and cost efficiency through
    AI-powered autoscaling, anomaly detection, and policy enforcement. Tools such
    as StormForge, PredictKube, and Dynatrace Davis AI automate root cause analysis
    and resource scaling, while others, such as Harness and Cast AI, assist with K8s
    FinOps.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: GenAI 工具还通过 AI 驱动的自动扩缩、异常检测和策略执行来提升可观察性、安全性和成本效益。像 StormForge、PredictKube 和
    Dynatrace Davis AI 这样的工具能够自动化根本原因分析和资源扩展，而其他工具，如 Harness 和 Cast AI，则帮助进行 K8s 财务运维（FinOps）。
- en: Amazon Q Developer offers CLI-based support to generate and refine Terraform
    templates, build Docker containers, and deploy complete applications using simple
    natural language prompts. It supports creating modular IaC for EKS clusters and
    enables fast iteration through intelligent suggestions.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Q Developer 提供基于 CLI 的支持，能够通过简单的自然语言提示生成和优化 Terraform 模板、构建 Docker 容器，并部署完整的应用程序。它支持为
    EKS 集群创建模块化的基础设施即代码（IaC），并通过智能建议加速迭代过程。
- en: Lastly, we provided a curated list of references for deeper learning. These
    include official K8s documentation, GitHub repositories, and blogs offering best
    practices, patterns, and community resources. It also highlights certification
    programs from the Linux Foundation and CNCF. Together, these resources offer valuable
    guidance for mastering K8s and effectively using GenAI-powered tools in production
    environments. We hope you enjoyed reading this book and we will look forward to
    getting your feedback on how we can improve in future editions.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们提供了一份精选的参考资料列表，供深度学习使用。包括官方的 K8s 文档、GitHub 仓库和提供最佳实践、模式和社区资源的博客。还重点介绍了
    Linux 基金会和 CNCF 的认证课程。这些资源为掌握 K8s 和在生产环境中有效使用 GenAI 驱动的工具提供了宝贵的指导。我们希望你喜欢阅读这本书，并期待收到你关于我们如何在未来版本中改进的反馈。
- en: Stay Sharp in Cloud and DevOps – Join 44,000+ Subscribers of CloudPro
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云计算和 DevOps 中保持敏锐——加入超过 44,000 名 CloudPro 订阅者
- en: '**CloudPro** is a weekly newsletter for cloud professionals who want to stay
    current on the fast-evolving world of cloud computing, DevOps, and infrastructure
    engineering.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**CloudPro** 是一份面向云计算专业人员的每周通讯，旨在帮助你紧跟快速发展的云计算、DevOps 和基础设施工程领域的最新动态。'
- en: 'Every issue delivers focused, high-signal content on topics like:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 每期内容都聚焦于以下主题的高信号内容：
- en: AWS, GCP & multi-cloud architecture
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS、GCP 和多云架构
- en: Containers, Kubernetes & orchestration
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器、Kubernetes 和编排
- en: Infrastructure as Code (IaC) with Terraform, Pulumi, etc.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Terraform、Pulumi 等进行基础设施即代码（IaC）
- en: Platform engineering & automation workflows
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平台工程与自动化工作流
- en: Observability, performance tuning, and reliability best practices
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可观察性、性能调优和可靠性最佳实践
- en: Whether you’re a cloud engineer, SRE, DevOps practitioner, or platform lead,
    CloudPro helps you stay on top of what matters, without the noise.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是云工程师、SRE、DevOps 从业者，还是平台负责人，CloudPro 都能帮助你专注于重要的事务，避免噪音干扰。
- en: 'Scan the QR code to join for free and get weekly insights straight to your
    inbox:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描二维码免费加入，获得每周洞察直达你的邮箱：
- en: '![https://packt.link/cloudpro](img/NL_Part1.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![https://packt.link/cloudpro](img/NL_Part1.jpg)'
- en: '[https://packt.link/cloudpro](https://packt.link/cloudpro)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/cloudpro](https://packt.link/cloudpro)'
