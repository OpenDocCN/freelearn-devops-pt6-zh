["```\n$ kubectl run nginx-pod --image nginx:latest \n```", "```\n$ kubectl get pods\nNAME        READY   STATUS    RESTARTS   AGE\nnginx-pod   1/1     Running   0          79s \n```", "```\n$ kubectl delete pod nginx-pod\npod \"nginx-pod\" deleted \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx:latest \n```", "```\n$ kubectl apply -f nginx-pod.yaml\npod/nginx-pod created \n```", "```\n    $ kubectl get pods \n    ```", "```\n    $ kubectl describe pod nginx-pod\n    Name:             nginx-pod\n    Namespace:        default\n    ...<removed for brevity>...\n    Containers:\n      nginx-container:\n        Container ID:   containerd://3afbbe30b51b77994df69f4c4dbefb02fc304efb2bf0f5bdb65a65\n    1154a8e311\n        Image:          nginx:latest\n    ...<removed for brevity>...\n    Conditions:\n      Type                        Status\n      PodReadyToStartContainers   True\n      Initialized                 True\n    ...<removed for brevity>...\n    Events:\n      Type    Reason     Age   From               Message\n      ----    ------     ----  ----               -------\n    ...<removed for brevity>...\n      Normal  Created    112s  kubelet            Created container nginx-container\n      Normal  Started    112s  kubelet            Started container nginx-container \n    ```", "```\n$ kubectl get pods --output yaml # In YAML format\n$ kubectl get pods --output json # In JSON format \n```", "```\n$ kubectl get pods <POD_NAME> -o yaml\n# OR\n$ kubectl get pods <POD_NAME> -o json \n```", "```\n$ kubectl get pods/nginx-pod -o yaml > nginx-pod-output.yaml \n```", "```\n$ diff nginx-pod.yaml nginx-pod-output.yaml \n```", "```\n$ kubectl get pods -o wide\nNAME        READY   STATUS    RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES\nnginx-pod   1/1     Running   0          15m   10.244.0.4   minikube   <none>           <none> \n```", "```\n$ kubectl port-forward pod/nginx-pod 8080:80\nForwarding from 127.0.0.1:8080 -> 80\nForwarding from [::1]:8080 -> 80 \n```", "```\n$ kubectl port-forward pod/nginx-pod 8080:80\nForwarding from 127.0.0.1:8080 -> 80\nForwarding from [::1]:8080 -> 80 \n```", "```\n$ kubectl exec -it nginx-pod -- bash\nroot@nginx-pod:/# hostname\nnginx-pod \n```", "```\n$ kubectl exec -it nginx-pod -- /bin/bash \n```", "```\nroot@nginx-pod:/# exit\nexit \n```", "```\n$ kubectl delete pods nginx-pod\n# or...\n$ kubectl delete pods/nginx-pod \n```", "```\n$ kubectl delete -f nginx-pod.yaml \n```", "```\n$ kubectl get pods --label \"environment=production\" \n```", "```\n$ kubectl get pods --label \"environment=production\" \n```", "```\n$ kubectl run nginx-pod --image nginx --labels \"tier=frontend\" \n```", "```\n$ kubectl run nginx-pod --image nginx  --labels=\"app=myapp,env=dev,tier=frontend\" \n```", "```\n# labelled_pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    environment: prod\n    tier: frontend\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx:latest \n```", "```\n$ kubectl apply -f ~/labelled_pod.yaml \n```", "```\n$ kubectl get pod -l environment=prod\nNAME        READY   STATUS    RESTARTS   AGE\nnginx-pod   1/1     Running   0          31m \n```", "```\n$  kubectl get pods --show-labels\nNAME        READY   STATUS    RESTARTS   AGE   LABELS\nnginx-pod   1/1     Running   0          56s   environment=prod,tier=frontend \n```", "```\n$ kubectl label pod nginx-pod stack=blue\npod/nginx-pod labeled \n```", "```\n$ kubectl get pods nginx-pod --show-labels\nNAME        READY   STATUS    RESTARTS   AGE   LABELS\nnginx-pod   1/1     Running   0          38m   environment=prod,stack=blue,tier=frontend \n```", "```\n$ kubectl label pod nginx-pod stack=green --overwrite\npod/nginx-pod labeled \n```", "```\n$ kubectl get pods nginx-pod --show-labels\nNAME        READY   STATUS    RESTARTS   AGE   LABELS\nnginx-pod   1/1     Running   0          41m   environment=prod,stack=green,tier=frontend \n```", "```\n$ kubectl label pod nginx-pod stack-\npod/nginx-pod unlabeled \n```", "```\n$ kubectl get pods nginx-pod --show-labels \n```", "```\n# annotated_pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    tier: webserver\n  name: nginx-pod\n  labels:\n    environment: prod\n    tier: frontend\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx:latest \n```", "```\n$ kubectl get pod nginx-pod -o json | jq '.metadata.annotations'\n{\n  \"cni.projectcalico.org/containerID\": \"666d12cd2fb7d6ffe09add73d8466db218f01e7c7ef5315ef0187a675725b5ef\",\n  \"cni.projectcalico.org/podIP\": \"10.244.151.1/32\",\n  \"cni.projectcalico.org/podIPs\": \"10.244.151.1/32\",\n  \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Pod\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"nginx-pod\\\",\\\"namespace\\\":\\\"default\\\"},\\\"spec\\\":{\\\"containers\\\":[{\\\"image\\\":\\\"nginx:latest\\\",\\\"name\\\":\\\"nginx-container\\\"}]}}\\n\"\n} \n```", "```\n# hello-world-job.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: hello-world-job\nspec:\n  template:\n    metadata:\n      name: hello-world-job\n    spec:\n      restartPolicy: OnFailure\n      containers:\n      - name: hello-world-container\n        image: busybox\n        command: [\"/bin/sh\", \"-c\"]\n        args: [\"echo 'Hello world'\"] \n```", "```\n$ kubectl apply -f hello-world-job.yaml \n```", "```\n$ kubectl get jobs\nNAME              COMPLETIONS   DURATION   AGE\nhello-world-job   1/1           9s         8m46s \n```", "```\n$kubectl logs jobs/hello-world-job\nHello world \n```", "```\n$  kubectl logs pods/hello-world-job-2qh4d\nHello world \n```", "```\n# hello-world-job-2.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: hello-world-job-2\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      name: hello-world-job-2\n    spec:\n      restartPolicy: OnFailure\n      containers:\n      - name: hello-world-container\n        image: busybox\n        command: [\"/bin/sh\", \"-c\"]\n        args: [\"echo 'Hello world'\"] \n```", "```\n# hello-world-job-3.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: hello-world-job-3\nspec:\n  backoffLimit: 3\n  completions: 10\n  template:\n    metadata:\n      name: hello-world-job-3\n    spec:\n      restartPolicy: OnFailure\n      containers:\n      - name: hello-world-container\n        image: busybox\n        command: [\"/bin/sh\", \"-c\"]\n        args: [\"echo 'Hello world'\"] \n```", "```\n$ kubectl get pods --watch\n$ kubectl get jobs -w\nNAME                STATUS     COMPLETIONS   DURATION   AGE\nhello-world-job-2   Complete   1/1           10s        52s\nhello-world-job-3   Running    5/10          49s        49s\nhello-world-job-3   Running    5/10          51s        51s\nhello-world-job-3   Running    5/10          52s        52s\nhello-world-job-3   Running    6/10          52s        52s\nhello-world-job-3   Running    6/10          56s        56s\n<removed for brevity> \n```", "```\n# hello-world-job-4.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: hello-world-job-4\nspec:\n  backoffLimit: 3\n  parallelism: 5\n  template:\n    metadata:\n      name: hello-world-job-4\n    spec:\n      restartPolicy: OnFailure\n      containers:\n      - name: hello-world-container\n        image: busybox\n        command: [\"/bin/sh\", \"-c\"]\n        args: [\"echo 'Hello world'; sleep 3\"] \n```", "```\n$ kubectl get pods -w\nNAME                      READY   STATUS              RESTARTS   AGE\nhello-world-job-4-9dspk   0/1     ContainerCreating   0          7s\nhello-world-job-4-n6qv9   0/1     Completed           0          7s\nhello-world-job-4-pv754   0/1     ContainerCreating   0          7s\nhello-world-job-4-ss4g8   1/1     Running             0          7s\nhello-world-job-4-v78cj   1/1     Running             0          7s\n...<removed for brevity>... \n```", "```\n# hello-world-job-5.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: hello-world-job-5\nspec:\n  backoffLimit: 3\n  activeDeadlineSeconds: 60\n  template:\n    metadata:\n      name: hello-world-job-5\n    spec:\n      restartPolicy: OnFailure\n      containers:\n      - name: hello-world-container\n        image: busybox\n        command: [\"/bin/sh\", \"-c\"]\n        args: [\"echo 'Hello world'\"] \n```", "```\n# hello-world-job-6.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: hello-world-job-6\nspec:\n  backoffLimit: 3\n  ttlSecondsAfterFinished: 30\n  template:\n    metadata:\n      name: hello-world-job-6\n    spec:\n      restartPolicy: OnFailure\n      containers:\n      - name: hello-world-container\n        image: busybox\n        command: [\"/bin/sh\", \"-c\"]\n        args: [\"echo 'Hello world'\"] \n```", "```\n$ kubectl delete jobs hello-world-job \n```", "```\n$ kubectl delete jobs hello-world-job --cascade=false \n```", "```\n# hello-world-cronjob.yaml\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: hello-world-cronjob\nspec:\n  schedule: \"* * * * *\"\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          name: hello-world-cronjob\n        spec:\n          restartPolicy: OnFailure\n          containers:\n          - name: hello-world-container\n            image: busybox\n            imagePullPolicy: IfNotPresent\n            command: [\"/bin/sh\", \"-c\"]\n            args: [\"echo 'Hello world'\"] \n```", "```\n# ┌───────────── minute (0 - 59)\n# │ ┌───────────── hour (0 - 23)\n# │ │ ┌───────────── day of the month (1 - 31)\n# │ │ │ ┌───────────── month (1 - 12)\n# │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;\n# │ │ │ │ │                                   7 is also Sunday on some systems)\n# │ │ │ │ │                                   OR sun, mon, tue, wed, thu, fri, sat\n# │ │ │ │ │\n# * * * * * \n```", "```\n# hello-world-cronjob.yaml\napiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: hello-world-cronjob\nspec:\n  schedule: \"*/1 * * * *\"\n  # Run every minute\n  successfulJobsHistoryLimit: 5\n  startingDeadlineSeconds: 30\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          name: hello-world-cronjob\n        spec:\n          restartPolicy: OnFailure\n          containers:\n            - name: hello-world-container\n              image: busybox\n              imagePullPolicy: IfNotPresent\n              command: [\"/bin/sh\", \"-c\"]\n              args: [\"echo 'Hello world'\"] \n```", "```\n$ kubectl apply -f hello-world-cronjob.yaml\ncronjob.batch/hello-world-cronjob created \n```", "```\n$  kubectl get cronjobs\nNAME                  SCHEDULE      TIMEZONE   SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nhello-world-cronjob   */1 * * * *   <none>     False     0        37s             11m\n$ kubectl get jobs\nNAME                           COMPLETIONS   DURATION   AGE\nhello-world-cronjob-28390196   1/1           3s         4m47s\nhello-world-cronjob-28390197   1/1           3s         3m47s\nhello-world-cronjob-28390198   1/1           3s         2m47s\nhello-world-cronjob-28390199   1/1           3s         107s\nhello-world-cronjob-28390200   1/1           4s         47s\n$ kubectl get pods\nNAME                                 READY   STATUS      RESTARTS   AGE\nhello-world-cronjob-28390196-fpmc6   0/1     Completed   0          4m52s\nhello-world-cronjob-28390197-vkzw2   0/1     Completed   0          3m52s\nhello-world-cronjob-28390198-tj6qv   0/1     Completed   0          2m52s\nhello-world-cronjob-28390199-dd666   0/1     Completed   0          112s\nhello-world-cronjob-28390200-kn89r   0/1     Completed   0          52s \n```", "```\n$ kubectl delete -f ~/cronjob.yaml\ncronjob/hello-world-cronjob deleted \n```"]