["```\n$ minikube start --memory=16384 --cpus=4 \n```", "```\n$ minikube tunnel\n![](img/B18998_14_001.png)  Tunnel successfully started\n![](img/B18998_14_002.png)  NOTE: Please do not close this terminal as this process must stay alive for the tunnel to be accessible ... \n```", "```\nminikube tunnel --cleanup \n```", "```\n$ curl -L https://istio.io/downloadIstio | sh - \n```", "```\n$ istioctl x precheck\n![](img/B18998_14_003.png) No issues found when checking the cluster. Istio is safe to install or upgrade!\n  To get started, check out https://istio.io/latest/docs/setup/getting-started/ \n```", "```\n$ istioctl install --set profile=demo -y\n![](img/B18998_14_003.png) Istio core installed\n![](img/B18998_14_003.png) Istiod installed\n![](img/B18998_14_003.png) Egress gateways installed\n![](img/B18998_14_003.png) Ingress gateways installed\n![](img/B18998_14_003.png) Installation complete\nMaking this installation the default for injection and validation.\nThank you for installing Istio 1.15 \n```", "```\n$ k apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/addons/prometheus.yaml\nserviceaccount/prometheus created\nconfigmap/prometheus created\nclusterrole.rbac.authorization.k8s.io/prometheus created\nclusterrolebinding.rbac.authorization.k8s.io/prometheus created\nservice/prometheus created\ndeployment.apps/prometheus created\n$ kapply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/addons/grafana.yaml\nserviceaccount/grafana created\nconfigmap/grafana created\nservice/grafana created\ndeployment.apps/grafana created\nconfigmap/istio-grafana-dashboards created\nconfigmap/istio-services-grafana-dashboards created\n$ k apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/addons/jaeger.yaml\ndeployment.apps/jaeger created\nservice/tracing created\nservice/zipkin created\nservice/jaeger-collector created\n$ k apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/addons/kiali.yaml\nserviceaccount/kiali created\nconfigmap/kiali created\nclusterrole.rbac.authorization.k8s.io/kiali-viewer created\nclusterrole.rbac.authorization.k8s.io/kiali created\nclusterrolebinding.rbac.authorization.k8s.io/kiali created\nrole.rbac.authorization.k8s.io/kiali-controlplane created\nrolebinding.rbac.authorization.k8s.io/kiali-controlplane created\nservice/kiali created\ndeployment.apps/kiali created \n```", "```\n$ k get svc -n istio-system -o name\nservice/grafana\nservice/istio-egressgateway\nservice/istio-ingressgateway\nservice/istiod\nservice/jaeger-collector\nservice/kiali\nservice/prometheus\nservice/tracing\nservice/zipkin \n```", "```\n$ k create ns bookinfo\nnamespace/bookinfo created\n$ k label namespace bookinfo istio-injection=enabled\nnamespace/bookinfo labeled \n```", "```\n$ k apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/platform/kube/bookinfo.yaml -n bookinfo\nservice/details created\nserviceaccount/bookinfo-details created\ndeployment.apps/details-v1 created\nservice/ratings created\nserviceaccount/bookinfo-ratings created\ndeployment.apps/ratings-v1 created\nservice/reviews created\nserviceaccount/bookinfo-reviews created\ndeployment.apps/reviews-v1 created\ndeployment.apps/reviews-v2 created\ndeployment.apps/reviews-v3 created\nservice/productpage created\nserviceaccount/bookinfo-productpage created\ndeployment.apps/productpage-v1 created \n```", "```\n$ k get po -n bookinfo\nNAME                             READY   STATUS    RESTARTS   AGE\ndetails-v1-5ffd6b64f7-c62l6      2/2     Running   0          3m48s\nproductpage-v1-979d4d9fc-7hzkj   2/2     Running   0          3m48s\nratings-v1-5f9699cfdf-mns6n      2/2     Running   0          3m48s\nreviews-v1-569db879f5-jmfrj      2/2     Running   0          3m48s\nreviews-v2-65c4dc6fdc-cc8nn      2/2     Running   0          3m48s\nreviews-v3-c9c4fb987-bpk9f       2/2     Running   0          3m48s \n```", "```\n$ alias kb='kubectl -n bookinfo' \n```", "```\n$ kb exec -it $(kb get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}') -c ratings -- curl productpage:9080/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title> \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/networking/bookinfo-gateway.yaml\ngateway.networking.istio.io/bookinfo-gateway created\nvirtualservice.networking.istio.io/bookinfo created \n```", "```\n$ export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n$ export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\n$ export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"https\")].port}')\n$ export GATEWAY_URL=${INGRESS_HOST}:${INGRESS_PORT} \n```", "```\n$ http http://${GATEWAY_URL}/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title> \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/networking/destination-rule-all.yaml\ndestinationrule.networking.istio.io/productpage created\ndestinationrule.networking.istio.io/reviews created\ndestinationrule.networking.istio.io/ratings created\ndestinationrule.networking.istio.io/details created \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/networking/virtual-service-all-v1.yaml\nvirtualservice.networking.istio.io/productpage created\nvirtualservice.networking.istio.io/reviews created\nvirtualservice.networking.istio.io/ratings created\nvirtualservice.networking.istio.io/details created \n```", "```\n$ kb get virtualservices productpage -o yaml | k neat\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: productpage\n  namespace: default\nspec:\n  hosts:\n  - productpage\n  http:\n  - route:\n    - destination:\n        host: productpage\n        subset: v1 \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml\nvirtualservice.networking.istio.io/reviews configured \n```", "```\n$ kb get virtualservice reviews -o yaml | k neat\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: reviews\n  namespace: default\nspec:\n  hosts:\n  - reviews\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v1 \n```", "```\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-peer-policy\"\n  namespace: \"foo\"\nspec:\n  selector:\n    matchLabels:\n      app: reviews\n  mtls:\n    mode: STRICT \n```", "```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   - source:\n       namespaces: [\"dev\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.auth.claims[iss]\n     values: [\"https://accounts.google.com\"] \n```", "```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: tester\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  rules:\n  - to:\n    - operation:\n        paths: [\"/test/*\", \"*/info\"]\n        methods: [\"GET\", \"HEAD\"] \n```", "```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"] \n```", "```\napiVersion: \"security.istio.io/v1beta1\"\nkind: AuthorizationPolicy\nmetadata:\n  name: mongodb-policy\n  namespace: default\nspec:\n selector:\n   matchLabels:\n     app: mongodb\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/bookinfo-ratings-v2\"]\n   to:\n   - operation:\n       ports: [\"27017\"] \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/sleep/sleep.yaml\nserviceaccount/sleep created\nservice/sleep created\ndeployment.apps/sleep created\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/httpbin/httpbin.yaml\nserviceaccount/httpbin created\nservice/httpbin created\ndeployment.apps/httpbin created \n```", "```\n$ k apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/open-telemetry/otel.yaml -n istio-system\nconfigmap/opentelemetry-collector-conf created\nservice/opentelemetry-collector created\ndeployment.apps/opentelemetry-collector created \n```", "```\n$ k get cm istio -n istio-system -o yaml | yq .data\nmesh: |-\n  accessLogFile: /dev/stdout\n  defaultConfig:\n    discoveryAddress: istiod.istio-system.svc:15012\n    proxyMetadata: {}\n    tracing:\n      zipkin:\n        address: zipkin.istio-system:9411\n  enablePrometheusMerge: true\n  extensionProviders:\n  - envoyOtelAls:\n      port: 4317\n      service: opentelemetry-collector.istio-system.svc.cluster.local\n    name: otel\n  rootNamespace: istio-system\n  trustDomain: cluster.local\nmeshNetworks: 'networks: {}' \n```", "```\n$ cat <<EOF | kb apply -f -\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: sleep-logging\nspec:\n  selector:\n    matchLabels:\n      app: sleep\n  accessLogging:\n    - providers:\n      - name: otel\nEOF\ntelemetry.telemetry.istio.io/sleep-logging created \n```", "```\n[%START_TIME%] \\\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\\\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS%\n\\\"%UPSTREAM_TRANSPORT_FAILURE_REASON%\\\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \\\"%REQ(X-FORWARDED-FOR)%\\\" \\\"%REQ(USER-AGENT)%\\\" \\\"%REQ(X-REQUEST-ID)%\\\"\n\\\"%REQ(:AUTHORITY)%\\\" \\\"%UPSTREAM_HOST%\\\" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\\n \n```", "```\n$ kb exec deploy/sleep -c sleep -- curl -sS -v httpbin:8000/status/418\n*   Trying 10.101.189.162:8000...\n* Connected to httpbin (10.101.189.162) port 8000 (#0)\n> GET /status/418 HTTP/1.1\n> Host: httpbin:8000\n> User-Agent: curl/7.86.0-DEV\n> Accept: */*\n>\n    -=[ teapot ]=-\n       _...._\n     .'  _ _ `.\n    | .\"` ^ `\". _,\n    \\_;`\"---\"`|//\n      |       ;/\n      \\_     _/\n        `\"\"\"`\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 418 Unknown\n< server: envoy\n< date: Sat, 29 Oct 2022 04:35:07 GMT\n< x-more-info: http://tools.ietf.org/html/rfc2324\n< access-control-allow-origin: *\n< access-control-allow-credentials: true\n< content-length: 135\n< x-envoy-upstream-service-time: 61\n<\n{ [135 bytes data]\n* Connection #0 to host httpbin left intact \n```", "```\n$ k logs -l app=opentelemetry-collector -n istio-system\nLogRecord #0\nObservedTimestamp: 1970-01-01 00:00:00 +0000 UTC\nTimestamp: 2022-10-29 04:35:07.599108 +0000 UTC\nSeverity:\nBody: [2022-10-29T04:35:07.599Z] \"GET /status/418 HTTP/1.1\" 418 - via_upstream - \"-\" 0 135 63 61 \"-\" \"curl/7.86.0-DEV\" \"d36495d6-642a-9790-9b9a-d10b2af096f5\" \"httpbin:8000\" \"172.17.0.17:80\" outbound|8000||httpbin.bookinfo.svc.cluster.local 172.17.0.16:33876 10.101.189.162:8000 172.17.0.16:45986 - default\nTrace ID:\nSpan ID:\nFlags: 0 \n```", "```\nenvoy_cluster_internal_upstream_rq{response_code_class=\"2xx\",cluster_name=\"xds-grpc\"} 7163\nenvoy_cluster_upstream_rq_completed{cluster_name=\"xds-grpc\"} 7164\nenvoy_cluster_ssl_connection_error{cluster_name=\"xds-grpc\"} 0\nenvoy_cluster_lb_subsets_removed{cluster_name=\"xds-grpc\"} 0\nenvoy_cluster_internal_upstream_rq{response_code=\"503\",cluster_name=\"xds-grpc\"} 1 \n```", "```\nistio_requests_total{\n  connection_security_policy=\"mutual_tls\",\n  destination_app=\"details\",\n  destination_principal=\"cluster.local/ns/default/sa/default\",\n  destination_service=\"details.default.svc.cluster.local\",\n  destination_service_name=\"details\",\n  destination_service_namespace=\"default\",\n  destination_version=\"v1\",\n  destination_workload=\"details-v1\",\n  destination_workload_namespace=\"default\",\n  reporter=\"destination\",\n  request_protocol=\"http\",\n  response_code=\"200\",\n  response_flags=\"-\",\n  source_app=\"productpage\",\n  source_principal=\"cluster.local/ns/default/sa/default\",\n  source_version=\"v1\",\n  source_workload=\"productpage-v1\",\n  source_workload_namespace=\"default\"\n} 214 \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/platform/kube/bookinfo-ratings-v2.yaml\nserviceaccount/bookinfo-ratings-v2 created\ndeployment.apps/ratings-v2 created \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/platform/kube/bookinfo-db.yaml\nservice/mongodb created\ndeployment.apps/mongodb-v1 created \n```", "```\n$ kb apply -f https://raw.githubusercontent.com/istio/istio/release-1.15/samples/bookinfo/networking/virtual-service-ratings-db.yaml\nvirtualservice.networking.istio.io/reviews configured\nvirtualservice.networking.istio.io/ratings configured \n```", "```\n$ http http://${GATEWAY_URL}/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title> \n```", "```\n$ k -n istio-system port-forward deploy/prometheus 9090:9090\nForwarding from 127.0.0.1:9090 -> 9090\nForwarding from [::1]:9090 -> 9090 \n```", "```\n x-request-id\n    x-b3-traceid\n    x-b3-spanid\n    x-b3-parentspanid\n    x-b3-sampled\n    x-b3-flags\n    x-ot-span-context \n    x-cloud-trace-context\n    traceparent\n    grpc-trace-bin \n```", "```\n$ cat <<'EOF' > ./tracing.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing:\n        sampling: 100\nEOF\n$ istioctl install -f ./tracing.yaml \n```", "```\n$ k get cm -n istio-system istio -o yaml | yq .data\nmesh: |-\n  defaultConfig:\n    discoveryAddress: istiod.istio-system.svc:15012\n    proxyMetadata: {}\n    tracing:\n      sampling: 100\n      zipkin:\n        address: zipkin.istio-system:9411\n  enablePrometheusMerge: true\n  enableTracing: true\n  rootNamespace: istio-system\n  trustDomain: cluster.local\nmeshNetworks: 'networks: {}' \n```", "```\n$ http http://${GATEWAY_URL}/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n$ http http://${GATEWAY_URL}/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n$ http http://${GATEWAY_URL}/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title> \n```", "```\n$ istioctl dashboard jaeger\nhttp://localhost:52466\nHandling connection for 9090 \n```", "```\n$ istioctl dashboard kiali \n```"]