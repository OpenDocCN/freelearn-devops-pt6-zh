["```\n$ git clone https://github.com/PacktPublishing/Managing-Kubernetes-Resources-using-Helm.git\n```", "```\n    > choco install gnupg\n    ```", "```\n    $ brew install gpg\n    ```", "```\n    $ sudo apt install gnupg\n    ```", "```\n    $ sudo dnf install gnupg\n    ```", "```\n    $ gpg --full-generate-key\n    ```", "```\n    Please select what kind of key you want:\n       (1) RSA and RSA\n       (2) DSA and Elgamal\n       (3) DSA (sign only)\n       (4) RSA (sign only)\n       (9) ECC (sign and encrypt) *default*\n      (10) ECC (sign only)\n      (14) Existing key from card\n    Your selection? 1\n    ```", "```\n    RSA keys may be between 1024 and 4096 bits long.\n    What keysize do you want? (3072) <enter>\n    Requested keysize is 3072 bits\n    ```", "```\n    Please specify how long the key should be valid.\n             0 = key does not expire\n          <n>  = key expires in n days\n          <n>w = key expires in n weeks\n          <n>m = key expires in n months\n          <n>y = key expires in n years\n    Key is valid for? (0) 1w\n    Key expires at Sun May 22 12:26:09 2022 EDT\n    Is this correct? (y/N) y\n    ```", "```\n    GnuPG needs to construct a user ID to identify your key.\n    Real name: John Doe\n    Email address: jdoe@example.com\n    Comment: <enter>\n    You selected this USER-ID:\n        \"John Doe <jdoe@example.com>\"\n    ```", "```\npub   rsa3072 2022-05-15 [SC] [expires: 2022-05-22]\n      D2557B1EDD57BBC41A5D4DA7161DADB1C5AC21B5\nuid                      John Doe <jdoe@example.com>\nsub   rsa3072 2022-05-15 [E] [expires: 2022-05-22]\n```", "```\n    $ curl -LO https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz\n    ```", "```\n    $ curl -LO https://github.com/helm/helm/releases/download/v3.8.2/helm-v3.8.2-linux-amd64.tar.gz.asc\n    ```", "```\n$ ls –l\nhelm-v3.8.2-linux-amd64.tar.gz\nhelm-v3.8.2-linux-amd64.tar.gz.asc\n```", "```\n    672C657BE06B4B30969C4A57461449C25E36B98E\n    ```", "```\n    $ gpg --recv-key 672C657BE06B4B30969C4A57461449C25E36B98E\n    gpg: key 461449C25E36B98E: public key \"Matthew Farina <matt@mattfarina.com>\" imported\n    gpg: Total number processed: 1\n    gpg:               imported: 1\n    ```", "```\n    $ gpg --verify helm-v3.8.2-linux-amd64.tar.gz.asc helm-v3.8.2-linux-amd64.tar.gz\n    ```", "```\ngpg: Signature made Wed Apr 13 14:00:32 2022 EDT\ngpg:                using RSA key 711F28D510E1E0BCBD5F6BFE9436E80BFBA46909\ngpg: Good signature from \"Matthew Farina <matt@mattfarina.com>\" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 672C 657B E06B 4B30 969C  4A57 4614 49C2 5E36 B98E\n     Subkey fingerprint: 711F 28D5 10E1 E0BC BD5F  6BFE 9436 E80B FBA4 6909\n```", "```\n    This release was signed with 672C 657B E06B 4B30 969C 4A57 4614 49C2 5E36 B98E and can be found at @mattfarina keybase account.\n    ```", "```\n    $ gpg --sign-key 672C657BE06B4B30969C4A57461449C25E36B98E\n    ```", "```\n$ gpg --verify helm-v3.8.2-linux-amd64.tar.gz.asc helm-v3.8.2-linux-amd64.tar.gz\ngpg: assuming signed data in 'helm-v3.8.2-linux-amd64.tar.gz'\ngpg: Signature made Wed Apr 13 14:00:32 2022 EDT\ngpg:                using RSA key 711F28D510E1E0BCBD5F6BFE9436E80BFBA46909\ngpg: Good signature from \"Matthew Farina <matt@mattfarina.com>\" [full]\n```", "```\n    $ gpg --version\n    gpg (GnuPG) 2.3.6\n    libgcrypt 1.10.1\n    Copyright (C) 2021 Free Software Foundation, Inc.\n    ```", "```\n    $ gpg --export > ~/.gnupg/pubring.gpg\n    $ gpg --export-secret-keys > ~/.gnupg/secring.gpg\n    ```", "```\n$ helm package --sign --key <key_name> --keyring ~/.gnupg/secring.gpg helm-charts/charts/guestbook\n```", "```\nguestbook-0.1.0.tgz\nguestbook-0.1.0.tgz.prov\n```", "```\n$ gpg --send-key <key_name>\n```", "```\n$ gpg --recv-key <key_name>\n```", "```\n$ helm verify --keyring ~/.gnupg/pubring.gpg guestbook-0.1.0.tgz\nSigned by: John Doe <jdoe@example.com>\nUsing Key With Fingerprint: D2557B1EDD57BBC41A5D4DA7161DADB1C5AC21B5\nChart Hash Verified: sha256:c8089c7748bb0c8102894a8d70e641010b90abe9bb45962a 53468eacfbaf6731\n```", "```\n$ helm install guestbook <chart_repo>/guestbook --verify --keyring ~/.gnupg/pubring.gpg\n```", "```\nresources:\n  limits:\n    cpu: \"1\"\n    memory: 4Gi\n  requests:\n    cpu: 500m\n    memory: 2Gi\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: limits-per-container\nspec:\n  limits:\n    - max:\n        cpu: 4\n        memory: 16Gi\n      default:\n        cpu: 500m\n        memory: 2Gi\n      defaultRequest:\n        cpu: 50m\n        memory: 128Mi\n      type: Container\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: limits-per-pvc\nspec:\n  - max:\n      storage: 8Gi\n    type: PersistentVolumeClaim\n```", "```\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: pod-and-pvc-quota\nspec:\n  hard:\n    limits.cpu: \"32\"\n    limits.memory: 64Gi\n    requests.cpu: \"24\"\n    requests.memory: 48Gi\n    requests.storage: 20Gi\n```", "```\npassword: ENC[AES256_GCM,data:xhdUx7DVUG8bitGnqjGvPMygpw==,iv:3LR9KcttchCvZNpRKqE5L cXRyWD1I00v2kEAIl1ttco=,tag:9HEwxhT9s1pxo9lg19wyNg==,type:str]\n```", "```\n    $ minikube start\n    $ kubectl create namespace chapter12\n    ```", "```\n    $ kubectl create role pod-viewer --resource=pods --verb=get,list –n chapter12\n    ```", "```\n    $ kubectl create sa example –n chapter12\n    ```", "```\n    $ kubectl create rolebinding pod-viewers --role=pod-viewer --serviceaccount=chapter12:example –n chapter12\n    ```", "```\n$ kubectl auth can-i list pods --as=system:serviceaccount:chapter12:example –n chapter12\nyes\n```", "```\n$ kubectl auth can-i list deployments --as=system:serviceaccount:chapter12:example –n chapter12\nno\n```", "```\n$ helm repo add <repo_name> <repo_url> --username <username> --password <password>\n```", "```\n$ cat <password_file> | helm registry login <registry_host> --username <username> --password-stdin\n```", "```\nError: looks like \"<repo_url>\" is not a valid chart repository or cannot be reached: Get <repo_url>/index.yaml: x509: certificate signed by unknown authority\n```"]