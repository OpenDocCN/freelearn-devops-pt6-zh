["```\n$/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```", "```\n    $ brew install minikube\n    Running `brew update --preinstall`...\n    ..\n    ==> minikube cask is installed, skipping link.\n    ==> Caveats\n    Bash completion has been installed to:\n      /usr/local/etc/bash_completion.d\n    ==> Summary\n      /usr/local/Cellar/minikube/1.25.1: 9 files, 70.3MB\n    ==> Running `brew cleanup minikube`...\n    ```", "```\n$ brew link minikube\nLinking /usr/local/Cellar/minikube/1.25.1... 4 symlinks created.\n$ which minikube\n/usr/local/bin/minikube\n$ ls -la /usr/local/bin/minikube\nlrwxr-xr-x  1 arai  admin  38 22 Feb 22:12 /usr/local/bin/minikube -> ../Cellar/minikube/1.25.1/bin/minikube\n```", "```\n$ minikube version\nminikube version: v1.25.1\ncommit: 3e64b11ed75e56e4898ea85f96b2e4af0301f43d\n```", "```\n$ brew install kubectl\n```", "```\n$ minikube start --kubernetes-version=v1.23.1\n  minikube v1.25.1 on Darwin 11.5.2\n  Automatically selected the hyperkit driver\n..\n  Done! kubectl is now configured to use the \"minikube\" cluster and \"default\" namespace by default\n```", "```\n$ kubectl cluster-info\nKubernetes control plane is running at https://192.168.64.6:8443\nCoreDNS is running at https://192.168.64.6:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n```", "```\n$ curl -L https://istio.io/downloadIstio | sh -\nDownloading istio-1.13.1 from https://github.com/istio/istio/releases/download/1.13.1/istio-1.13.1-osx.tar.gz ...\nIstio 1.13.1 Download Complete!\n```", "```\n$ curl -L https://istio.io/downloadIstio\n```", "```\n$ ls\nistio-1.13.1\n$ ls istio-1.13.1/\nLICENSE  README.md bin  manifest.yaml manifests samples  tools\n```", "```\n$ pwd\n/Users/arai/istio/istio-1.13.1\n$ export PATH=$PWD/bin:$PATH\n$ istioctl version\nno running Istio pods in \"istio-system\"\n1.13.1\n```", "```\n$ istioctl install --set profile=demo\nThis will install the Istio 1.13.1 demo profile with [\"Istio core\" \"Istiod\" \"Ingress gateways\" \"Egress gateways\"] components into the cluster. Proceed? (y/N) y\n Istio core installed\n Istiod installed\n Egress gateways installed\n Ingress gateways installed\n Installation complete\nMaking this installation the default for injection and validation.\nThank you for installing Istio 1.13.\n```", "```\n$ kubectl get ns\nNAME              STATUS   AGE\ndefault           Active   19h\nistio-system      Active   88m\nkube-node-lease   Active   19h\nkube-public       Active   19h\nkube-system       Active   19h\n```", "```\n$ kubectl get pods -n istio-system\nNAME                           READY   STATUS    RESTARTS   AGE\npod/istio-egressgateway-76c96658fd-pgfbn   1/1     Running   0          88m\npod/istio-ingressgateway-569d7bfb4-8bzww   1/1     Running   0          88m\npod/istiod-74c64d89cb-m44ks                1/1     Running   0          89m\n```", "```\n$ kubectl get svc -n istio-system\nNAME           TYPE      CLUSTER-IP       EXTERNAL-IP    PORT(S)         AGE\nservice/istio-egressgate way    ClusterIP      10.97.150.168     <none>        80/TCP,443/TCP             88m\nservice/istio-ingressgateway   LoadBalancer   10.100.113.119    <pending>     15021:31391/TCP,80:32295/TCP,443:31860/TCP,31400:31503/TCP,15443:31574/TCP   88m\nservice/istiod          ClusterIP      10.110.59.167     <none>        15010/TCP,15012/TCP,443/TCP,15014/TCP    89m\n```", "```\n$ kubectl get all -n istio-system\n```", "```\n $ kubectl create ns bookinfons\nnamespace/bookinfons created\n$ kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -n bookinfons\n```", "```\n$ kubectl get po -n bookinfons\n$ kubectl get svc -n bookinfons\n```", "```\n$ kubectl describe svc/reviews -n bookinfons\n...\nEndpoints:         172.17.0.10:9080,172.17.0.8:9080,172.17.0.9:9080\n...\n$ kubectl get endpoints -n bookinfons\nNAME          ENDPOINTS                                           AGE details     172.17.0.6:9080                                     18h\nproductpage   172.17.0.11:9080                                    18h\nratings  172.17.0.7:9080                                     18h\nreviews       172.17.17.0.10:9080,172.17.0.8:9080,172.17.0.9:9080   18h\n```", "```\n$ kubectl port-forward svc/productpage 9080:9080 -n bookinfons\nForwarding from 127.0.0.1:9080 -> 9080\nForwarding from [::1]:9080 -> 9080\nHandling connection for 9080\n```", "```\n$ kubectl get ns bookinfons –show-labels\nNAME         STATUS   AGE    LABELS\nbookinfons   Active   114m   kubernetes.io/metadata.name=bookinfons\n```", "```\n$ kubectl describe pod/productpage-v1-65b75f6885-8pt66 -n bookinfons\n```", "```\n$ kubectl delete -f samples/bookinfo/platform/kube/bookinfo.yaml -n bookinfons\n```", "```\n$ kubectl label namespace bookinfons istio-injection=enabled\nnamespace/bookinfons labeled\n$ kubectl get ns bookinfons –show-labels\nNAME         STATUS   AGE   LABELS\nbookinfons   Active   21h   istio-injection=enabled,kubernetes.io/metadata.name=bookinfons\n```", "```\n$ kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -n bookinfons\n```", "```\n$ kubectl get po -n bookinfons\n```", "```\n$ kubectl get svc -n bookinfons\n```", "```\n$ kubectl describe po/productpage-v1-65b75f6885-57vnb -n bookinfons\n```", "```\nkubectl label namespace bookinfons istio-injection=enabled\n```", "```\n$ kubectl describe po/kube-apiserver-minikube -n kube-system | grep enable-admission-plugins\n--enable admission plugins=NamespaceLifecycle, LimitRanger,ServiceAccount,DefaultStorageClass, DefaultTolerationSeconds,NodeRestriction, MutatingAdmissionWebhook,ValidatingAdmissionWebhook, ResourceQuota\n```", "```\n$ kubectl get --raw /apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations | jq '.items[].metadata.name'\n\"istio-revision-tag-default\"\n\"istio-sidecar-injector\"\n```", "```\nkubectl describe po/productpage-v1-65b75f6885-57vnb -n bookinfons\n```", "```\nistio-iptables -p 15001 -z 15006 -u 1337 -m REDIRECT -I '*' -x \"\" -b '*' -d 15090,15021,15020\n```", "```\n# BASE_DISTRIBUTION is used to switch between the old base distribution and distroless base images\n..\nENTRYPOINT [\"/usr/local/bin/pilot-agent\"]\n```", "```\n$ kubectl port-forward svc/productpage 9080:9080 -n bookinfons\nForwarding from 127.0.0.1:9080 -> 9080\nForwarding from [::1]:9080 -> 9080\nHandling connection for 9080\n```", "```\n$ kubectl get pod -n istio-system\nNAME                        READY   STATUS    RESTARTS   AGE\nistio-egressgateway-76c96658fd-pgfbn   1/1     Running   0          5d18h\nistio-ingressgateway-569d7bfb4-8bzww   1/1     Running   0          5d18h\nistiod-74c64d89cb-m44ks                1/1     Running   0          5d18h\n$ kubectl get po/istio-ingressgateway-569d7bfb4-8bzww -n istio-system -o json  | jq '.spec.containers[].image'\n\"docker.io/istio/proxyv2:1.13.1\"\n$ kubectl get po/istio-egressgateway-76c96658fd-pgfbn -n istio-system -o json  | jq '.spec.containers[].image'\n\"docker.io/istio/proxyv2:1.13.1\"\n```", "```\n$ kubectl get po/istio-egressgateway-76c96658fd-pgfbn -n istio-system -o json  | jq '.spec.containers[].args'\n[\n  \"proxy\",\n  \"router\",\n  \"--domain\",\n  \"$(POD_NAMESPACE).svc.cluster.local\",\n  \"--proxyLogLevel=warning\",\n  \"--proxyComponentLogLevel=misc:error\",\n  \"--log_output_level=default:info\"\n]\n```", "```\n$ kubectl get svc -n istio-system\nNAME                TYPE          CLUSTER-\nIP          EXTERNAL-IP    PORT(S)                                              AGE\nistio-egressgateway    ClusterIP      10.97.150.168    <none>        80/TCP,443/TCP                                    5d18h\nistio-ingressgateway   LoadBalancer\n   10.100.113.119   <pending>     15021:31391/TCP,80:32295/TCP,443:31860/TCP,31400:31503/TCP,15443:31574/TCP   5d18h\nistiod   ClusterIP      10.110.59.167    <none>        15010/TCP,15012/TCP,443/TCP,15014/TCP                                        5d18h\n```", "```\n$ kubectl get svc/istio-ingressgateway -n istio-system -o json | jq '.spec.ports'\n[\n…\n  {\n    \"name\": \"http2\",\n    \"nodePort\": 32295,\n    \"port\": 80,\n    \"protocol\": \"TCP\",\n    \"targetPort\": 8080\n  },\n  {\n    \"name\": \"https\",\n    \"nodePort\": 31860,\n    \"port\": 443,\n    \"protocol\": \"TCP\",\n    \"targetPort\": 8443\n  },\n  ….\n```", "```\n$ kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml -n bookinfons\ngateway.networking.istio.io/bookinfo-gateway created\nvirtualservice.networking.istio.io/bookinfo created\n```", "```\n$ kubectl describe virtualservice/bookinfo -n bookinfons\nName:         bookinfo\n..\nAPI Version:  networking.istio.io/v1beta1\nKind:         VirtualService\n...\nSpec:\n  Gateways:\n    bookinfo-gateway\n  Hosts:\n    *\n  Http:\n    Match:\n      Uri:\n        Exact:  /productpage\n      Uri:\n        Prefix:  /static\n      Uri:\n        Exact:  /login\n      Uri:\n        Exact:  /logout\n      Uri:\n        Prefix:  /api/v1/products\n    Route:\n      Destination:\n        Host:  productpage\n        Port:\n          Number:  9080\n```", "```\n$ kubectl describe gateway/bookinfo-gateway -n bookinfons\nName:         bookinfo-gateway\n..\nAPI Version:  networking.istio.io/v1beta1\nKind:         Gateway\n..\nSpec:\n  Selector:\n    Istio:  ingressgateway\n  Servers:\n    Hosts:\n      *\n    Port:\n      Name:      http\n      Number:    80\n      Protocol:  HTTP\n..\n```", "```\n$ echo $(minikube ip)\n192.168.64.6\n$ echo $(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].nodePort}')\n32295\n```", "```\n$ kubectl logs -f pod/istio-ingressgateway-569d7bfb4-8bzww -n istio-system\n\"GET /api/v1/products HTTP/1.1\" 200 - via_upstream - \"-\" 0 395 18 16 \"172.17.0.1\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36\" \"cfc414b7-10c8-9ff9-afa4-a360b5ad53b8\" \"192.168.64.6:32295\" \"172.17.0.10:9080\" outbound|9080||productpage.bookinfons.svc.cluster.local 172.17.0.5:56948 172.17.0.5:8080 172.17.0.1:15370 - -\n```", "```\n$ kubectl apply -f samples/addons\nserviceaccount/grafana created\n…….\n$ kubectl rollout status deployment/kiali -n istio-system\nWaiting for deployment \"kiali\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"kiali\" successfully rolled out\n```", "```\n$ istioctl dashboard kiali\nhttp://localhost:20001/kiali\n```", "```\n$ istioctl dashboard jaeger\nhttp://localhost:16686\n```", "```\n$ istioctl dashboard prometheus\nhttp://localhost:9090\n```", "```\n$ istioctl dashboard grafana\nhttp://localhost:3000\n```"]