- en: 11\. Network security in AKS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11. AKS 中的网络安全
- en: Securing a network is a critical activity in the protection of an application.
    The goal of a secure network is, on the one hand, to allow your users to connect
    to your applications and use all the functionalities you offer. On the other hand,
    you also need to protect your network from attackers. This means making sure that
    they cannot get access to critical parts of your network, and that even if they
    were to gain access, this would be limited.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网络安全是保护应用程序的关键活动。安全网络的目标，一方面是允许用户连接到你的应用程序并使用你提供的所有功能；另一方面，你还需要保护你的网络免受攻击者的侵害。这意味着要确保攻击者无法访问你网络的关键部分，即使他们获得了访问权限，这种访问也应该受到限制。
- en: When it comes to network security in AKS, there are two different layers to
    secure the network. The first is the control plane. The control plane refers to
    the managed Kubernetes master servers that host the Kubernetes API. By default,
    the control plane is exposed to the internet. You can secure the control plane
    either by limiting which public IP addresses can access it using a feature called
    **Authorized IP ranges**, or by deploying a private cluster, which means only
    the machines connected to your virtual network can access the control plane.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AKS 中谈到网络安全时，网络的保护有两个不同的层次。第一个是控制平面。控制平面指的是托管 Kubernetes API 的托管 Kubernetes
    主服务器。默认情况下，控制平面是暴露在互联网的。你可以通过限制哪些公共 IP 地址可以访问它（使用名为 **授权 IP 范围** 的功能）或通过部署私有集群来保护控制平面，这意味着只有连接到你虚拟网络的机器才能访问控制平面。
- en: The second network layer to secure is the workload running on your cluster.
    There are multiple ways to secure the workload. The first way is by using Azure
    networking functionalities, such as the Azure Firewall or **Network Security Groups**
    (**NSGs**). The second way to protect the workload is by using a Kubernetes functionality
    called network policies.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要保护的第二个网络层是运行在集群上的工作负载。保护工作负载有多种方法。第一种方法是使用 Azure 网络功能，例如 Azure 防火墙或 **网络安全组**（**NSGs**）。第二种保护工作负载的方法是使用
    Kubernetes 功能，称为网络策略。
- en: 'In this chapter, you will explore the different ways to secure the network
    of an AKS cluster. Specifically, this chapter contains the following sections:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将探索保护 AKS 集群网络的不同方式。具体来说，本章包含以下几个部分：
- en: Networking and network security in AKS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 中的网络和网络安全
- en: Control plane network security
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制平面网络安全
- en: Workload network security
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作负载网络安全
- en: Since most networking configurations of an AKS cluster are only configurable
    during cluster creation, you will create and destroy multiple clusters throughout
    this chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 AKS 集群的大多数网络配置只能在集群创建时进行配置，因此你将在本章中创建和销毁多个集群。
- en: Let's start this chapter by exploring the concepts of networking and network
    security in AKS.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从探讨 AKS 中的网络和网络安全概念开始本章内容。
- en: Networking and network security in AKS
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AKS 中的网络和网络安全
- en: This section serves as an introduction to the concepts of networking and security
    in AKS. You'll first cover the control plane, then workload networking, and then
    network security.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本节作为 AKS 中网络和安全概念的介绍。你将首先覆盖控制平面，然后是工作负载网络，再到网络安全。
- en: Control plane networking
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 控制平面网络
- en: The control plane of a Kubernetes cluster is the infrastructure that hosts the
    Kubernetes API server for your cluster, manages the scheduler, and stores the
    cluster state. When you interact with a Kubernetes cluster, for instance, by using
    `kubectl`, you are sending commands to the Kubernetes API server. In AKS, this
    control plane is managed by Microsoft and provided to you as a service.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 集群的控制平面是承载集群 Kubernetes API 服务器、管理调度器并存储集群状态的基础设施。当你与 Kubernetes
    集群交互时，例如通过使用 `kubectl`，你实际上是在向 Kubernetes API 服务器发送命令。在 AKS 中，控制平面由微软管理，并作为一项服务提供给你。
- en: By default, the control plane is exposed over the internet and is accessible
    to everybody that is connected to the internet. This doesn't mean that the control
    plane is not secure though. Even if an attacker had network access to your control
    plane, they would still need to have cluster credentials to execute commands against
    the control plane.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，控制平面通过互联网暴露，并且任何连接到互联网的人都可以访问它。这并不意味着控制平面不安全。即便攻击者能够访问你的控制平面，他们仍然需要集群凭证才能对控制平面执行命令。
- en: Frequently, though, organizations still want to limit network access to the
    control plane of their AKS clusters. There are two functionalities in AKS that
    enable you to limit network access to the control plane of a cluster.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，许多组织仍然希望限制对其AKS集群控制平面的网络访问。AKS中有两种功能可以帮助你限制对集群控制平面的网络访问。
- en: 'The first functionality is called **authorized IP address ranges**. By configuring
    authorized IP address ranges on your AKS, you configure which IP addresses are
    allowed to access your API server. This means that IP addresses that are not allowed
    to access your API server cannot interact with your API server. This is explained
    in *Figure 11.1*:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个功能叫做**授权IP地址范围**。通过在你的AKS上配置授权IP地址范围，你可以设置哪些IP地址允许访问你的API服务器。这意味着，不允许访问你的API服务器的IP地址将无法与API服务器交互。这一点在*图11.1*中有所说明：
- en: '![Configuring authorized IP ranges defines the IP addresses that are allowed
    to access your API server](img/B17338_11_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![配置授权IP范围定义了哪些IP地址可以访问你的API服务器](img/B17338_11_01.jpg)'
- en: 'Figure 11.1: Authorized IP ranges explained'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1：授权IP范围解释
- en: Another way to limit network access to your control plane is by using a feature
    called **private clusters**. By configuring private clusters, you do not give
    your control plane a publicly reachable address. The cluster is only reachable
    from a private network. To connect to the control plane, you would need to use
    a machine that is connected to an **Azure Virtual Network** (**VNet**). This machine
    would communicate to the control plane using an Azure functionality called Azure
    Private Link.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 限制网络访问控制平面的另一种方法是使用称为**私有集群**的功能。通过配置私有集群，你不会为控制平面分配一个公开可访问的地址。集群只能通过私有网络进行访问。要连接到控制平面，你需要使用一台连接到**Azure虚拟网络**（**VNet**）的机器。这台机器将通过Azure的功能——Azure
    Private Link与控制平面通信。
- en: 'Private Link is an Azure feature that allows you to connect to managed services
    using a private IP address in your VNet. When using Private Link, a Private Link
    endpoint is created in your VNet. To connect to this Private Link endpoint, you
    would have to connect from either a VM hosted in the same VNet, in a peered VNet,
    or through a VPN or Azure ExpressRoute that is connected to that VNet. In *Figure
    11.2*, you see an example of how this works using a VM hosted in the same VNet.
    You can see that the node pools (1) that host your workloads as well as VMs (2)
    connected to the same VNet can connect to the control plane, but a user connecting
    over the internet (3) cannot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Private Link是Azure的一项功能，允许你使用虚拟网络中的私有IP地址连接到托管服务。在使用Private Link时，会在你的虚拟网络中创建一个Private
    Link端点。要连接到这个Private Link端点，你必须从托管在同一虚拟网络中的虚拟机，或者在对等虚拟网络中，或者通过连接到该虚拟网络的VPN或Azure
    ExpressRoute进行连接。在*图11.2*中，你可以看到一个示例，展示了如何使用托管在同一虚拟网络中的虚拟机实现此功能。你可以看到，承载工作负载的节点池（1）以及连接到同一虚拟网络的虚拟机（2）可以连接到控制平面，但通过互联网连接的用户（3）无法连接：
- en: '![Private Link allows you to connect to managed services using a private IP
    address in your virtual network](img/B17338_11_02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Private Link允许你使用虚拟网络中的私有IP地址连接到托管服务](img/B17338_11_02.jpg)'
- en: 'Figure 11.2: Private clusters explained'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2：私有集群解释
- en: It is important to understand that both authorized IP address ranges and private
    clusters only provide network security to the Kubernetes control plane; they do
    not influence the workload network. Workload networking will be covered in the
    next section.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 需要理解的是，授权IP地址范围和私有集群仅为Kubernetes控制平面提供网络安全；它们不会影响工作负载网络。工作负载网络将在下一部分讨论。
- en: Workload networking
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工作负载网络
- en: 'Your workloads in AKS are deployed on a cluster that is deployed in a VNet.
    There are many ways to configure and secure networking in a VNet. In this section,
    we will introduce several important configuration options for network security
    of the workload deployed in a VNet. This is, however, only an introduction to
    these concepts. Before deploying a production cluster, please refer to the AKS
    documentation for a more in-depth review of the different configuration options:
    [https://docs.microsoft.com/azure/aks/concepts-network](https://docs.microsoft.com/azure/aks/concepts-network).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你的工作负载在AKS中部署在一个虚拟网络中的集群上。在虚拟网络中配置和保护网络安全有很多方法。在这一部分，我们将介绍一些用于保护部署在虚拟网络中工作负载的网络安全配置选项。但这仅仅是对这些概念的介绍。在部署生产集群之前，请参考AKS文档，详细了解不同的配置选项：[https://docs.microsoft.com/azure/aks/concepts-network](https://docs.microsoft.com/azure/aks/concepts-network)。
- en: 'You''ll first need to choose the networking model with which you''ll deploy
    your cluster. This configuration has a limited impact on security, but it is important
    to understand from a networking perspective. There are two options:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先需要选择一个网络模型来部署你的集群。这个配置对安全性的影响有限，但从网络的角度理解是很重要的。有两种选择：
- en: '**Kubenet networking (default)**: By using kubenet networking, cluster nodes
    get an IP address from a subnet in a VNet. The pods running on those nodes get
    an IP address from an overlay network, which uses a different address space from
    the nodes. Pod-to-pod networking is enabled by **Network Address Translation**
    (**NAT**). The benefit of kubenet is that only nodes consume an IP address from
    the cluster subnet.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubenet 网络（默认）**：使用 kubenet 网络时，集群节点从 VNet 中的一个子网获取 IP 地址。运行在这些节点上的 Pod 从一个覆盖网络中获取
    IP 地址，这个覆盖网络使用与节点不同的地址空间。Pod 到 Pod 之间的网络通过**网络地址转换**（**NAT**）来实现。kubenet 的好处是只有节点会消耗集群子网中的一个
    IP 地址。'
- en: '**Azure Container Network Interface (CNI) networking (advanced**): With Azure
    CNI, the pods and the nodes all get an IP address from the subnet that the cluster
    is created in. This has the benefit that pods can be accessed directly by resources
    outside the cluster. It has the disadvantage that you need to execute careful
    IP address planning, since each pod requires an IP address in the cluster subnet.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 容器网络接口（CNI）网络（高级）**：使用 Azure CNI 时，Pod 和节点都会从集群创建所在的子网中获取 IP 地址。这个模型的好处是，Pod
    可以直接被集群外部的资源访问。缺点是，你需要进行谨慎的 IP 地址规划，因为每个 Pod 都需要在集群子网中占用一个 IP 地址。'
- en: In both networking models, you can create the cluster in an existing VNet or
    have AKS create a new VNet on your behalf.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种网络模型中，你可以选择在现有的虚拟网络（VNet）中创建集群，或者让 AKS 代表你创建一个新的 VNet。
- en: 'The second network security configuration to consider is the routing of inbound
    and outbound traffic through an external firewall. This could either be an Azure
    Firewall or a third-party **network virtual appliance** (**NVA**). By routing
    traffic through an external firewall, you can apply centralized security rules,
    do traffic inspection, and log traffic access patterns. To configure this, you
    would configure a **user-defined route** (**UDR**) on the cluster subnet, to route
    traffic from your cluster through the external firewall. If you wish to explore
    this further, please refer to the documentation: [https://docs.microsoft.com/azure/aks/limit-egress-traffic](https://docs.microsoft.com/azure/aks/limit-egress-traffic).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个需要考虑的网络安全配置是通过外部防火墙来路由进出流量。这可以是一个 Azure 防火墙，也可以是第三方的**网络虚拟设备**（**NVA**）。通过将流量路由到外部防火墙，你可以应用集中式的安全规则、进行流量检查，并记录流量访问模式。要配置这一点，你需要在集群子网上配置一个**用户定义路由**（**UDR**），将流量从集群路由到外部防火墙。如果你想进一步了解，可以参考文档：[https://docs.microsoft.com/azure/aks/limit-egress-traffic](https://docs.microsoft.com/azure/aks/limit-egress-traffic)。
- en: Another network security option is the use of NSGs in Azure to limit inbound
    and outbound traffic. By default, when you create a service of the `LoadBalancer`
    type in AKS, AKS will also configure an NSG to allow traffic from everywhere to
    that service. You can tune the configuration of this NSG in AKS, to limit which
    IPs can access those services.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个网络安全选项是使用 Azure 中的 NSG 来限制进出流量。默认情况下，当你在 AKS 中创建一个 `LoadBalancer` 类型的服务时，AKS
    还会配置一个 NSG，允许来自任何地方的流量访问该服务。你可以在 AKS 中调整该 NSG 的配置，以限制哪些 IP 可以访问这些服务。
- en: Finally, you can limit traffic in your cluster by using a Kubernetes feature
    called **network policies**. A network policy is a Kubernetes object that allows
    you to configure which traffic is allowed on certain pods. With network policies,
    you can secure pod-to-pod traffic, external to pod traffic, and pod to external
    traffic. It is recommended that you use network policies mainly for pod-to-pod
    traffic (also called east-west traffic), and to use an external firewall or NSGs
    for external-to-pod or pod-to-external traffic (also called north-south traffic).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以通过使用 Kubernetes 的一种功能——**网络策略**，来限制集群中的流量。网络策略是一个 Kubernetes 对象，它允许你配置哪些流量可以在特定的
    Pod 上进行。通过网络策略，你可以保护 Pod 到 Pod 之间的流量、外部到 Pod 的流量，以及 Pod 到外部的流量。建议你主要将网络策略用于 Pod
    到 Pod 之间的流量（也叫做东西向流量），而将外部到 Pod 或 Pod 到外部的流量（也叫做南北向流量）交给外部防火墙或 NSG 来处理。
- en: AKS supports two options in terms of configuring network policies on your cluster.
    You can either use Azure network policies or Calico network policies. Azure network
    policies are developed, maintained, and supported by Microsoft, whereas Calico
    network policies are developed as an open-source project, with optional commercial
    support by a company called Tigera ([http://tigera.io/](http://tigera.io/)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: AKS 在集群的网络策略配置上支持两种选项。您可以使用 Azure 网络策略或 Calico 网络策略。Azure 网络策略由 Microsoft 开发、维护和支持，而
    Calico 网络策略作为一个开源项目开发，并由一个名为 Tigera 的公司提供可选的商业支持 ([http://tigera.io/](http://tigera.io/))。
- en: In the section on workload network security, you will configure network security
    groups and network policies on your cluster. Configuring an external firewall
    is beyond the scope of this book; please refer to the documentation mentioned
    earlier to learn more about this setup.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作负载网络安全部分，您将为集群配置网络安全组和网络策略。配置外部防火墙超出了本书的范围；请参考之前提到的文档，了解更多关于此配置的信息。
- en: Control plane network security
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制平面网络安全
- en: 'In this section, you will explore two ways in which to protect the control
    plane of your AKS cluster: Authorized IP ranges and private clusters. You''ll
    start by updating your existing cluster to use authorized IP ranges.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将探索两种保护 AKS 集群控制平面的方法：授权 IP 范围和私有集群。您将首先通过更新现有集群来使用授权的 IP 范围。
- en: Securing the control plane using authorized IP ranges
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用授权 IP 范围保护控制平面
- en: Configuring authorized IP ranges on AKS will limit which public IP addresses
    can access the control plane of your AKS cluster. In this section, you will configure
    authorized IP ranges on your existing cluster. You will limit traffic to a random
    public IP address to verify that traffic blocking works. You will then configure
    the IP address from the Azure Cloud Shell to be authorized and will see how that
    then allows traffic.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AKS 上配置授权的 IP 范围将限制哪些公共 IP 地址可以访问 AKS 集群的控制平面。在本节中，您将为现有集群配置授权的 IP 范围。您将限制流量到一个随机的公共
    IP 地址，以验证流量阻止功能是否正常工作。然后，您将配置 Azure Cloud Shell 中的 IP 地址为授权 IP，看看它是如何允许流量通过的。
- en: To start, browse to the Azure portal and open the pane for your AKS cluster.
    Select Networking in the left-hand navigation. Then, select the checkbox next
    to Set authorized IP ranges, and fill in the IP address, `10.0.0.0`, in the box
    below, as shown in *Figure 11.3*. You are not using this IP; this configuration
    is only to verify that you will no longer be able to connect to your Kubernetes
    control plane if your IP address is not authorized. Finally, hit the Save button
    at the top of the screen.![Configuring an authorized IP from the Networking pane
    for your AKS cluster](img/B17338_11_03.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，浏览到 Azure 门户并打开您的 AKS 集群面板。在左侧导航中选择“网络”选项。然后，选择“设置授权 IP 范围”旁边的复选框，并在下方的框中输入
    IP 地址 `10.0.0.0`，如 *图 11.3* 所示。您并不使用这个 IP；此配置仅用于验证如果您的 IP 地址没有被授权，您将无法连接到 Kubernetes
    控制平面。最后，点击屏幕顶部的保存按钮。![在 AKS 集群的网络面板中配置授权的 IP](img/B17338_11_03.jpg)
- en: 'Figure 11.3: Configuring an authorized IP'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.3：配置授权的 IP
- en: 'Now, open the Azure Cloud Shell. In the Cloud Shell, execute the following
    command:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开 Azure Cloud Shell。在 Cloud Shell 中，执行以下命令：
- en: '[PRE0]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Initially, this might still return the list of nodes as shown in *Figure 11.4*.
    This is because it takes a couple of minutes for the authorized IP ranges to become
    configured on AKS.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最初，这可能仍然会返回节点列表，如 *图 11.4* 所示。这是因为在 AKS 上配置授权的 IP 范围需要几分钟时间。
- en: '![Output from watch kubectl get nodes initially still showing the list of nodes](img/B17338_11_04.jpg)'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![watch kubectl get nodes 命令的输出，最初仍显示节点列表](img/B17338_11_04.jpg)'
- en: 'Figure 11.4: The command might initially still show the list of nodes'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.4：命令最初可能仍然会显示节点列表
- en: After a couple of minutes, however, the output of this command should return
    an error, as shown in *Figure 11.5*. This is as expected, since you limited the
    access to the control plane.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，几分钟后，这条命令的输出应该会返回错误，如 *图 11.5* 所示。这是预期的结果，因为您已将对控制平面的访问权限限制了。
- en: '![Error showing that you can no longer connect to the control plane through
    an unauthorized IP](img/B17338_11_05.jpg)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![错误显示您无法通过未授权的 IP 连接到控制平面](img/B17338_11_05.jpg)'
- en: 'Figure 11.5: An error showing that you can no longer connect to the control
    plane'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.5：错误显示您无法再连接到控制平面
- en: 'You can stop the `watch` command by pressing *Ctrl + C*. You will now get the
    IP address used by your current Cloud Shell session, and will then configure this
    as an authorized IP. To get the IP address used by your current Cloud Shell session,
    you can connect to [icanhazip.com](http://icanhazip.com), which is a simple website
    that will return your public IP. To do this, execute the following command:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过按 *Ctrl + C* 停止 `watch` 命令。现在，你将获得当前 Cloud Shell 会话使用的 IP 地址，然后将其配置为授权
    IP。要获取当前 Cloud Shell 会话使用的 IP 地址，你可以连接到 [icanhazip.com](http://icanhazip.com)，这是一个简单的网站，会返回你的公共
    IP 地址。执行以下命令来实现：
- en: '[PRE1]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will return an output similar to *Figure 11.6*:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于*图 11.6*的输出：
- en: '![Getting the IP address used by Cloud Shell](img/B17338_11_06.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![获取 Cloud Shell 使用的 IP 地址](img/B17338_11_06.jpg)'
- en: 'Figure 11.6: Getting the IP address used by Cloud Shell'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.6：获取 Cloud Shell 使用的 IP 地址
- en: You can now configure this IP address as an authorized IP address in AKS. You
    can do this in the Networking section of the AKS pane as you did in *step 1*.
    This is shown in *Figure 11.7*. Make sure to click the Save button at the top
    of the screen.![Configuring the IP address used by Cloud Shell as an authorized
    IPthrough the Networking section of the AKS pane](img/B17338_11_07.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以将此 IP 地址配置为 AKS 中的授权 IP 地址。你可以像在*步骤 1*中那样，在 AKS 面板的网络部分中完成此操作。具体操作见*图
    11.7*。确保点击屏幕顶部的保存按钮。![通过 AKS 面板的网络部分将 Cloud Shell 使用的 IP 地址配置为授权 IP](img/B17338_11_07.jpg)
- en: 'Figure 11.7: Configuring the IP address of Cloud Shell as an authorized IP
    in AKS'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.7：将 Cloud Shell 的 IP 地址配置为 AKS 中的授权 IP
- en: Now, execute the same command as before to get the list of nodes in your AKS
    cluster.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，执行与之前相同的命令，以获取你 AKS 集群中的节点列表。
- en: '[PRE2]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Initially, this might still return the error you saw earlier, as shown in *Figure
    11.8*. This is because it takes a couple of minutes for the authorized IP ranges
    to become configured on AKS.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最初，这可能仍然会返回你之前看到的错误，如*图 11.8*所示。这是因为 AKS 配置授权 IP 范围需要几分钟时间。
- en: '![Fetching the list of nodes gives you an error initially as the authorized
    IP is being configured](img/B17338_11_08.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![最初获取节点列表时出现错误，因为授权 IP 正在配置中](img/B17338_11_08.jpg)'
- en: 'Figure 11.8: The command initially still gives an error'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8：命令最初仍然会返回错误
- en: After a couple of minutes, however, the output of this command should return
    a list of nodes, as shown in *Figure 11.9*. This shows you that you successfully
    configured authorized IP ranges.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，过了几分钟后，这个命令的输出应该返回一个节点列表，如*图 11.9*所示。这表明你已经成功配置了授权的 IP 范围。
- en: '![You can now connect to the API server through the authorized IP](img/B17338_11_09.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![现在，你可以通过授权的 IP 连接到 API 服务器](img/B17338_11_09.jpg)'
- en: 'Figure 11.9: By configuring an authorized IP, you can now connect to the API
    server'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9：通过配置授权的 IP，现在你可以连接到 API 服务器
- en: By configuring authorized IP ranges, you were able to confirm that when the
    IP address of Cloud Shell was not allowed access to the Kubernetes control plane,
    the connection is timed out. By configuring the IP address of Cloud Shell as an
    authorized IP, you were able to connect to the control plane.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过配置授权的 IP 范围，你可以确认当 Cloud Shell 的 IP 地址未被允许访问 Kubernetes 控制平面时，连接会超时。通过将 Cloud
    Shell 的 IP 地址配置为授权 IP，你成功连接到了控制平面。
- en: In a typical production scenario, you wouldn't configure IP addresses from Cloud
    Shell as the authorized IP on an AKS cluster, but you would rather configure well-known
    IP addresses or ranges of either of your Kubernetes administrators, your datacenter,
    or known IPs of tools you use. The Cloud Shell was used here just as an example
    to show functionality.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的生产环境中，你不会将 Cloud Shell 的 IP 地址配置为 AKS 集群的授权 IP，而是会配置你的 Kubernetes 管理员、数据中心或你使用的工具的已知
    IP 地址或范围。这里使用 Cloud Shell 仅作为一个示例，展示其功能。
- en: There is a second way to secure the control plane, that is, by deploying a private
    cluster. You will do this in the next section.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 还有第二种保护控制平面的方法，即通过部署私有集群。你将在接下来的章节中完成此操作。
- en: Securing the control plane using a private cluster
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用私有集群保护控制平面
- en: By configuring authorized IP ranges in AKS, you were able to limit which public
    IP addresses can access your cluster. You can also completely limit any public
    traffic to your cluster by deploying a private cluster. A private cluster is only
    reachable through a private connection, established using Azure Private Link.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在 AKS 中配置授权的 IP 范围，你可以限制哪些公共 IP 地址可以访问你的集群。你还可以通过部署私有集群，完全限制任何公共流量访问你的集群。私有集群只能通过私有连接访问，该连接是通过
    Azure Private Link 建立的。
- en: 'Let''s start by configuring a private cluster and trying to access it:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从配置私有集群并尝试访问它开始：
- en: 'The private cluster feature can only be enabled at cluster creation time. This
    means that you will have to create a new cluster. To do this on the free trial
    subscription, you will have to delete the existing cluster. You can do this using
    the following command on Cloud Shell:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 私有集群功能只能在集群创建时启用。这意味着你必须创建一个新的集群。若要在免费试用订阅中执行此操作，你需要删除现有的集群。你可以使用以下命令在 Cloud
    Shell 中完成：
- en: '[PRE3]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This command will take a couple of minutes to complete. Please wait for it to
    successfully delete your previous cluster.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个命令将花费几分钟来完成。请耐心等待，直到它成功删除你之前的集群。
- en: 'You are now ready to create a new cluster. Because you will, in later steps,
    also create a new VM to access the cluster (as shown in *Figure 11.2*), you will
    create a new VNet instead of letting AKS create the VNet for you. To create the
    VNet, use the following command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以创建一个新的集群了。因为在后续步骤中，你还将创建一个新的虚拟机来访问集群（如 *图 11.2* 所示），你将创建一个新的 VNet，而不是让
    AKS 为你创建 VNet。要创建 VNet，请使用以下命令：
- en: '[PRE4]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You will require the ID of the subnet that was created in the VNet. To get
    that ID, use the following command:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要获取在 VNet 中创建的子网的 ID。要获取该 ID，请使用以下命令：
- en: '[PRE5]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You will also need a managed identity that has permission to create resources
    in the subnet you just created. To create the managed identity and give it access
    to your subnet, use the following commands:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还需要一个具有在刚创建的子网中创建资源权限的托管身份。要创建托管身份并授予其访问子网的权限，请使用以下命令：
- en: '[PRE6]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The preceding code will first create the managed identity. Afterward, it gets
    the client ID of the managed identity and grants that access to the subnet. In
    the final command, it is getting the resource ID of the managed identity.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码将首先创建托管身份。之后，它会获取托管身份的客户端 ID 并授予对该子网的访问权限。在最后的命令中，它获取托管身份的资源 ID。
- en: 'Finally, you can go ahead and create the private AKS cluster using the following
    command. As you might notice, you are creating a smaller cluster using only one
    node. This is to conserve the core quota under the free trial subscription:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你可以使用以下命令创建私有 AKS 集群。如你所见，你正在创建一个只包含一个节点的小型集群。这是为了在免费试用订阅下节省核心配额：
- en: '[PRE7]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The command creates a new AKS cluster with a number of special configurations
    that haven't been covered previously in the book. The first new configuration
    is `--vnet-subnet-id`. This allows you to create an AKS cluster in an existing
    subnet in an existing VNet. The `--enable-managed-identity` parameter enables
    the cluster to use a managed identity, and the `--assign-identity` parameter configures
    which managed identity to use. The final new configuration option you see here
    is `--enable-private-cluster`, which will create a private cluster with a private
    endpoint.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令创建一个新的 AKS 集群，并包含一些此前未在书中介绍的特殊配置。第一个新配置是 `--vnet-subnet-id`。这允许你在现有 VNet
    中的现有子网中创建 AKS 集群。`--enable-managed-identity` 参数使集群能够使用托管身份，`--assign-identity`
    参数配置使用哪个托管身份。最后一个新配置选项是 `--enable-private-cluster`，它将创建一个带有私有端点的私有集群。
- en: 'The preceding command will take a couple of minutes to complete. Once it''s
    complete, you can try to access your cluster using the Azure Cloud Shell. This
    will fail, however, because the Azure Cloud Shell isn''t deployed in your VNet.
    Let''s explore this. First, get the cluster credentials:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述命令将花费几分钟来完成。完成后，你可以尝试通过 Azure Cloud Shell 访问你的集群。然而，这将失败，因为 Azure Cloud Shell
    并未部署在你的 VNet 中。让我们进一步探索。首先，获取集群凭据：
- en: '[PRE8]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This will ask you whether it may overwrite the existing `kubeconfig` files
    twice. Confirm this by pressing the *y* key, as shown in *Figure 11.10*:'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将询问你是否要覆盖现有的 `kubeconfig` 文件两次。按下 *y* 键确认，如 *图 11.10* 所示：
- en: '![Fetching the cluster credentials using the az aks get-credentials command](img/B17338_11_10.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![通过 az aks get-credentials 命令获取集群凭据](img/B17338_11_10.jpg)'
- en: '[PRE9]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will return an error, as shown in *Figure 11.11*. This error is as expected,
    since you have no private connection from Cloud Shell to the Private Link endpoint.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回一个错误，如*图 11.11*所示。这个错误是预期中的，因为你的 Cloud Shell 无法通过私有连接访问 Private Link 端点。
- en: '![Error showing you cannot access the control plane from Cloud Shell anymore](img/B17338_11_11.jpg)'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![显示无法再从 Cloud Shell 访问控制平面的错误](img/B17338_11_11.jpg)'
- en: 'Figure 11.11: Error showing that you can no longer access the control plane
    from the Cloud Shell'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.11：显示无法再从 Cloud Shell 访问控制平面的错误
- en: Note
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: 'In the previous command, you noticed that your Cloud Shell couldn''t reach
    the Kubernetes API server. It is possible to connect Azure Cloud Shell to a VNet
    in Azure and connect to your Kubernetes API server that way. You will not do so
    in the next steps of this example, but if you are interested in this approach,
    please refer to the documentation: [https://docs.microsoft.com/azure/cloud-shell/private-vnet](https://docs.microsoft.com/azure/cloud-shell/private-vnet).'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在之前的命令中，你注意到你的 Cloud Shell 无法访问 Kubernetes API 服务器。实际上，可以将 Azure Cloud Shell
    连接到 Azure 中的 VNet，并通过该方式连接到 Kubernetes API 服务器。你在本示例的接下来的步骤中不会使用这种方法，但如果你对这种方法感兴趣，请参考文档：[https://docs.microsoft.com/azure/cloud-shell/private-vnet](https://docs.microsoft.com/azure/cloud-shell/private-vnet)。
- en: As mentioned in the introduction, when you create a private AKS cluster, AKS
    will use a service called Private Link to connect the control plane to your VNet.
    You can actually see this endpoint in your subscription in the Azure portal. To
    see the private endpoint, look for Private Link in the Azure search bar, as shown
    in *Figure 11.12*:![Navigating to the Private Link center through the Azure portal](img/B17338_11_12.jpg)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前言所述，当你创建一个私有 AKS 集群时，AKS 会使用名为 Private Link 的服务将控制平面连接到你的 VNet。你实际上可以在 Azure
    门户中看到这个端点。在门户中查看私有端点时，搜索 Azure 搜索栏中的 Private Link，如*图 11.12*所示：![通过 Azure 门户导航到
    Private Link 中心](img/B17338_11_12.jpg)
- en: 'Figure 11.12: Searching for Private Link in the Azure search bar'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.12：在 Azure 搜索栏中搜索 Private Link
- en: In the resulting pane, click on Private endpoints to see your current Private
    Link endpoints. You should see a private endpoint by the name of kube-apiserver
    here, as shown in *Figure 11.13*. Here you see the link to the cluster and to
    the subnet where the private endpoint is created.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在结果窗格中，点击“私有端点”以查看当前的 Private Link 端点。你应该能在这里看到一个名为 kube-apiserver 的私有端点，如*图
    11.13*所示。在这里，你会看到指向集群以及创建该私有端点的子网的链接。
- en: '![The private endpoint in your subscription](img/B17338_11_13.jpg)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![你订阅中的私有端点](img/B17338_11_13.jpg)'
- en: 'Figure 11.13: The private endpoints in your subscription'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.13：你订阅中的私有端点
- en: 'Private Link makes use of an Azure DNS private zone to link the DNS name of
    the cluster to the private IP of the private endpoint. To see the Azure DNS private
    zone, look for Private DNS zones via the Azure search bar, as shown in *Figure
    11.14*:'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Private Link 利用 Azure DNS 私有区域将集群的 DNS 名称与私有端点的私有 IP 地址关联起来。要查看 Azure DNS 私有区域，请通过
    Azure 搜索栏搜索“Private DNS 区域”，如*图 11.14*所示：
- en: '![Navigating to Private DNS zones through the Azure search bar](img/B17338_11_14.jpg)'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![通过 Azure 搜索栏导航到私有 DNS 区域](img/B17338_11_14.jpg)'
- en: 'Figure 11.14: Navigating to Private DNS zones through the Azure portal'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.14：通过 Azure 门户导航到私有 DNS 区域
- en: In the resulting pane, you should see one private DNS zone. If you click on
    that zone, you will see more details from the DNS zone, as shown in *Figure 11.15*.
    You see here that a DNS record got created for your cluster DNS name, pointing
    to a private IP address in your VNet.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在结果窗格中，你应该能看到一个私有 DNS 区域。如果点击该区域，你将看到更多来自 DNS 区域的详细信息，如*图 11.15*所示。你会看到这里为你的集群
    DNS 名称创建了一个 DNS 记录，该记录指向你 VNet 中的一个私有 IP 地址。
- en: '![Showing the DNS record in the Azure private DNS zone](img/B17338_11_15.jpg)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![显示 Azure 私有 DNS 区域中的 DNS 记录](img/B17338_11_15.jpg)'
- en: 'Figure 11.15: The DNS record in the Azure DNS private zone that got created
    by AKS'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.15：由 AKS 创建的 Azure DNS 私有区域中的 DNS 记录
- en: 'To establish a private connection to the control plane, you will now create
    a new VM and use it to connect to the control plane. For organization purposes,
    you''ll create this VM in a new resource group. This will make it easier to delete
    the VM later. Use the following commands to create a new subnet in your VNet and
    to create a VM in that subnet:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了建立与控制平面的私有连接，你将创建一个新的虚拟机，并使用它连接到控制平面。为了方便管理，你将在一个新的资源组中创建这个虚拟机，这样以后删除虚拟机会更容易。使用以下命令在
    VNet 中创建一个新的子网，并在该子网中创建虚拟机：
- en: '[PRE10]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'It will take about a minute for the VM to be created. Once it is created, you
    should get an output similar to *Figure 11.16*. Copy the public IP address in
    your output:'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建虚拟机大约需要一分钟。一旦创建完成，你应该会看到类似于*图 11.16*的输出。复制输出中的公共IP地址：
- en: '![Creating a new VM and fetching its public IP address](img/B17338_11_16.jpg)'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建新虚拟机并获取其公共IP地址](img/B17338_11_16.jpg)'
- en: 'Figure 11.16: Creating a new VM and getting its public IP address'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.16：创建新虚拟机并获取其公共IP地址
- en: Now that the VM is created, you will move your Kubernetes config file containing
    the cluster credentials to that VM. This avoids you having to install the Azure
    CLI on the target machine to get the Kubernetes credentials. Make sure to replace
    `<public IP>` with the outcome from the previous step.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在虚拟机已创建，你将把包含集群凭据的Kubernetes配置文件移动到该虚拟机。这避免了你必须在目标机器上安装Azure CLI来获取Kubernetes凭据。确保将`<public
    IP>`替换为上一步的结果。
- en: '[PRE11]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You will be prompted if you trust this host. Confirm this by typing `yes`.
    This will create an output similar to *Figure 11.17*:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 系统将提示你是否信任此主机。通过输入`yes`确认。这将生成类似于*图 11.17*的输出：
- en: '![Copying the Kubernetes config file to the VM](img/B17338_11_17.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将Kubernetes配置文件复制到虚拟机](img/B17338_11_17.jpg)'
- en: 'Figure 11.17: Copying the Kubernetes credentials to the target machine'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.17：将Kubernetes凭据复制到目标机器
- en: 'You can now access the remote machine using the following command:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以使用以下命令访问远程机器：
- en: '[PRE12]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now that you''re connected to the remote machine, you''ll need to use `kubectl`.
    Download it, make it executable, and move it into the binaries folder using the
    following command:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已连接到远程机器，你需要使用`kubectl`。下载它，使其可执行，并使用以下命令将其移动到二进制文件夹中：
- en: '[PRE13]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To have `kubectl` recognize the config file you uploaded, you have to move
    it into the `kube` directory. You can do so using the following command:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了让`kubectl`识别你上传的配置文件，你需要将其移动到`kube`目录中。你可以使用以下命令来完成：
- en: '[PRE14]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now that you have this VM configured to connect to your cluster, you can verify
    that you can connect to this cluster by applying the following command:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你已配置虚拟机以连接到集群，你可以通过执行以下命令来验证是否可以连接到集群：
- en: '[PRE15]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This should generate an output similar to *Figure 11.18*:'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该会生成类似于*图 11.18*的输出：
- en: '![Verifying the connection to the cluster using the kubectl get nodes command](img/B17338_11_18.jpg)'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![使用kubectl get nodes命令验证连接到集群](img/B17338_11_18.jpg)'
- en: 'Figure 11.18: Accessing the private AKS cluster from a VM in the same VNet'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.18：从同一VNet中的虚拟机访问私有AKS集群
- en: 'You can also verify the DNS record that your VM is using to connect to the
    cluster. To do this, first get the `nslookup` command to get the DNS record. You
    can use the following commands to do this:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以验证虚拟机用于连接集群的DNS记录。为此，首先使用`nslookup`命令获取DNS记录。你可以使用以下命令来执行此操作：
- en: '[PRE16]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This should produce an output similar to *Figure 11.19*:'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该会生成类似于*图 11.19*的输出：
- en: '![Fetching the cluster’s FQDN and looking up its IP address using nslookup
    ](img/B17338_11_19.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![获取集群的FQDN并使用nslookup查找其IP地址](img/B17338_11_19.jpg)'
- en: 'Figure 11.19: Getting the cluster''s FQDN and looking up its IP address using
    nslookup'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.19：获取集群的FQDN并使用nslookup查找其IP地址
- en: As you can see in *Figure 11.19*, the address that you are getting back from
    the `nslookup` command is a private IP address. This means that only machines
    connected to that VNet will be able to connect to the Kubernetes control plane.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图 11.19*所示，从`nslookup`命令返回的地址是一个私有IP地址。这意味着只有连接到该VNet的机器才能连接到Kubernetes控制平面。
- en: You have now successfully created an AKS private cluster and verified that only
    machines connected to the AKS VNet can connect to the control plane. You couldn't
    connect to the control plane from within the Azure Cloud Shell, but you could
    connect to it from a VM in the same VNet. Since you now have a private cluster
    deployed, don't delete the VM you are using just yet. You will use it in the next
    example. You will delete this private cluster and the VM in the final example
    in this chapter.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经成功创建了一个AKS私有集群，并验证了只有连接到AKS VNet的机器才能连接到控制平面。你无法从Azure Cloud Shell连接到控制平面，但可以从同一VNet中的虚拟机连接。由于你现在已经部署了一个私有集群，暂时不要删除正在使用的虚拟机。你将在下一个示例中使用它。在本章的最后一个示例中，你将删除此私有集群和虚拟机。
- en: This also concludes this section on control plane security. You have learned
    about authorized IP ranges and private clusters. In the next section, you'll learn
    more about how you can secure your workload.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 本节关于控制平面安全的内容到此结束。你已经了解了授权的 IP 范围和私有集群。下一节，你将进一步了解如何保护你的工作负载。
- en: Workload network security
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作负载网络安全
- en: You have now learned about how to protect the network of your control plane
    of your AKS cluster. This, however, hasn't influenced the network security of
    your workloads. In this section, you will explore three ways in which you can
    protect your workloads. First, you will create a Kubernetes service using an Azure
    internal load balancer. Then, you'll secure traffic to a service in Kubernetes
    using NSGs. Finally, you will use network policies to secure pod-to-pod traffic.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经了解了如何保护 AKS 集群控制平面的网络安全。然而，这并没有影响到工作负载的网络安全。在本节中，你将探讨三种保护工作负载的方法。首先，你将使用
    Azure 内部负载均衡器创建一个 Kubernetes 服务。接着，你将使用 NSG 来保护 Kubernetes 中服务的流量。最后，你将使用网络策略来保护
    Pod 到 Pod 的流量。
- en: Securing the workload network using an internal load balancer
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用内部负载均衡器保护工作负载网络
- en: Kubernetes has multiple types of services, as you learned in *Chapter 3*, *Application
    Deployment on AKS*. You have used the service type load balancer multiple times
    before to have AKS create an Azure load balancer. These have always been public
    load balancers. You can also configure AKS in such a way that it will create an
    internal load balancer. This is useful in cases where you are creating a service
    that only needs to be accessible from within a VNet or networks connected to that VNet.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 有多种类型的服务，正如你在*第3章*《*在 AKS 上部署应用程序*》中所学的那样。你之前多次使用过服务类型为负载均衡器，以便让
    AKS 创建一个 Azure 负载均衡器。这些负载均衡器一直是公共负载均衡器。你还可以将 AKS 配置为创建一个内部负载均衡器。这在你创建的服务仅需要从 VNet
    或与该 VNet 连接的网络内访问时非常有用。
- en: 'You will create such a service in this section:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将创建这样的一个服务：
- en: 'If you are no longer connected to the VM you created in the previous example,
    reconnect to it. You can get the VM''s public IP address using the following command:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不再连接到之前示例中创建的虚拟机，请重新连接。你可以使用以下命令获取虚拟机的公共 IP 地址：
- en: '[PRE17]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'And you can connect to the VM using the following command:'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用以下命令连接到虚拟机：
- en: '[PRE18]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Once connected to this VM, you will need to retrieve the git repository linked
    with this book. You can get this using the following command:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦连接到此虚拟机，你需要获取与本书相关联的 git 仓库。你可以使用以下命令来获取：
- en: '[PRE19]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Once the repository is cloned, navigate into the samples for this chapter using
    the following command:'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦仓库被克隆，使用以下命令进入本章的示例：
- en: '[PRE20]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'As the example application in this section, you will use the guestbook application
    you''ve already used in the first half of this book. However, the all-in-one YAML
    file you used before has been broken up into two files: `guestbook-without-service.yaml`
    and `front-end-service-internal.yaml`. The reason for this is to make it easier
    for you to explore the service-specific configuration.'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本节中的示例应用程序将使用你在本书前半部分已经使用过的 guestbook 应用程序。然而，你之前使用的单一 YAML 文件已被拆分为两个文件：`guestbook-without-service.yaml`
    和 `front-end-service-internal.yaml`。这样做的目的是为了让你更方便地查看与服务相关的配置。
- en: 'The `front-end-service-internal.yaml` file contains the configuration to create
    a Kubernetes service using an Azure internal load balancer. The following code
    is part of that example:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`front-end-service-internal.yaml` 文件包含使用 Azure 内部负载均衡器创建 Kubernetes 服务的配置。以下代码是该示例的一部分：'
- en: '[PRE21]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: You are using annotations in the YAML code to instruct AKS to create an Azure
    internal load balancer. You can see on lines 5-6 of the preceding code example
    that you are setting the `service.beta.kubernetes.io/azure-load-balancer-internal`
    annotation to `true`.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你在 YAML 代码中使用注解来指示 AKS 创建一个 Azure 内部负载均衡器。你可以看到在前面的代码示例中的第 5-6 行，你将 `service.beta.kubernetes.io/azure-load-balancer-internal`
    注解设置为 `true`。
- en: 'You can create the guestbook application and the service using the internal
    load balancer by applying the following commands:'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以通过执行以下命令来创建 guestbook 应用程序和使用内部负载均衡器的服务：
- en: '[PRE22]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You can then get the service and wait for it to get an external IP using the
    following command:'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以然后通过以下命令获取服务，并等待它获得外部 IP：
- en: '[PRE23]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This will return an output similar to *Figure 11.20*:'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于*图 11.20*的输出：
- en: '![Getting the external IP of the frontend service, which is a private IP](img/B17338_11_20.jpg)'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![获取前端服务的外部 IP 地址，前端服务是一个私有 IP](img/B17338_11_20.jpg)'
- en: 'Figure 11.20: Getting the service''s external IP'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.20：获取服务的外部IP
- en: As you can see, the service has a private IP as an external IP. You can only
    access this IP from the VNet that the cluster is deployed into, or from other
    networks connected to that VNet.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如您所见，服务具有作为外部IP的私有IP。您只能从集群部署到的VNet或与该VNet连接的其他网络访问此IP。
- en: Note
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: '[PRE24]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This will return a result similar to *Figure 11.21*:'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回与*图 11.21*类似的结果：
- en: '![Accessing the frontend service using the curl command](img/B17338_11_21.jpg)'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![使用curl命令访问前端服务](img/B17338_11_21.jpg)'
- en: 'Figure 11.21: Accessing the service exposed through the internal load balancer'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.21：通过内部负载均衡器访问服务
- en: AKS created an internal load balancer to expose this service. You can see this
    load balancer in the Azure portal as well. To see this internal load balancer,
    start by searching for load balancer in the Azure search bar, as shown in *Figure 11.22*:![Searching
    for load balancer in the Azure search bar](img/B17338_11_22.jpg)
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AKS创建了一个内部负载均衡器来公开此服务。您还可以在Azure门户中看到这个负载均衡器。要查看此内部负载均衡器，请首先在Azure搜索栏中搜索负载均衡器，如*图
    11.22*所示：![在Azure搜索栏中搜索负载均衡器](img/B17338_11_22.jpg)
- en: 'Figure 11.22: Navigating to Load balancers through the Azure portal'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.22：通过Azure门户导航到负载均衡器
- en: In the resulting pane, you should see two load balancers, as shown in *Figure 11.23*:![Output
    showing two load balancers, one called kubernetes the other called Kubernetes-internal](img/B17338_11_23.jpg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在结果窗格中，您应该看到两个负载均衡器，如*图 11.23*所示：![显示两个负载均衡器的输出，一个称为kubernetes，另一个称为Kubernetes-internal](img/B17338_11_23.jpg)
- en: 'Figure 11.23: List of load balancers in the default directory'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.23：默认目录中负载均衡器的列表
- en: Click on the kubernetes-internal load balancer. This will take you to a pane
    similar to *Figure 11.24*:![Overview of the kubernetes-internal load balancer.
    The private IP address is the same address used earlier to connect to the frontend
    service](img/B17338_11_24.jpg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击kubernetes-internal负载均衡器。这将带您进入类似*图 11.24*的窗格：![kubernetes-internal负载均衡器的概述。私有IP地址与之前用于连接前端服务的地址相同](img/B17338_11_24.jpg)
- en: 'Figure 11.24: Details of the internal load balancer'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.24：内部负载均衡器的详细信息
- en: Here, you can see the details of this internal load balancer. As you can see
    in the highlight in the screenshot, the same IP that you saw as the output of
    the `kubectl` command is configured on the load balancer.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，您可以看到此内部负载均衡器的详细信息。正如您在屏幕截图中看到的亮点所示，与`kubectl`命令的输出相同的IP配置在负载均衡器上。
- en: 'This concludes the example of using an internal load balancer. You can now
    delete the service using the internal load balancer by applying the following
    command:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这结束了使用内部负载均衡器的示例。您现在可以通过应用以下命令删除服务使用内部负载均衡器：
- en: '[PRE25]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This will delete the guestbook application and the service. When deleting the
    service, both the service in Kubernetes, as well as the internal load balancer
    in Azure, will be deleted. This is because once there are no more services in
    your cluster requiring an internal load balancer, AKS will delete that internal
    load balancer.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将删除guestbook应用程序和服务。删除服务时，将删除Kubernetes中的服务以及Azure中的内部负载均衡器。这是因为一旦集群中不再需要内部负载均衡器的服务，AKS将删除该内部负载均衡器。
- en: In this section, you deployed a Kubernetes service using an internal load balancer.
    This gives you the ability to create services that are not exposed to the internet.
    There are, however, cases where you need to expose a service to the internet,
    but need to ensure that only trusted parties can connect to it. In the next section,
    you'll learn how you can create a service in AKS that uses a network security
    group to limit inbound traffic.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您使用内部负载均衡器部署了一个Kubernetes服务。这使您能够创建不向互联网公开的服务。然而，有时您需要将服务暴露给互联网，但需要确保只有信任的方可以连接。在下一节中，您将学习如何在AKS中创建使用网络安全组限制入站流量的服务。
- en: Securing the workload network using network security groups
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用网络安全组保护工作负载网络
- en: Up to this point in the book, you have exposed multiple services in Kubernetes.
    You've exposed them both using the service object in Kubernetes, as well as using
    an ingress. However, you never restricted access to your application, except in
    the previous section, by deploying an internal load balancer. This means that
    the application was always publicly accessible. In the following example, you
    will create a service on your Kubernetes cluster that will have a public IP, but
    you will restrict access to it using an NSG that is configured by AKS.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经在 Kubernetes 中暴露了多个服务。你使用 Kubernetes 中的服务对象以及 Ingress 来暴露它们。然而，除了在上一节通过部署内部负载均衡器来限制访问之外，你从未限制过应用程序的访问。这意味着该应用程序始终可以公开访问。在接下来的示例中，你将创建一个具有公共
    IP 的 Kubernetes 集群服务，但你将通过 AKS 配置的 NSG 限制对其的访问。
- en: As the example application in this section, you will again use the guestbook
    application. As in the previous section, the front-end service configuration has
    been moved to a separate file. For this example, you'll start by using the `front-end-service.yaml`
    file to create the service, and later update that using the `front-end-service-secured.yaml`
    file.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本节的示例应用中，你将再次使用留言簿应用。与上一节相同，前端服务的配置已移到一个单独的文件中。对于这个示例，你将从使用`front-end-service.yaml`文件创建服务开始，稍后会使用`front-end-service-secured.yaml`文件更新它。
- en: 'Let''s start by deploying the application as-is, without any NSG configuration,
    by applying the following command:'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，通过应用以下命令部署应用，保持原样，不做任何 NSG 配置：
- en: '[PRE26]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Then, get the front-end service''s IP address using the following command:'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，使用以下命令获取前端服务的 IP 地址：
- en: '[PRE27]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This will create an output similar to *Figure 11.25*. Once you get the public
    IP, you can exit out of the command by pressing *Ctrl + C*:'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将生成类似于*图 11.25*的输出。一旦获取到公共 IP，你可以通过按 *Ctrl + C* 来退出命令：
- en: '![Fetching the front-end service’s IP address](img/B17338_11_25.jpg)'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![获取前端服务的 IP 地址](img/B17338_11_25.jpg)'
- en: 'Figure 11.25: Getting the front-end service''s IP address'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.25：获取前端服务的 IP 地址
- en: 'You are now able to connect to this service using both your browser as well
    as using the VM itself. If you connect using your browser, you should expect an
    output similar to *Figure 11.26*:'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，你可以通过浏览器或通过虚拟机本身连接到此服务。如果你通过浏览器连接，你应该期望看到类似于*图 11.26*的输出：
- en: '![Accessing the guestbook application using the external IP](img/B17338_11_26.jpg)'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![通过外部 IP 访问留言簿应用](img/B17338_11_26.jpg)'
- en: 'Figure 11.26: Accessing the guestbook application through a web browser'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.26：通过网页浏览器访问留言簿应用
- en: 'You can also connect to this application using the command line. To do this,
    use the following command:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以通过命令行连接到这个应用。为此，请使用以下命令：
- en: '[PRE28]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This should return an output similar to *Figure 11.27*:'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回一个类似于*图 11.27*的输出：
- en: '![Connecting to the guestbook application using the command line](img/B17338_11_27.jpg)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![通过命令行连接到留言簿应用](img/B17338_11_27.jpg)'
- en: 'Figure 11.27: Connecting to the guestbook application using the command line'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.27：通过命令行连接到留言簿应用
- en: Let's now configure additional security on the front-end service by only allowing
    your browser to connect to the application. For this, you will require the public
    IP address you are using right now. If you don't know this, you can browse to
    [https://www.whatismyip.com/](https://www.whatismyip.com/) to get your IP address,
    as shown in *Figure 11.28*:![Using https://www.whatismyip.com/ to get your IP
    address](img/B17338_11_28.jpg)
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过只允许你的浏览器连接到应用来配置前端服务的额外安全性。为此，你将需要你当前使用的公共 IP 地址。如果你不知道它，你可以访问[https://www.whatismyip.com/](https://www.whatismyip.com/)来获取你的
    IP 地址，如*图 11.28*所示：![使用 https://www.whatismyip.com/ 获取你的 IP 地址](img/B17338_11_28.jpg)
- en: '[PRE29]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This file is very similar to the services you created earlier in this book.
    However, on lines 15 and 16, you now see `loadBalancerSourceRanges` and the option
    to add your own public IP address. You can provide multiple public IP addresses
    or ranges here; each address or range would be prepended with a dash. If you wish
    to enter an individual IP address rather than a range, append `/32` to that IP
    address. You need to do this since Kubernetes expects IP ranges, and a range of
    `/32` equals a single IP address.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个文件与之前在本书中创建的服务非常相似。然而，在第 15 行和第 16 行中，你现在看到 `loadBalancerSourceRanges` 和添加你自己的公共
    IP 地址的选项。你可以在这里提供多个公共 IP 地址或范围；每个地址或范围前面会加上一个破折号。如果你希望输入单个 IP 地址而不是范围，则在该 IP 地址后附加
    `/32`。你需要这样做，因为 Kubernetes 期望的是 IP 范围，而 `/32` 的范围表示单个 IP 地址。
- en: 'To edit or add your own IP address in this file, use the following command:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要在此文件中编辑或添加你自己的 IP 地址，请使用以下命令：
- en: '[PRE30]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In the resulting application, use the arrow keys to navigate to the bottom
    line, hit the *i* button to enter `insert` mode, remove the placeholder, add in
    your IP address, and then append that with `/32`. To close and save the file,
    hit the *Esc* key, type `:wq!` to write and close the file, and finally hit *Enter*.
    An example is shown in *Figure 11.29*:'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在生成的应用程序中，使用箭头键导航到底部，按下 *i* 键进入 `insert` 模式，删除占位符，添加你的 IP 地址，然后在后面加上 `/32`。要关闭并保存文件，按
    *Esc* 键，输入 `:wq!` 写入并关闭文件，最后按 *Enter* 键。示例如 *图 11.29* 所示：
- en: '![Editing the front-end-service-secured.yaml file by adding your own IP](img/B17338_11_29.jpg)'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![通过添加你自己的 IP 编辑 front-end-service-secured.yaml 文件](img/B17338_11_29.jpg)'
- en: 'Figure 11.29: An example of the front-end-service-secured.yaml file with an
    IP address'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.29：带有 IP 地址的 front-end-service-secured.yaml 文件示例
- en: 'You can update the exiting service that was deployed before using the following
    command:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用以下命令更新之前部署的现有服务：
- en: '[PRE31]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This will cause AKS to update the NSG linked to this cluster to only allow
    traffic from your public IP address. You can confirm this by browsing to the IP
    address of the service again, and you should see the guestbook application. However,
    if you retry the command from earlier from the VM, you should see it eventually
    time out:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将导致 AKS 更新与此集群关联的 NSG，只允许来自你的公共 IP 地址的流量。你可以通过再次浏览服务的 IP 地址来确认这一点，你应该能够看到 guestbook
    应用程序。然而，如果你从虚拟机中重试之前的命令，你会看到连接最终超时：
- en: '[PRE32]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This will time out after 2 minutes, with an output similar to *Figure 11.30*:'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将在 2 分钟后超时，输出类似于 *图 11.30* 所示：
- en: '![The connection from within the VM times out](img/B17338_11_30.jpg)'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![虚拟机内的连接超时](img/B17338_11_30.jpg)'
- en: 'Figure 11.30: The connection from within the VM times out'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.30：虚拟机内的连接超时
- en: You can verify the NSG configuration in Azure itself as well. To verify this,
    look for Network security groups via the Azure search bar, as shown in *Figure
    11.31*:![Searching for network security group in the Azure search bar](img/B17338_11_31.jpg)
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以在 Azure 中验证 NSG 配置。要验证这一点，通过 Azure 搜索栏查找网络安全组，如 *图 11.31* 所示：![在 Azure 搜索栏中搜索网络安全组](img/B17338_11_31.jpg)
- en: 'Figure 11.31: Navigating to Network security groups through the Azure portal'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.31：通过 Azure 门户导航到网络安全组
- en: In the resulting pane, you should see two NSGs. Select the one whose name starts
    with aks-agentpool, as shown in *Figure 11.32*:![Selecting the desired NSG from
    the NSG page](img/B17338_11_32.jpg)
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生成的面板中，你应该能看到两个 NSG。选择名称以 aks-agentpool 开头的一个，如 *图 11.32* 所示：![从 NSG 页面选择所需的
    NSG](img/B17338_11_32.jpg)
- en: 'Figure 11.32: Selecting the aks-agentpool NSG'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.32：选择 aks-agentpool NSG
- en: In the resulting detailed view of that NSG, you should see a rule that allows
    traffic from your IP address to the service's public IP address, as you can see
    in *Figure 11.33*:![The NSG contains a rule that allows traffic only from the
    public IP defined earlier](img/B17338_11_33.jpg)
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该 NSG 的详细视图中，你应该能看到一个规则，允许来自你的 IP 地址到服务公共 IP 地址的流量，如 *图 11.33* 所示：![NSG 包含一个规则，只允许来自先前定义的公共
    IP 的流量](img/B17338_11_33.jpg)
- en: 'Figure 11.33: The NSG contains a rule that allows traffic only from the public
    IP defined earlier'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.33：NSG 包含一个规则，只允许来自先前定义的公共 IP 的流量
- en: Notice how this rule was created and is managed by AKS; you didn't have to create
    this yourself.
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，这个规则是由 AKS 创建并管理的；你不需要自己创建这个规则。
- en: 'Here, we''ve concluded this example. Let''s clean up the deployment, the VM,
    and the private cluster. From within the VM, delete the application using the
    following command:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里，我们已经完成了这个示例。现在清理部署、虚拟机（VM）和私有集群。在虚拟机内，使用以下命令删除应用程序：
- en: '[PRE33]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Then, exit out of the VM using the `exit` command. This will return you to
    Cloud Shell. Here, you can go ahead and delete the private cluster and the VM
    you used to connect to it:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，使用 `exit` 命令退出虚拟机。这将把你带回到 Cloud Shell。现在，你可以删除私有集群和用于连接的虚拟机：
- en: '[PRE34]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: By adding additional configuration to a Kubernetes service, you were able to
    limit who was able to connect to your service. You were able to confirm that only
    the public IP that was allowed to connect to the service was able to connect to
    it. A connection not coming from this public IP address timed out.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向 Kubernetes 服务添加额外配置，你成功地限制了能够连接到你的服务的人。你能够确认，只有允许连接到该服务的公共 IP 地址才能连接，而来自其他
    IP 地址的连接则会超时。
- en: This is an example of protecting what is called north-south traffic, meaning
    traffic coming from the outside to your cluster. You can also add additional protections
    to east-west traffic, meaning traffic inside your cluster. To do this, you will
    use a feature called network policies in Kubernetes. You will do that in the next
    section.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个保护所谓的北南流量的示例，意味着来自外部到你集群的流量。你还可以为东西流量提供额外的保护，即集群内部的流量。为此，你将使用 Kubernetes
    中的网络策略功能。你将在下一节中完成这项操作。
- en: Securing the workload network using network policies
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用网络策略保护工作负载网络
- en: In the previous section, you let Kubernetes configure an NSG in Azure to protect
    north-south traffic. This is a good practice for limiting the network traffic
    coming to your public services. In most scenarios, you will also need to protect
    the east-west traffic, meaning the traffic between your pods. That way, you can
    ensure that if a potential attacker were to get access to part of your application,
    they'd have limited ability to connect to other parts of the application or different
    applications. This is also known as protecting from lateral movement.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，你让 Kubernetes 在 Azure 中配置了一个 NSG 以保护北南流量。这是限制公共服务流量的好做法。在大多数情况下，你还需要保护东西流量，也就是在你的
    Pod 之间的流量。这样，你可以确保如果潜在的攻击者获取了你应用的一部分访问权限，他们就无法轻易连接到应用的其他部分或其他应用。这也被称为防止横向移动。
- en: To protect the traffic between pods, Kubernetes has a functionality called network
    policies. Network policies can be used to protect traffic from the outside to
    your pods, and from your pods to the outside, as well as traffic between pods.
    Since you have already learned about one way to protect traffic from the outside
    to your pods, in this section, you will learn how to use network policies to protect
    pod-to-pod traffic.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护 Pod 之间的流量，Kubernetes 提供了一种称为网络策略的功能。网络策略可以用来保护外部流量到你的 Pod、从你的 Pod 到外部的流量以及
    Pod 之间的流量。由于你已经学习了如何保护外部流量到你的 Pod，本节将介绍如何使用网络策略来保护 Pod 到 Pod 之间的流量。
- en: In AKS, network policies are something you need to configure on your cluster
    at cluster creation time (it is this way at the time of this writing). If your
    cluster has network policies enabled, you can create new network policy objects
    on your cluster. When there is no network policy selecting a certain pod, all
    traffic to and from that pod is allowed. When you apply a network policy to a
    pod, depending on the configuration, all traffic to and/or from that pod is blocked,
    except for the traffic allowed by that network policy.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AKS 中，网络策略是在集群创建时需要配置的（截至目前是这种情况）。如果你的集群启用了网络策略，你可以在集群中创建新的网络策略对象。当没有网络策略选择特定
    Pod 时，所有进入和离开该 Pod 的流量都将被允许。当你将网络策略应用于 Pod 时，根据配置，所有进入和/或离开该 Pod 的流量将被阻止，除非该网络策略允许该流量。
- en: 'Let''s try this out:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们试试看：
- en: 'Start by creating a new cluster with network policies enabled. In this example,
    you''ll create a cluster with Azure network policies enabled. You can create this
    new cluster using the following command:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个启用了网络策略的新集群。在这个示例中，你将创建一个启用了 Azure 网络策略的集群。你可以使用以下命令创建此新集群：
- en: '[PRE35]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Once the cluster is created, make sure to refresh the credentials to get access
    to the cluster. You can do this using the following command:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建集群后，请确保刷新凭据以获取对集群的访问权限。你可以使用以下命令来完成此操作：
- en: '[PRE36]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'This will prompt you to overwrite the existing credentials. You can confirm
    this by typing *y* in the two prompts, as shown in *Figure 11.34*:'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将提示你覆盖现有凭据。你可以通过在两个提示中输入 *y* 来确认，如*图 11.34*所示：
- en: '![Refresh the credentials by overwriting them to get access to the cluster](img/B17338_11_34.jpg)'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![通过覆盖凭据来刷新凭据，以便获取对集群的访问权限](img/B17338_11_34.jpg)'
- en: 'Figure 11.34: Getting credentials for the new cluster'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.34：获取新集群的凭据
- en: 'For this example, you will test connections between two web servers in a pod
    running `nginx`. The code for these has been provided in the `web-server-a.yaml`
    and `web-server-b.yaml` files. This is the code for `web-server-a.yaml`:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个示例中，你将测试运行 `nginx` 的 Pod 中两个 Web 服务器之间的连接。这些代码已提供在 `web-server-a.yaml` 和
    `web-server-b.yaml` 文件中。以下是 `web-server-a.yaml` 的代码：
- en: '[PRE37]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'This is the code for `web-server-b.yaml`:'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是 `web-server-b.yaml` 的代码：
- en: '[PRE38]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: As you can see in the code for each of the pods, each pod has a label app, `web-server`,
    and another label called `env`, with the value of each server (A for `web-server-a`
    and B for `web-server-b`). You will use these labels later in this example to
    selectively allow traffic between these pods.
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，每个 Pod 的代码中都有一个标签 app，`web-server`，以及另一个名为 `env` 的标签，值分别为每个服务器的标识（A 对应
    `web-server-a`，B 对应 `web-server-b`）。稍后你将在本示例中使用这些标签，以选择性地允许这些 Pod 之间的流量。
- en: 'To create both pods, use the following command:'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要创建这两个 Pod，使用以下命令：
- en: '[PRE39]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Verify that the pods are running before moving forward by running the following
    command:'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在继续之前，通过运行以下命令验证 Pod 是否正在运行：
- en: '[PRE40]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'This should return an output similar to *Figure 11.35*:'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回类似于 *图 11.35* 的输出：
- en: '![Verifying that both the created pods are running](img/B17338_11_35.jpg)'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![验证两个创建的 Pod 是否正在运行](img/B17338_11_35.jpg)'
- en: 'Figure 11.35: Both pods are running'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.35：两个 Pod 都在运行
- en: 'For this example, we''ll use the pod''s IP addresses to test the connection.
    Get the IP address for `web-server-b` using the following command:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本示例中，我们将使用 Pod 的 IP 地址来测试连接。使用以下命令获取 `web-server-b` 的 IP 地址：
- en: '[PRE41]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This should return an output similar to *Figure 11.36*, in which you''ll see
    the IP address highlighted:'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回类似于 *图 11.36* 的输出，其中你会看到突出显示的 IP 地址：
- en: '![Fetching the IP address of the web-server-bpod to test the connection](img/B17338_11_36.jpg)'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![获取 web-server-b Pod 的 IP 地址以测试连接](img/B17338_11_36.jpg)'
- en: 'Figure 11.36: Getting the IP address of web-server-b'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.36：获取 web-server-b 的 IP 地址
- en: 'Now, try to connect from `web-server-a` to `web-server-b`. You can test this
    connection using the following command:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，尝试从 `web-server-a` 连接到 `web-server-b`。你可以使用以下命令测试此连接：
- en: '[PRE42]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'This should return an output similar to *Figure 11.37*:'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回类似于 *图 11.37* 的输出：
- en: '![Verifying that web-server-a can connect to web-server-b](img/B17338_11_37.jpg)'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![验证 web-server-a 是否能连接到 web-server-b](img/B17338_11_37.jpg)'
- en: 'Figure 11.37: Verifying that web-server-a can connect to web-server-b'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.37：验证 web-server-a 是否能连接到 web-server-b
- en: 'Let''s now create a new `NetworkPolicy` object that will limit all traffic
    to and from the pods with the label app `web-server`. This policy has been provided
    in the `deny-all.yaml` file:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个新的 `NetworkPolicy` 对象，限制所有流量进出带有标签 app 为 `web-server` 的 Pod。此策略已在
    `deny-all.yaml` 文件中提供：
- en: '[PRE43]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Let''s explore what''s contained in this code:'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们探索一下代码中包含的内容：
- en: '`NetworkPolicy` object.'
  id: totrans-257
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NetworkPolicy` 对象。'
- en: '`app: web-server`.'
  id: totrans-258
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app: web-server`。'
- en: '**Lines 9-10**: Here, you define the allow rules. As you can see, you are not
    defining any allow rules, which will mean that all traffic will be blocked.'
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 9-10 行**：在这里，你定义了允许规则。正如你所看到的，你并没有定义任何允许规则，这意味着所有流量将被阻止。'
- en: Later in this example, you will add more specific ingress and egress rules to
    selectively allow traffic to flow.
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本示例稍后，你将添加更多具体的入口和出口规则，以选择性地允许流量流动。
- en: 'Let''s now create this network policy. You can do this using the following
    command:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建这个网络策略。你可以使用以下命令来创建：
- en: '[PRE44]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This will return an output similar to *Figure 11.38*:'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于 *图 11.38* 的输出：
- en: '![Creating a network policy](img/B17338_11_38.jpg)'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建网络策略](img/B17338_11_38.jpg)'
- en: 'Figure 11.38: Creating the network policy'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.38：创建网络策略
- en: Let's now test the connection between `web-server-a` and `web-server-b` again.
    You can test this using the following command.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们再次测试 `web-server-a` 和 `web-server-b` 之间的连接。你可以使用以下命令进行测试。
- en: '[PRE45]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'This should return an output similar to *Figure 11.39*:'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回类似于 *图 11.39* 的输出：
- en: '![Traffic is no longer flowing between web-server-a and web-server-b](img/B17338_11_39.jpg)'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![流量不再在 web-server-a 和 web-server-b 之间流动](img/B17338_11_39.jpg)'
- en: 'Figure 11.39: Traffic is no longer flowing between web-server-a and web-server-b'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.39：流量不再在 web-server-a 和 web-server-b 之间流动
- en: 'You will now create another network policy that will selectively allow traffic
    from `web-server-a` to `web-server-b`. This policy is included in the `allow-a-to-b.yaml`
    file:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将创建另一个网络策略，选择性地允许从 `web-server-a` 到 `web-server-b` 的流量。此策略包含在 `allow-a-to-b.yaml`
    文件中：
- en: '[PRE46]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Let''s explore the difference in this file versus the earlier network policy
    in more depth:'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们更深入地探索该文件与早期网络策略之间的差异：
- en: '`env: A`.'
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`env: A`。'
- en: '`env: B`.'
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`env: B`。'
- en: 'Also, note that you are creating this network policy with a new name. This
    means you will have two network policies active on your cluster selecting the
    pods with the label `app: web-server`. Both the `deny-all` and `allow-a-to-b`
    network policies will be present on your cluster, and both apply to pods with
    the label `app: web-server`. Network policies, by design, are additive, meaning
    that if any one of the policies allows the traffic, the traffic will be allowed.'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '同时请注意，你正在以一个新名称创建这个网络策略。这意味着你将在集群中激活两个网络策略，选择带有标签`app: web-server`的 pod。`deny-all`和`allow-a-to-b`两个网络策略都将在你的集群中存在，并且都适用于标签为`app:
    web-server`的 pod。网络策略本质上是累加的，这意味着如果其中任何一个策略允许流量，那么该流量就会被允许。'
- en: 'Let''s create this policy using the following command:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用以下命令创建这个策略：
- en: '[PRE47]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'This will return an output similar to *Figure 11.40*:'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于*图 11.40*的输出：
- en: '![Creating a new network policy to allow traffic from web-server-a to web-server-b](img/B17338_11_40.jpg)'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建一个新的网络策略，允许来自 web-server-a 的流量到 web-server-b](img/B17338_11_40.jpg)'
- en: 'Figure 11.40: Creating a new network policy to allow traffic from web-server-a
    to web-server-b'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.40：创建一个新的网络策略，允许来自 web-server-a 的流量到 web-server-b
- en: 'Let''s test the connection between `web-server-a` and `web-server-b` again.
    You can test this by applying the following command:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们再次测试`web-server-a`和`web-server-b`之间的连接。你可以通过应用以下命令来进行测试：
- en: '[PRE48]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'This should return an output similar to *Figure 11.41*:'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回类似于*图 11.41*的输出：
- en: '![Traffic is flowing again between web-server-a and web-server-b](img/B17338_11_41.jpg)'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![流量再次在 web-server-a 和 web-server-b 之间流动](img/B17338_11_41.jpg)'
- en: 'Figure 11.41: Traffic is again allowed from web-server-a to web-server-b'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.41：流量再次被允许从 web-server-a 到 web-server-b
- en: 'You have now allowed traffic from `web-server-a` to `web-server-b`. You have,
    however, not allowed the traffic to pass the other way, meaning traffic from `web-server-b`
    to `web-server-a` is blocked. Let''s test this as well. To test this, get the
    IP address of `web-server-a` using the following command:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在已经允许了来自`web-server-a`到`web-server-b`的流量。然而，你并没有允许流量反向通过，这意味着从`web-server-b`到`web-server-a`的流量被阻止了。我们也来测试一下。要进行测试，使用以下命令获取`web-server-a`的
    IP 地址：
- en: '[PRE49]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'This will return an output similar to *Figure 11.42*, where the IP address
    of `web-server-a` has been highlighted:'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于*图 11.42*的输出，其中`web-server-a`的 IP 地址已被高亮显示：
- en: '![Getting the IP address of web-server-a](img/B17338_11_42.jpg)'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![获取 web-server-a 的 IP 地址](img/B17338_11_42.jpg)'
- en: '[PRE50]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'This should return an output similar to *Figure 11.43*:'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该返回类似于*图 11.43*的输出：
- en: '![Output showing that traffic is not allowed from web-server-b to web-server-a](img/B17338_11_43.jpg)'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![输出显示从 web-server-b 到 web-server-a 的流量未被允许](img/B17338_11_43.jpg)'
- en: 'Figure 11.43: Traffic from web-server-b to web-server-a is not allowed, as
    expected'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.43：从 web-server-b 到 web-server-a 的流量未被允许，符合预期
- en: As you can see in *Figure 11.43*, the traffic from `web-server-b` to `web-server-a`
    times out, showing you that the traffic is blocked.
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如你在*图 11.43*中看到的，从`web-server-b`到`web-server-a`的流量超时，显示该流量被阻止。
- en: 'This concludes the example regarding network policies in Azure. In the next
    chapter, you will create a new cluster again, so to conclude this chapter, it
    is safe to delete this cluster with network policies enabled, using the following
    command:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这结束了关于 Azure 网络策略的示例。在下一章中，你将再次创建一个新的集群，因此，作为本章的结尾，安全删除启用了网络策略的集群，使用以下命令：
- en: '[PRE51]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: You have now used network policies to protect traffic between pods. You saw
    how a default policy will deny all traffic, and how you can add new policies to
    selectively allow traffic. You also saw that if you allow traffic from one pod
    to another, that the inverse is not automatically allowed.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经使用网络策略来保护 pod 之间的流量。你看到了默认策略如何拒绝所有流量，以及如何添加新策略来选择性地允许流量。你还看到，如果允许一个 pod
    到另一个 pod 的流量，反向流量不会自动被允许。
- en: Summary
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小结
- en: This chapter introduced you to multiple network security options in AKS. You
    explored both securing the control plane and the workload in the cluster.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了 AKS 中的多种网络安全选项。你探讨了如何保护控制平面和集群中的工作负载。
- en: To secure the control plane, you first used authorized IP ranges to verify that
    only allowed public IP addresses can access the control plane of your cluster.
    After that, you created a new private cluster, which was only reachable using
    a private connection. You connected to that private cluster using Azure Private
    Link.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护控制平面，你首先使用授权的IP范围验证只有允许的公共IP地址能够访问集群的控制平面。之后，你创建了一个新的私有集群，该集群只能通过私有连接访问。你使用Azure
    Private Link连接到这个私有集群。
- en: After that, you also explored workload network security. Initially, you deployed
    a public service, which was available for all users. You then had AKS configure
    Azure NSGs to secure that service only to an allowed connection. You verified
    that you could connect to the service from your machine, but not from a VM in
    Azure, as expected. Finally, you also configured Kubernetes network policies in
    a new cluster. You used those to protect pod-to-pod traffic and were able to secure
    traffic between different pods on your cluster.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，你还探讨了工作负载网络安全。最初，你部署了一个公共服务，该服务对所有用户开放。然后，你让AKS配置Azure NSGs，仅允许特定的连接访问该服务。你验证了可以从你的机器连接到该服务，但无法从Azure中的虚拟机连接，符合预期。最后，你还在一个新集群中配置了Kubernetes网络策略。你利用这些策略来保护Pod之间的流量，成功地确保了集群中不同Pod之间的流量安全。
- en: In the next chapter, you will learn how you can use AKS to create Azure resources,
    such as an Azure Database for MySQL, using the Azure Service Operator.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何使用AKS通过Azure Service Operator创建Azure资源，例如Azure MySQL数据库。
