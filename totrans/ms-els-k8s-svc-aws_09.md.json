["```\n---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\nmetadata:\n  name: myipv6cluster\n  region: \"eu-central-1\"\n  version: \"1.21\"\nkubernetesNetworkConfig:\n  ipFamily: IPv6\naddons:\n  - name: vpc-cni\n    version: latest\n  - name: coredns\n    version: latest\n  - name: kube-proxy\n    version: latest\niam:\n  withOIDC: true\nmanagedNodeGroups:\n  - name: ipv6mng\n    instanceType: t3.medium\n```", "```\n$ eksctl create cluster -f myipv6cluster.yaml\n```", "```\n$ kubectl get nodes -o wide\n```", "```\nNAME  STATUS   ROLES    AGE   VERSION  INTERNAL-IP EXTERNAL-IP\nip-192-168-3-11.eu-central-1.compute.internal Ready <none>   27h   v1.21.12-eks-5308cf7   2a05:d014:ec6:2f00:4e36:b47b:c13f:cb1f   52.58.98.70\nip-192-168-90-100.eu-central-1.compute.internal   Ready    <none>   27h   v1.21.12-eks-5308cf7   2a05:d014:ec6:2f02:2d4c:d5df:4eb5:cb86   18.195.1.196\n```", "```\n$ kubectl get pods -n kube-system -o wide\nNAME     READY   STATUS    RESTARTS   AGE   IP   …\naws-node-qvqpx  1/1     Running   0   15h   2a05:d014:ec6:2f00:4e36:b47b:c13f:cc1f\naws-node-wkr9g  1/1     Running   1   15h   2a05:d014:ec6:2f02:2d4c:d5df:4eb5:c686\ncoredns-745979c988-7qqmr 1/1 Running   0   15h   2a05:d014:ec6:2f00:8207::\ncoredns-745979c988-hzxx8 1/1 Running   0   15h   2a05:d014:ec6:2f00:8207::1\nkube-proxy-2rh47        1/1 Running   0   15h   2a05:d014:ec6:2f02:2d4c:d5df:4eb5:c686\nkube-proxy-vwzp9     1/1 Running   0   15h   2a05:d014:ec6:2f00:4e36:b47b:c13f:cc1f\n```", "```\nNAME    READY   STATUS    RESTARTS   AGE\nsimple-web-99b67d675-4t68q   1/1     Running   0          11s   2a05:d014:ec6:2f00:8207::2\nsimple-web-99b67d675-vl6hk   1/1     Running   0          11s   2a05:d014:ec6:2f02:b49c::\n```", "```\n$ kubectl run -i --tty busybox --image=busybox --restart=Never -- sh\n```", "```\n$ ifconfig\neth0\nLink encap:Ethernet  HWaddr AA:1D:5F:F0:B6:C7\ninet6 addr: 2a05:d014:ec6:2f02:b49c::2/128 Scope:Global\n……\nv4if0\nLink encap:Ethernet  HWaddr 5A:FE:0E:46:EC:D9\ninet addr:169.254.172.4  Bcast:169.254.175.255  Mask:255.255.252.0\n$ netstat -rn\nKernel IP routing table\nDestination     Gateway         Genmask         … Iface\n0.0.0.0         169.254.172.1   0.0.0.0         … v4if0\n169.254.172.0   169.254.172.1   255.255.252.0   … v4if0\n169.254.172.1   0.0.0.0         255.255.255.255 … v4if0\n```", "```\n---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\nmetadata:\n  name: myipv4cluster\n  region: \"eu-central-1\"\n  version: \"1.19\"\nkubernetesNetworkConfig:\n  ipFamily: IPv4\naddons:\n  - name: vpc-cni\n    version: latest\n  - name: coredns\n    version: latest\n  - name: kube-proxy\n    version: latest\niam:\n  withOIDC: true\nmanagedNodeGroups:\n  - name: ipv4mng\n    instanceType: t3.medium\n```", "```\n$ eksctl create cluster -f myipv4cluster.yaml\n```", "```\n$ aws eks update-kubeconfig --name myipv4cluster\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/master/config/master/calico-operator.yaml\n```", "```\napiVersion: operator.tigera.io/v1\nkind: Installation\nmetadata:\n  name: default\n  annotations:\n    \"helm.sh/hook\": post-install\nspec:\n  cni:\n    type: AmazonVPC\n```", "```\n$ kubectl get tigerastatus/calico\nNAME     AVAILABLE   PROGRESSING   DEGRADED   SINCE\ncalico   True        False         False      11m\n```", "```\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: deploy1\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: deploy2\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: deploy1\n  namespace: deploy1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: deploy1\n  template:\n    metadata:\n      labels:\n        app: deploy1\n    spec:\n      containers:\n        - name: busybox\n          image: busybox\n          imagePullPolicy: IfNotPresent\n          command: ['sh', '-c', 'echo Running ; sleep 3600']\n```", "```\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: deploy2\n  namespace: deploy2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: deploy2\n  template:\n    metadata:\n      labels:\n        app: deploy2\n    spec:\n      containers:\n        - name: busybox\n          image: busybox\n          imagePullPolicy: IfNotPresent\n          command: ['sh', '-c', 'echo Running ; sleep 3600']\n```", "```\n$ kubectl get po -o wide -n deploy1\nNAME  READY   STATUS    RESTARTS   AGE   IP    …\ndeploy1-111  1/1  Running   0 69s   192.168.42.16 ….\n```", "```\n$ kubectl exec --stdin --tty <pod-name> -n deploy2 -- sh\n```", "```\n$ ping -c 5 192.168.42.16\nPING 192.168.42.16 (192.168.42.16): 56 data bytes\n64 bytes from 192.168.42.16: seq=0 ttl=254 time=0.110 ms\n…..\n```", "```\n---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\n  namespace: deploy2\nspec:\n  podSelector:\n    matchLabels: {}\n  policyTypes:\n  - Egress\n```", "```\n$ ping -c 5 192.168.42.16\nPING 192.168.42.16 (192.168.42.16): 56 data bytes\n```", "```\n{\"cniVersion\": \"0.4.0\",\n  \"name\": \"aws-cni\",\n  \"disableCheck\": true,\n  \"plugins\": [\n    {\n      \"name\": \"aws-cni\",\n      \"type\": \"aws-cni\",\n…\npluginLogFile\": \"/var/log/aws-routed-eni/plugin.log\",\n…},\n    {\n      \"name\": \"egress-v4-cni\",\n      \"type\": \"egress-v4-cni\",\n      …},\n    {\n      \"type\": \"portmap\",\n      \"capabilities\": {\"portMappings\": true},\n      \"snat\": true }]\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/master/config/multus/v3.7.2-eksbuild.1/aws-k8s-multus.yaml\n```", "```\n$ kubectl get ds kube-multus-ds -n kube-system\nNAME             DESIRED   CURRENT   READY   …\nkube-multus-ds   2         2         2       …\n```", "```\n{\n      \"cniVersion\": \"0.3.1\",\n      \"name\": \"multus-cni-network\",\n      \"type\": \"multus\",\n      \"capabilities\": {\n           \"portMappings\": true},\n…\n      \"delegates\": [{\n           \"cniVersion\": \"0.4.0\",\n           \"name\": \"aws-cni\",\n           \"disableCheck\": true,\n            \"plugins\": [{\n                \"name\": \"aws-cni\",\n                \"type\": \"aws-cni\",\n                 ….\n           }, {\n                \"name\": \"egress-v4-cni\",\n                \"type\": \"egress-v4-cni\",\n               …\n           }, {\n                \"type\": \"portmap\",\n…\n                 },\n                 \"snat\": true }]}]}\n```", "```\nAWSTemplateFormatVersion: \"2010-09-09\"\nResources:\n   multusSec:\n      Type: AWS::EC2::SecurityGroup\n      Properties:\n         GroupDescription: Multus security group\n         GroupName: multus\n         VpcId: <MYVPC>\n```", "```\n   private1:\n      Type: AWS::EC2::NetworkInterface\n      Properties:\n         Description: Interface 1 in az-a.\n         Tags:\n          - Key: multus\n            Value: true\n          - Key: Zone\n            Value: <AZ-a>\n          - Key:  node.k8s.amazonaws.com/no_manage\n            Value: true\n          - Key: cluster\n            Value: <myclustername>\n         SourceDestCheck: 'false'\n         GroupSet:\n         - !Ref multusSec\n         SubnetId: <private subnet ID>\n```", "```\n   private2:\n      Type: AWS::EC2::NetworkInterface\n      Properties:\n         Description: Interface 1 in az-b.\n         Tags:\n          - Key: multus\n            Value: true\n          - Key: Zone\n            Value: <AZ-b>\n          - Key:  node.k8s.amazonaws.com/no_manage\n            Value: true\n          - Key: cluster\n            Value: <myclustername>\n         SourceDestCheck: 'false'\n         GroupSet:\n         - !Ref multusSec\n         SubnetId: <private subnet ID>\n```", "```\n   private3:\n      Type: AWS::EC2::NetworkInterface\n      Properties:\n         Description: Interface 1 in az-c.\n         Tags:\n          - Key: multus\n            Value: true\n          - Key: Zone\n            Value: <AZ-c>\n          - Key:  node.k8s.amazonaws.com/no_manage\n            Value: true\n          - Key: cluster\n            Value: <myclustername>\n         SourceDestCheck: 'false'\n         GroupSet:\n         - !Ref multusSec\n         SubnetId: <private subnet ID>\n```", "```\n$ ifconfig -a\n```", "```\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001\ninet 192.168.27.63  netmask 255.255.224.0  broadcast 192.168.31.255\n…..\neth1: flags=4098<BROADCAST,MULTICAST>  mtu 1500\nether 02:4f:d3:c2:fb:0e  txqueuelen 1000  (Ethernet)\n……\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\ninet 127.0.0.1  netmask 255.0.0.0\n….\n```", "```\n$ sudo ip link set eth1 name multus\n```", "```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: ipvlan-private-a\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"ipvlan\",\n      \"master\": \"multus\",\n      \"mode\": \"l3\",\n      \"ipam\": {\n        \"type\": \"host-local\",\n        \"subnet\": \"192.168.96.0/19\",\n        \"rangeStart\": \"192.168.96.20\",\n        \"rangeEnd\": \"192.168.96.40\",\n        \"gateway\": \"192.168.96.1\"\n      }\n    }'\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: multus-pod\n  annotations:\n      k8s.v1.cni.cncf.io/networks: ipvlan-private-a\nspec:\n  nodeSelector:\n    topology.kubernetes.io/zone: eu-central-1a\n  containers:\n        - name: busybox\n          image: busybox\n          imagePullPolicy: IfNotPresent\n          command: ['sh', '-c', 'echo Container 1 is Running ; sleep 3600']\n```", "```\n$ kubectl get pod -o=custom-columns=NODE:.spec.nodeName,NAME:.metadata.name\n```", "```\n$ kubectl exec --stdin --tty multus-pod  -- sh\n# ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n3: eth0@if23: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 9001 qdisc noqueue\n    link/ether 96:f4:8f:ef:82:92 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.14.60/32 scope global eth0\n4: net1@if15: <BROADCAST,MULTICAST,NOARP,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue\n    link/ether 02:4f:d3:c2:fb:0e brd ff:ff:ff:ff:ff:ff\n    inet 192.168.96.20/19 brd 192.168.127.255 scope global net1\n```", "```\n$ aws ec2 assign-private-ip-addresses --network-interface-id <multus ENI-ID> --private-ip-addresses 192.168.96.30\n```"]