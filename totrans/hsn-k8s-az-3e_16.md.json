["```\n    Watch kubectl get nodes\n    ```", "```\n    curl icanhazip.com\n    ```", "```\n    watch kubectl get nodes\n    ```", "```\n    az aks delete -n handsonaks -g rg-handsonaks -y\n    ```", "```\n    az network vnet create -o table \\\n        --resource-group rg-handsonaks \\\n        --name vnet-handsonaks \\\n        --address-prefixes 192.168.0.0/16 \\\n        --subnet-name akssubnet \\\n        --subnet-prefix 192.168.0.0/24\n    ```", "```\n    VNET_SUBNET_ID='az network vnet subnet show \\\n      --resource-group rg-handsonaks \\\n      --vnet-name vnet-handsonaks \\\n      --name akssubnet --query id -o tsv'\n    ```", "```\n    az identity create --name handsonaks-mi \\\n      --resource-group rg-handsonaks\n    IDENTITY_CLIENTID='az identity show --name handsonaks-mi \\\n      --resource-group rg-handsonaks \\\n      --query clientId -o tsv'\n    az role assignment create --assignee $IDENTITY_CLIENTID \\\n      --scope $VNET_SUBNET_ID --role Contributor\n    IDENTITY_ID='az identity show --name handsonaks-mi \\\n      --resource-group rg-handsonaks \\\n      --query id -o tsv' \n    ```", "```\n    az aks create \\\n      --resource-group rg-handsonaks \\\n      --name handsonaks \\\n      --vnet-subnet-id $VNET_SUBNET_ID \\\n      --enable-managed-identity \\\n      --assign-identity $IDENTITY_ID \\\n      --enable-private-cluster \\\n      --node-count 1 \\\n      --node-vm-size Standard_DS2_v2 \\\n      --generate-ssh-keys\n    ```", "```\n    az aks get-credentials -n handsonaks -g rg-handsonaks\n    ```", "```\n    kubectl get nodes\n    ```", "```\n    az network vnet subnet create \\\n      --resource-group rg-handsonaks \\\n      --vnet-name vnet-handsonaks \\\n      --name vmsubnet \\\n      --address-prefix 192.168.1.0/24\n    VM_SUBNET_ID='az network vnet subnet show \\\n      --resource-group rg-handsonaks \\\n      --vnet-name vnet-handsonaks \\\n      --name vmsubnet --query id -o tsv'\n    az group create -l <your Azure location> \\\n      --name rg-handsonaks-vm\n    az vm create --name vm-handsonaks \\\n      --resource-group rg-handsonaks-vm \\\n      --image UbuntuLTS \\\n      --admin-username azureuser \\\n      --ssh-key-values ~/.ssh/id_rsa.pub \\\n      --subnet $VM_SUBNET_ID \\\n      --size Standard_D2_v2\n    ```", "```\n    scp ~/.kube/config azureuser@<public IP>:~\n    ```", "```\n    ssh azureuser@<public IP>\n    ```", "```\n    curl -LO https://dl.k8s.io/release/v1.20.0/bin/linux/amd64/kubectl\n    chmod +x kubectl \n    sudo mv ./kubectl /usr/local/bin/kubectl\n    ```", "```\n    mkdir .kube\n    mv config .kube/config\n    ```", "```\n    kubectl get nodes\n    ```", "```\n    kubectl cluster-info\n    nslookup <cluster FQDN>\n    ```", "```\n    az vm show -n vm-handsonaks \\\n      -g rg-handsonaks-vm -d --query publicIps\n    ```", "```\n    ssh azureuser@<public IP>\n    ```", "```\n    git clone https://github.com/PacktPublishing/Hands-on-Kubernetes-on-Azure-Third-Edition\n    ```", "```\n    cd Hands-On-Kubernetes-on-Azure-Third-Edition/Chapter11\n    ```", "```\n    1   apiVersion: v1\n    2   kind: Service\n    3   metadata:\n    4     name: frontend\n    5     annotations:\n    6       service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n    7     labels:\n    8       app: guestbook\n    9       tier: frontend\n    10  spec:\n    11    type: LoadBalancer\n    12    ports:\n    13    - port: 80\n    14    selector:\n    15      app: guestbook\n    16      tier: frontend\n    ```", "```\n    kubectl create -f guestbook-without-service.yaml\n    kubectl create -f front-end-service-internal.yaml\n    ```", "```\n    kubectl get service -w\n    ```", "```\n    curl <external IP>\n    ```", "```\n    kubectl delete -f front-end-service-internal.yaml\n    kubectl delete -f guestbook-without-service.yaml\n    ```", "```\n    kubectl apply -f guestbook-without-service.yaml\n    kubectl apply -f front-end-service.yaml\n    ```", "```\n    kubectl get service -w\n    ```", "```\n    curl <public IP>\n    ```", "```\n    1   apiVersion: v1\n    2   kind: Service\n    3   metadata:\n    4     name: frontend\n    5     labels:\n    6       app: guestbook\n    7       tier: frontend\n    8   spec:\n    9     type: LoadBalancer\n    10    ports:\n    11    - port: 80\n    12    selector:\n    13      app: guestbook\n    14      tier: frontend\n    15    loadBalancerSourceRanges:\n    16    - <your public IP address>\n    ```", "```\n    vi front-end-service-secured.yaml\n    ```", "```\n    kubectl apply -f front-end-service-secured.yaml\n    ```", "```\n    curl <public IP>\n    ```", "```\n    kubectl delete -f guestbook-without-service.yaml\n    kubectl delete -f front-end-service-secured.yaml\n    ```", "```\n    az group delete -n rg-handsonaks-vm -y\n    az aks delete -g rg-handsonaks -n handsonaks -y\n    ```", "```\n    az aks create \\\n      --resource-group rg-handsonaks \\\n      --name handsonaks \\\n      --enable-managed-identity \\\n      --node-count 2 \\\n      --node-vm-size Standard_DS2_v2 \\\n      --generate-ssh-keys \\\n      --network-plugin azure \\\n      --network-policy azure\n    ```", "```\n    az aks get-credentials -g rg-handsonaks -n handsonaks\n    ```", "```\n    1   apiVersion: v1\n    2   kind: Pod\n    3   metadata:\n    4     name: web-server-a\n    5     labels:\n    6       app: web-server\n    7       env: A\n    8   spec:\n    9     containers:\n    10    - name: webserver\n    11      image: nginx:1.19.6-alpine\n    ```", "```\n    1   apiVersion: v1\n    2   kind: Pod\n    3   metadata:\n    4     name: web-server-b\n    5     labels:\n    6       app: web-server\n    7       env: B\n    8   spec:\n    9     containers:\n    10    - name: webserver\n    11      image: nginx:1.19.6-alpine\n    ```", "```\n    kubectl create -f web-server-a.yaml\n    kubectl create -f web-server-b.yaml\n    ```", "```\n    kubectl get pods -w\n    ```", "```\n    kubectl get pods -o wide\n    ```", "```\n    kubectl exec -it web-server-a -- \\\n      wget -qO- -T 2 http://<web-server-b IP>\n    ```", "```\n    1   kind: NetworkPolicy\n    2   apiVersion: networking.k8s.io/v1\n    3   metadata:\n    4     name: deny-all\n    5   spec:\n    6     podSelector:\n    7       matchLabels:\n    8         app: web-server\n    9     ingress: []\n    10    egress: []\n    ```", "```\n    kubectl create -f deny-all.yaml\n    ```", "```\n    kubectl exec -it web-server-a -- \\\n      wget -qO- -T 2 http://<web-server-b IP>\n    ```", "```\n    1   kind: NetworkPolicy\n    2   apiVersion: networking.k8s.io/v1\n    3   metadata:\n    4     name: allow-a-to-b\n    5   spec:\n    6     podSelector:\n    7       matchLabels:\n    8         app: web-server\n    9     ingress:\n    10    - from:\n    11      - podSelector:\n    12          matchLabels:\n    13            env: A\n    14    egress:\n    15    - to:\n    16      - podSelector:\n    17          matchLabels:\n    18            env: B\n    ```", "```\n    kubectl create -f allow-a-to-b.yaml\n    ```", "```\n    kubectl exec -it web-server-a -- \\\n      wget -qO- -T 2 http://<web-server-b IP>\n    ```", "```\n    kubectl get pods -o wide\n    ```", "```\n    kubectl exec -it web-server-b -- \\\n      wget -qO- -T 2 http://<web-server-a IP>\n    ```", "```\n    az aks delete -n handsonaks -g rg-handsonaks -y\n    ```"]