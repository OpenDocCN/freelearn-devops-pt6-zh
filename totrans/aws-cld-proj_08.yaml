- en: <st c="0">8</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="2">Building a Business Intelligence Application</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="46">In today’s digital era, businesses generate massive amounts of data
    from various sources, including websites, mobile apps, and online transactions.</st>
    <st c="195">One such data source is</st> **<st c="219">clickstream data</st>**<st
    c="235">, which</st> <st c="243">refers to the record of user interactions and
    activities on websites or applications.</st> <st c="329">Analyzing clickstream
    data can provide valuable insights into user behavior, preferences, and pain points,
    enabling businesses to tailor their products, services, and marketing strategies
    to better meet</st> <st c="532">customer needs.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="547">In this chapter, we’ll explore how to build a business intelligence
    application using native AWS services to analyze clickstream data.</st> <st c="683">We’ll
    cover the entire process, from data ingestion and storage to data transformation,
    querying,</st> <st c="781">and visualization.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="799">In summary, this chapter covers the following topics</st> <st c="853">in
    order:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="862">What you are going to build – a business</st> <st c="904">intelligence
    application</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="928">How you are going to build it – using Glue, Athena,</st> <st c="981">and
    QuickSight</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="995">Actually building it – through CloudFormation and using the</st>
    <st c="1056">AWS console</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1067">How to improve the solution – automate the ETL pipeline and data
    life</st> <st c="1138">cycle management</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="1154">By the end of this chapter, you will have gained hands-on experience
    in building an end-to-end business intelligence application using AWS services
    to analyze</st> <st c="1314">clickstream data.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1331">Technical requirements</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1354">To follow along with this chapter and implement your own business
    intelligence application, you need to have access to an AWS account.</st> <st
    c="1490">Additionally, this book has a dedicated folder within its GitHub repository
    where you can find the necessary code for provisioning all the infrastructure
    and the additional files that will be used throughout the</st> <st c="1702">chapter:</st>
    [<st c="1711">https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter8/code</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter8/code)<st
    c="1788">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1789">Scenario</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1798">You are the</st> <st c="1811">owner of an e-commerce website that
    sells a wide range of products, from electronics to fashion items.</st> <st c="1914">Your
    website has been operational for a few years, and over time, you have managed
    to build a sizable customer base.</st> <st c="2031">However, you have noticed
    that your conversion rates (the percentage of visitors who make a purchase) have
    been stagnant, and you are unsure of the reasons behind</st> <st c="2194">this
    trend.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2205">To improve your conversion rates and enhance the overall user experience
    on your website, you have decided to analyze the clickstream data generated by
    your users.</st> **<st c="2370">Clickstream data</st>** <st c="2386">refers</st>
    <st c="2393">to the record of user interactions and activities on your website,
    such as the pages visited, the links clicked, the products viewed, and the time
    spent on</st> <st c="2550">each page.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2560">By analyzing this data, you aim to gain valuable insights into
    user behavior and preferences, which can help you identify potential bottlenecks,
    pain points, and areas for improvement in your website’s user experience.</st>
    <st c="2780">Additionally, you hope to uncover patterns and trends that can guide
    your marketing and product development strategies, leading to increased conversions</st>
    <st c="2933">and revenue.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="2945">Requirements</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="2958">As you have done until this part, gathering the requirements should
    be the starting point.</st> <st c="3050">Considering your current scenario, your
    objective is to analyze the clickstream data, and there are two different profiles
    with diverse backgrounds and technical skills that want to extract information
    from</st> <st c="3257">your data:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="3267">Business analysts</st>**<st c="3285">: Business analysts do
    not feel confident creating and running SQL queries and look for a more visual
    alternative to explore</st> <st c="3411">the data.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="3420">Technical users</st>**<st c="3436">: Technical users are familiar
    and comfortable with SQL and want to be able to run complex queries to answer</st>
    <st c="3546">specific questions.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="3565">Knowing the profiles and understanding how they will interact with
    your application is key for defining the functional and</st> <st c="3689">non-functional
    requirements.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3717">Functional requirements</st>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**<st c="3741">Functional requirements</st>** <st c="3765">outline</st> <st
    c="3774">the essential features, functions, and capabilities that the proposed
    solution must deliver to meet the desired objectives.</st> <st c="3898">In this
    case, the functional requirements should do</st> <st c="3950">the following:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3964">Extract information from</st> <st c="3990">clickstream data</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4006">Support geographic analysis and</st> <st c="4039">user distribution</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4056">Support on-demand updates to get the most</st> <st c="4099">up-to-date
    information</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4121">Have the ability to run ad hoc SQL queries for</st> <st c="4169">technical
    users</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4184">Have the capacity to store the clickstream</st> <st c="4228">data
    indefinitely</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4245">Non-functional requirements</st>
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**<st c="4273">Non-functional requirements</st>** <st c="4301">describe</st>
    <st c="4311">the qualitative characteristics and constraints that the proposed
    solution should adhere to, ensuring its overall quality and performance.</st>
    <st c="4450">In this specific case, the non-functional requirements stipulate</st>
    <st c="4515">the following:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4529">Limited</st> <st c="4538">maintenance effort</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4556">Cost-effectiveness</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="4575">Architecture patterns</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="4597">The AWS</st> <st c="4606">Architecture</st> <st c="4618">Center
    (</st>[<st c="4627">https://aws.amazon.com/architecture/</st>](https://aws.amazon.com/architecture/)<st
    c="4664">) offers a set of vetted solutions developed and built by experts from
    both AWS and AWS Partners, which can be considered as the starting point for your
    projects.</st> <st c="4828">For this use case, AWS has available a solution from
    the AWS Solutions Library</st> <st c="4907">called</st> **<st c="4914">Clickstream
    Analytics on AWS</st>**<st c="4942">:</st> [<st c="4945">https://aws.amazon.com/solutions/implementations/clickstream-analytics-on-aws/</st>](https://aws.amazon.com/solutions/implementations/clickstream-analytics-on-aws/)<st
    c="5023">. This solution focuses on the collection, ingestion, analysis, and visualization
    of clickstream data from websites and mobile applications, which is in line with
    this</st> <st c="5191">project’s scope.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5207">The blueprints and solutions should be fully functional due to
    the regular revisions conducted by AWS, but often each project has its own peculiarities,
    and they may require some level of customization.</st> <st c="5411">Regardless,
    these are always valuable resources and will save some time whenever you are starting
    a project from scratch, namely during the</st> <st c="5551">architecture</st>
    <st c="5564">design phase.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5577">Architecture</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="5590">As you have been</st> <st c="5608">doing since the first project
    of this book, you adopt a top-bottom approach, starting with the requirements,
    which should be completely agnostic and describe the functionalities and constraints
    you have in your application, down to the specific services that</st> <st c="5867">support
    it.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5878">Your business intelligence application can be decomposed into three
    layers, as shown in</st> *<st c="5967">Figure 8</st>**<st c="5975">.1</st>*<st
    c="5977">:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.1 – Business intelligence application layers](img/B22051_08_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="6026">Figure 8.1 – Business intelligence application layers</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6079">Let us briefly go over</st> <st c="6103">the</st> <st c="6106">details:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6115">Ingestion layer</st>**<st c="6131">: This collects and imports
    data from various sources into</st> <st c="6191">the system.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="6202">Processing layer</st>**<st c="6219">: This prepares, cleanses,
    and transforms the data</st> <st c="6271">for analysis.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**<st c="6284">Visualization layer</st>**<st c="6304">: This presents the processed
    data in a visually appealing and interactive</st> <st c="6379">manner for exploration</st>
    <st c="6403">and insights.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="6416">Comprehending the layers’ purposes and their respective roles in
    contributing to the overall application is key for defining the suitable services
    to be integrated</st> <st c="6581">within them.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6593">Simplicity and a minimum amount of maintenance effort are the two
    main pillars of your architecture considering the two types of personas you want
    to serve.</st> <st c="6751">You will need two ways of interacting with or exploring
    the data.</st> <st c="6817">Moreover, you don’t want to duplicate the data and
    create different sources for each of the profiles that are interacting with the
    clickstream data; so, for the data store, you want to adopt a solution that is
    versatile enough to integrate with both a SQL-like engine for exploration and
    a business intelligence solution</st> <st c="7138">for visualization.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7156">After some research, you start exploring Amazon QuickSight for
    the visualization layer, and Amazon Athena for running SQL queries over your clickstream
    data.</st> <st c="7315">To store the data, you decide to go with Amazon S3 since
    it integrates with both Amazon Athena and Amazon QuickSight and can be used without
    any constraints regarding the number of items to store.</st> <st c="7512">For
    the data transformations, you want a solution that does not require any infrastructure</st>
    <st c="7603">maintenance, and ideally, a tool where you could leverage your current
    Spark knowledge; so, you have chosen AWS Glue for your</st> <st c="7729">data
    pipelines.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7744">Considering all the points mentioned, you produce an initial architecture,
    as shown in</st> *<st c="7832">Figure 8</st>**<st c="7840">.2</st>*<st c="7842">.
    In summary, files are ingested into the</st> `<st c="7884">/raw</st>` <st c="7888">prefix
    of the bucket and processed by Glue into the</st> `<st c="7941">/results</st>`
    <st c="7949">prefix of the same bucket.</st> <st c="7977">Technical users query
    this data using Athena with SQL-like syntax, while business users get their insights
    from QuickSight in a</st> <st c="8105">visual format.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.2 – AWS architecture for your business intelligence application](img/B22051_08_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="8267">Figure 8.2 – AWS architecture for your business intelligence application</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8339">Now that you have outlined the high-level architecture, let us
    dive into the AWS services you have chosen to</st> <st c="8449">build this solution
    and understand how they align with the requirements that were</st> <st c="8531">previously
    established.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8554">AWS services</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="8567">As shown in</st> *<st c="8580">Figure 8</st>**<st c="8588">.2</st>*<st
    c="8590">, this</st> <st c="8597">architecture is composed of four main services.</st>
    <st c="8645">In this section, you will explore each of the building blocks and
    understand how they align with</st> <st c="8742">the requirements.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8759">Amazon Simple Storage Service (S3)</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="8794">In your business</st> <st c="8811">intelligence</st> <st c="8824">application
    architecture, you need a data store to persist massive amounts of objects or events,
    and you discover that S3 can be the ideal solution as the foundation for your
    data lake.</st> <st c="9011">S3 is designed to offer high durability with up to
    99.999999999% (11 9s) of durability, ensuring that your data remains intact and
    accessible even in the face of unexpected events or infrastructure failures, and
    high availability to guarantee a reliable solution for analytics and reporting
    purposes, as expected for a</st> <st c="9330">data lake.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9340">Moreover, scalability and cost-effectiveness were highlighted as
    part of the requirements, and S3 aligns with both tenets since it can store and
    analyze petabytes of data without worrying about capacity constraints or infrastructure
    provisioning, by automatically scaling upon need, with a</st> <st c="9631">pay-as-you-go
    model.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9651">Amazon S3 is the</st> <st c="9668">best</st> <st c="9674">fit for
    supporting your data lake, and you can learn more about why by reading this</st>
    <st c="9758">blog:</st> [<st c="9764">https://aws.amazon.com/blogs/big-data/tag/data-lake/</st>](https://aws.amazon.com/blogs/big-data/tag/data-lake/)<st
    c="9816">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9817">AWS Glue</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**<st c="9826">AWS Glue</st>** <st c="9835">is a serverless</st> <st c="9852">data
    integration</st> <st c="9869">service that makes it easy to discover, prepare,
    and combine data for analytics.</st> <st c="9950">In your business intelligence
    application architecture, AWS Glue is used for two key purposes:</st> **<st c="10045">extract,
    transform, and load</st>** <st c="10073">(</st>**<st c="10075">ETL</st>**<st c="10078">)
    jobs</st> <st c="10086">and the Glue</st> <st c="10099">Data Catalog.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10112">ETL is a crucial process in data integration, where data from
    various sources is extracted, transformed into a desired format, and loaded into
    a data store for analysis or reporting; in this case, it is loaded into S3\.</st>
    <st c="10332">AWS Glue provides a serverless Apache Spark environment to run ETL
    jobs without the need to provision or manage servers.</st> <st c="10453">ETL jobs
    in Glue can be defined using Python and executed further by Glue’s Apache</st>
    <st c="10536">Spark runtime.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10550">AWS Glue ETL jobs are highly scalable and cost-effective, as you
    only pay for the resources used during job execution.</st> <st c="10670">Additionally,
    Glue automatically provisions and manages the underlying Apache Spark clusters,
    eliminating the need for manual</st> <st c="10796">cluster management.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10815">The</st> **<st c="10820">Glue Data Catalog</st>** <st c="10837">is
    a</st> <st c="10842">centralized repository that stores metadata about data sources
    and acts as the only source of truth for data across</st> <st c="10959">your organization.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10977">In your application, the Glue Data Catalog is used to maintain
    metadata definitions for your data source, namely your data lake based</st> <st
    c="11112">on S3.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11118">The Glue Data Catalog seamlessly integrates with other AWS services,
    such as Amazon Athena, which is part of your architecture, enabling access and
    query data based on the metadata</st> <st c="11300">stored</st> <st c="11307">in</st>
    <st c="11310">the catalog.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11322">Amazon Athena</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**<st c="11336">Amazon Athena</st>** <st c="11350">is an interactive</st> <st
    c="11368">query</st> <st c="11375">service that makes it easy to analyze data
    in Amazon S3 using standard SQL.</st> <st c="11451">With Athena, you can run ad
    hoc queries or pre-defined SQL scripts directly against data stored in S3, without
    the need to load or transform the data into a separate</st> <st c="11617">data
    store.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11628">Its serverless approach eliminates the need to provision and manage
    infrastructure, allowing you to focus on data analysis rather than</st> <st c="11764">infrastructure
    management.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11790">As explained in the</st> *<st c="11811">AWS Glue</st>* <st c="11819">section,
    Athena seamlessly integrates with the AWS Glue Data Catalog, and by referencing
    the metadata in the Glue Data Catalog, Athena can understand the structure and
    location of your data in S3, enabling you to query the data using SQL without
    manual</st> <st c="12073">schema definitions.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12092">For the technical profiles that were introduced in the</st> *<st
    c="12148">Requirements</st>* <st c="12160">section, Athena is a great fit since
    it will enable them to run queries and answer complex questions in an ad</st>
    <st c="12271">hoc way.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12279">Amazon QuickSight</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**<st c="12297">Amazon QuickSight</st>** <st c="12315">is a</st> <st c="12321">cloud-based</st>
    <st c="12333">business intelligence service that enables organizations to create
    and deliver insightful visualizations and dashboards quickly and easily.</st>
    <st c="12473">In your business intelligence application architecture, you can
    leverage QuickSight as a powerful data visualization and reporting tool, empowering
    your business users with interactive and visually appealing dashboards for data
    exploration and decision-making, without the need for</st> <st c="12755">technical
    skills.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12772">QuickSight seamlessly integrates with various data sources, including
    Athena, eliminating the need for complex data movement or transformation processes.</st>
    <st c="12927">By leveraging QuickSight’s integration with Athena and the Glue
    Data Catalog, you can effortlessly visualize and explore data stored in your S3
    data lake, making it easier to</st> <st c="13102">derive insights.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13118">Overall, QuickSight solves the data exploration requirement for
    the non-technical users described in the</st> <st c="13224">requirements</st>
    <st c="13237">section.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13245">Coding the solution</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="13265">This project is divided into two parts; the data engineering part,
    where you will build the end-to-end workflow for collecting, transforming, and
    loading your data, and the second part, where you will build your first dashboard</st>
    <st c="13494">in QuickSight.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13508">Section 1 – Cloning the project</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="13540">To start, you will</st> <st c="13559">need to clone the Git repository
    associated with this book, as mentioned in the</st> *<st c="13640">Technical requirements</st>*
    <st c="13662">section.</st> <st c="13672">If you are following along with the
    previous chapters, you should already have the repository locally, but if this
    is not the case, you can clone it directly from Git or download it as a ZIP file
    if</st> <st c="13871">you prefer.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13882">Navigate to the</st> `<st c="13899">chapter8/code</st>` <st c="13912">folder,
    and inside, you will find</st> <st c="13947">two subfolders:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '`<st c="13962">platform</st>`<st c="13971">: This includes the CloudFormation
    template to deploy the main infrastructure for</st> <st c="14054">your application.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="14071">aux</st>`<st c="14075">: This contains a set of auxiliary files
    that will be used throughout</st> <st c="14146">the chapter.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="14158">Section 2 – Solution deployment</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="14190">The first step is to</st> <st c="14211">deploy the necessary infrastructure
    to support your application.</st> <st c="14277">As with some of the previous chapters,
    this can be done through the CloudFormation template found in the</st> `<st c="14382">/platform</st>`
    <st c="14391">folder.</st> *<st c="14400">Table 8.1</st>* <st c="14409">lists
    all the resources created by your template that map to the architecture presented
    in</st> *<st c="14501">Figure 8</st>**<st c="14509">.2</st>*<st c="14511">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '| **<st c="14512">Template</st>** | **<st c="14521">ch8-application-template.yaml</st>**
    |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="14551">Networking</st> | <st c="14562">1 VPC</st><st c="14568">1</st>
    <st c="14571">internet gateway</st><st c="14587">1</st> <st c="14590">public subnet</st>
    |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="14603">Data store</st> | <st c="14614">Amazon S3</st> |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="14624">Data processing</st> | <st c="14640">1</st> <st c="14643">Glue
    database</st><st c="14656">1</st> <st c="14659">Glue table</st><st c="14669">1</st>
    <st c="14672">Glue job</st> |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="14680">Others</st> | <st c="14687">1 parameter in</st> <st c="14703">Parameter
    Store</st><st c="14718">1</st> <st c="14721">EC2 instance</st> |'
  prefs: []
  type: TYPE_TB
- en: <st c="14733">Table 8.1 – CloudFormation template details</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="14777">As you have done in</st> <st c="14797">previous chapters, you
    will use CloudFormation to provision the necessary infrastructure to support</st>
    <st c="14898">your application:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="14915">From the console, go to the CloudFormation service at</st> [<st
    c="14970">https://console.aws.amazon.com/cloudformation/</st>](https://console.aws.amazon.com/cloudformation/)
    <st c="15016">and select the AWS region where you want to host your application
    in the upper-right corner (</st>**<st c="15110">Oregon</st>**<st c="15117">, in
    our case), as shown in</st> *<st c="15145">Figure 8</st>**<st c="15153">.3</st>*<st
    c="15155">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.3 – Access to the CloudFormation console](img/B22051_08_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="15358">Figure 8.3 – Access to the CloudFormation console</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15407">Click on</st> **<st c="15417">Create stack</st>**<st c="15429">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="15430">In the</st> **<st c="15438">Prerequisite – Prepare Template</st>**
    <st c="15469">section, select</st> **<st c="15486">Choose an</st>** **<st c="15496">existing
    template</st>**<st c="15513">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="15514">In the</st> **<st c="15522">Specify template</st>** <st c="15538">section,
    choose</st> **<st c="15555">Upload a</st>** **<st c="15564">template file</st>**<st
    c="15577">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="15578">Click on</st> **<st c="15588">Choose file</st>**<st c="15599">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="15600">Select the template (</st>`<st c="15622">ch8-application-template.yaml</st>`<st
    c="15652">) from the</st> `<st c="15664">chapter8/code/platform</st>` <st c="15686">folder.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="15694">Click</st> **<st c="15701">Next</st>**<st c="15705">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="15706">Your</st> **<st c="15712">Create stack</st>** <st c="15724">window</st>
    <st c="15731">should look like</st> *<st c="15749">Figure 8</st>**<st c="15757">.4</st>*<st
    c="15759">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.4 – The CloudFormation stack creation screen](img/B22051_08_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="16859">Figure 8.4 – The CloudFormation stack creation screen</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="16912">Next, you will be asked to configure the parameters in your CloudFormation
    stack.</st> <st c="16995">In</st> *<st c="16998">Table 8.2</st>*<st c="17007">,
    you can find a detailed explanation of</st> <st c="17048">each parameter.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '| **<st c="17063">Parameter</st>** | **<st c="17073">Description</st>** |'
  prefs: []
  type: TYPE_TB
- en: '| `<st c="17085">GitRepoURL</st>` | <st c="17096">The Git repository you want
    to use.</st> <st c="17133">By default, you will have the repository associated
    with this book, but in case you forked it to your own Git account, you can change</st>
    <st c="17267">it accordingly.</st> |'
  prefs: []
  type: TYPE_TB
- en: '| `<st c="17282">InstanceType</st>` | <st c="17295">The type of instance you
    want to choose for the EC2 instance.</st> <st c="17358">You can leave it as is
    or choose between the four</st> <st c="17408">options available.</st> |'
  prefs: []
  type: TYPE_TB
- en: '| `<st c="17426">LatestAmiId</st>` | <st c="17438">The Amazon Machine Image
    you want to use for your EC2 instance.</st> <st c="17503">You can leave it</st>
    <st c="17520">as is.</st> |'
  prefs: []
  type: TYPE_TB
- en: <st c="17526">Table 8.2 – The CloudFormation template parameters</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17577">You can proceed until the last page, where you will be asked to
    acknowledge the creation of IAM roles</st> <st c="17680">before proceeding.</st>
    <st c="17699">This notification appears because the template will attempt to create
    two</st> <st c="17773">IAM roles:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="17783">An IAM role associated with the AWS Glue job, to grant the necessary
    permissions to read and write files</st> <st c="17889">to S3</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="17894">An IAM role attached to the EC2 instance where the scripts will
    be executed, to provide enough permissions to copy specific files to your</st>
    <st c="18033">S3 bucket</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="18042">Click</st> **<st c="18049">Submit</st>** <st c="18055">and wait
    until the stack status changes to</st> **<st c="18099">CREATE_COMPLETE</st>**<st
    c="18114">, as depicted in</st> *<st c="18131">Figure 8</st>**<st c="18139">.5</st>*<st
    c="18141">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.5 – The CloudFormation stack created status](img/B22051_08_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="18207">Figure 8.5 – The CloudFormation stack created status</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18259">This means</st> <st c="18271">that all the resources are provisioned,
    and you can</st> <st c="18323">now proceed.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18335">Section 3 – Clickstream event generator</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="18375">As with any business</st> <st c="18396">intelligence</st> <st
    c="18410">application, the first ingredient needed for further processing is data.</st>
    <st c="18483">In your case, you do not yet have data to be processed; so, in the
    first part, we created an event generator that you can use to generate clickstream
    events on demand.</st> <st c="18651">To execute the event generator, follow</st>
    <st c="18690">these steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18702">Go to the CloudShell console</st> <st c="18732">at</st> [<st c="18735">https://console.aws.amazon.com/cloudshell</st>](https://console.aws.amazon.com/cloudshell)<st
    c="18776">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="18777">This should open a new terminal window where you can execute scripts.</st>
    <st c="18848">In case you don’t have any environment ready, click on</st> **<st
    c="18903">Open [AWS-Region] environment</st>**<st c="18932">, as shown in</st>
    *<st c="18946">Figure 8</st>**<st c="18954">.6</st>*<st c="18956">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.6 – CloudShell terminal creation](img/B22051_08_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="19033">Figure 8.6 – CloudShell terminal creation</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19074">By the end, you should be seeing a brand-new terminal window,
    as depicted in</st> *<st c="19152">Figure 8</st>**<st c="19160">.7</st>*<st c="19162">:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.7 – The CloudShell terminal window](img/B22051_08_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="19231">Figure 8.7 – The CloudShell terminal window</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19274">This new terminal will be used to run commands that will generate
    events and send them to your recently created</st> <st c="19387">S3 bucket.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19397">As part of the deployment process, we generated a file with all
    the commands that need to be run inside your terminal.</st> <st c="19517">To access
    it, follow</st> <st c="19538">these steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19550">Go to the S3 console</st> <st c="19572">at</st> [<st c="19575">https://console.aws.amazon.com/s3</st>](https://console.aws.amazon.com/s3)<st
    c="19608">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="19609">Select your recently created S3 bucket.</st> <st c="19650">It
    should be</st> <st c="19663">called</st> `<st c="19670">chapter-8-clickstream-XXXXXXXX</st>`<st
    c="19700">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="19701">Click on the</st> `<st c="19715">aux</st>` <st c="19718">folder.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="19726">Select the</st> `<st c="19738">instructions.txt</st>` <st c="19754">file.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="19760">Click</st> <st c="19766">on</st> **<st c="19770">Download</st>**<st
    c="19778">, as</st> <st c="19782">shown in</st> *<st c="19792">Figure 8</st>**<st
    c="19800">.8</st>*<st c="19802">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.8 – The instructions.txt file access](img/B22051_08_8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="20468">Figure 8.8 – The instructions.txt file access</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20513">Open the file.</st> <st c="20529">Inside the file, you should
    have</st> <st c="20562">three commands:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: <st c="20697">These three commands will clone the Git repository locally in
    your</st> <st c="20765">CloudShell environment.</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="20788">Next, navigate to the</st> `<st c="20811">/aux</st>` <st c="20815">folder
    where your event simulator file (</st>`<st c="20856">generator.py</st>`<st c="20869">)
    is located, and finally install all the libraries needed</st> <st c="20929">with</st>
    `<st c="20934">pip</st>`<st c="20937">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="20938">Copy the commands from the</st> `<st c="20966">instructions.txt</st>`
    <st c="20982">file and paste them into the</st> <st c="21012">CloudShell terminal.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="21032">Run the</st> <st c="21041">following command:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: …
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{''event_type'': ''search'', ''user_id'': ''lyttebmihe'', ''user_action'':
    ''home_page'', ''product_category'': None, ''location'': ''36'', ''user_age'':
    30, ''timestamp'': 1714680649}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Event uploaded to S3: search_lyttebmihe_1714680649.json'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{''event_type'': ''click'', ''user_id'': ''oencotfldn'', ''user_action'': ''cart_page'',
    ''product_category'': ''books'', ''location'': ''1'', ''user_age'': 42, ''timestamp'':
    1717732343}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Event uploaded to S3: click_oencotfldn_1717732343.json'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Timeout occurred. Exiting script after creating 20 events.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: <st c="21930">To confirm the persistence of the file in your S3 bucket, follow</st>
    <st c="21996">these steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="22008">Go to the S3 console</st> <st c="22030">at</st> [<st c="22033">https://console.aws.amazon.com/s3</st>](https://console.aws.amazon.com/s3)<st
    c="22066">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="22067">Select your recently created S3 bucket.</st> <st c="22108">It
    should be</st> <st c="22121">called</st> `<st c="22128">chapter-8-clickstream-XXXXXXXX</st>`<st
    c="22158">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="22159">Click on the</st> `<st c="22173">raw</st>` <st c="22176">folder.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="22184">Your</st> `<st c="22190">/raw</st>` <st c="22194">folder should
    look like</st> *<st c="22219">Figure 8</st>**<st c="22227">.9</st>* <st c="22229">with
    a total number of JSON files corresponding</st> <st c="22277">to the</st> <st
    c="22284">total number of</st> <st c="22301">events generated.</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.9 – The event data stored in S3](img/B22051_08_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="23277">Figure 8.9 – The event data stored in S3</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23317">You can run the script as many times as you want, by running the</st>
    <st c="23383">following command:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: <st c="23424">Now that you have your raw data generated and stored, it is time
    to apply</st> <st c="23499">the transformations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23519">Section 4 – The Glue ETL job</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="23548">So far, you have a</st> <st c="23568">set of files representing
    the</st> <st c="23598">clickstream events you generated, but often these events
    come with a structure that does not fit analytics purposes.</st> <st c="23715">For
    that reason, now it is time to run your ETL job and apply some changes to your
    clickstream data to support analytics workloads and</st> <st c="23850">information
    extraction:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="23873">Go to the Glue console</st> <st c="23897">at</st> [<st c="23900">https://console.aws.amazon.com/glue</st>](https://console.aws.amazon.com/glue)<st
    c="23935">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="23936">Click on</st> **<st c="23946">Visual ETL</st>** <st c="23956">from
    the</st> <st c="23966">left menu.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="23976">From the</st> `<st c="24009">chapter8-gluejob</st>` <st c="24025">and
    click on</st> **<st c="24039">Run job</st>**<st c="24046">, as shown in</st> *<st
    c="24060">Figure 8</st>**<st c="24068">.10</st>*<st c="24071">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.10 – The Glue ETL job running process](img/B22051_08_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="24219">Figure 8.10 – The Glue ETL job running process</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24265">While your job is running, it is important to recall the exact
    actions that are</st> <st c="24346">being executed:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="24361">Read all the event files in your</st> `<st c="24395">/raw</st>`
    <st c="24399">folder inside your</st> <st c="24419">S3 bucket.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24429">Read a reference file with</st> <st c="24457">geographic information.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24480">Change the schema of</st> <st c="24502">each dataset.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24515">Combine both datasets</st> <st c="24538">into one.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24547">Select a subset</st> <st c="24564">of columns.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24575">Creates a single</st> `<st c="24593">.csv</st>` <st c="24597">file
    based on the</st> <st c="24616">output dataset.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24631">Persist the output</st> `<st c="24651">.csv</st>` <st c="24655">file
    in your S3 bucket in the</st> `<st c="24686">/</st>``<st c="24687">results</st>`
    <st c="24694">folder.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24702">Move all the clickstream events from the</st> `<st c="24744">/raw</st>`
    <st c="24748">folder to the</st> `<st c="24763">/</st>``<st c="24764">processed</st>`
    <st c="24773">folder.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24781">To explore the code in detail, follow</st> <st c="24820">these
    steps:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24832">Click on the job</st> <st c="24850">name (</st>`<st c="24856">chapter8-gluejob</st>`<st
    c="24873">).</st>
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24876">Select the</st> **<st c="24888">Script</st>** <st c="24894">tab
    and review</st> <st c="24910">the code.</st>
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="24919">To check your job status, move to the</st> **<st c="24958">Runs</st>**
    <st c="24962">tab and wait until</st> **<st c="24982">Run status</st>** <st c="24992">turns
    into</st> **<st c="25004">Succeeded</st>**<st c="25013">, as shown in</st> *<st
    c="25027">Figure 8</st>**<st c="25035">.11</st>*<st c="25038">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.11 – Successful run message](img/B22051_08_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="25066">Figure 8.11 – Successful run message</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25102">By now, all</st> <st c="25114">your</st> <st c="25119">data transformation
    is done, and it is time to</st> <st c="25167">explore it.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25178">Section 5 – Data exploration with Athena</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="25219">So far, you</st> <st c="25232">already generated</st> <st c="25250">the
    clickstream data and ran an ETL pipeline that transformed it.</st> <st c="25316">Now,
    it is time to explore your data and extract information from it.</st> <st c="25386">As
    mentioned in the</st> *<st c="25406">Requirements</st>* <st c="25418">sections,
    there are two types of profiles interacting with your data, so let us start with
    the solution for the technical users and try to run SQL queries over your</st>
    <st c="25584">transformed data:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="25601">Go to the Athena console</st> <st c="25627">at</st> [<st c="25630">https://console.aws.amazon.com/athena</st>](https://console.aws.amazon.com/athena)<st
    c="25667">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="25668">If it is the first time you are accessing the Athena console,
    you will need to perform the initial configuration.</st> <st c="25783">So, click
    on</st> **<st c="25796">Explore the query editor</st>**<st c="25820">, as shown
    in</st> *<st c="25834">Figure 8</st>**<st c="25842">.12</st>*<st c="25845">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.12 – The Athena console](img/B22051_08_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="26165">Figure 8.12 – The Athena console</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26197">Go to the</st> **<st c="26208">Settings</st>** <st c="26216">tab.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="26221">Click</st> <st c="26228">on</st> **<st c="26231">Manage</st>**<st
    c="26237">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="26238">Select</st> **<st c="26246">Browse S3</st>**<st c="26255">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="26256">Find and click on the S3 bucket you created for this project (the
    name should start</st> <st c="26341">with</st> `<st c="26346">chapter-8-clickstream-xxxxxxxx</st>`<st
    c="26376">).</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="26379">Select the</st> `<st c="26391">/</st>``<st c="26392">aux</st>`
    <st c="26395">folder.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="26403">Click</st> <st c="26410">on</st> **<st c="26413">Choose</st>**<st
    c="26419">, as</st> <st c="26423">depicted in</st> *<st c="26436">Figure 8</st>**<st
    c="26444">.13</st>*<st c="26447">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.13 – Athena configuration](img/B22051_08_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="26642">Figure 8.13 – Athena configuration</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26676">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26691">The bucket you are choosing is the same as the one you are using
    to store your data.</st> <st c="26777">Ideally, you should have a separate bucket
    for that and take that into consideration whenever you are working on a</st> <st
    c="26892">real project.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26905">After configuring your Athena environment, follow</st> <st c="26956">these
    steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="26968">Switch to the</st> **<st c="26983">Editor</st>** <st c="26989">tab.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="26994">Ensure you have selected the</st> <st c="27024">following settings:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<st c="27058">AwsDataCatalog</st>`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="27084">clickstream_db</st>`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="27098">Click on the three dots next</st> <st c="27128">to</st> `<st c="27131">clickstream_table</st>`<st
    c="27148">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="27149">Select</st> **<st c="27157">Preview Table</st>**<st c="27170">,
    as</st> <st c="27175">shown</st> <st c="27180">in</st> *<st c="27184">Figure 8</st>**<st
    c="27192">.14</st>*<st c="27195">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.14 – The Athena preview table example](img/B22051_08_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="27554">Figure 8.14 – The Athena preview table example</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="27600">This will open a new tab with an auto-generated query like</st>
    <st c="27660">the following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: <st c="27735">This is an example of how you can explore your results data with
    pure SQL, and although the auto-generated</st> <st c="27843">query is quite simple,
    you can extend it to answer more complex questions; for example, what is the continent
    where you are getting more clicks from?</st> <st c="27993">Try running the following
    query to get</st> <st c="28032">the answer!</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: <st c="28177">Now, it is time to explore how non-technical users can interact
    and extract information from your data without having the technical knowledge
    or experience with SQL.</st> <st c="28344">For that, you will now</st> <st c="28366">develop
    a dashboard in</st> <st c="28390">QuickSight to create a visual alternative for
    exploring</st> <st c="28446">your data.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="28456">Section 6 – Data visualization with QuickSight</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="28503">Let’s start by</st> <st c="28519">setting up your</st> <st c="28535">QuickSight.</st>
    <st c="28547">If you are already using QuickSight in your account for other projects,
    you can skip the initial configuration and select the Region where you’ve used
    for this chapter before proceeding with the</st> <st c="28742">dataset creation:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="28759">In the search bar of your AWS console,</st> <st c="28799">type</st>
    `<st c="28804">QuickSight</st>`<st c="28814">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="28815">You will be redirected to the</st> **<st c="28846">QuickSight</st>**
    <st c="28856">portal and presented with a form like</st> *<st c="28895">Figure
    8</st>**<st c="28903">.15</st>*<st c="28906">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.15 – The QuickSight sign-up form](img/B22051_08_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="29047">Figure 8.15 – The QuickSight sign-up form</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29088">Click on</st> **<st c="29098">SIGN UP</st>** **<st c="29106">FOR
    QUICKSIGHT</st>**<st c="29120">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="29121">Next, you will</st> <st c="29137">need to fill out the email for
    the notifications.</st> <st c="29187">You can use your own email or any other
    of</st> <st c="29230">your choice.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="29242">Go to the QuickSight region selection.</st> <st c="29282">From
    the drop-down menu, choose the same Region you’ve been using for this chapter’s
    project, as shown in</st> *<st c="29388">Figure 8</st>**<st c="29396">.16</st>*<st
    c="29399">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.16 – QuickSight region selection](img/B22051_08_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="29808">Figure 8.16 – QuickSight region selection</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="29849">Scroll down and, in the</st> `<st c="29995">chapter8-clickstream-xxx</st>`<st
    c="30019">).</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="30022">Scroll down and, in the</st> **<st c="30047">Optional add-on</st>**
    <st c="30062">section, ensure you</st> *<st c="30083">untick</st>* <st c="30089">the</st>
    **<st c="30094">Add paginated reports</st>** <st c="30115">checkbox, as shown
    in</st> *<st c="30138">Figure 8</st>**<st c="30146">.17</st>*<st c="30149">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.17 – QuickSight paginated reports add-on](img/B22051_08_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="30383">Figure 8.17 – QuickSight paginated reports add-on</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30432">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30447">Ensuring that you do not add paginated reports to your subscription
    is critical to avoid unnecessary costs with features that are not covered in</st>
    <st c="30593">this book.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30603">Click</st> <st c="30610">on</st> **<st c="30613">Finish</st>**<st
    c="30619">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="30620">If everything was set up correctly, on the left menu of the QuickSight
    portal, you should see a menu with various options, as shown in</st> *<st c="30756">Figure
    8</st>**<st c="30764">.18</st>*<st c="30767">:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.18 – The QuickSight menu](img/B22051_08_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="30911">Figure 8.18 – The QuickSight menu</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="30944">Whenever you</st> <st c="30957">start</st> <st c="30963">creating
    any content in QuickSight, the first step is to create a dataset.</st> <st c="31039">So,
    let us start by defining your</st> <st c="31073">first one:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31083">Click</st> <st c="31090">on</st> **<st c="31093">Datasets</st>**<st
    c="31101">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31102">In the upper-right corner, click on</st> **<st c="31139">New dataset</st>**<st
    c="31150">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31151">Select</st> **<st c="31159">Athena</st>**<st c="31165">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31166">For the data source name, give it a meaningful name, such</st>
    <st c="31225">as</st> `<st c="31228">clickstream</st>`<st c="31239">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31240">For the Athena workgroup, ensure</st> **<st c="31274">[Primary]</st>**
    <st c="31283">is selected.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31296">Click on</st> **<st c="31306">Validate connection</st>** <st c="31325">to
    ensure everything is</st> <st c="31350">working correctly.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31368">Click on</st> **<st c="31378">Create</st>** **<st c="31385">data
    source</st>**<st c="31396">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31397">On the next</st> <st c="31409">window, select</st> `<st c="31425">clickstream_table</st>`
    <st c="31442">from the table list, as shown in</st> *<st c="31476">Figure 8</st>**<st
    c="31484">.19</st>*<st c="31487">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.19 – The QuickSight dataset configuration](img/B22051_08_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="31721">Figure 8.19 – The QuickSight dataset configuration</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="31771">Click</st> <st c="31778">on</st> **<st c="31781">Select</st>**<st
    c="31787">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31788">Click</st> <st c="31795">on</st> **<st c="31798">Visualize</st>**<st
    c="31807">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="31808">When prompted for the type of report, choose</st> **<st c="31854">Interactive
    Sheet</st>**<st c="31871">, as shown in</st> *<st c="31885">Figure 8</st>**<st
    c="31893">.20</st>*<st c="31896">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.20 – The QuickSight report type creation form](img/B22051_08_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="32177">Figure 8.20 – The QuickSight report type creation form</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32231">Now, it is time to start creating the visuals.</st> <st c="32279">As
    this is a learning exercise, you will create a simple dashboard, but</st> <st
    c="32351">you can</st> <st c="32358">and should extend it to a more complex and</st>
    <st c="32402">informative one.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32418">Let us start by creating a visual with the geographic distribution
    of your users based</st> <st c="32506">on clicks:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32516">From the</st> **<st c="32526">Visuals</st>** <st c="32533">tab,
    click on the arrow next to</st> **<st c="32566">+</st>** **<st c="32568">ADD</st>**<st
    c="32571">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="32572">Select the filled map, as shown in</st> *<st c="32608">Figure
    8</st>**<st c="32616">.21</st>*<st c="32619">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.21 – The QuickSight Visuals selection](img/B22051_08_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="32678">Figure 8.21 – The QuickSight Visuals selection</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="32724">From the</st> <st c="32733">fields</st> <st c="32740">list in
    the</st> `<st c="32774">country-name</st>`<st c="32786">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="32787">By the end, your visual should look like</st> *<st c="32829">Figure
    8</st>**<st c="32837">.22</st>*<st c="32840">:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.22 – The Filled Map visual creation](img/B22051_08_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="32979">Figure 8.22 – The Filled Map visual creation</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33023">Now, let us create a different visual to show the average age
    of your users based on the click data.</st> <st c="33125">For that, you will</st>
    <st c="33144">leverage</st> **<st c="33153">Autograph</st>**<st c="33162">, a
    feature in QuickSight that suggests the graph type</st> <st c="33217">based on</st>
    <st c="33225">the data you want</st> <st c="33244">to visualize:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33257">Click outside the</st> <st c="33276">map visual.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="33287">From the</st> `<st c="33315">user_age</st>`<st c="33323">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="33324">Note that QuickSight creates a visual with a single number.</st>
    <st c="33385">This is because the aggregation type, by default, is set to</st>
    **<st c="33445">Sum</st>** <st c="33448">and thus it is summing the age of all</st>
    <st c="33487">the users.</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="33497">To change it, click on the three dots next to the</st> `<st c="33548">user_age</st>`
    <st c="33556">field, and in the aggregate menu, change it to</st> **<st c="33604">Average</st>**<st
    c="33611">, as shown in</st> *<st c="33625">Figure 8</st>**<st c="33633">.23</st>*<st
    c="33636">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.23 – QuickSight data calculation configuration](img/B22051_08_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="33939">Figure 8.23 – QuickSight data calculation configuration</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="33994">Your visual should automatically change to show the</st> <st c="34047">new
    calculation.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34063">The last visual</st> <st c="34080">you will build is a</st> <st
    c="34099">funnel to show how the number of records evolves by event type.</st>
    <st c="34164">For that, you should follow</st> <st c="34192">these steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34204">Click on</st> **<st c="34214">+ ADD</st>** <st c="34219">and select</st>
    **<st c="34231">Funnel Chart</st>**<st c="34243">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="34244">From the data menu,</st> <st c="34265">select</st> `<st c="34272">event_type</st>`<st
    c="34282">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="34283">Your dashboard should look like</st> *<st c="34316">Figure 8</st>**<st
    c="34324">.24</st>*<st c="34327">. Feel free to explore additional visual types,
    rearrange the visuals you already have, and create your own version of</st> <st
    c="34446">the dashboard.</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.24 – QuicksSight dashboard example](img/B22051_08_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="34559">Figure 8.24 – QuicksSight dashboard example</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34602">Now, it is time to publish your dashboard so you can share it
    with</st> <st c="34670">other users:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34682">In the top-right corner, click</st> <st c="34714">on</st> **<st
    c="34717">Publish</st>**<st c="34724">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="34725">Give it a name to</st> <st c="34744">your dashboard.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="34759">Click on</st> **<st c="34769">Publish Dashboard</st>**<st c="34786">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="34787">Congratulations, your dashboard is done and ready to be shared!</st>
    <st c="34852">The last thing you will test is the end-to-end</st> <st c="34899">workflow</st>
    <st c="34908">to ensure your data gets updated in</st> <st c="34944">your dashboard.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="34959">To do that, start by generating additional events and running
    the ETL job as described in</st> *<st c="35050">Section 3 – Clickstream event
    generator</st>* <st c="35089">and</st> *<st c="35094">Section 4 – The Glue ETL
    job</st>*<st c="35122">, respectively.</st> <st c="35138">When your job finishes
    with a succeeded status, in the QuickSight console, do</st> <st c="35216">the
    following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35230">Click on the QuickSight icon in the</st> <st c="35267">upper-left
    corner.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35285">Select</st> **<st c="35293">Datasets</st>** <st c="35301">from
    the</st> <st c="35311">left menu.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35321">Select the dataset you</st> <st c="35345">just created.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35358">Go to the</st> **<st c="35369">Refresh</st>** <st c="35376">tab.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35381">Click on</st> **<st c="35391">REFRESH NOW</st>**<st c="35402">,
    as shown in</st> *<st c="35416">Figure 8</st>**<st c="35424">.25</st>*<st c="35427">:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.25 – QuicksSight dataset refresh](img/B22051_08_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="35511">Figure 8.25 – QuicksSight dataset refresh</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35552">After completing the refresh process, do</st> <st c="35594">the
    following:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35608">Click on the QuickSight icon in the upper-left corner to return
    to the</st> <st c="35680">initial menu.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35693">Select</st> **<st c="35701">Dashboards</st>** <st c="35711">from
    the</st> <st c="35721">left menu.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35731">Select the dashboard you</st> <st c="35757">just created.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="35770">If you compare it with the previous version, your dashboard should
    have different values in the visuals, which is the result of the data update you</st>
    <st c="35919">just performed.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="35934">With all the</st> <st c="35947">workflow tested, now, it is</st>
    <st c="35975">time to clean up the resources to avoid</st> <st c="36016">unnecessary
    costs.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36034">Section 7 – Clean up</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="36055">The first step is to delete</st> <st c="36083">your QuickSight
    subscription while you are still benefiting from the</st> <st c="36153">free tier.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36163">Important note</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36178">Deleting your QuickSight subscription will delete all the assets
    you have in your QuickSight account.</st> <st c="36281">If you were already using
    QuickSight for other projects, you may want to skip this step as it applies only
    to new subscriptions made for</st> <st c="36418">this chapter.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36431">To proceed with the QuickSight subscription termination, perform
    the</st> <st c="36501">following steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36517">On your QuickSight account, in the upper-right corner, click on
    the</st> <st c="36586">user icon.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36596">Select</st> **<st c="36604">Manage QuickSight</st>**<st c="36621">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36622">On the left, select</st> **<st c="36643">Account Settings</st>**<st
    c="36659">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36660">Under</st> **<st c="36667">Account termination</st>**<st c="36686">,
    click</st> <st c="36694">on</st> **<st c="36697">Manage</st>**<st c="36703">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36704">Disable account protection by clicking on the</st> <st c="36751">toggle
    button.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36765">Type</st> `<st c="36771">confirm</st>` <st c="36778">in the</st>
    <st c="36786">text box.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36795">Click on</st> **<st c="36805">Delete account</st>**<st c="36819">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36820">Now, you just need to empty the S3 bucket and delete the CloudFormation
    template.</st> <st c="36903">Let us start with emptying</st> <st c="36930">the
    bucket:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="36941">Go to the S3</st> <st c="36955">console in your</st> <st c="36971">AWS
    account.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="36983">Select your frontend S3 bucket (the name of the bucket should
    start with</st> `<st c="37057">chapter-8-clickstream-</st>` <st c="37079">followed
    by a</st> <st c="37094">random string).</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="37109">Click on</st> **<st c="37119">Empty</st>**<st c="37124">. This
    will delete all the content inside</st> <st c="37166">your bucket.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.26 – The process of emptying an S3 bucket](img/B22051_08_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="37501">Figure 8.26 – The process of emptying an S3 bucket</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37551">With the bucket now empty, you can proceed with the CloudFormation</st>
    <st c="37619">stack deletion:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37634">Go to the CloudFormation console in your</st> <st c="37676">AWS
    account.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="37688">Select the stack</st> <st c="37706">you created.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="37718">Click</st> <st c="37725">on</st> **<st c="37728">Delete</st>**<st
    c="37734">.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="37735">By now, all the resources created in this chapter have been deleted,
    and it is always important to ensure</st> <st c="37841">the clean-up of unused
    resources to avoid incurring unnecessary costs.</st> <st c="37913">In the next
    section, you will explore the possibilities of improving</st> <st c="37982">your
    application.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="37999">Future work</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '<st c="38011">Congratulations, you have successfully built a business intelligence
    application, including ingesting the data, processing, and exploring both through
    SQL queries as well as a visual approach.</st> <st c="38205">Being the last project
    for this book, is important to reinforce a message that should always be kept
    in mind for future projects: technology is constantly evolving, and new features,
    services, and best practices emerge regularly, so it is important to maintain
    a mindset of continuous improvement and this project is not an exception.</st>
    <st c="38540">This project can be a starting point for a business intelligence
    application, but there are specific actions that can make it more robust</st>
    <st c="38678">and production-ready.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="38699">Automate the ETL pipeline</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="38725">One of the key areas</st> <st c="38746">for future enhancement</st>
    <st c="38769">lies around automating the ETL pipeline, which currently runs on-demand.</st>
    <st c="38843">A robust business intelligence application should incorporate automation
    at the orchestration level to ensure timely and reliable data processing.</st>
    <st c="38990">In AWS, AWS Step Functions or even Glue workflows can help you schedule
    and automate your</st> <st c="39080">ETL processes.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39094">Furthermore, implementing a notification system can provide valuable
    insights into the health and status of your ETL pipeline.</st> <st c="39222">Glue
    already integrates natively with Amazon CloudWatch to deliver new real-time events
    about the status of the pipelines, which, combined with a notification service,
    such as Amazon</st> **<st c="39405">Simple Notification Service</st>** <st c="39433">(</st>**<st
    c="39434">SNS</st>**<st c="39437">), can</st> <st c="39445">help you intervene
    whenever something goes wrong in a</st> <st c="39499">timely manner.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39513">Data life cycle management</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="39540">Effective data</st> <st c="39555">management and</st> <st c="39570">cost
    optimization are crucial considerations for any business intelligence application,
    particularly when dealing with large volumes of data, as is the case with clickstream
    data.</st> <st c="39751">S3 offers different storage tiers that can cover all
    the data</st> <st c="39813">access patterns.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="39829">For example, you can store frequently accessed clickstream data
    in the S3 Standard storage class for low-latency access, while archiving older
    or less frequently accessed data to the S3 Glacier or S3 Glacier Deep Archive
    storage classes, which offers significant cost savings.</st> <st c="40107">This
    approach not only optimizes storage costs but also ensures that your data is stored
    in the most appropriate tier based on its life cycle stage, improving overall
    data management efficiency.</st> <st c="40302">Furthermore, by automating the
    life cycle management process, you can minimize manual intervention and ensure
    consistent enforcement of your data retention policies, enhancing compliance and
    reducing the risk of data breaches or</st> <st c="40531">accidental deletions.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="40552">Summary</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="40560">In this chapter, you explored the process of building an end-to-end
    business intelligence application leveraging various AWS services.</st> <st c="40696">By
    combining the power of Amazon Athena for ad hoc querying, Amazon S3 for data storage,
    and Amazon QuickSight for data visualization and dashboarding, you created a solution
    that empowers both technical and non-technical users to derive valuable insights</st>
    <st c="40952">from data.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="40962">As you continue with future projects, you are now equipped with
    the knowledge to build an architecture to support the transformation between data
    and information and empower data-driven decision-making at</st> <st c="41168">all
    levels.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="41179">In the next chapter, you will have the opportunity to revisit
    the architectures of the previous chapters and explore alternative approaches
    and AWS services while understanding the trade-offs that are behind any architecture
    choice</st> <st c="41412">you make.</st>
  prefs: []
  type: TYPE_NORMAL
