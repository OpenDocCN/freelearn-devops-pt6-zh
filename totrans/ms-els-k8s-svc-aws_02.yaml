- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Introducing Amazon EKS
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Amazon EKS
- en: In the previous chapter, we talked about the basic concepts of a container,
    container orchestration, and Kubernetes. Building and managing a Kubernetes cluster
    by yourself can be a very complex and time-consuming task, but using a managed
    Kubernetes service can remove all that heavy lifting and allow users to focus
    on application development and deployment.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了容器、容器编排和 Kubernetes 的基本概念。自己构建和管理 Kubernetes 集群可能是一项非常复杂且耗时的任务，但使用托管
    Kubernetes 服务可以去除这些繁重的工作，使用户能够专注于应用程序的开发和部署。
- en: In this chapter, we are going to explore **Elastic Kubernetes Service** (**EKS**)
    and its technical architecture at a high level to get a good understanding of
    its benefits and drawbacks.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将高层次地探讨 **弹性 Kubernetes 服务** (**EKS**) 及其技术架构，以便更好地理解其优点和缺点。
- en: 'To sum up, this chapter covers the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，本章涵盖以下主题：
- en: What is Amazon EKS?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Amazon EKS？
- en: Understanding the EKS architecture
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 EKS 架构
- en: Investigating the Amazon EKS pricing model
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查 Amazon EKS 定价模型
- en: Common mistakes when using EKS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 EKS 时常见的错误
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You should have some familiarity with the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该对以下内容有所了解：
- en: What Kubernetes is and how it works (refer to [*Chapter 1*](B18129_01.xhtml#_idTextAnchor014),
    *The Fundamentals of Kubernetes* *and Containers*)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Kubernetes 及其工作原理（参考 [*第 1 章*](B18129_01.xhtml#_idTextAnchor014)，*Kubernetes
    和容器的基础知识*）
- en: AWS foundational services including **Virtual Private Cloud** (**VPC**), **Elastic
    Computing Cloud** **(EC2**), **Elastic Block Storage** (**EBS**), and **Elastic
    Load** **Balancer** (**ELB**)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 基础服务，包括 **虚拟私有云** (**VPC**)、**弹性计算云** (**EC2**)、**弹性块存储** (**EBS**)、和 **弹性负载均衡器**
    (**ELB**)
- en: A general appreciation of standard Kubernetes deployment tools
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对标准 Kubernetes 部署工具的基本了解
- en: What is Amazon EKS?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Amazon EKS？
- en: 'According to data from **Cloud Native Computing Foundation** (**CNCF**), at
    the end of 2017, nearly 57% of Kubernetes environments were running on AWS. Initially,
    if you wanted to run Kubernetes on AWS, you had to build the cluster by using
    tools such as Rancher or Kops on top of EC2 instances. You would also be required
    to constantly monitor and manage the cluster, deploying open source tools such
    as Prometheus or Grafana, and have a team of operational staff making sure the
    cluster was available and managing the upgrade process. Kubernetes also has a
    regular release cadence: three releases per year as of June 2021! This also leads
    to a constant operational pressure to upgrade the cluster.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 **云原生计算基金会** (**CNCF**) 的数据，到 2017 年底，近 57% 的 Kubernetes 环境运行在 AWS 上。最初，如果你想在
    AWS 上运行 Kubernetes，必须使用 Rancher 或 Kops 等工具，在 EC2 实例上构建集群。你还需要持续监控和管理集群，部署开源工具如
    Prometheus 或 Grafana，并且有一个运营团队确保集群的可用性，并管理升级过程。Kubernetes 还有定期发布的周期：截至 2021 年
    6 月，每年发布三次！这也导致了升级集群的持续运营压力。
- en: As the AWS service roadmap is predominately driven by customer requirements,
    the effort needed to build and run Kubernetes on AWS led to the AWS service teams
    releasing EKS in June 2018.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 AWS 服务路线图主要由客户需求推动，构建和运行 Kubernetes 在 AWS 上的工作量促使 AWS 服务团队在 2018 年 6 月发布了
    EKS。
- en: Amazon EKS is Kubernetes! AWS takes the open source code, adds AWS-specific
    plugins for identity and networking (discussed later in this book), and allows
    you to deploy it in your AWS account. AWS will then manage the control plane and
    allow you to connect compute and storage resources to it, allowing you to run
    Pods and store Pod data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EKS 就是 Kubernetes！AWS 将开源代码进行修改，添加了特定于 AWS 的插件，用于身份验证和网络管理（本书后面会讨论），并允许你在
    AWS 账户中部署 Kubernetes。AWS 随后管理控制平面，并允许你将计算和存储资源连接到其中，运行 Pods 并存储 Pod 数据。
- en: Today, Amazon EKS has been adopted by many leading organizations worldwide –
    Snap Inc., HSBC, Delivery Hero, Fidelity Investments, and more. It simplifies
    the Kubernetes management process of building, securing, and following best practices
    on AWS, which brings benefits for organizations so they can focus on building
    container-based applications instead of creating Kubernetes clusters from scratch.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，Amazon EKS 已被全球许多领先企业采用——如 Snap Inc.、汇丰银行（HSBC）、外卖英雄（Delivery Hero）、富达投资（Fidelity
    Investments）等。它简化了在 AWS 上构建、保护和遵循最佳实践的 Kubernetes 管理过程，为组织带来好处，使他们能够专注于构建基于容器的应用，而不是从零开始创建
    Kubernetes 集群。
- en: Cloud Native Computing Foundation
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 云原生计算基金会
- en: CNCF is a Linux Foundation project that was founded in 2015 and is responsible
    for driving Kubernetes development along with other cloud-native projects. CNCF
    has over 600 members including AWS, Google, Microsoft, Red Hat, SAP, Huawei, Intel,
    Cisco, IBM, Apple, and VMware.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: CNCF是一个成立于2015年的Linux基金会项目，负责推动Kubernetes开发以及其他云原生项目的发展。CNCF目前拥有600多名成员，包括AWS、Google、Microsoft、Red
    Hat、SAP、华为、Intel、Cisco、IBM、Apple和VMware。
- en: Why use Amazon EKS?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么选择Amazon EKS？
- en: The main advantage of using EKS is that you no longer have to manage the control
    plane; even upgrades are a single-click operation. As simple as this sounds, the
    operational savings of having AWS deploy, scale, fix, and upgrade your control
    plane cannot be underestimated for production environments or when you have many
    clusters.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用EKS的主要优点是您无需再管理控制平面；即使是升级，也只需要单击一下操作。虽然听起来很简单，但让AWS负责部署、扩展、修复和升级控制平面在生产环境中或当您有多个集群时所带来的运营节省是无法低估的。
- en: 'As EKS is a managed service, it is also heavily integrated into the AWS ecosystem.
    This means the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于EKS是一个托管服务，它也与AWS生态系统深度集成。这意味着：
- en: Pods are first-class network citizens, have VPC network addresses, and can be
    managed and controlled like any other AWS resources
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pods是一级网络实体，具有VPC网络地址，并且可以像其他AWS资源一样进行管理和控制。
- en: Pods can be allocated specific **Identity and Access Management** (**IAM**)
    roles, simplifying how Kubernetes-based applications connect and use AWS services
    such as DynamoDB
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以为Pods分配特定的**身份与访问管理**（**IAM**）角色，从而简化基于Kubernetes的应用程序如何连接和使用AWS服务，如DynamoDB。
- en: Kubernetes’ control and data plane logs and metrics can be sent to AWS CloudWatch
    where they can be reported on, managed, and visualized without any additional
    servers or software required
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes的控制平面和数据平面日志及度量可以发送到AWS CloudWatch，在那里可以进行报告、管理和可视化，而无需额外的服务器或软件。
- en: Operational and development teams can mix compute (EC2 and/or Fargate) and storage
    services (EBS and/or EFS) to support a variety of performance, cost, and security
    requirements
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运营和开发团队可以混合使用计算（EC2和/或Fargate）和存储服务（EBS和/或EFS）来支持各种性能、成本和安全需求。
- en: Important note
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: It’s important to understand that EKS is predominantly a managed control plane.
    The data plane uses standard AWS services such EC2 and Fargate to provide the
    runtime environment for Pods. The data plane is, in most cases, managed by the
    operational or development teams.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，EKS主要是一个托管控制平面。数据平面使用标准的AWS服务（如EC2和Fargate）提供Pods的运行环境。在大多数情况下，数据平面由运营或开发团队管理。
- en: In subsequent chapters, we will dive deep into these areas and illustrate how
    they are used and configured. But for now, let’s move on to the differences between
    a self-managed K8s cluster and EKS.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在后续章节中，我们将深入探讨这些领域，并说明如何使用和配置它们。但现在，让我们继续讨论自管K8s集群和EKS之间的区别。
- en: Self-managed Kubernetes clusters versus Amazon EKS
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自管Kubernetes集群与Amazon EKS
- en: 'The following table compares the two approaches of self-built clusters versus
    EKS:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格比较了自建集群与EKS的两种方式：
- en: '|  | **Self-managed** **Kubernetes cluster** | **EKS** |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '|  | **自管** **Kubernetes集群** | **EKS** |'
- en: '| --- | --- | --- |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Full control | Yes | Mostly (no direct access to underlying control plane
    servers) |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 完全控制 | 是 | 大部分（无法直接访问底层控制平面服务器） |'
- en: '| Kubernetes Version | Community release | Community release |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| Kubernetes版本 | 社区发布 | 社区发布 |'
- en: '| Version Support | The Kubernetes project maintains release branches for the
    most recent three minor releases. From Kubernetes 1.19 onward, releases receive
    approximately 1 year of patch support. Kubernetes 1.18 and older received approximately
    9 months of patch support. | A Kubernetes version is supported for 14 months after
    first being available on Amazon EKS, even if it is no longer supported by the
    Kubernetes project/community. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 版本支持 | Kubernetes项目维护最近三个小版本的发布分支。从Kubernetes 1.19开始，版本将获得大约1年的补丁支持。Kubernetes
    1.18及更早版本的补丁支持大约为9个月。 | Kubernetes版本在首次在Amazon EKS上可用后支持14个月，即使该版本不再由Kubernetes项目/社区支持。
    |'
- en: '| Network Access Control | Manually set up and configure VPC controls | EKS
    creates standard security groups and supports public IP whitelisting. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 网络访问控制 | 手动设置和配置VPC控制 | EKS创建标准安全组并支持公共IP白名单。 |'
- en: '| Authentication | Manually set up and configure Kubernetes RBAC controls |
    Integrated with AWS IAM |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 身份验证 | 手动设置和配置Kubernetes RBAC控制 | 与AWS IAM集成 |'
- en: '| Scalability | Manually setup and configure scaling | Managed control plane
    and standard compute/storage scaling |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 可扩展性 | 手动设置和配置扩展 | 管理的控制平面和标准计算/存储扩展 |'
- en: '| Security | Manually patched | Control plane patching is done by AWS |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 安全性 | 手动打补丁 | 控制平面的补丁由 AWS 进行 |'
- en: '| Upgrade | Manually update and replace components | Upgrade with a single
    click for the control plane, while managed node groups support simpler upgrades
    |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 升级 | 手动更新和替换组件 | 单击一下即可升级控制平面，同时管理的节点组支持更简便的升级 |'
- en: '| Monitoring | Need to monitor by yourself and support the monitoring platform
    | EKS will do monitoring and replace unhealthy master nodes, integrated with CloudWatch
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 监控 | 需要自行监控并支持监控平台 | EKS 会进行监控并替换不健康的主节点，集成了 CloudWatch |'
- en: Table 2.1 – Comparing self-managed Kubernetes and EKS
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2.1 – 自管理 Kubernetes 和 EKS 的比较
- en: In the next section, we will dive deeper into the EKS architecture so you can
    begin to really understand the differences between a self-managed cluster and
    EKS.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将深入探讨 EKS 架构，让你开始真正理解自管理集群和 EKS 之间的差异。
- en: Understanding the EKS architecture
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 EKS 架构
- en: Every EKS cluster will have a single endpoint URL used by tools such as kubectl,
    the main Kubernetes client. This URL hides all the control plane servers deployed
    on an AWS-managed VPC across multiple Availability Zones in the region you have
    selected to deploy the cluster to, and the servers that make up the control plane
    are not accessible to the cluster users or administrators.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 EKS 集群都有一个用于工具（如 kubectl，主要的 Kubernetes 客户端）的单一端点 URL。此 URL 隐藏了在 AWS 管理的
    VPC 中跨多个可用区部署的所有控制平面服务器，且构成控制平面的服务器对集群的用户或管理员不可访问。
- en: 'The data plane is typically composed of EC2 workers that are deployed across
    multiple Availability Zones and have the **kubelet** and **kube-proxy** agents
    configured to point to the cluster endpoint. The following diagram illustrates
    the standard EKS architecture:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 数据平面通常由部署在多个可用区的 EC2 工作节点组成，并且配置了**kubelet**和**kube-proxy**代理，这些代理指向集群端点。下图展示了标准的
    EKS 架构：
- en: '![Figure 2.1 – High-level overview of EKS architecture](img/B18129_02_01.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – EKS 架构的高级概览](img/B18129_02_01.jpg)'
- en: Figure 2.1 – High-level overview of EKS architecture
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – EKS 架构的高级概览
- en: The next sections will look into how AWS configures and secures the EKS control
    plane along with specific commands you can use to interact with it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分将探讨 AWS 如何配置和保护 EKS 控制平面，并介绍你可以用来与之交互的具体命令。
- en: Understanding the EKS control plane
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 EKS 控制平面
- en: When a new cluster is created, a new control plane is created in an AWS-owned
    VPC in a separate account. There are a minimum of two API servers per control
    plane, spread across two Availability Zones for resilience, which are then exposed
    through a public **network load balancer** (**NLB**). The etcd servers are spread
    across three Availability Zones and configured in an autoscaling group, again
    for resilience.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建新集群时，会在 AWS 所有的 VPC 中创建一个新的控制平面，且该 VPC 位于一个独立账户中。每个控制平面至少有两个 API 服务器，分布在两个可用区以增强弹性，并通过公共**网络负载均衡器**（**NLB**）暴露。etcd
    服务器分布在三个可用区，并配置为自动扩展组，同样是为了增强弹性。
- en: 'The clusters administrators and/or users have no direct access to the cluster’s
    servers; they can only access the K8s API through the load balancer. The API servers
    are integrated with the worker nodes running under a different account/VPC owned
    by the customer by creating **Elastic Network Interfaces** (**ENIs**) in two Availability
    Zones. The kubelet agent running on the worker nodes uses a Route 53 private hosted
    zone, attached to the worker node VPC, to resolve the IP addresses associated
    with the ENIs. The following diagram illustrates this architecture:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 集群的管理员和/或用户无法直接访问集群的服务器；他们只能通过负载均衡器访问 K8s API。API 服务器通过在两个可用区中创建**弹性网络接口**（**ENIs**）与在客户拥有的不同账户/VPC
    下运行的工作节点集成。运行在工作节点上的 kubelet 代理使用附加到工作节点 VPC 的 Route 53 私有托管区来解析与 ENIs 相关联的 IP
    地址。下图展示了这一架构：
- en: '![Figure 2.2 – Detailed EKS architecture](img/B18129_02_02.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 详细的 EKS 架构](img/B18129_02_02.jpg)'
- en: Figure 2.2 – Detailed EKS architecture
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 详细的 EKS 架构
- en: Important note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: One key *gotcha* with this architecture, as there is currently no private EKS
    endpoint, is that worker nodes need internet access to be able to get the cluster
    details through the AWS EKS DescribeCluster API. This generally means that subnets
    with worker nodes need either an internet/NAT gateway or a route to the internet.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个架构的一个关键 *陷阱* 是，目前没有私有的 EKS 端点，因此工作节点需要互联网访问权限才能通过 AWS EKS DescribeCluster
    API 获取集群详情。这通常意味着带有工作节点的子网需要有互联网/NAT 网关或通向互联网的路由。
- en: Understanding cluster security
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解集群安全性
- en: When a new cluster is created, a new security group is also created and controls
    access to the API server ENIs. The cluster security group must be configured to
    allow any network addresses that need to access the API servers. In the case of
    a public cluster (discussed in [*Chapter 7*](B18129_07.xhtml#_idTextAnchor107),
    *Networking in EKS*), these ENIs are only used by the worker nodes. When the cluster
    is private, these ENIs are also used for client (kubectl) access to the API servers;
    otherwise, all API connectivity is through the public endpoint.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建新集群时，系统会同时创建一个新的安全组，并控制对 API 服务器 ENI 的访问。集群安全组必须配置为允许需要访问 API 服务器的任何网络地址。如果是公共集群（在
    [*第 7 章*](B18129_07.xhtml#_idTextAnchor107) 中讨论的 *EKS 网络*），这些 ENI 仅由工作节点使用。当集群是私有的时，这些
    ENI 也用于客户端（kubectl）访问 API 服务器；否则，所有 API 连接都通过公共端点进行。
- en: Typically, separate security groups are configured for the worker nodes and
    allow access to and from the nodes that make up the data plane. AWS has a feature
    called *security group referencing*, with which you can reference an existing
    security group from another security group. This simplifies the process of connecting
    worker nodes to cluster ENIs by referencing any worker node security groups in
    the cluster security group. The minimum you will need to allow from the worker
    node security group is HTTPS (TCP 443), DNS (TCP/UDP 53), and kubelet commands
    and logs (TCP 10250). The following diagram illustrates this architecture.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，为工作节点配置独立的安全组，并允许访问与数据平面相关的节点之间的通信。AWS 提供了一项名为 *安全组引用* 的功能，允许你从另一个安全组中引用现有的安全组。这简化了通过引用集群安全组中的任何工作节点安全组来将工作节点连接到集群
    ENI 的过程。你需要从工作节点安全组中允许的最小访问权限是 HTTPS（TCP 443）、DNS（TCP/UDP 53）以及 kubelet 命令和日志（TCP
    10250）。以下图示说明了这种架构。
- en: '![Figure 2.3 – EKS security groups](img/B18129_02_03.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – EKS 安全组](img/B18129_02_03.jpg)'
- en: Figure 2.3 – EKS security groups
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – EKS 安全组
- en: Understanding your cluster through the command line
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过命令行了解你的集群
- en: 'Let’s use the AWS and kubectl `aws eks` `list-clusters` command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 AWS 和 kubectl 的 `aws eks` `list-clusters` 命令：
- en: '[PRE0]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the preceding output, we can see one cluster listed. We can get more details
    using the `aws eks describe-cluster –``name` command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的输出中，我们可以看到列出了一个集群。我们可以使用 `aws eks describe-cluster --name` 命令获取更多细节：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding output has been truncated but shows the endpoint located in the
    `eu-central-1` region. We can see the name of the cluster and that the endpoint
    is set to allow `PublicAccess` (internet) and also `PrivateAccess` (VPC). This
    means your client (kubectl, for example) can access the cluster through the internet
    or from anything connected that can route to the VPC hosting the cluster ENIs
    (assuming access lists, firewall rules, and security groups allow access).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的输出已被截断，但显示了位于 `eu-central-1` 区域的端点。我们可以看到集群的名称，并且端点已设置为允许 `PublicAccess`（互联网访问）和
    `PrivateAccess`（VPC 内部访问）。这意味着你的客户端（例如 kubectl）可以通过互联网或从任何可以路由到 VPC 的连接中访问集群（前提是访问列表、防火墙规则和安全组允许访问）。
- en: 'One further step is needed before we can use kubectl, which is to use the `aws
    eks update-kubeconfig` command to set up the relevant certificates and contexts
    in the config file to allow **kubectl** to communicate with the cluster. This
    can be done manually, but it’s much easier to use the AWS CLI command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以使用 kubectl 之前，需要做一个额外的步骤，即使用 `aws eks update-kubeconfig` 命令设置配置文件中的相关证书和上下文，以允许
    **kubectl** 与集群通信。这个过程可以手动完成，但使用 AWS CLI 命令会更简单：
- en: '[PRE2]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Important note
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 重要注意事项
- en: You will need IAM privileges to the AWS EKS to perform these commands, along
    with K8s RBAC privilege to perform the kubectl commands, even if you have network
    access to the cluster endpoint.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要拥有 AWS EKS 的 IAM 权限来执行这些命令，同时需要 K8s RBAC 权限来执行 kubectl 命令，即使你已经拥有对集群端点的网络访问权限。
- en: 'If you use the `kubectl cluster-info` and `kubectl version` commands, you’ll
    see similar information displayed to the `aws eks describe-cluster` command. Cluster
    node, storage, and Pod details can be determined using the kubectl commands, `get
    nodes`, `get pv`, and `get po`, as shown here. Namespace and sort command modifiers
    can be used to help with the output:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 `kubectl cluster-info` 和 `kubectl version` 命令，您将看到与 `aws eks describe-cluster`
    命令类似的信息。集群节点、存储和 Pod 的详细信息可以通过 kubectl 命令 `get nodes`、`get pv` 和 `get po` 来确定，如下所示。命名空间和排序命令修饰符可用于帮助输出：
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The previous output tells us that the cluster has two worker nodes with no physical
    volumes configured, and is just hosting the key cluster services of `coredns`
    (cluster DNS services), `kube-proxy` (cluster networking), and `aws-node` (AWS
    VPC CNI).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的输出告诉我们，集群有两个工作节点，没有配置物理卷，并且仅托管 `coredns`（集群 DNS 服务）、`kube-proxy`（集群网络）和 `aws-node`（AWS
    VPC CNI）等关键集群服务。
- en: Now that we have reviewed what EKS is, let’s look at how it’s priced in AWS.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了什么是 EKS，让我们看看它在 AWS 中的定价。
- en: Investigating the Amazon EKS pricing model
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调查 Amazon EKS 定价模型
- en: 'In this section, we will have a brief overview of the Amazon EKS pricing model.
    As the pricing model for AWS changes from time to time, it is always recommended
    to check out the latest updates on the Amazon EKS pricing page to get more detail:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将简要概述 Amazon EKS 定价模型。由于 AWS 的定价模型会时常变动，建议您查看最新的 Amazon EKS 定价页面，以获取更多详细信息：
- en: 'Amazon EKS pricing: [https://aws.amazon.com/eks/pricing/](https://aws.amazon.com/eks/pricing/)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊 EKS 定价：[https://aws.amazon.com/eks/pricing/](https://aws.amazon.com/eks/pricing/)
- en: 'AWS Pricing Calculator: [https://calculator.aws](https://calculator.aws)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 定价计算器：[https://calculator.aws](https://calculator.aws)
- en: 'A single cluster will incur two types of costs:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 单个集群将产生两种类型的费用：
- en: Fixed monthly costs for the EKS control plane
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS 控制平面的固定月度费用
- en: Variable costs from your computing, networking, and storage resources
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自计算、网络和存储资源的可变成本
- en: Fixed control plane costs
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 固定的控制平面费用
- en: Control plane pricing is fixed at $0.10 per hour, which equates to $73 (USD)
    per month per cluster, as shown in the following calculation. This is irrespective
    of any scaling or failure recovery activities that happen in the control plane
    managed by AWS.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 控制平面定价固定为每小时 0.10 美元，相当于每个集群每月 73 美元（如以下计算所示）。这与控制平面由 AWS 管理的任何扩展或故障恢复活动无关。
- en: '*1 cluster x 0.10 USD per hour x 730 hours per month =* *73.00 USD*'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '*1 集群 x 每小时 0.10 美元 x 每月 730 小时 =* *73.00 美元*'
- en: Variable costs
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可变成本
- en: By itself, the control plane cannot really work. It needs compute resources
    so it can actually schedule and host Pods. In turn, the compute platform needs
    storage and networking to function, but these resources are very much based on
    a variable cost model that will fluctuate depending on how much is used.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 控制平面本身无法真正工作。它需要计算资源，以便可以实际调度和托管 Pods。反过来，计算平台需要存储和网络才能正常运行，但这些资源是基于可变成本模型的，成本会根据使用量波动。
- en: 'There are two compute options for EKS workers, which will be discussed in detail
    later when we talk about worker nodes (EC2) and Fargate:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: EKS 工作节点有两种计算选项，稍后我们会详细讨论（EC2 和 Fargate）：
- en: 'When using EC2, costs will fluctuate based on the following:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 EC2 时，费用将根据以下因素波动：
- en: The size and number of EC2 instances
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2 实例的大小和数量
- en: The amount of storage attached to an instance
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附加到实例的存储量
- en: The region they are deployed into
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们部署的区域
- en: The type of pricing model, on-demand, reserve instances, spot instances, or
    any saving plans you have
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定价模型的类型：按需、预留实例、抢占实例或您拥有的任何节省计划
- en: 'When using Fargate, costs will fluctuate based on the following:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Fargate 时，费用将根据以下因素波动：
- en: The number of Fargate instances
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fargate 实例的数量
- en: The instance operating system/CPU processor
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例操作系统/CPU 处理器
- en: The region they are deployed into
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们部署的区域
- en: The per CPU/RAM per instance/hour used
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个实例/每小时的 CPU/RAM 费用
- en: The amount of GB storage/per instance
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个实例的存储量（以 GB 为单位）
- en: 'EC2 workers will communicate with each other and the control plane and Pods
    will do the same, communicating across worker nodes with each other and, in some
    cases, outside the VPC. AWS charges for egress traffic, cross-AZ traffic, and
    network services such as transit or NAT Gateway. Estimating costs for network
    traffic can be one of the most difficult activities as, in most cases, you have
    very little knowledge of how traffic will be routed in the application, nor technical
    aspects such as packet sizes, packets per second, and so on. Network traffic estimation
    is outside the scope of this book but there are some best practices you should
    try and observe:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: EC2 工作节点将彼此通信，控制平面和 Pods 也将进行通信，跨工作节点互相传输数据，在某些情况下，还会涉及到 VPC 外部的通信。AWS 会对外发流量、跨可用区流量以及像
    Transit 或 NAT 网关这样的网络服务收费。估算网络流量成本是最具挑战性的活动之一，因为在大多数情况下，你几乎不了解流量将在应用中如何路由，也不了解数据包大小、每秒数据包数等技术细节。网络流量估算超出了本书的范围，但有一些最佳实践是你应该尝试并遵守的：
- en: Design and deploy applications such that as much traffic as possible can be
    kept *inside* the worker node. For example, if two services need to communicate
    with each other, then use Pod **affinity** labels (EC2 only) to make sure they
    coexist on the same node/nodes.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计和部署应用程序时，尽量让尽可能多的流量留在*工作节点内部*。例如，如果两个服务需要相互通信，可以使用 Pod **亲和性** 标签（仅限 EC2）确保它们共存于同一个节点/节点上。
- en: Design your AWS VPC to keep traffic in the same Availability Zones; for example,
    if your worker nodes are spread over two AZs for resilience, deploy two NAT gateway
    (one per AZ) to reduce cross-AZ network charges. This, of course, could be more
    expensive if you have very little internet traffic, so again, a full understanding
    of your application network profile is needed.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计你的 AWS VPC，确保流量留在相同的可用区内；例如，如果你的工作节点分布在两个可用区中以增强可靠性，可以部署两个 NAT 网关（每个可用区一个）以减少跨可用区的网络费用。当然，如果你的互联网流量非常少，这可能会变得更昂贵，因此仍然需要充分了解你的应用网络配置。
- en: When communicating with AWS services that have an AWS API, such as DynamoDB
    for example, use private endpoints to reduce the network egress costs.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 AWS 服务（如 DynamoDB 等）进行通信时，使用私有端点来减少网络外发费用。
- en: We’ve looked at the theory, the next section will use some concrete examples
    to make it a bit clearer.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了理论，接下来的部分将通过一些具体的示例使其更加清晰。
- en: Estimating costs for an EKS cluster
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 估算 EKS 集群的费用
- en: To better help you understand how to estimate the cost when running an EKS cluster,
    here are a couple of examples of measuring expenses on AWS.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地帮助你理解如何估算运行 EKS 集群时的费用，以下是一些在 AWS 上测量费用的示例。
- en: Example 1 – Running an EKS cluster with worker nodes by launching an EC2 instance
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 1 – 通过启动 EC2 实例运行带有工作节点的 EKS 集群
- en: 'Assume that you choose to create an EKS cluster in the AWS US East Region (N.
    Virginia, us-east-1) with the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你选择在 AWS 美国东部区域（北弗吉尼亚，us-east-1）创建 EKS 集群，并使用以下设置：
- en: 3 on-demand Linux EC2 instances with **m5.large** as the worker, each with a
    20 GB EBS storage gp2 volume attached (General Purpose SSD)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3 个按需 Linux EC2 实例，使用 **m5.large** 作为工作节点，每个实例附带 20 GB 的 EBS 存储 gp2 卷（通用型 SSD）
- en: A cluster that’s available all month (30 days, 730 hours)
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个整月都可用的集群（30 天，730 小时）
- en: 'The monthly expense can be estimated with the following formula:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 每月费用可以通过以下公式估算：
- en: '*1 cluster x 0.10 USD per hour x 730 hours per month =* *73.00 USD*'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*1 集群 x 0.10 USD 每小时 x 730 小时每月 =* *73.00 USD*'
- en: '*3 instances x 0.096 USD x 730 hours in a month = 210.24 USD (monthly* *on-demand
    cost)*'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '*3 实例 x 0.096 USD x 730 小时每月 = 210.24 USD （每月* *按需费用）*'
- en: '*30 GB x 0.10 USD x 3 instances = 9.00 USD (**EBS cost)*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*30 GB x 0.10 USD x 3 实例 = 9.00 USD（**EBS 费用）*'
- en: Totaling all these costs results in a cost per month of $292.24.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些费用加总后，每月费用为 292.24 美元。
- en: Important note
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: This is just a simple example; in reality, these costs can be (and should be)
    significantly reduced using saving plans or reserved instances and storage options
    such as gp3.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个简单示例；实际上，这些费用可以（并且应该）通过使用节省计划或预留实例，以及像 gp3 这样的存储选项大幅减少。
- en: Example 2 – Running an EKS cluster with AWS Fargate
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 2 – 使用 AWS Fargate 运行 EKS 集群
- en: In the previous example, each **m5.large** instance supports 8GB of RAM and
    2 vCPUs and, therefore, we can deploy many Pods to each worker node. If we now
    choose to use Fargate as the compute layer, we now need to think in terms of how
    many Pods we need to support, as one Fargate instance supports one Pod.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，每个 **m5.large** 实例支持 8GB 的 RAM 和 2 个 vCPU，因此我们可以将许多 Pods 部署到每个工作节点。如果我们现在选择使用
    Fargate 作为计算层，我们需要考虑支持多少 Pods，因为一个 Fargate 实例只能支持一个 Pod。
- en: 'Assume that we have the same cluster control plane/region but with the following:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有相同的集群控制平面/区域，但有以下情况：
- en: 15 Pods running and supported by 15 Fargate instances, each with 1 vCPU and
    2 GB memory, and 20GB of ephemeral storage
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 15 个 Pods 运行，并由 15 个 Fargate 实例支持，每个实例配有 1 个 vCPU 和 2 GB 内存，以及 20GB 的临时存储
- en: 15 tasks or Pods per day (730 hours in a month / 24 hours in a day) = 456.25
    tasks per month
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每天 15 个任务或 Pods（每月 730 小时 / 每天 24 小时）= 每月 456.25 个任务
- en: 'The monthly expense can be estimated with the following formula:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 月度费用可以通过以下公式估算：
- en: '*1 cluster x 0.10 USD per hour x 730 hours per month =* *73.00 USD*'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '*1 个集群 x 每小时 0.10 美元 x 每月 730 小时 =* *73.00 美元*'
- en: '*456.25 tasks x 1 vCPU x 1 hours x 0.04048 USD per hour = 18.47 USD for* *vCPU
    hours*'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*456.25 个任务 x 1 vCPU x 1 小时 x 0.04048 美元每小时 = 18.47 美元用于* *vCPU 小时*'
- en: '*456.25 tasks x 2.00 GB x 1 hours x 0.004445 USD per GB per hour = 4.06 USD
    for* *GB hours*'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '*456.25 个任务 x 2.00 GB x 1 小时 x 0.004445 美元每 GB 每小时 = 4.06 美元用于* *GB 小时*'
- en: '*20 GB - 20 GB (no additional charge) = 0.00 GB billable ephemeral storage*
    *per task*'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '*20 GB - 20 GB（无需额外收费） = 0.00 GB 可计费的临时存储* *每个任务*'
- en: Totaling all these costs results in a cost per month of $95.53.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些成本总和每月为 95.53 美元。
- en: As you can see, the costs between EC2 and Fargate are significantly different
    ($292.24 versus $95.53). However, in the Fargate example, there are 15 Pods/instances
    and the Pods are only executing for 1 hour a day. If your applications do not
    behave like this, then the costs will change and could be higher. On EC2, on the
    other hand, you are paying for the compute nodes and so the number of Pods and
    how long they execute for doesn’t matter. In practice, you may see a mixed compute
    environment with EC2 providing compute for long-running Pods and Fargate used
    for more batch-type operations or where you need enhanced security.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，EC2 和 Fargate 之间的成本差异显著（292.24 美元 vs 95.53 美元）。然而，在 Fargate 的例子中，有 15 个
    Pods/实例，并且这些 Pods 每天只执行 1 小时。如果你的应用程序不是这样运行的，那么成本会发生变化，可能会更高。另一方面，在 EC2 上，你是为计算节点付费，因此
    Pods 的数量以及它们执行的时间并不重要。实际上，你可能会看到一个混合的计算环境，EC2 为长时间运行的 Pods 提供计算资源，而 Fargate 用于更多的批处理类型操作或需要增强安全性的场景。
- en: Common mistakes when using EKS
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 EKS 时常见的错误
- en: 'Finally, let’s round off this chapter by discussing how to configure and manage
    EKS in an efficient way, applying best practices when possible. Here are some
    of the common mistakes that we see often when people first begin to use EKS:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们通过讨论如何高效地配置和管理 EKS 来结束这一章，并在可能的情况下应用最佳实践。以下是一些我们常见的错误，尤其是当人们刚开始使用 EKS
    时：
- en: '**Leaving clusters running**: If you don’t need your EKS cluster, shut it down
    or at least remove or scale in the node groups. Creating a cluster for dev or
    test environments (or even just to try the code in the book) will cost you real
    money, so if you’re not using it, shut it down.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集群一直运行**：如果你不需要你的 EKS 集群，关闭它，或者至少删除或缩减节点组。为开发或测试环境创建集群（甚至仅仅是为了尝试书中的代码）会花费你真实的金钱，因此如果不使用它，关掉它。'
- en: '`aws-auth` ConfigMap. Please read [*Chapter 6*](B18129_06.xhtml#_idTextAnchor095),
    *Securing and Accessing Clusters on EKS*, for more information.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aws-auth` ConfigMap。请阅读 [*第六章*](B18129_06.xhtml#_idTextAnchor095)，*EKS 上的集群安全与访问*，了解更多信息。'
- en: '**Running out of Pod IP addresses**: With the AWS CNI, every Pod is assigned
    a VPC IP address. If you don’t configure your VPC and EKS cluster correctly, you
    will run out of IP addresses and your cluster will not be able to schedule any
    more. Please read [*Chapter 7*](B18129_07.xhtml#_idTextAnchor107), *Networking
    in EKS*, for more information.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pod IP 地址耗尽**：使用 AWS CNI，每个 Pod 都会分配一个 VPC IP 地址。如果你没有正确配置你的 VPC 和 EKS 集群，你将耗尽
    IP 地址，集群将无法调度更多的 Pods。请阅读 [*第七章*](B18129_07.xhtml#_idTextAnchor107)，*EKS 中的网络*，了解更多信息。'
- en: '**My cluster IP address is not accessible from my workstation**: Clusters can
    be private (only accessible from the AWS and connected private networks) or public
    (accessible from the internet), so depending on how the cluster is configured,
    as well as the firewalls between your client and the API servers, you may not
    have access to the API servers.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**我的集群 IP 地址无法从我的工作站访问**：集群可以是私有的（仅能从 AWS 和连接的私有网络访问）或公共的（可以从互联网访问），因此根据集群的配置，以及客户机与
    API 服务器之间的防火墙设置，您可能无法访问 API 服务器。'
- en: Summary
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we described how EKS is just a managed version of Kubernetes,
    with the main difference that AWS will manage and scale the control plane (API
    servers, etcd) for you, while the cluster users/administrators are responsible
    for deploying compute and storage resources to host Pods on the cluster.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们描述了 EKS 只是 Kubernetes 的托管版本，主要的区别在于 AWS 会为您管理和扩展控制平面（API 服务器、etcd 等），而集群的用户/管理员负责部署计算和存储资源以托管
    Pods。
- en: We also looked at the technical architecture of the AWS-managed control plane
    and how you can interact with it. However, we pointed out that’s as it is an AWS
    Managed Service, you have very little ability to modify the servers that make
    up the control plane.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还查看了 AWS 管理控制平面的技术架构，以及如何与其进行交互。然而，我们指出，由于它是 AWS 管理的服务，您几乎没有能力修改构成控制平面的服务器。
- en: We then looked at a couple of EKS cost models to help you understand that while
    the control plane costs are mostly fixed, the costs for compute and storage will
    vary depending on how many Pods or EC2 worker nodes you have. Finally, we discussed
    a few common mistakes made by first-time EKS users.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，我们查看了几种 EKS 成本模型，帮助您理解虽然控制平面成本大多是固定的，但计算和存储的成本将根据您拥有的 Pods 或 EC2 工作节点数量而变化。最后，我们讨论了首次使用
    EKS 的用户常见的一些错误。
- en: In the next chapter, we will learn how to create an EKS cluster and set up the
    environment. We will also cover how you can create your own Amazon EKS cluster
    using different tools.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何创建 EKS 集群并设置环境。我们还将介绍如何使用不同的工具创建自己的 Amazon EKS 集群。
- en: Further reading
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'EKS price reductions: [https://aws.amazon.com/about-aws/whats-new/2020/01/amazon-eks-announces-price-reduction/](https://aws.amazon.com/about-aws/whats-new/2020/01/amazon-eks-announces-price-reduction/
    )'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'EKS 价格降低: [https://aws.amazon.com/about-aws/whats-new/2020/01/amazon-eks-announces-price-reduction/](https://aws.amazon.com/about-aws/whats-new/2020/01/amazon-eks-announces-price-reduction/)'
- en: 'A deep dive into Amazon EKS: [https://www.youtube.com/watch?v=cipDJwDWWbY](https://www.youtube.com/watch?v=cipDJwDWWbY
    )'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '深入了解 Amazon EKS: [https://www.youtube.com/watch?v=cipDJwDWWbY](https://www.youtube.com/watch?v=cipDJwDWWbY)'
- en: 'AWS EKS SLA: [https://aws.amazon.com/eks/sla/](https://aws.amazon.com/eks/sla/)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'AWS EKS SLA: [https://aws.amazon.com/eks/sla/](https://aws.amazon.com/eks/sla/)'
