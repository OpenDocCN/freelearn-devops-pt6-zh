- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security, Auditing, and Compliance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous chapters, we established the foundations from a design, implementation,
    and operational perspective to address the challenges of Kubernetes Secrets management.
    We also highlighted key areas of concern by peeling each layer of our full-stack
    infrastructure onion while considering paths to reduce or even mitigate security
    exposures. However, no matter how much effort we put into motion, the following
    questions will always float around:'
  prefs: []
  type: TYPE_NORMAL
- en: How can our IT environments be secured enough?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the best practices from a control and audit perspective?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are my **Chief Information Security Officer** (**CISO**) requirements?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This chapter kicks off the advanced topics of this handbook with a reversed
    approach based on the last question, “*What are my CISO team requirements?*” The
    answer is usually in the form of another question, such as “*What are the regulations
    that my organization has to comply with?*”, which implies a legal perspective.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will expand on the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding cybersecurity versus cyber risk management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most common compliance standards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Best practices for controlling, auditing, and mitigating security risks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you will know how to address the security concerns
    at the people, process, and technology levels through a simple reusable blueprint.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To complete the hands-on parts of this chapter, we will be leveraging a series
    of tools and platforms that are commonly used to interact with containers, Kubernetes,
    and Secrets management. For this chapter, we will be continuing with the same
    set of tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '`systemd` at the user level to autostart containers/Pods.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Podman Desktop** ([https://podman-desktop.io](https://podman-desktop.io))
    is open source software that provides a graphical user interface for building,
    starting, and debugging containers, running local Kubernetes instances, easing
    the migration from containers to Pods, and even connecting with remote platforms
    such as Red Hat OpenShift, Azure Kubernetes Engine, and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Git** ([https://git-scm.com](https://git-scm.com)) is a version control system
    that we will be using to cover this book’s examples but also leverage in our discovery
    of Secrets management solutions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kube-bench** ([https://github.com/aquasecurity/kube-bench](https://github.com/aquasecurity/kube-bench))
    is a community tool that can measure your Kubernetes cluster against the CIS Benchmarks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compliance Operator** ([https://github.com/ComplianceAsCode/compliance-operator](https://github.com/ComplianceAsCode/compliance-operator))
    is a community tool that measures and remediates security controls on the Kubernetes
    cluster.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HashiCorp Vault** ([https://www.vaultproject.io/community](https://www.vaultproject.io/community))
    is a community Vault with an Enterprise offering for storing credentials, tokens,
    and more safely.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trousseau** ([https://trousseau.io](https://trousseau.io)) is a KMS provider
    plugin that leverages external KMSs such as HashiCorp Vault, Azure Key Vault,
    and their AWS equivalents.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This book’s GitHub repository contains the digital material linked to this
    book: [https://github.com/PacktPublishing/Kubernetes-Secrets-Handbook](https://github.com/PacktPublishing/Kubernetes-Secrets-Handbook).'
  prefs: []
  type: TYPE_NORMAL
- en: Cybersecurity versus cyber risk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While (cyber)security and cyber risk have more than enough publications, they
    are often mistaken to be the same thing.
  prefs: []
  type: TYPE_NORMAL
- en: The purpose of this section is to help you reflect on reshaping the traditional
    understanding of *doing* security from an IT-centric perspective to *practicing*
    security while having a holistic understanding of the organization’s needs and
    requirements. This will help you perform a dynamic risk management assessment
    for appropriate security measure implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Cybersecurity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Most organizations assign the security domain to their respective IT departments
    by designating a set of limited individuals almost working in isolation. Doing
    so introduces three limitations to their cybersecurity mission:'
  prefs: []
  type: TYPE_NORMAL
- en: A limited scope only related to the infrastructure stack with no or limited
    consideration to critical business applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited knowledge of the organization’s business continuity plan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The operations team has limited capabilities to respond appropriately to a security
    incident
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This model has a twofold approach:'
  prefs: []
  type: TYPE_NORMAL
- en: Incident-driven or reactive
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lock everything down to address the reduced capabilities to monitor and discover
    security breaches
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Since security is seen as a constraint by all IT staff, from developers to operations
    of all domains, drastic changes will be made either on an internal incident basis
    or when there is a public reference within the same industry.
  prefs: []
  type: TYPE_NORMAL
- en: Some argue that they have monitoring and processes in place that help identify
    and drive incidents to resolution. They also agree that there is a lack of fire
    drills to train their IT staff, a similar situation to the **Disaster Recovery**
    **Plan** (**DRP**).
  prefs: []
  type: TYPE_NORMAL
- en: 'In our fast-paced digital economy, this cybersecurity model does not respond
    appropriately to our three questions:'
  prefs: []
  type: TYPE_NORMAL
- en: How can our IT environments be secured enough?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the best practices from a control and audit perspective?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are my CISO’s requirements?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A typical example of ensuring security within this model would be implementing
    a strong login credential policy, including a 30-day password update with additional
    multi-factor authentication with limited integration with the organization’s resources.
    This solution might fit an engineering team working on development but not the
    business team, who mainly uses web-based solutions that time out within a short
    period.
  prefs: []
  type: TYPE_NORMAL
- en: Cyber risk
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A different approach must be considered here: risk management from a business
    angle to address the governance and compliance requirements of each organization
    department. This will help prioritize the design and implementation of security
    measures while acquiring the appropriate skills at the organizational level. This
    approach demands an understanding of the organization’s mechanics, from finance
    to post-sales support, to prevent technical experts under/over-investing in security
    tools that are inefficient for the different business units.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Like a DRP, cyber risk management is about defining the minimal set of requirements
    to enable the organization to achieve its business goals, even in the case of
    a cyber-attack. When building such governance, not only must we answer the three
    aforementioned questions but also get the board to ask each executive the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**CEO**: What would be the brand damage of a security breach?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CFO**: What would be the financial impact of a security breach?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CISO**: Are we prioritizing our investment to improve our security posture?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**COO**: Would our customers/partners trust doing business with our organization?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While cybersecurity is seen as a cost, cyber risk management provides the reporting
    capabilities to show the business value of security investments and associated
    posture with a near-real-time response.
  prefs: []
  type: TYPE_NORMAL
- en: A typical example of security within this model would be implementing a strong
    login credential policy using a one-time password method. This solution offers
    sufficient security for the organization’s employees who are using web-based solutions.
    An additional multi-factor authentication with security auditing could be implemented
    when an employee wants to have access or push changes to the application source
    code.
  prefs: []
  type: TYPE_NORMAL
- en: Compared to the cybersecurity approach, the cyber risk assessment addresses
    different risk levels with corresponding measures from a security, compliance,
    and usability perspective and additional measures when interacting with critical
    assets.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Doing (cyber)security for the sake of ticking a box will not provide any benefit
    to the organization and will frustrate all members of staff, including the IT
    department, resulting in security measures being disabled and shadow infrastructure
    being built.
  prefs: []
  type: TYPE_NORMAL
- en: Governance brings vision, mission, and execution in terms of how to operate
    within the digital economy regarding cyber-attacks. Adding a risk management framework
    will organically introduce the *security* part within your DevOps practice. At
    this point, we can embrace a model that will allow us to identify, protect, detect,
    respond to, and recover from security breaches while considering the necessary
    level of effort per risk to the organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a follow-up to this topic, the following references provide more details
    about the frameworks that aid in this area:'
  prefs: []
  type: TYPE_NORMAL
- en: National Institute of Standards and Technology (2018), *Framework for Improving
    Critical Infrastructure* *Cybersecurity*. Self-Publishing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: European Union Agency for Cybersecurity (2023), *Good Practices for Supply Chain*
    *Cybersecurity*. Self-Publishing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brown, J. (2023), *Executive’s Cybersecurity Program Handbook*, Packt Publishing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compliance standards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concept of compliance is about how an organization will operate respectfully
    while considering a set of laws and policies that are specific to its industry,
    headquarters location, and the countries it may do business with to ensure privacy
    and security. Compliance requirements will dictate most of the requirements of
    an organization’s governance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Any business might have to comply with more than one regulation, depending
    on their activities. A good example would be a US-based software company leveraging
    **artificial intelligence** (**AI**) within the healthcare sector, with **Software-as-a-Service**
    (**SaaS**) and on-premises offerings for medical practice across the globe. This
    implies the following legal compliance:'
  prefs: []
  type: TYPE_NORMAL
- en: The United States **Health Insurance Portability and Accountability Act** (**HIPAA**),
    for handling patient records
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **European Union General Data Protection Regulation** (**GDPR**), a European
    Union regulation for collecting, processing, and storing personal user data from
    third parties
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Payment Card Industry Data Security Standard** (**PCI-DSS**), an international
    industry standard when transacting payment cards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional legal compliance, such as the European Union AI Act, which regulates
    the use of AI, the Cyber Resilience Act, which addresses the secure software supply
    chain, the Data Act, which supports the portability of data across cloud providers,
    and the **Network Information System 2** (**NIS2**) directive, which ensures security
    and incident management best practices for critical infrastructure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not (in)directly (re)sell a solution with any sanctioned country listed by,
    and not limited to, the United States Department of Commerce
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigating the overall compliance obligations could be overwhelming. However,
    most regulations have overlapping security control rules that can be leveraged
    for a simplified or even unified approach. This is why the **Center for Internet
    Security** (**CIS**) created a comprehensive benchmark per digital platform (operating
    system, mobile device, server software, cloud, virtualization, container, and
    so on).
  prefs: []
  type: TYPE_NORMAL
- en: 'The CIS Benchmarks help any organization’s IT department measure its current
    security posture from a security control perspective and related technical configurations,
    including exploit and mitigation details. These controls map with the most common
    regulatory frameworks, such as HIPAA, PCI DSS, SWIFT, ISO 27000, SOC 2, and NIST.
    Here is a mapping example of the CIS Benchmarks with NIST 800-53: [https://www.cisecurity.org/insights/white-papers/cis-controls-v8-mapping-to-nist-800-53-rev-5](https://www.cisecurity.org/insights/white-papers/cis-controls-v8-mapping-to-nist-800-53-rev-5).'
  prefs: []
  type: TYPE_NORMAL
- en: 'From a Kubernetes perspective of the CIS Benchmarks ([https://www.cisecurity.org/benchmark/kubernetes](https://www.cisecurity.org/benchmark/kubernetes)),
    which is version 1.7.0 at the time of writing, here is an overview of the controls
    to be considered to secure Secrets:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--encryption-provider-config` argument is set as appropriate:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This control description is about encrypting the `etcd` key-value store by using
    the remediation that we explored in [*Chapter 3*](B20970_03.xhtml#_idTextAnchor064),
    *Encrypting Secrets the Kubernetes-Native Way*, in the *Key value* *data* section
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The benchmark also includes an audit by checking if `kube-apiserver` is running
    with the `--``encryption-provider-config` flag
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`aescbc`, `aesgcm`, or `kms`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The benchmark also includes an audit that checks the configuration content from
    the file referenced by the `--``encryption-provider-config` flag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Secret`, `ConfigMap`, and `TokenReview` via `Pod` and `Service`*   `Secret`
    as a `Pod` environment variable due to its potential exposures within the node’s
    memory and application logs*   The benchmark also includes an audit overview to
    help you perform a search about environment variables related to Secrets within
    the logs*   `etcd` key-value store, a subject that will be explored in [*Chapter
    11*](B20970_11.xhtml#_idTextAnchor212), *Exploring External* *Secret Stores**   The
    benchmark also includes an audit overview to help you review appropriate Secrets
    management implementation with this third-party solution'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that some regulations might include physical security controls, such as
    data center and physical server access, which are not covered within the CIS Benchmarks.
    However, from our onion perspective and its security analysis in [*Chapter 3*](B20970_03.xhtml#_idTextAnchor064),
    *Encrypting Secrets the Kubernetes-Native Way*, these controls are relevant.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is time to update our onion diagram so that it includes new layers representing
    the continuous effort to ensure compliance with regulatory obligations and standards
    that are described within the organization’s governance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.1 – The security posture framework for Kubernetes Secrets Management](img/B20970_05_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5.1 – The security posture framework for Kubernetes Secrets management
  prefs: []
  type: TYPE_NORMAL
- en: Considering the organization’s governance and this cyber risk assessment model,
    these additional layers provide continuous discovery, assessment, analysis, and
    (mitigation) execution so that we can define and improve the current security
    and compliance posture.
  prefs: []
  type: TYPE_NORMAL
- en: Adopting a DevSecOps mindset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous sections, we drafted a series of best practices that could
    be summarized with the following key points:'
  prefs: []
  type: TYPE_NORMAL
- en: Consider the organization’s governance, which includes the regulatory frameworks
    they must comply with
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adopt a cyber risk management mindset to customize the security controls to
    be implemented that are appropriate to each business unit instead of a rigid one-size-fits-all
    cybersecurity policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider security as a continuous improvement effort of discovering, analyzing,
    and reporting during all operational activities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We’ve used the term *security posture* a couple of times in this handbook.
    Let’s define what it is while utilizing the NIST 800-37 specifications: “*The
    security status of an enterprise’s networks, information, and systems based on
    information assurance resources (for example, people, hardware, software, and
    policies) and capabilities in place to manage the defense of the enterprise and
    to react as the situation changes. This is synonymous with* *security status.*”'
  prefs: []
  type: TYPE_NORMAL
- en: Once you have established your current security posture against a framework
    such as the CIS Benchmarks for Kubernetes, then it will be easier to identify
    the gaps and continuously improve your posture with the current and future missing
    controls.
  prefs: []
  type: TYPE_NORMAL
- en: Embracing this approach introduces a change of mindset, which helps with continuously
    reviewing the organization’s security posture and highlighting the gaps to mitigate.
    This is also referred to as DevSecOps practices.
  prefs: []
  type: TYPE_NORMAL
- en: At this stage, a DevSecOps adoption will organically infuse the governance and
    compliance requirements within the entire DevOps cycle. This will shorten the
    feedback loop for the relevant teams to work on mitigation, and thus improve compliance,
    security response, and posture before deploying to production.
  prefs: []
  type: TYPE_NORMAL
- en: 'Do not consider the DevSecOps practices as a separate framework; instead, see
    them as complementary to the DevOps model. All security practices are tied together
    within each step:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Planning**: This includes security, governance, and compliance requirements
    within the initial project scope. The pitfall would be to consider these requirements
    as the last validation before releasing the application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Development**: This infuses security into the organization’s coding governance
    to help mitigate common exposures. It includes code analysis tooling to help identify
    vulnerabilities before the code is committed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CI/CD**: This involves performing security testing to scan code and container
    images for vulnerabilities. This helps with detecting and remediating these exposures
    before they make their way into production.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous monitoring/auditing**: This helps with detecting and responding
    in near real-time to security exposures. This can also help with risk-based approaches,
    where some security exposures might be considered acceptable to carry on with
    but should be closely monitored.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding security within the DevOps flow will encourage all teams to collaborate
    and promote a culture of shared responsibility and accountability toward high-quality
    and secure software delivery by catching security exposures earlier in the development
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'From our Kubernetes perspective and based on its dedicated CIS Benchmarks,
    the Secrets management part will require us to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Enable encryption capabilities for the `etcd` service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Define and enforce resource access policies for sensitive data payloads such
    as `Secret` but also `ConfigMap` objects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider an external Secrets management solution to enhance the platform’s security
    posture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audit all interactions that are done with these objects within and outside of
    the platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To do so, you’ll require a set of tools that help you discover, analyze, and
    mitigate potential security exposures. We will explore five tools:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Trivy, from Aqua Sec**: This will help you not only scan container image
    vulnerabilities but also secret-related security exposures.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**kube-bench**: For assessing the CIS Benchmarks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compliance Operator**: For assessing supported OpenSCAP profiles and providing
    mitigating paths.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**StackRox**: For assessing supported security profiles for your clusters,
    container images, and networking flows. StackRox has a comprehensive user interface
    with a useful risk-based dashboard that ranks exposures by risk level.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kubernetes logging**: For harvesting all information and audit trails related
    to the interaction between the platform, the applications, and users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s have a look at the capabilities of these tools while illustrating their
    usage. All these tools help you comply with regulations and initiate the DevSecOps
    model while continuously improving your security posture.
  prefs: []
  type: TYPE_NORMAL
- en: Trivy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Due to the immutable nature of container images, it is important to continuously
    track vulnerabilities with a scanner such as Trivy. This tool also has a particular
    interest in Secrets management as it can target specific security severity related
    to Secrets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the Trivy Kubernetes CLI, a scanning process can be triggered specifically
    for Secrets via the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: See the `chapter 5` folder in this book’s GitHub repository for an example of
    how to implement Trivy on a local `kind` Kubernetes cluster.
  prefs: []
  type: TYPE_NORMAL
- en: kube-bench
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your IT department might have already invested in a security suite for your
    entire organization’s infrastructure, but let’s consider surgical tools versus
    generic ones.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to measuring your environment against the CIS Benchmarks, `kube-bench`
    from Aqua Security Software might be one of the most interesting tools to run
    on your Kubernetes cluster(s). The benchmark job can be configured using a standard
    YAML manifest; you can customize it so that it’s relevant to your organization’s
    governance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a check:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This control example assesses if privileged containers – that is, containers
    bypassing any limitations from the `cgroup` controller – can elevate to the user
    root within the container, which also means the root on the operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'This example shows how to disable a control by introducing the `skip` definition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: See the `chapter 5` folder in this book’s GitHub repository for an example of
    how to implement `kube-bench` on a local `kind` Kubernetes cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Compliance Operator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another way to utilize the capabilities of `kube-bench` on a Red Hat OpenShift
    Container Platform and Kubernetes distributions that support operators would be
    **Compliance Operator**. This tool runs compliance checks against the CIS Benchmarks
    and other **Security Content Automation Protocol** (**SCAP**) profiles, such as
    the **Australian Cyber Security Centre’s** (**ACSC’s**) Essential Eight.
  prefs: []
  type: TYPE_NORMAL
- en: This tool not only assesses security exposures but also provides remediation
    capabilities. Like scanning, each mitigation has a YAML definition and can be
    applied one at a time or in batches, which allows for granular testing and validation
    phases. This can also be done on existing clusters for late implementations.
  prefs: []
  type: TYPE_NORMAL
- en: Important notes
  prefs: []
  type: TYPE_NORMAL
- en: Both `kube-bench` and Compliance Operator require specific elevated privileges
    to run that might not fit a production environment. A good practice would be to
    run these scans and remediations on a test environment that reflects your production
    environment before retrofitting the security rules on a production environment.
  prefs: []
  type: TYPE_NORMAL
- en: StackRox
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The open source StackRox project is designed to address security challenges
    linked to the increased usage of containerized applications orchestrated by Kubernetes.
    Its fast adoption creates a growing space for security exposures, which requires
    a platform to offer a series of comprehensive capabilities so that it can do the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: Manage the vulnerabilities of container images with a remediation path. This
    reduces the known security exposures at runtime.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure the container runtime by monitoring the application patterns and detect
    any potential signs of malicious processes, also called mutations. Responses can
    be informative or isolated from the workload.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure the networking flows by providing a graphical view of how containers
    in the same and different namespaces could communicate and provide mitigation
    paths with network policies to limit lateral movements from malicious workloads.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audit and comply by scanning against the top industry and regulatory standards,
    helping organizations to baseline, improve, and maintain their security posture.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrate with development pipelines by leveraging an API-driven approach, thereby
    enabling continuous security checks as early as possible within the development
    process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Available as an open source project and integrated within the OpenShift Container
    Platform from Red Hat, StackRox plays a significant role in comprehensive platforms
    to ease the security part of the DevSecOps workflow.
  prefs: []
  type: TYPE_NORMAL
- en: See the `chapter 5` folder in this book’s GitHub repository for an example of
    how to implement StackRox on a `kind` Kubernetes cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes logging
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While this is a must from a compliance and best practices perspective, the diverse
    landscape of solutions available to accomplish these tasks is overwhelming. As
    such, we will address this using the `Audit` object definition from the Kubernetes
    standard API.
  prefs: []
  type: TYPE_NORMAL
- en: 'Kubernetes comes with an easy way to provide security-relevant records within
    its audit logs by enabling the relevant resources to be monitored. Here is an
    example of the `Secret` and `ConfigMap` objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Save the preceding code into a file called `auditlog-secrets.yaml` and apply
    this configuration against your cluster using `kubectl apply -``f auditlog-secrets.yaml`.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While security and compliance can be overwhelming and considered to be constraining,
    this chapter drafted guidance for an organization to adopt a DevSecOps mindset
    with the support of standard and integrated tools.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to acknowledge that the concept of security and compliance is
    not a finite state, with no single and simple recipe to protect your organization
    from digital threats. (Cyber)security will be welcomed by the entire organization
    when it’s tailored to the business using a risk assessment approach, removing
    the feeling of constraints linked to operating in a so-called secured environment.
    When designed well, all stakeholders will organically participate in the continuous
    efforts of assessing, analyzing, executing, and discovering new policies, vulnerabilities,
    and potential ongoing attacks.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will address the business continuity aspect by introducing
    and implementing the disaster recovery and backup strategies of Kubernetes Secrets.
  prefs: []
  type: TYPE_NORMAL
