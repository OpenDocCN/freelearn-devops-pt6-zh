["```\n$ kubectl describe secret sh.helm.release.v1.prometheus.v1 -n monitoring\nName:         sh.helm.release.v1.prometheus.v1\nNamespace:    monitoring\nLabels:       modifiedAt=1659855458\nname=prometheus\nowner=helm\nstatus=deployed\nversion=1\nAnnotations:  <none>\nType:  helm.sh/release.v1\nData\n====\nrelease:  51716 bytes \n```", "```\nchoco install kubernetes-helm \n```", "```\n$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\n$ chmod 700 get_helm.sh\n$ ./get_helm.sh \n```", "```\nbrew install helm\n$ helm version\nversion.BuildInfo{Version:\"v3.9.2\", GitCommit:\"1addefbfe665c350f4daf868a9adc5600cc064fd\", GitTreeState:\"clean\", GoVersion:\"go1.18.4\"} \n```", "```\n$ helm search hub | wc -l\n     9053 \n```", "```\n$ helm search hub mariadb --max-col-width 60 | head -n 10\nURL                                                             CHART VERSION   APP VERSION DESCRIPTION\nhttps://artifacthub.io/packages/helm/cloudnativeapp/mariadb     6.1.0           10.3.15     Fast, reliable, scalable, and easy to use open-source rel...\nhttps://artifacthub.io/packages/helm/riftbit/mariadb            9.6.0           10.5.12     Fast, reliable, scalable, and easy to use open-source rel...\nhttps://artifacthub.io/packages/helm/bitnami/mariadb            11.1.6          10.6.8      MariaDB is an open source, community-developed SQL databa...\nhttps://artifacthub.io/packages/helm/bitnami-aks/mariadb        11.1.5          10.6.8      MariaDB is an open source, community-developed SQL databa...\nhttps://artifacthub.io/packages/helm/camptocamp3/mariadb        1.0.0                       Fast, reliable, scalable, and easy to use open-source rel...\nhttps://artifacthub.io/packages/helm/openinfradev/mariadb       0.1.1                       OpenStack-Helm MariaDB\nhttps://artifacthub.io/packages/helm/sitepilot/mariadb          1.0.3           10.6        MariaDB chart for the Sitepilot platform.\nhttps://artifacthub.io/packages/helm/groundhog2k/mariadb        0.5.0           10.8.3      A Helm chart for MariaDB on Kubernetes\nhttps://artifacthub.io/packages/helm/nicholaswilde/mariadb      1.0.6           110.4.21    The open source relational database \n```", "```\n$ helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\n\"prometheus-community\" has been added to your repositories \n```", "```\n$ helm search repo prometheus\nNAME                                                CHART VERSION   APP VERSION DESCRIPTION                                                                                                                       test | default\nprometheus-community/kube-prometheus-stack          39.4.1          0.58.0      kube-prometheus-stack collects Kubernetes manif...\nprometheus-community/prometheus                     15.12.0         2.36.2      Prometheus is a monitoring system and time seri...\nprometheus-community/prometheus-adapter             3.3.1           v0.9.1      A Helm chart for k8s prometheus adapter\nprometheus-community/prometheus-blackbox-exporter   6.0.0           0.20.0      Prometheus Blackbox Exporter\nprometheus-community/prometheus-cloudwatch-expo...  0.19.2          0.14.3      A Helm chart for prometheus cloudwatch-exporter\nprometheus-community/prometheus-conntrack-stats...  0.2.1           v0.3.0      A Helm chart for conntrack-stats-exporter\nprometheus-community/prometheus-consul-exporter     0.5.0           0.4.0       A Helm chart for the Prometheus Consul Exporter\nprometheus-community/prometheus-couchdb-exporter    0.2.0           1.0         A Helm chart to export the metrics from couchdb...\nprometheus-community/prometheus-druid-exporter      0.11.0          v0.8.0      Druid exporter to monitor druid metrics with Pr...\nprometheus-community/prometheus-elasticsearch-e...  4.14.0          1.5.0       Elasticsearch stats exporter for Prometheus\nprometheus-community/prometheus-json-exporter       0.2.3           v0.3.0      Install prometheus-json-exporter\nprometheus-community/prometheus-kafka-exporter      1.6.0           v1.4.2      A Helm chart to export the metrics from Kafka i...\nprometheus-community/prometheus-mongodb-exporter    3.1.0           0.31.0      A Prometheus exporter for MongoDB metrics\nprometheus-community/prometheus-mysql-exporter      1.9.0           v0.14.0     A Helm chart for prometheus mysql exporter with...\nprometheus-community/prometheus-nats-exporter       2.9.3           0.9.3       A Helm chart for prometheus-nats-exporter\nprometheus-community/prometheus-node-exporter       3.3.1           1.3.1       A Helm chart for prometheus node-exporter\nprometheus-community/prometheus-operator            9.3.2           0.38.1      DEPRECATED - This chart will be renamed. See ht...\nprometheus-community/prometheus-pingdom-exporter    2.4.1           20190610-1  A Helm chart for Prometheus Pingdom Exporter\nprometheus-community/prometheus-postgres-exporter   3.1.0           0.10.1      A Helm chart for prometheus postgres-exporter\nprometheus-community/prometheus-pushgateway         1.18.2          1.4.2       A Helm chart for prometheus pushgateway\nprometheus-community/prometheus-rabbitmq-exporter   1.3.0           v0.29.0     Rabbitmq metrics exporter for prometheus\nprometheus-community/prometheus-redis-exporter      5.0.0           1.43.0      Prometheus exporter for Redis metrics\nprometheus-community/prometheus-snmp-exporter       1.1.0           0.19.0      Prometheus SNMP Exporter\nprometheus-community/prometheus-stackdriver-exp...  4.0.0           0.12.0      Stackdriver exporter for Prometheus\nprometheus-community/prometheus-statsd-exporter     0.5.0           0.22.7      A Helm chart for prometheus stats-exporter\nprometheus-community/prometheus-to-sd               0.4.0           0.5.2       Scrape metrics stored in prometheus format and ...\nprometheus-community/alertmanager                   0.19.0          v0.23.0     The Alertmanager handles alerts sent by client ...\nprometheus-community/kube-state-metrics             4.15.0          2.5.0       Install kube-state-metrics to generate and expo...\nprometheus-community/prom-label-proxy               0.1.0           v0.5.0      A proxy that enforces a given label in a given ... \n```", "```\n$ helm show chart prometheus-community/prometheus \napiVersion: v2\nappVersion: 2.36.2\ndependencies:\n- condition: kubeStateMetrics.enabled\n  name: kube-state-metrics\n  repository: https://prometheus-community.github.io/helm-charts\n  version: 4.13.*\ndescription: Prometheus is a monitoring system and time series database.\nhome: https://prometheus.io/\nicon: https://raw.githubusercontent.com/prometheus/prometheus.github.io/master/assets/prometheus_logo-cb55bb5c346.png\nmaintainers:\n- email: gianrubio@gmail.com\n  name: gianrubio\n- email: zanhsieh@gmail.com\n  name: zanhsieh\n- email: miroslav.hadzhiev@gmail.com\n  name: Xtigyro\n- email: naseem@transit.app\n  name: naseemkullah\nname: prometheus\nsources:\n- https://github.com/prometheus/alertmanager\n- https://github.com/prometheus/prometheus\n- https://github.com/prometheus/pushgateway\n- https://github.com/prometheus/node_exporter\n- https://github.com/kubernetes/kube-state-metrics\ntype: application\nversion: 15.12.0 \n```", "```\n$ helm install prometheus prometheus-community/prometheus -n monitoring --create-namespace \n```", "```\nNAME: prometheus\nLAST DEPLOYED: Sat Aug  6 23:54:50 2022\nNAMESPACE: monitoring\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None \n```", "```\nNOTES:\nThe Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:\nprometheus-server.default.svc.cluster.local\nGet the Prometheus server URL by running these commands in the same shell:                                                                                        test | default\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app=prometheus,component=server\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace default port-forward $POD_NAME 9090\nThe Prometheus alertmanager can be accessed via port 80 on the following DNS name from within your cluster:\nprometheus-alertmanager.default.svc.cluster.local\nGet the Alertmanager URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app=prometheus,component=alertmanager\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace default port-forward $POD_NAME 9093\n#################################################################################\n######   WARNING: Pod Security Policy has been moved to a global property.  #####\n######            use .Values.podSecurityPolicy.enabled with pod-based      #####\n######            annotations                                               #####\n######            (e.g. .Values.nodeExporter.podSecurityPolicy.annotations) #####\n#################################################################################\nThe Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:\nprometheus-pushgateway.default.svc.cluster.local\nGet the PushGateway URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app=prometheus,component=pushgateway\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace default port-forward $POD_NAME 9091\nFor more information on running Prometheus, visit:\nhttps://prometheus.io/ \n```", "```\n$ helm status -n monitoring prometheus | grep STATUS\nSTATUS: deployed \n```", "```\n$ helm list -n monitoring\nNAME        NAMESPACE   REVISION    UPDATED                                 STATUS      CHART               APP VERSION\nprometheus  monitoring  1           2022-08-06 23:57:34.124225 -0700 PDT    deployed    prometheus-15.12.0  2.36.2 \n```", "```\n$ kubectl describe secret sh.helm.release.v1.prometheus.v1 -n monitoring\nName:         sh.helm.release.v1.prometheus.v1\nNamespace:    monitoring\nLabels:       modifiedAt=1659855458\n              name=prometheus\n              owner=helm\n              status=deployed\n              version=1\nAnnotations:  <none>\nType:  helm.sh/release.v1\nData\n====\nrelease:  51716 bytes \n```", "```\n$ helm list -A \n```", "```\n$ kubectl get secret -A -l owner=helm \n```", "```\nkubectl get secret sh.helm.release.v1.prometheus.v1 -n monitoring -o jsonpath='{.data.release}' | base64 --decode | base64 --decode | gunzip > prometheus.v1.json \n```", "```\nkubectl get secret sh.helm.release.v1.prometheus.v1 -n monitoring -o jsonpath='{.data.release}' | base64 --decode | base64 --decode | gunzip | jq .manifest -r \n```", "```\n$ helm show values prometheus-community/prometheus | wc -l\n    1901 \n```", "```\n$ helm show values prometheus-community/prometheus | head -n 20\nrbac:\n  create: true\npodSecurityPolicy:\n  enabled: false\nimagePullSecrets:\n# - name: \"image-pull-secret\"\n## Define serviceAccount names for components. Defaults to component's fully qualified name.\n##\nserviceAccounts:\n  alertmanager:\n    create: true\n    name:\n    annotations: {}\n  nodeExporter:\n    create: true\n    name:\n    annotations: {} \n```", "```\nimagePullSecrets:\n# - name: \"image-pull-secret\" \n```", "```\n$ helm install prometheus prometheus-community/prometheus --create-namespace -n monitoring -f custom-values.yaml \n```", "```\n$ helm get values prometheus -n monitoring\nUSER-SUPPLIED VALUES:\nnull \n```", "```\n$ k get deploy prometheus-alertmanager -n monitoring\nNAME                      READY   UP-TO-DATE   AVAILABLE   AGE\nprometheus-alertmanager   1/1     1            1           19h \n```", "```\n$ helm upgrade --set alertmanager.enabled=false \\\n     prometheus prometheus-community/prometheus \\\n     -n monitoring\nRelease \"prometheus\" has been upgraded. Happy Helming!\nNAME: prometheus\nLAST DEPLOYED: Sun Aug  7 19:55:52 2022\nNAMESPACE: monitoring\nSTATUS: deployed\nREVISION: 2\nTEST SUITE: None\nNOTES:\n... \n```", "```\n$ k get deployment -n monitoring\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\nprometheus-kube-state-metrics   1/1     1            1           20h\nprometheus-pushgateway          1/1     1            1           20h\nprometheus-server               1/1     1            1           20h \n```", "```\n$ helm get values prometheus -n monitoring\nUSER-SUPPLIED VALUES:\nalertmanager:\n  enabled: false \n```", "```\n$ helm history prometheus -n monitoring\nREVISION    UPDATED                     STATUS      CHART               APP VERSION DESCRIPTION\n1           Sat Aug  6 23:57:34 2022    superseded  prometheus-15.12.0  2.36.2      Install complete\n2           Sun Aug  7 19:55:52 2022    deployed    prometheus-15.12.0  2.36.2      Upgrade complete \n```", "```\n$ helm rollback prometheus 1 -n monitoring\nRollback was a success! Happy Helming!\n$ helm history prometheus -n monitoring\nREVISION    UPDATED                     STATUS      CHART           APP VERSION DESCRIPTION\nREVISION    UPDATED                     STATUS      CHART               APP VERSION DESCRIPTION\n1           Sat Aug  6 23:57:34 2022    superseded  prometheus-15.12.0  2.36.2      Install complete\n2           Sun Aug  7 19:55:52 2022    superseded  prometheus-15.12.0  2.36.2      Upgrade complete\n3           Sun Aug  7 20:02:30 2022    deployed    prometheus-15.12.0  2.36.2      Rollback to 1 \n```", "```\n$ k get deployment -n monitoring\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\nprometheus-alertmanager         1/1     1            1           152m\nprometheus-kube-state-metrics   1/1     1            1           22h\nprometheus-pushgateway          1/1     1            1           22h\nprometheus-server               1/1     1            1           22h \n```", "```\n$ helm list -n monitoring\nNAME        NAMESPACE   REVISION    UPDATED                                 STATUS      CHART               APP VERSION\nprometheus  monitoring  3           2022-08-07 20:02:30.270229 -0700 PDT    deployed    prometheus-15.12.0  2.36.2 \n```", "```\n$ helm uninstall prometheus -n monitoring\nrelease \"prometheus\" uninstalled \n```", "```\n$ helm list -n monitoring\nNAME    NAMESPACE   REVISION    UPDATED STATUS  CHART   APP VERSION \n```", "```\n$ k get all -n monitoring\nNo resources found in monitoring namespace. \n```", "```\n$ helm repo\nThis command consists of multiple subcommands to interact with chart repositories.\nIt can be used to add, remove, list, and index chart repositories.\nUsage:\n  helm repo [command]\nAvailable Commands:\n  add         add a chart repository\n  index       generate an index file given a directory containing packaged charts\n  list        list chart repositories\n  remove      remove one or more chart repositories\n  update      update information of available charts locally from chart repositories \n```", "```\n$ helm create cool-chart\nCreating cool-chart \n```", "```\n$ tree cool-chart\ncool-chart\n├── Chart.yaml\n├── charts\n├── templates\n│  ├── _helpers.tpl\n│  ├── deployment.yaml\n│  ├── hpa.yaml\n│  ├── ingress.yaml\n│  ├── NOTES.txt\n│  ├── service.yaml\n│  ├── serviceaccount.yaml\n│  └── tests\n│     └── test-connection.yaml \n```", "```\n $ helm package cool-chart\nSuccessfully packaged chart and saved it to: cool-chart-0.1.0.tgz \n```", "```\n$ helm lint cool-chart\n==> Linting cool-chart\n[INFO] Chart.yaml: icon is recommended\n1 chart(s) linted, 0 chart(s) failed \n```", "```\ndependencies:\n  - name: kube-state-metrics\n    version: \"4.13.*\"\n    repository: https://prometheus-community.github.io/helm-charts\n    condition: kubeStateMetrics.enabled \n```", "```\n$ helm dep up cool-chart\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the \"prometheus-community\" chart repository\nUpdate Complete. ![](img/B18998_09_001.png)Happy Helming!![](img/B18998_09_001.png)\nSaving 1 charts\nDownloading kube-state-metrics from repo https://prometheus-community.github.io/helm-charts\nDeleting outdated charts \n```", "```\n$ ls cool-chart/charts\nkube-state-metrics-4.13.0.tgz \n```", "```\ndependencies:\n  - name: subchart1\n    repository: http://localhost:10191\n    version: 0.1.0\n    condition: subchart1.enabled, global.subchart1.enabled\n    tags:\n      - front-end\n      - subchart1\n  - name: subchart2\n    repository: http://localhost:10191\n    version: 0.1.0\n    condition: subchart2.enabled,global.subchart2.enabled\n    tags:\n      - back-end\n      - subchart2 \n```", "```\n# parentchart/values.yaml\nsubchart1:\n  enabled: true\ntags:\n  front-end: false\n  back-end: true \n```", "```\n$ helm install --set subchart2.enabled=false \n```", "```\n{{- if and .Values.server.enabled .Values.server.service.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n{{- if .Values.server.service.annotations }}\n  annotations:\n{{ toYaml .Values.server.service.annotations | indent 4 }}\n{{- end }}\n  labels:\n    {{- include \"prometheus.server.labels\" . | nindent 4 }}\n{{- if .Values.server.service.labels }}\n{{ toYaml .Values.server.service.labels | indent 4 }}\n{{- end }}\n  name: {{ template \"prometheus.server.fullname\" . }}\n{{ include \"prometheus.namespace\" . | indent 2 }}\nspec:\n{{- if .Values.server.service.clusterIP }}\n  clusterIP: {{ .Values.server.service.clusterIP }}\n{{- end }}\n{{- if .Values.server.service.externalIPs }}\n  externalIPs:\n{{ toYaml .Values.server.service.externalIPs | indent 4 }}\n{{- end }}\n{{- if .Values.server.service.loadBalancerIP }}\n  loadBalancerIP: {{ .Values.server.service.loadBalancerIP }}\n{{- end }}\n{{- if .Values.server.service.loadBalancerSourceRanges }}\n  loadBalancerSourceRanges:\n  {{- range $cidr := .Values.server.service.loadBalancerSourceRanges }}\n    - {{ $cidr }}\n  {{- end }}\n{{- end }}\n  ports:\n    - name: http\n      port: {{ .Values.server.service.servicePort }}\n      protocol: TCP\n      targetPort: 9090\n    {{- if .Values.server.service.nodePort }}\n      nodePort: {{ .Values.server.service.nodePort }}\n    {{- end }}\n    {{- if .Values.server.service.gRPC.enabled }}\n    - name: grpc\n      port: {{ .Values.server.service.gRPC.servicePort }}\n      protocol: TCP\n      targetPort: 10901\n    {{- if .Values.server.service.gRPC.nodePort }}\n      nodePort: {{ .Values.server.service.gRPC.nodePort }}\n    {{- end }}\n    {{- end }}\n  selector:\n  {{- if and .Values.server.statefulSet.enabled .Values.server.service.statefulsetReplica.enabled }}\n    statefulset.kubernetes.io/pod-name: {{ template \"prometheus.server.fullname\" . }}-{{ .Values.server.service.statefulsetReplica.replica }}\n  {{- else -}}\n    {{- include \"prometheus.server.matchLabels\" . | nindent 4 }}\n{{- if .Values.server.service.sessionAffinity }}\n  sessionAffinity: {{ .Values.server.service.sessionAffinity }}\n{{- end }}\n  {{- end }}\n  type: \"{{ .Values.server.service.type }}\"\n{{- end -}} \n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}-configmap\ndata:\n  greeting: \"Hello World\"\n  drink: {{ .Values.favorite.drink | repeat 3 | quote }}\n  food: {{ .Values.favorite.food | upper }} \n```", "```\nfavorite:\n  drink: coffee\n  food: pizza \n```", "```\n$ helm template food food-chart\n---\n# Source: food-chart/templates/config-map.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: food-configmap\ndata:\n  greeting: \"Hello World\"\n  drink: \"coffeecoffeecoffee\"\n  food: PIZZA \n```", "```\n$ helm install food food-chart --dry-run -n monitoring\nNAME: food\nLAST DEPLOYED: Mon Aug  8 00:24:03 2022\nNAMESPACE: monitoring\nSTATUS: pending-install\nREVISION: 1\nTEST SUITE: None\nHOOKS:\nMANIFEST:\n---\n# Source: food-chart/templates/config-map.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: food-configmap\ndata:\n  greeting: \"Hello World\"\n  drink: \"coffeecoffeecoffee\"\n  food: PIZZA \n```", "```\n$ helm template food food-chart --set favorite.drink=water\n---\n# Source: food-chart/templates/config-map.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: food-configmap\ndata:\n  greeting: \"Hello World\"\n  drink: \"waterwaterwater\"\n  food: PIZZA \n```", "```\n$ helm install food food-chart -n monitoring \nNAME: food\nLAST DEPLOYED: Mon Aug  8 00:25:53 2022\nNAMESPACE: monitoring\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None \n```", "```\n$ helm list -n monitoring\nNAME    NAMESPACE   REVISION    UPDATED                                 STATUS      CHART               APP VERSION\nfood    monitoring  1           2022-08-08 00:25:53.587342 -0700 PDT    deployed    food-chart-0.1.0    1.16.0 \n```", "```\n$ k get cm food-configmap -o yaml -n monitoring\napiVersion: v1\ndata:\n  drink: coffeecoffeecoffee\n  food: PIZZA\n  greeting: Hello World\nkind: ConfigMap\nmetadata:\n  annotations:\n    meta.helm.sh/release-name: food\n    meta.helm.sh/release-namespace: monitoring\n  creationTimestamp: \"2022-08-08T07:25:54Z\"\n  labels:\n    app.kubernetes.io/managed-by: Helm\n  name: food-configmap\n  namespace: monitoring\n  resourceVersion: \"4247163\"\n  uid: ada4957d-bd6d-4c2e-8b2c-1499ca74a3c3 \n```", "```\nserver:\n  ## Prometheus server container name\n  ##\n  enabled: true\n  ## Use a ClusterRole (and ClusterRoleBinding)\n  ## - If set to false - we define a RoleBinding in the defined namespaces ONLY\n  ##\n  ## NB: because we need a Role with nonResourceURL's (\"/metrics\") - you must get someone with Cluster-admin privileges to define this role for you, before running with this setting enabled.\n  ##     This makes prometheus work - for users who do not have ClusterAdmin privs, but wants prometheus to operate on their own namespaces, instead of clusterwide.\n  ##\n  ## You MUST also set namespaces to the ones you have access to and want monitored by Prometheus.\n  ##\n  # useExistingClusterRoleName: nameofclusterrole\n  ## namespaces to monitor (instead of monitoring all - clusterwide). Needed if you want to run without Cluster-admin privileges.\n  # namespaces:\n  #   - yournamespace\n  name: server\n  # sidecarContainers - add more containers to prometheus server\n  # Key/Value where Key is the sidecar `- name: <Key>`\n  # Example:\n  #   sidecarContainers:\n  #      webserver:\n  #        image: nginx\n  sidecarContainers: {} \n```"]