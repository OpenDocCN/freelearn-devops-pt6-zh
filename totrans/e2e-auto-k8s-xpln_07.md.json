["```\n#Enable Composition revision in an existing environment\n```", "```\nhelm upgrade crossplane –namespace crossplane-system crossplane-stable/crossplane –set args='{--enable-composition-revisions}' \n```", "```\n#Enable Composition revision in a new Crossplane setup\n```", "```\nhelm install crossplane –namespace crossplane-system crossplane-stable/crossplane –set args='{--enable-composition-revisions}'\n```", "```\napiVersion: apiextensions.crossplane.io/v1\n```", "```\nkind: CompositeResourceDefinition\n```", "```\nmetadata:\n```", "```\n  name: xmysqls.composition-revision.imarunrk.com\n```", "```\nspec:\n```", "```\n  group: composition-revision.imarunrk.com\n```", "```\n  names:\n```", "```\n    kind: XMySql\n```", "```\n    plural: xmysqls\n```", "```\n  claimNames:\n```", "```\n    kind: MySql\n```", "```\n    plural: mysqls\n```", "```\n  versions:\n```", "```\n  - name: v1\n```", "```\n    served: true\n```", "```\n    referenceable: true\n```", "```\n    schema:\n```", "```\n      openAPIV3Schema:\n```", "```\n        type: object\n```", "```\n        properties:\n```", "```\n          spec:\n```", "```\n            type: object\n```", "```\n            properties:\n```", "```\n              parameters:\n```", "```\n                type: object\n```", "```\n                properties:\n```", "```\n                  size:\n```", "```\n                    type: integer\n```", "```\n                required:\n```", "```\n                - size\n```", "```\n            required:\n```", "```\n            - parameters\n```", "```\napiVersion: apiextensions.crossplane.io/v1\n```", "```\nkind: Composition\n```", "```\nmetadata:\n```", "```\n  name: gcp-mysql\n```", "```\nspec:\n```", "```\n  compositeTypeRef:\n```", "```\n    apiVersion: composition-revision.imarunrk.com/v1\n```", "```\n    kind: XMySql\n```", "```\n  resources:\n```", "```\n  - name: cloudsqlinstance\n```", "```\n    base:\n```", "```\n      apiVersion: database.gcp.crossplane.io/v1beta1\n```", "```\n      kind: CloudSQLInstance\n```", "```\n      spec:\n```", "```\n        providerConfigRef:\n```", "```\n          name: gcp-credentials-project-1\n```", "```\n        forProvider:\n```", "```\n          region: us-central1\n```", "```\n          databaseVersion: MYSQL_5_7\n```", "```\n          settings:\n```", "```\n            tier: db-g1-small\n```", "```\n            dataDiskSizeGb: 40\n```", "```\n    patches:\n```", "```\n    - type: FromCompositeFieldPath\n```", "```\n      fromFieldPath: spec.parameters.size\n```", "```\n      toFieldPath: spec.forProvider.settings.dataDiskSizeGb\n```", "```\n# List of revisions for Composition named gcp-mysql\n```", "```\nkubectl get compositionrevision -l crossplane.io/composition-name=gcp-mysql\n```", "```\napiVersion: composition-revision.imarunrk.com/v1\n```", "```\nkind: MySql\n```", "```\nmetadata:\n```", "```\n  namespace: alpha\n```", "```\n  name: mysql-db-manual\n```", "```\nspec:\n```", "```\n  compositionUpdatePolicy: Manual\n```", "```\n  compositionRef:\n```", "```\n    name: gcp-mysql\n```", "```\n  parameters:\n```", "```\n    size: 10\n```", "```\npatches:\n```", "```\n    - type: FromCompositeFieldPath\n```", "```\n      fromFieldPath: spec.parameters.size\n```", "```\n      toFieldPath: spec.forProvider.settings.dataDiskSizeGb\n```", "```\n      transforms:\n```", "```\n      - type: math\n```", "```\n        math:\n```", "```\n          multiply: 4\n```", "```\n- type: FromCompositeFieldPath\n```", "```\n      fromFieldPath: metadata.name\n```", "```\n      toFieldPath: metadata.annotations[crossplane.io/external-name]\n```", "```\n      transforms:\n```", "```\n      - type: string\n```", "```\n        string:\n```", "```\n          fmt: \"%s-gcp-mysql-cloudsqlinstance\"\n```", "```\npatchSets:\n```", "```\n  - name: region\n```", "```\n    patches:\n```", "```\n    - type: FromCompositeFieldPath\n```", "```\n      fromFieldPath: spec.parameters.region\n```", "```\n      toFieldPath: spec.forProvider.region\n```", "```\npatches:\n```", "```\n    - type: PatchSet\n```", "```\n      patchSetName: region\n```", "```\n2022-01-15T20:06:46.217Z     ERROR     crossplane.controller-runtime.manager.controller.defined/compositeresourcedefinition.apiextensions.crossplane.io     Reconciler error     {\"reconciler group\": \"apiextensions.crossplane.io\", \"reconciler kind\": \"CompositeResourceDefinition\", \"name\": \"xbuckets.version-test.imarunrk.com\", \"namespace\": \"\", \"error\": \"cannot apply rendered composite resource CustomResourceDefinition: cannot create object: CustomResourceDefinition.apiextensions.k8s.io \\\"xbuckets.version-test.imarunrk.com\\\" is invalid: [spec.versions[0].name: Invalid value: \\\"v1.0\\\": a DNS-1035 label must consist of lower case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character (e.g. 'my-name', or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?'), spec.version: Invalid value: \\\"v1.0\\\": a DNS-1035 label must consist of lower case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character (e.g. 'my-name', or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')]\"}\n```", "```\nversions:\n```", "```\n  - name: v1alpha\n```", "```\n    schema:\n```", "```\n      openAPIV3Schema:\n```", "```\n      # Input and output definition for the XR\n```", "```\nopenAPIV3Schema:\n```", "```\n  type: object\n```", "```\n  properties:\n```", "```\n    # spec – the API input configuration\n```", "```\n    spec:\n```", "```\n      type: object\n```", "```\n      properties:\n```", "```\n        ............. configuration continues \n```", "```\n     # status – the API output configuration \n```", "```\n     status:\n```", "```\n       type: object\n```", "```\n       properties:\n```", "```\n         ............. configuration continues\n```", "```\n# The root attribute openAPIV3Schema of type object\n```", "```\nopenAPIV3Schema:\n```", "```\n  type: object\n```", "```\n  # spec/status - attributes (properties) of openAPIV3Schema\n```", "```\n  properties:\n```", "```\n    # spec – the XR input\n```", "```\n    spec:\n```", "```\n      type: object\n```", "```\n      properties:\n```", "```\n        # parameters - again an object with attributes list\n```", "```\n        parameters:\n```", "```\n          type: object\n```", "```\n          properties:\n```", "```\n            # region – string primitive  - node ends\n```", "```\n            region:\n```", "```\n            type: string\n```", "```\n    # status – API output configuration\n```", "```\n    # The exact structure of configuration as before\n```", "```\n    # Attributes, their types, and properties\n```", "```\n    status:\n```", "```\n      type: object\n```", "```\n            properties:\n```", "```\n              zone:\n```", "```\n                description: DB zone.\n```", "```\n                type: string   \n```", "```\nspec:\n```", "```\n  type: object\n```", "```\n  description: API input specification \n```", "```\n  properties:\n```", "```\n    parameters:\n```", "```\n      type: object\n```", "```\n      description: Parameter's to configure the resource\n```", "```\n      properties:\n```", "```\n        size:\n```", "```\n          type: integer\n```", "```\n          description: Disk size of the database\n```", "```\n          default: 20\n```", "```\n          minimum: 10\n```", "```\n          maximum: 100\n```", "```\n        vm:\n```", "```\n          type: string\n```", "```\n          description: Size of the virtual machine.\n```", "```\n        enum:\n```", "```\n        - small\n```", "```\n        - medium\n```", "```\n        - large\n```", "```\n      required:\n```", "```\n      - size\n```", "```\n  required:\n```", "```\n  - parameters\n```", "```\nadditionalPrinterColumns:\n```", "```\n- name: Zone\n```", "```\n  type: string\n```", "```\n  description: \n```", "```\n  jsonPath: .spec.zone\n```", "```\n- name: Age\n```", "```\n  type: date\n```", "```\n  jsonPath: .metadata.creationTimestamp\n```"]