["```\napiVersion: \"apiextensions.k8s.io/v1beta1\"\n```", "```\nkind: \"CustomResourceDefinition\"\n```", "```\nmetadata:\n```", "```\n  name: \"clouddbs.book.imarunrk.com\"\n```", "```\nspec:\n```", "```\n  group: \"book.imarunrk.com\"\n```", "```\n  version: \"v1\"\n```", "```\n  scope: \"Namespaced\"\n```", "```\n  names:\n```", "```\n    plural: \"clouddbs\"\n```", "```\n    singular: \"clouddb\"\n```", "```\n    kind: \"CloudDB\"\n```", "```\n  validation:\n```", "```\n    openAPIV3Schema:\n```", "```\n      required: [\"spec\"]\n```", "```\n      properties:\n```", "```\n        spec:\n```", "```\n         required: [\"type\",\"cloud\"]\n```", "```\n         properties:\n```", "```\n           type:\n```", "```\n              type: \"string\"\n```", "```\n              minimum: 1\n```", "```\n           cloud:\n```", "```\n              type: \"string\"\n```", "```\n              minimum: 1 \n```", "```\n# Apply the CRD yaml to the Kubernetes cluster\n```", "```\nkubectl create -f crd.yaml\n```", "```\napiVersion: \"book.imarunrk.com/v1\"\n```", "```\nkind: \"CloudDB\"\n```", "```\nmetadata:\n```", "```\n  name: \"aws_RDS\"\n```", "```\nspec:\n```", "```\n  type: \"sql\"\n```", "```\n  cloud : \"aws\"\n```", "```\n# Apply the CloudDB yaml to the Kubernetes cluster\n```", "```\nkubectl create -f aws_rds.yaml\n```", "```\napiVersion: database.gcp.crossplane.io/v1beta1\n```", "```\nkind: CloudSQLInstance\n```", "```\nmetadata:\n```", "```\n  name: my-GCP-DB\n```", "```\nspec:\n```", "```\n  forProvider:\n```", "```\n    databaseVersion: POSTGRES_9_6\n```", "```\n    region: asia-south2\n```", "```\n    settings:\n```", "```\n      tier: db-n1-standard-1\n```", "```\n      dataDiskSizeGb: 10\n```", "```\n  writeConnectionSecretToRef:\n```", "```\n    namespace: DB\n```", "```\n    name: my-GCP-DB-credentials\n```", "```\n# View the resources created with\n```", "```\nkubectl get cloudsqlinstance my-GCP-DB\n```", "```\nkubectl describe cloudsqlinstance my-GCP-DB\n```", "```\n# Delete the resources created with\n```", "```\nkubectl delete cloudsqlinstance my-GCP-DB\n```", "```\n# Install helm in mac\n```", "```\nbrew install helm\n```", "```\n# Install helm in windows\n```", "```\nchoco install kubernetes-helm\n```", "```\n# Step 1: Create target namespace \n```", "```\nkubectl create namespace crossplane-system\n```", "```\n# Step 2: Add crossplane stable repo to helm and update \n```", "```\nhelm repo add crossplane-stable \\ https://charts.crossplane.io/stable\n```", "```\nhelm repo update\n```", "```\n# Step 3: Install Crossplane\n```", "```\nhelm install crossplane --namespace crossplane-system crossplane-stable/crossplane\n```", "```\n# To remove Crossplane\n```", "```\nhelm delete crossplane --namespace crossplane-system\n```", "```\n    ./google-cloud-sdk/install.sh\n    ```", "```\n    gcloud init\n    ```", "```\n# Enable Kubernetes APIs , CloudSQL APIs, Network APIs and Compute APIs\n```", "```\ngcloud services enable container.googleapis.com\n```", "```\ngcloud services enable sqladmin.googleapis.com\n```", "```\ngcloud services enable compute.googleapis.com\n```", "```\ngcloud services enable servicenetworking.googleapis.com\n```", "```\n    gcloud projects list --format='value(project_id)'\n    ```", "```\n    # Create service account\n    gcloud iam service-accounts create crossplane-service-account --display-name \"crossplane service account\" --project=crossplane-330620\n    # Get the name of the service account\n    gcloud iam service-accounts list --filter=\"email ~ ^crossplane-service-account\" --format='value(email)'\n    # Add required IAM role to the service account\n    gcloud projects add-iam-policy-binding crossplane-330620 --member \"serviceAccount:crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\" --role=\"roles/iam.serviceAccountUser\"\n    gcloud projects add-iam-policy-binding crossplane-330620 --member \"serviceAccount:crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\" --role=\"roles/cloudsql.admin\"\n    gcloud projects add-iam-policy-binding crossplane-330620 --member \"serviceAccount:crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\" --role=\"roles/container.admin\"\n    gcloud projects add-iam-policy-binding crossplane-330620 --member \"serviceAccount:crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\" --role=\"roles/redis.admin\"\n    gcloud projects add-iam-policy-binding crossplane-330620 --member \"serviceAccount:crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\" --role=\"roles/compute.networkAdmin\"\n    gcloud projects add-iam-policy-binding crossplane-330620 --member \"serviceAccount:crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\" --role=\"roles/storage.admin\"\n    ```", "```\n    gcloud iam service-accounts keys create crossplane-service-account.json --iam-account crossplane-service-account@crossplane-330620.iam.gserviceaccount.com\n    ```", "```\n    kubectl create secret generic gcp-account -n crossplane-system --from-file=creds=./crossplane-service-account.json \n    ```", "```\napiVersion: pkg.crossplane.io/v1\n```", "```\nkind: Provider\n```", "```\nmetadata:\n```", "```\n  name: provider-gcp\n```", "```\nspec:\n```", "```\n  package: crossplane/provider-gcp:v0.18.0\n```", "```\nkubectl apply -f Provider.yaml\n```", "```\nkubectl get all -n crossplane-system\n```", "```\napiVersion: gcp.crossplane.io/v1beta1\n```", "```\nkind: ProviderConfig\n```", "```\nmetadata:\n```", "```\n  name: gcp-credentials-project-1 \n```", "```\nspec:\n```", "```\n  projectID: crossplane-330620\n```", "```\n  credentials:\n```", "```\n    source: Secret\n```", "```\n    secretRef:\n```", "```\n      namespace: crossplane-system\n```", "```\n      name: gcp-account\n```", "```\n      key: service-account\n```", "```\nkubectl apply -f providerconfig.yaml\n```", "```\nkubectl get providerconfig\n```", "```\napiVersion: database.gcp.crossplane.io/v1beta1\n```", "```\nkind: CloudSQLInstance\n```", "```\nmetadata:\n```", "```\n  name: my-GCP-DB\n```", "```\nspec:\n```", "```\n  # Reference to use a specific provider config \n```", "```\n  providerConfigRef:\n```", "```\n    name: gcp-credentials-project-1\n```", "```\n  forProvider:\n```", "```\n    databaseVersion: POSTGRES_9_6\n```", "```\n    region: asia-south2\n```", "```\n    settings:\n```", "```\n      tier: db-n1-standard-1\n```", "```\n      dataDiskSizeGb: 10\n```", "```\napiVersion: database.gcp.crossplane.io/v1beta1\n```", "```\nkind: CloudSQLInstance\n```", "```\nmetadata:\n```", "```\n  name: db-gcp\n```", "```\nspec:\n```", "```\n  providerConfigRef:\n```", "```\n    name: gcp-credentials-project-1\n```", "```\n  writeConnectionSecretToRef:\n```", "```\n    namespace: crossplane-system\n```", "```\n    name: db-conn\n```", "```\n  forProvider:\n```", "```\n    databaseVersion: POSTGRES_9_6\n```", "```\n    region: us-central\n```", "```\n    settings:\n```", "```\n      tier: db-g1-small\n```", "```\n      dataDiskSizeGb: 20\n```"]