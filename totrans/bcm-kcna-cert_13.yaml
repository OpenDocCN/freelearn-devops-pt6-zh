- en: '13'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Road Ahead
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is it! Congratulations on reaching the final chapter of the book! I hope
    this has been an exciting journey and you’re eager to learn more and move forward.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover a few final topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Advancing a cloud-native career
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contributing to open source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no prerequisite for passing the KCNA exam for this chapter, but the
    following information should give you some guidance on what your next career goals
    and milestones could be after becoming KCNA-certified.
  prefs: []
  type: TYPE_NORMAL
- en: Advancing a cloud-native career
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s assume you’ve taken the exam and hopefully passed it. What’s next?
  prefs: []
  type: TYPE_NORMAL
- en: First, take a moment to celebrate and be celebrated. Upload your certificate
    to LinkedIn and share a post about your achievement. Get connected and tag me;
    I’m always happy to give a thumbs-up and hear about your experience!
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ll find my LinkedIn profile at the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: https://linkedin.com/in/dmitry-galkin
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t have a LinkedIn profile yet, that is something to be addressed
    immediately. Go ahead and create one, and connect with your past and present colleagues.
    LinkedIn is the number one professional network, and it can help you to keep in
    touch, stay up to date with industry trends, and maybe even land your next dream
    job.
  prefs: []
  type: TYPE_NORMAL
- en: Wherever you are in your career, whether you’re just starting in IT after graduating
    from college or maybe coming from a completely different field, remember that
    **practice and continuous learning are the keys** **to success**.
  prefs: []
  type: TYPE_NORMAL
- en: We covered many things in theory in this book because, essentially, KCNA is
    a theoretical exam (unlike CKA, CKAD, CKS, and so on). And it is not just Kubernetes
    and containers but also many other technologies that are essential to pursue a
    cloud-native career. CI/CD, monitoring, IaC, and automation all require practical
    experience for a deep understanding of the topics.
  prefs: []
  type: TYPE_NORMAL
- en: Obviously, you won’t be asked to set up an actual Prometheus exporter or write
    an alert during a job interview, but knowing how to do that in theory is not enough.
    And of course, not every role would require you to write IaC and CI/CD pipelines,
    but if you’re targeting DevOps, SRE, and other engineering roles, that would be
    a part of your regular responsibilities. So, go ahead and get hands-on experience
    with technologies we’ve covered in theory, check tutorials and quick start guides,
    and read another book if needed.
  prefs: []
  type: TYPE_NORMAL
- en: Next, I’d like to mention the usefulness of programming languages for engineering
    roles. Even basic knowledge of high-level programming languages such as Python
    helps a lot. As an engineer, you’ll often encounter the need to automate small
    tasks and repetitive actions. Remember, doing manual changes, especially in production
    and live environments, is error-prone and often dangerous. Therefore, having some
    Python, Ruby, or Golang skills to do automation and scripting would allow you
    to be more efficient. And no, you’re not required to have in-depth knowledge or
    write complex data structures. Basic skills and familiarity with some standard
    libraries would be sufficient.
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve been in the industry for some time, you likely know that the Linux
    OS family massively dominates the world of cloud and IT infrastructure (more than
    90% of servers run Linux). It has been a long time since Linux became the de facto
    standard OS for the majority of server workloads, especially for cloud and web
    applications. Today, Kubernetes is similarly becoming the standard platform to
    run and orchestrate modern applications in the cloud and on-premises.
  prefs: []
  type: TYPE_NORMAL
- en: By starting to learn about Kubernetes and a cloud-native approach, you took
    a big step in the right direction. Keep up the good work, stay curious, and stay
    up to date with trends and technologies. Continue learning even after you get
    your dream job! IT is one of the most rapidly changing industries and it requires
    constant development of skills to be among the top, most in-demand specialists.
    That’s why I personally feel very excited about what will come next after the
    cloud, containers, serverless, Kubernetes, and service meshes.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will briefly discuss the importance of open source contributions.
  prefs: []
  type: TYPE_NORMAL
- en: Contributing to open source
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you know by now, Kubernetes, Prometheus, Helm, and all of the 120+ projects
    curated by CNCF are all open source. Contributing to open source projects can
    be challenging at first, yet it is a rewarding process that helps you to learn,
    build new skills, and sometimes even teach others.
  prefs: []
  type: TYPE_NORMAL
- en: 'Why is that? Here are some good reasons to consider:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Improving software**: It’s not a secret that even the best and long-standing
    projects have bugs and regressions. If you encounter wrong, unexpected behavior
    or find a bug, the least you should do is the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check whether the problem is already known in the project community.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: If not, report it.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, if you’re feeling comfortable enough, try to find the root cause and
    propose the patch to the source code.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: This ensures that the whole community benefits from it.
  prefs: []
  type: TYPE_NORMAL
- en: '**Improving your skills**: It is not always about coding and software development.
    User interfaces, design, documentation writing, and organizing can all be applied
    in open source projects, and your contributions are likely to be reviewed by other,
    often more experienced, community members and project maintainers. Their feedback
    might be very valuable for your growth.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Meeting people with similar interests**: You’ll find many warm and welcoming
    open source communities, learn from others, and sometimes even find mentors while
    working on shared projects. Open source project summits and conferences that take
    place all over the world are a great way to share knowledge and have fun.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Strengthening your profile**: By definition, all contributions to the open
    source are public. Mentioning these on your CV lets you stand out from the crowd
    and serves as a demonstration of what you can do.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While it might be harder to start contributing if you’re at the very beginning
    of your IT career, doing so will help to build skills, learn, and eventually,
    get support from the community.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Remember, even small contributions matter!
  prefs: []
  type: TYPE_NORMAL
- en: In fact, during the past few years, I’ve met several university students who
    already had their contributions accepted to well-known open source projects. Thus,
    it is never too early to start contributing! Many projects have so-called *low-hanging
    fruits* – the issues or bugs that are easy to solve. This might be a great starting
    point to get familiar with the project and the contribution processes.
  prefs: []
  type: TYPE_NORMAL
- en: To wrap it up, I encourage you to go and explore open source projects and communities,
    contribute, and always keep learning. Once again, good luck with your exam and
    your cloud-native career! See you on the internet!
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Contributing to CNCF: [https://contribute.cncf.io/](https://contribute.cncf.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CNCF events: [https://www.cncf.io/events/](https://www.cncf.io/events/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CNCF projects: [https://www.cncf.io/projects/](https://www.cncf.io/projects/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Projects trending on GitHub: [https://github.com/trending](https://github.com/trending)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are a few more resources about Kubernetes for the future:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kubernetes Ingress: [https://kubernetes.io/docs/concepts/services-networking/ingress/](https://kubernetes.io/docs/concepts/services-networking/ingress/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kubernetes in a production environment: [https://kubernetes.io/docs/setup/production-environment/](https://kubernetes.io/docs/setup/production-environment/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kubernetes common tasks: [https://kubernetes.io/docs/tasks/](https://kubernetes.io/docs/tasks/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assessments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the following pages, we will review all the practice questions from each
    of the chapters in this book and provide the correct answers.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 1 – From Cloud to Cloud Native and Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2 – Overview of CNCF and Kubernetes Certifications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3 – Getting Started with Containers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4 – Exploring Container Runtimes, Interfaces, and Service Meshes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5 – Orchestrating Containers with Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6 – Deploying and Scaling Applications with Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 7 – Application Placement and Debugging with Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8 – Following Kubernetes Best Practices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9 – Understanding Cloud Native Architectures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10 – Implementing Telemetry and Observability in the Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 11 – Automating Cloud Native Application Delivery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 12 – Practicing for the KCNA Exam
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mock exam A
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D. Deployment is the best option because ReplicaSet does not allow rolling updates
    and StatefulSet is not required for stateless applications.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. DaemonSet is the best option because it can ensure a replica is running on
    each Kubernetes node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D. Containers in one pod can file system mounts and communicate over localhost.
    All containers of one pod will always run together on the same node.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D. CI/CD is the correct answer because we need build and test automation and
    we don’t need automatic deployments. CD is Continuous Delivery in this case.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B. Using namespaces is the best option as it allows to further restrict access
    by implementing RBAC policies. A team can be restricted to only one namespace.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D. HPA is the correct answer because we need to scale an application in the
    context of the question. Obviously, a cluster autoscaler would be required eventually
    to adjust the number of nodes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C. Other options might either impact the stability or make it harder to operate
    the applications.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C. At the time of writing this book, it is approximately 3 releases per year.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mock exam B
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, B, C. By default, kubectl should work with one version above and one version
    below.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D. Deployment is the best option because it satisfies all the requirements,
    and the application is stateless.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A, C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D. Kubernetes namespaces allow configuration of resource quotas.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D. GitOps would be helpful for continuous deployment and FluxCD is a GitOps
    tool, so both A and B are incorrect answers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C, D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
