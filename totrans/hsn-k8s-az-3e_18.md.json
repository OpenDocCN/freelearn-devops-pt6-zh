["```\n    az feature register --name EnablePodIdentityPreview \\\n      --namespace Microsoft.ContainerService\n    ```", "```\n    az extension add --name aks-preview\n    ```", "```\n    az feature show --name EnablePodIdentityPreview \\\n      --namespace Microsoft.ContainerService -o table\n    ```", "```\n    az provider register --namespace Microsoft.ContainerService\n    ```", "```\n    az aks create -g rg-handsonaks -n handsonaks \\\n      --enable-managed-identity --enable-pod-identity \\\n      --network-plugin azure --node-vm-size Standard_DS2_v2 \\\n      --node-count 2 --generate-ssh-keys \n    ```", "```\n    az aks get-credentials -g rg-handsonaks \\\n      -n handsonaks --overwrite-existing\n    ```", "```\n    kubectl create namespace azureoperator-system\n    az aks pod-identity add --resource-group rg-handsonaks \\\n      --cluster-name handsonaks --namespace azureoperator-system \\\n      --name aso-identity-binding \\\n      --identity-resource-id <resource ID of managed identity>\n    ```", "```\n    kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager.yaml\n    ```", "```\n    kubectl rollout status \\\n      -n cert-manager deploy cert-manager-webhook\n    ```", "```\n    helm repo add azureserviceoperator \\\n    https://raw.githubusercontent.com/Azure/azure-service-operator/master/charts\n    ```", "```\n    code values.yaml\n    ```", "```\n    1   azureTenantID: \"<tenant ID>\"\n    2   azureSubscriptionID: \"<subscription ID>\"\n    3   azureOperatorKeyvault: \"<key vault name>\"\n    4   azureClientID: \"<client ID>\"\n    5   cloudEnvironment: AzurePublicCloud\n    6   azureUseMI: true\n    7   image:\n    8     repository: mcr.microsoft.com/k8s/azureserviceoperator:0.1.16800\n    9   installAadPodIdentity: true\n    10  aad-pod-identity:\n    11    azureIdentityBinding:\n    12      name: aso-identity-binding\n    13      selector: aso_manager_binding\n    14    azureIdentity:\n    15      enabled: True\n    16      name: aso-identity\n    17      type: 0\n    18      resourceID: \"<resource ID>\"\n    19      clientID: \"<client ID>\"\n    ```", "```\n    az account show\n    ```", "```\n    helm upgrade --install aso \\\n      azureserviceoperator/azure-service-operator \\\n      -n azureoperator-system --create-namespace \\\n      -f values.yaml\n    ```", "```\n    kubectl rollout status deploy \\\n      -n azureoperator-system azureoperator-controller-manager\n    ```", "```\n    spec:\n      template:\n        metadata:\n          labels:\n            aadpodidbinding: aso-identity-binding\n    ```", "```\n    kubectl patch deployment \\\n      azureoperator-controller-manager \\\n      -n azureoperator-system \\\n      --patch \"$(cat patch.yaml)\"\n    ```", "```\n    apiVersion: azure.microsoft.com/v1alpha1\n    kind: ResourceGroup\n    metadata:\n      name: aso-resources\n    spec:\n      location: <cluster location>\n    ```", "```\n    kubectl create -f rg.yaml\n    ```", "```\n    kubectl get resourcegroup -w\n    ```", "```\n    1   apiVersion: azure.microsoft.com/v1alpha1\n    2   kind: MySQLServer\n    3   metadata:\n    4     name: <mysql-server-name>\n    5   spec:\n    6     location: <cluster location>\n    7     resourceGroup: aso-resources\n    8     serverVersion: \"8.0\"\n    9     sslEnforcement: Disabled\n    10    createMode: Default\n    11    sku:\n    12      name: B_Gen5_1\n    13      tier: Basic\n    14      family: Gen5\n    15      size: \"5120\"\n    16      capacity: 1\n    ```", "```\n    kubectl create -f mysql-server.yaml\n    ```", "```\n    kubectl get mysqlserver -w \n    ```", "```\n    1   apiVersion: azure.microsoft.com/v1alpha1\n    2   kind: MySQLDatabase\n    3   metadata:\n    4     name: wordpress-db\n    5   spec:\n    6     resourceGroup: aso-resources\n    7     server: <mysql-server-name>\n    ```", "```\n    kubectl create -f mysql-database.yaml\n    ```", "```\n    kubectl get mysqldatabase -w \n    ```", "```\n    1   apiVersion: azure.microsoft.com/v1alpha1\n    2   kind: MySQLFirewallRule\n    3   metadata:\n    4     name: allow-all-mysql\n    5   spec:\n    6     resourceGroup: aso-resources\n    7     server: <mysql-server-name>\n    8     startIpAddress: 0.0.0.0\n    9     endIpAddress: 255.255.255.255\n    ```", "```\n    kubectl create -f mysql-firewall.yaml\n    ```", "```\n    kubectl get mysqlfirewallrule -w \n    ```", "```\n    sh decode-secret.sh <secret value>\n    ```", "```\n    helm repo add bitnami https://charts.bitnami.com/bitnami\n    helm install wp bitnami/wordpress \\\n      --set mariadb.enabled=false \\ \n      --set externalDatabase.host='<decoded host value>' \\\n      --set externalDatabase.user='<decoded user value>' \\\n      --set externalDatabase.password='<decoded password value>' \\\n      --set externalDatabase.database='wordpress-db' \\\n      --set externalDatabase.port='3306'\n    ```", "```\n    kubectl get pods -w\n    ```", "```\n    kubectl get service\n    ```", "```\n    helm uninstall wp\n    kubectl delete -f mysql-firewall.yaml\n    kubectl delete -f mysql-database.yaml\n    kubectl delete -f mysql-server.yaml\n    kubectl delete -f rg.yaml\n    helm uninstall aso -n azureoperator-system\n    az aks pod-identity delete --resource-group rg-handsonaks \\\n      --cluster-name handsonaks --namespace azureoperator-system \\\n      --name aso-identity-binding\n    kubectl delete namespace azureoperator-system\n    kubectl delete -f https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager.yaml\n    az group delete -n aso --yes\n    ```"]