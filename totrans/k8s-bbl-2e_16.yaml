- en: '16'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '16'
- en: Launching a Kubernetes Cluster on Amazon Web Services with Amazon Elastic Kubernetes
    Service
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Amazon Web Services 上使用 Amazon Elastic Kubernetes Service 启动 Kubernetes 集群
- en: Let’s build on what we learned in the previous chapter. We launched a Kubernetes
    cluster in a public cloud, taking our first steps to run Kubernetes on one of
    the “big three” public cloud providers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在前一章所学的基础上继续前进。我们在公共云中启动了一个 Kubernetes 集群，迈出了在“前三大”公共云服务提供商中运行 Kubernetes
    的第一步。
- en: Now that we know what the **Google Cloud Platform** (**GCP**) Kubernetes offering
    looks like, we will move on to **Amazon Elastic Kubernetes Service** (**EKS**)
    by **Amazon Web Services** (**AWS**).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了**Google Cloud Platform**（**GCP**）的 Kubernetes 服务，我们将继续介绍**Amazon Elastic
    Kubernetes Service**（**EKS**）由**Amazon Web Services**（**AWS**）提供的服务。
- en: In this chapter, you will learn how to set up an AWS account and install the
    supporting toolsets on macOS, Windows, and Linux, before finally launching and
    interacting with an Amazon EKS cluster.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何设置 AWS 账户，并在 macOS、Windows 和 Linux 系统上安装相关工具集，最后启动并与 Amazon EKS 集群进行交互。
- en: 'We will be covering the following topics in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: What are Amazon Web Services and Amazon Elastic Kubernetes Service?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Amazon Web Services 和 Amazon Elastic Kubernetes Service？
- en: Preparing your local environment
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备你的本地环境
- en: Launching your Amazon Elastic Kubernetes Service cluster
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动你的 Amazon Elastic Kubernetes Service 集群
- en: Deploying a workload and interacting with your cluster
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署工作负载并与集群进行交互
- en: Deleting your Amazon Elastic Kubernetes Service cluster
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除你的 Amazon Elastic Kubernetes Service 集群
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: If you plan to follow along with this chapter, you will need an AWS account
    with a valid payment attached.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你计划跟随本章的内容进行操作，你需要一个附有有效支付方式的 AWS 账户。
- en: Following the instructions in this chapter will incur a cost, and you must terminate
    any resources you launch once you have finished using them. All prices quoted
    in this chapter are correct as of when this book was written, and we recommend
    that you review the current costs before launching any resources.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 按照本章中的说明操作将会产生费用，在使用完毕后，你必须终止你启动的所有资源。本章中列出的所有价格均为本书撰写时的有效价格，我们建议你在启动任何资源之前，查看当前的费用。
- en: What are Amazon Web Services and Amazon Elastic Kubernetes Service?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Amazon Web Services 和 Amazon Elastic Kubernetes Service？
- en: 'You may have already heard of Amazon Web Services, or AWS, as we will refer
    to it. It was one of the first public cloud providers and has the largest market
    share at the time of writing (June 2024): 31%, with Microsoft Azure second at
    25% and GCP third at 11%.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经听说过 Amazon Web Services，简称 AWS。它是最早的公共云服务提供商之一，截至撰写本书时（2024 年 6 月），AWS
    的市场份额最大，达到了 31%，微软 Azure 以 25% 排名第二，GCP 排名第三，占有 11% 的市场份额。
- en: Amazon Web Services
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon Web Services
- en: As you may have already guessed, Amazon owns and operates AWS. What began as
    Amazon experimenting with cloud services in 2000, by developing and deploying
    **application programming interfaces** (**APIs**) for its retail partners, has
    since evolved into AWS, a global leader in cloud computing, powering businesses
    of all sizes across various industries.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能已经猜到的，Amazon 拥有并运营 AWS。从 2000 年 Amazon 开始通过为零售合作伙伴开发和部署**应用程序编程接口**（**APIs**）来实验云服务，到现在
    AWS 已发展成全球领先的云计算平台，服务于各行各业的各种规模的企业。
- en: Based on this work, Amazon realized that they needed to build a better and more
    standardized infrastructure platform not only to host the services they had been
    developing but also to ensure they could quickly scale as more of their retail
    outlets consumed the software services and grew at an expedient rate.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这项工作，Amazon 意识到他们需要构建一个更好、更标准化的基础设施平台，不仅要托管他们正在开发的服务，还要确保在更多零售网点使用这些软件服务并迅速增长时能够快速扩展。
- en: Chris Pinkham and Benjamin Black wrote a white paper in 2003 that was approved
    by Jeff Bezos in 2004, which described an infrastructure platform where compute
    and storage resources can all be deployed programmatically.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Chris Pinkham 和 Benjamin Black 在 2003 年写了一篇白皮书，2004 年获得 Jeff Bezos 的批准，文中描述了一个可以通过编程方式部署计算和存储资源的基础设施平台。
- en: The first public acknowledgment of AWS’s existence was made in late 2004; however,
    the term was used to describe a collection of tools and APIs that would allow
    third parties to interact with Amazon’s retail product catalog, rather than what
    we know today.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 首次公开承认其存在是在 2004 年末；然而，当时该术语用于描述一组工具和 API，允许第三方与 Amazon 的零售产品目录进行交互，而非我们今天所知的
    AWS。
- en: It wasn’t until 2006 that a rebranded AWS was launched, starting in March with
    **Simple Storage Service** (**S3**). This service allowed developers to write
    and serve individual files using a web API, rather than writing and reading from
    a traditional local or remote filesystem.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 直到 2006 年，重新品牌化后的 AWS 才正式推出，从 3 月开始推出 **简单存储服务** (**S3**)。此服务允许开发者使用 Web API
    写入和提供单个文件，而无需从传统的本地或远程文件系统中写入和读取数据。
- en: The next service to launch, **Amazon Simple Queue Service** (**SQS**), had formed
    part of the original AWS collection of tools. This was a distributed message system
    that, again, could be controlled and consumed by developers using an API.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个推出的服务是 **亚马逊简单队列服务** (**SQS**)，它是原始 AWS 工具集的一部分。这是一个分布式消息系统，开发者可以通过 API 控制和使用它。
- en: The final service, launched in 2006, was a beta of **Amazon Elastic Compute
    Cloud** (**Amazon EC2**), limited to existing AWS customers. Again, you could
    use the APIs developed by Amazon to launch Amazon EC2 resources.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后推出的服务是 2006 年的 **亚马逊弹性计算云** (**Amazon EC2**) 的测试版，仅限现有的 AWS 客户。你仍然可以使用亚马逊开发的
    API 启动 Amazon EC2 资源。
- en: This was the final piece of the puzzle for Amazon. They now had the foundations
    of a public cloud platform on which they could not only use their own retail platform
    but also sell space to other companies and the public, such as you and me.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这对亚马逊来说是最后一块拼图。现在他们有了一个公共云平台的基础，不仅可以用于他们自己的零售平台，还可以将空间出售给其他公司和公众，比如你我。
- en: Let’s fast-forward from 2006, when there were 3 services, to the time of writing,
    mid-2024, where there are over 200 services available, all of which run in over
    125 physical data centers across 39 Regions, which comprise over 38 million square
    feet in total.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 2006 年的 3 项服务开始，快速前进到 2024 年中期，当时已经有超过 200 项服务可用，所有这些服务都运行在 39 个区域的 125
    个物理数据中心中，总面积超过 3800 万平方英尺。
- en: All 200+ services adhere to the core principles laid out in the 2003 white paper.
    Each service is software-defined, meaning that developers must make a simple API
    request to launch, configure, and, in some cases, consume the service before finally
    making another API request to terminate it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 200 多个服务都遵循 2003 年白皮书中提出的核心原则。每个服务都是软件定义的，这意味着开发者只需发出一个简单的 API 请求来启动、配置，并在某些情况下消费该服务，然后再发出另一个
    API 请求来终止它。
- en: You may have already noticed this from the services that have already been mentioned
    up to this point, but services running in AWS are prefixed with either Amazon
    or AWS – why is this? Well, services that start with Amazon are standalone services,
    unlike those prefixed with AWS, which are services designed to be used alongside
    the services that are prefixed with Amazon.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，从目前为止提到的服务来看，在 AWS 中运行的服务通常以亚马逊或 AWS 为前缀——这是为什么呢？因为以 Amazon 开头的服务是独立服务，而以
    AWS 为前缀的服务则是设计为与以 Amazon 为前缀的服务一起使用的。
- en: Long gone are the days of having to order a service, have someone build and
    deploy it, and then hand it over to you; this reduces deployment times to seconds
    from what could sometimes take weeks or months.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 再也没有必要像过去那样去订购一项服务，等待某人构建并部署它，再交给你；这将部署时间从有时需要几周或几个月缩短到几秒钟。
- en: Rather than discussing all 200+ services, which would be an entire series of
    books, we should discuss the service we will examine in this chapter.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不打算讨论所有 200 多项服务，这将需要一整套书籍；我们应该讨论本章将要研究的服务。
- en: Amazon Elastic Kubernetes Service
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊弹性 Kubernetes 服务
- en: While AWS was the first of the major public cloud providers, it was one of the
    last to launch a standalone Kubernetes service. Amazon EKS was first announced
    in late 2017\. It became generally available in the United States (US), starting
    with the East (N. Virginia) and West (Oregon) Regions in June 2018.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 AWS 是主要公有云提供商中第一个推出的，但它是最后一个推出独立 Kubernetes 服务的。亚马逊 EKS 于 2017 年底首次宣布，并于
    2018 年 6 月在美国推出，首先在东部（北弗吉尼亚）和西部（俄勒冈）地区提供。
- en: 'The service is built to work with and take advantage of other AWS services
    and features, such as the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务旨在与其他 AWS 服务和功能一起使用并充分利用，例如以下内容：
- en: '**AWS Identity and Access Management** (**IAM**) allows you to control and
    manage end-user and programmatic access to other AWS services.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 身份与访问管理** (**IAM**) 使您能够控制和管理终端用户以及程序化访问其他 AWS 服务的权限。'
- en: '**Amazon Route 53** is Amazon’s **Domain Name System** (**DNS**) service. Amazon
    EKS can use it as a source of DNS for clusters, meaning service discovery and
    routing can easily be managed within your cluster.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Route 53** 是 Amazon 的 **域名系统**（**DNS**）服务。Amazon EKS 可以将其用作集群的 DNS
    来源，意味着服务发现和路由可以在您的集群内轻松管理。'
- en: '**Amazon Elastic Block Store** (**EBS**): If you need persistent block storage
    for containers running within your Amazon EKS cluster, **Amazon Elastic Block
    Store** (**EBS**) provides this storage, just as it does for your EC2 compute
    resources'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Elastic Block Store**（**EBS**）：如果您需要为在 Amazon EKS 集群中运行的容器提供持久性块存储，**Amazon
    Elastic Block Store**（**EBS**）提供此存储，就像为您的 EC2 计算资源提供存储一样。'
- en: '**EC2 Auto Scaling**: If your cluster needs to scale, the same technology is
    employed to scale your EC2 instances.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EC2 自动扩展**：如果您的集群需要扩展，将采用相同的技术来扩展您的 EC2 实例。'
- en: '**Multi-Availability Zones** (**AZs**) can be a useful feature. The Amazon
    EKS management layer and cluster nodes can be configured to be spread across multiple
    AZs within a given Region to bring **High Availability** (**HA**) and resilience
    to your deployment.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多可用区**（**AZs**）可以是一个有用的功能。Amazon EKS 管理层和集群节点可以配置为分布在给定区域内的多个 AZ 上，以为您的部署提供
    **高可用性**（**HA**）和弹性。'
- en: Before we launch our Amazon EKS cluster, we will need to download, install,
    and configure a few tools.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动 Amazon EKS 集群之前，我们需要下载、安装并配置一些工具。
- en: Preparing your local environment
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备本地环境
- en: We need to install two command-line tools, but before we do, we should quickly
    discuss the steps to sign up for a new AWS account. If you already have an AWS
    account, skip this task and move straight to the *Installing the AWS command-line
    interface* section.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要安装两个命令行工具，但在安装之前，我们先快速讨论一下注册 AWS 新账户的步骤。如果您已经有 AWS 账户，请跳过此任务，直接进入 *安装 AWS
    命令行界面* 部分。
- en: Signing up for an AWS account
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册 AWS 账户
- en: 'Signing up for an AWS account is a straightforward process, as detailed here:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注册 AWS 账户是一个简单的过程，如下所述：
- en: Go to [https://aws.amazon.com/](https://aws.amazon.com/) and click the **Create
    an AWS account** button at the top right of the page.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://aws.amazon.com/](https://aws.amazon.com/) 并点击页面右上角的 **创建 AWS 账户**
    按钮。
- en: Amazon offers a free tier for new users. It is limited to certain services and
    instance sizes and lasts 12 months. For information on the AWS Free Tier, see
    [https://aws.amazon.com/free/](https://aws.amazon.com/free/).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊为新用户提供了免费套餐。它仅限于某些服务和实例规格，且持续 12 个月。有关 AWS 免费套餐的详细信息，请参见 [https://aws.amazon.com/free/](https://aws.amazon.com/free/)。
- en: Fill out the initial form that asks for an email address. This will be used
    for account recovery and some basic administrative functions. Also, provide your
    chosen AWS account name. Don’t worry if you change your mind; you can change this
    in your account settings after you sign up. You will then need to verify your
    email address. Once the email address has been verified, you will be asked to
    set the password for your “root” account.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写要求提供电子邮件地址的初始表单。该电子邮件地址将用于账户恢复和一些基本的管理功能。同时，提供您选择的 AWS 账户名称。如果您改变主意，不必担心；注册后可以在账户设置中更改该名称。然后，您需要验证您的电子邮件地址。验证电子邮件地址后，您将被要求为您的“根”账户设置密码。
- en: Once you enter your password, click **Continue** and follow the onscreen instructions.
    There are five steps; these will involve you confirming your payment details and
    identity via an automated phone call.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入密码后，点击 **继续** 并按照屏幕上的指示操作。共有五个步骤；这些步骤将涉及您通过自动电话确认您的支付信息和身份。
- en: Once you have created and enabled your account, you will be notified when you
    can start using AWS services – most of the time, this will be straight away, but
    it can take up to 48 hours.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您创建并启用了账户，您将在可以开始使用 AWS 服务时收到通知——大多数情况下，这将是立即开始，但也可能需要长达 48 小时的时间。
- en: Now, we need to install the command-line tools that we will be using to launch
    our Amazon EKS cluster.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要安装将用于启动 Amazon EKS 集群的命令行工具。
- en: Installing the AWS command-line interface
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 AWS 命令行界面
- en: Next on our list of tasks is to install the AWS **Command-Line Interface** (**CLI**).
    As we did in the previous chapter, *Chapter 15*, *Kubernetes Clusters on Google
    Kubernetes Engine*, we will target Windows, Linux, and macOS, which we will look
    at first.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的任务是安装 AWS **命令行界面**（**CLI**）。正如我们在上一章 *第十五章*，*Google Kubernetes Engine 上的
    Kubernetes 集群* 中所做的那样，我们将针对 Windows、Linux 和 macOS 进行操作，我们将首先查看 macOS 部分。
- en: Installing on macOS
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 macOS 上安装
- en: 'Installing the AWS CLI on macOS using Homebrew is as simple as running the
    following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS上使用Homebrew安装AWS CLI就像运行以下命令一样简单：
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once it’s installed, run the following command, which should give you the version
    number:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，运行以下命令，它应该会给出版本号：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will output the version of the AWS CLI, along with some of the support
    services it needs, as illustrated in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这将输出AWS CLI的版本，以及它所需的一些支持服务，如下图所示：
- en: '![A screenshot of a computer'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![一台计算机的截图'
- en: Description automatically generated](img/B22019_16_01.png)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成的描述](img/B22019_16_01.png)
- en: 'Figure 16.1: Checking the version of the AWS CLI'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.1：检查AWS CLI版本
- en: Once installed, you can move on to the AWS CLI configuration section.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你可以继续进行AWS CLI配置部分。
- en: Installing on Linux
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Linux上安装
- en: While packages are available for each distribution, the easiest way to install
    the AWS CLI on Linux is to download and run the installer.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然每个发行版都有可用的软件包，但在Linux上安装AWS CLI最简单的方式是下载并运行安装程序。
- en: These instructions assume that you have the `curl` and `unzip` packages installed.
    If you don’t, please install them using your distribution’s package manager. For
    example, on Ubuntu, you would need to run `sudo apt-get install unzip curl` to
    install both packages.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这些指令假设你已经安装了`curl`和`unzip`软件包。如果没有，请使用你的发行版的包管理器安装它们。例如，在Ubuntu上，你需要运行`sudo
    apt-get install unzip curl`来安装这两个软件包。
- en: 'To download and install the AWS CLI, run the following commands:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载并安装AWS CLI，请运行以下命令：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once installed, you should be able to execute the `aws --version` command, and
    you will get something like the output shown in the *Installing on macOS* section,
    and the Windows version, which we will look at next.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你应该能够执行`aws --version`命令，你会看到类似于*在macOS上安装*部分中的输出，以及我们接下来会看的Windows版本。
- en: Installing on Windows
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Windows上安装
- en: 'As with macOS, you can install the AWS CLI with a package manager. As in *Chapter
    15*, *Kubernetes Clusters on Google Kubernetes Engine*, we will use Chocolatey.
    The command you need to run is shown here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 与macOS类似，你也可以使用包管理器安装AWS CLI。正如*第15章*《*Google Kubernetes Engine上的Kubernetes集群*》中所提到的，我们将使用Chocolatey。你需要运行的命令如下所示：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once installed using Chocolatey, executing the command below will give you
    a similar output to what we saw on macOS, with changes to the OS and Python versions
    being used:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Chocolatey安装后，执行下面的命令将给出类似于我们在macOS上看到的输出，操作系统和Python版本的变化如下所示：
- en: '[PRE4]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Again, once installed, you can move on to the *AWS CLI configuration* section
    below.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，安装完成后，你可以继续下面的*AWS CLI配置*部分。
- en: AWS CLI configuration
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS CLI 配置
- en: Once you have installed the AWS CLI and checked that it is running properly
    by issuing the `aws --version` command, you must link your local CLI install to
    your AWS account. To do this, you must log in to the AWS console, which can be
    accessed at [http://console.aws.amazon.com/](http://console.aws.amazon.com/).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了AWS CLI，并通过运行`aws --version`命令检查它是否正常运行，你必须将本地CLI安装与AWS账户链接。为此，你需要登录到AWS控制台，可以通过[http://console.aws.amazon.com/](http://console.aws.amazon.com/)访问。
- en: Once logged in, type **IAM** into the search box, which is located at the top
    left of the page, next to the **Services** button. Then, click on the **IAM Identity
    Center** service link in the Services results to be taken to the **IAM Identity
    Center** page.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，在页面左上方的搜索框中输入**IAM**，它位于**服务**按钮旁边。然后，点击**IAM身份中心**服务链接，进入**IAM身份中心**页面。
- en: 'We need to create a user with programmatic access; to do this, follow these
    steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个具有编程访问权限的用户；为此，请按照以下步骤操作：
- en: Depending on your AWS account’s age or access level, you may need to enable
    **IAM Identity Center**. My AWS account is for my own projects, so after clicking
    the **Enable** button, I chose the **Enable in only this AWS account** option
    rather than the recommended **Enable with AWS Organizations**. I did this because
    I do not have or require managing multiple AWS accounts within a single organization.
    Follow the onscreen instructions to enable the service.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据你的AWS账户的年龄或访问权限，你可能需要启用**IAM身份中心**。我的AWS账户是用于我个人项目的，所以点击**启用**按钮后，我选择了**仅在此AWS账户中启用**选项，而不是推荐的**与AWS
    Organizations一起启用**。我之所以这样做，是因为我没有，也不需要在单一组织中管理多个AWS账户。请按照屏幕上的指示启用该服务。
- en: Once the **IAM Identity Center** service is enabled, we must create a user with
    programmatic-only access. To do this, return to the search box in the menu at
    the top of the screen and search for **IAM** again, but this time select **IAM**,
    which is listed as **Manage access to AWS resources**. Once the page loads, click
    on **Users**, which can be found in the **Access Management** section of the left-hand-side
    menu, and then click the **Create user** button.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦启用 **IAM 身份中心** 服务，我们必须创建一个仅限编程访问的用户。为此，请返回屏幕顶部菜单中的搜索框，再次搜索 **IAM**，但这次选择
    **IAM**，该选项列为 **管理 AWS 资源访问**。页面加载后，点击左侧菜单中的 **用户**，可以在 **访问管理** 部分找到，然后点击 **创建用户**
    按钮。
- en: Enter the username of **ekscluster** and ensure you do not select the **Provide
    user access to the AWS Management Console – optional** option, then click **Next**.
    We will discuss this option later in the chapter, once we have launched our cluster.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 **ekscluster** 的用户名，并确保不要选择 **为用户提供 AWS 管理控制台访问权限 - 可选** 选项，然后点击 **下一步**。我们将在本章稍后讨论此选项，一旦我们启动了集群。
- en: '![A screenshot of a computer'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_02.png)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_02.png)
- en: 'Figure 16.2: Adding a user'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.2：添加用户
- en: Rather than create a group, we will grant our user an existing policy. To do
    this, select **Attach existing policies directly**, select the **AdministratorAccess**
    policy, and then click **Next**.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不会创建一个新的组，而是将现有策略附加到我们的用户。为此，选择 **直接附加现有策略**，选择 **AdministratorAccess** 策略，然后点击
    **下一步**。
- en: '![A screenshot of a computer'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_03.png)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_03.png)
- en: 'Figure 16.3: Assigning permissions'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.3：分配权限
- en: As this is a test in a non-production AWS account and we are going to remove
    this user at the end of the chapter, I am using quite a permissive policy. If
    you are going to be deploying this into a more production-like environment, I
    recommend referring to the AWS documentation for a more detailed guide on setting
    the correct permissions and policies.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是在非生产环境的 AWS 账户中进行的测试，而且我们将在本章结束时删除该用户，因此我使用了一个相对宽松的策略。如果你打算将其部署到更接近生产环境的环境中，建议参考
    AWS 文档，了解如何设置正确的权限和策略的详细指南。
- en: Once you have reviewed the information, click on the **Create user** button.
    Once your user has been created, select the **ekscluster** user from the list,
    select the **Security credentials** tab, and click the **Create access key** button
    in the **Access keys** section. Select **Command Line Interface (CLI)** and proceed
    to create the access key by clicking the **Next** and then **Create access key**
    buttons; once the key has been created, click on **Download .csv file** and, finally,
    the **Done** button.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审核信息后，点击 **创建用户** 按钮。一旦用户创建完成，从列表中选择 **ekscluster** 用户，选择 **安全凭证** 标签，然后在 **访问密钥**
    部分点击 **创建访问密钥** 按钮。选择 **命令行界面（CLI）** 并继续创建访问密钥，点击 **下一步** 然后点击 **创建访问密钥** 按钮；密钥创建后，点击
    **下载 .csv 文件**，最后点击 **完成** 按钮。
- en: Keep the file you have downloaded safe, as it contains valid credentials for
    accessing your AWS account.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 保管好你下载的文件，因为它包含了访问你的 AWS 账户的有效凭证。
- en: 'Return to your terminal and then run the following command to create a default
    profile:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到终端，然后运行以下命令以创建一个默认的配置文件：
- en: '[PRE5]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This will ask for a few bits of information, as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这将要求输入以下几项信息：
- en: '**AWS access key identifier** (**ID**): This is the access key ID from the
    **comma-separated values** (**CSV**) file we downloaded.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 访问密钥标识符**（**ID**）：这是我们从 **逗号分隔值**（**CSV**）文件中获取的访问密钥 ID。'
- en: '**AWS secret access key**: This is the key from the CSV file.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 秘密访问密钥**：这是从 CSV 文件中获取的密钥。'
- en: '**Default region name**: I entered `us-west-2`.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认区域名称**：我输入了 `us-west-2`。'
- en: '**Default output format**: I left this blank.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认输出格式**：我将其留空。'
- en: 'To test that everything is working, you can run the following command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试一切是否正常工作，你可以运行以下命令：
- en: '[PRE6]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will list the AWS Regions that are available, and the output should look
    something like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这将列出可用的 AWS 区域，输出应该类似于以下内容：
- en: '![A computer screen with white text'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '![带有白色文字的计算机屏幕'
- en: Description automatically generated](img/B22019_16_04.png)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_04.png)
- en: 'Figure 16.4: Testing the AWS CLI'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.4：测试 AWS CLI
- en: Now that we have the AWS CLI installed and configured for our account, we need
    to install the second command-line tool, which we’ll use to launch the Amazon
    EKS cluster.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装并配置好了AWS CLI用于我们的账户，我们需要安装第二个命令行工具，使用它来启动Amazon EKS集群。
- en: Installing eksctl, the official CLI for Amazon EKS
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装eksctl，这是Amazon EKS的官方CLI
- en: While it is possible to launch an Amazon EKS cluster using the AWS CLI, it is
    complicated and has many steps. To get around this, Weaveworks created a simple
    command-line tool that generates an AWS CloudFormation template and then launches
    your cluster.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以使用AWS CLI启动Amazon EKS集群，但它比较复杂并且有很多步骤。为了解决这个问题，Weaveworks创建了一个简单的命令行工具，它生成AWS
    CloudFormation模板并启动你的集群。
- en: Unfortunately, Weaveworks stopped commercial operations in early 2024, but before
    ceasing operations, they passed control of the project to the AWS team.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Weaveworks在2024年初停止了商业运营，但在停止运营之前，他们将该项目的控制权交给了AWS团队。
- en: AWS CloudFormation is Amazon’s **Infrastructure-as-Code** (**IaC**) definition
    language. It lets you define your AWS resources so that they can be deployed across
    multiple accounts or repeatedly in the same one. This is useful if you have to
    keep spinning up an environment, for example, as part of a **continuous integration**
    (**CI**) build.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudFormation是Amazon的**基础设施即代码**(**IaC**)定义语言。它让你能够定义你的AWS资源，以便它们可以在多个账户之间或在同一个账户中反复部署。这在你需要不断创建环境时非常有用，例如，作为**持续集成**(**CI**)构建的一部分。
- en: 'As you may have already guessed, installing on macOS and Windows follows the
    same pattern we have been using; macOS users can run the following command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所料，在macOS和Windows上的安装遵循我们一直在使用的相同模式；macOS用户可以运行以下命令：
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Likewise, on Windows, you can run:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，在Windows上，你可以运行：
- en: '[PRE8]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Installing `eksctl` on Linux, like the other tools, is slightly different,
    with the commands being:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上安装`eksctl`与其他工具略有不同，命令如下：
- en: '[PRE9]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once installed, you should be able to run the command below to get the version
    number:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你应该能够运行下面的命令来获取版本号：
- en: '[PRE10]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: So, we are now ready to launch our Amazon EKS cluster.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们现在已经准备好启动我们的Amazon EKS集群。
- en: Launching your Amazon Elastic Kubernetes Service cluster
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动你的Amazon Elastic Kubernetes Service集群
- en: With all of the prerequisites installed, we can finally start deploying our
    Amazon EKS cluster. Once deployed, we will be able to start interacting with it
    to launch a workload like we did in *Chapter 15*, *Kubernetes Clusters on Google
    Kubernetes Engine*.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装好所有前提条件后，我们终于可以开始部署我们的Amazon EKS集群。一旦部署完成，我们将能够开始与它互动，启动一个工作负载，就像我们在*第15章*中所做的那样，*在Google
    Kubernetes Engine上部署Kubernetes集群*。
- en: 'To do this, we will use the defaults built into the `eksctl` command, as this
    is just a sandbox Amazon EKS against which we can run some commands. This will
    launch an Amazon EKS cluster with the following attributes:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将使用`eksctl`命令中内置的默认设置，因为这只是一个沙箱Amazon EKS，我们可以在上面运行一些命令。这将启动一个具有以下属性的Amazon
    EKS集群：
- en: In the **us-west-1** Region
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**us-west-1**区域
- en: With two worker nodes, using the **m5.large** instance type
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用两个工作节点，采用**m5.large**实例类型
- en: Uses the official AWS EKS **Amazon Machine Image** (**AMI**)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用官方AWS EKS **Amazon机器镜像**(**AMI**)
- en: Uses **Amazon’s Virtual Private Cloud** (**VPC**) for its networking service
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Amazon的虚拟私有云**(**VPC**)作为其网络服务
- en: With an automatically generated random name
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自动生成的随机名称
- en: 'So, without further ado, let’s launch our cluster by running the following
    command:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，事不宜迟，让我们通过运行以下命令来启动我们的集群：
- en: '[PRE11]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You should go and make a drink or catch up on emails, as this process can take
    up to 30 minutes to complete. If you are not deploying an Amazon EKS cluster,
    here is my output when running the command.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以去做点饮料或者处理一下电子邮件，因为这个过程可能需要最多30分钟才能完成。如果你不打算部署Amazon EKS集群，下面是我运行命令时的输出。
- en: 'First of all, some basic information is displayed about the version of `eksctl`
    and which Region will be used:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，显示一些关于`eksctl`版本的基本信息以及将使用的区域：
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next up, it will give some information on the networking and AZs it will be
    deploying resources into, as illustrated in the following code snippet:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，它将提供一些关于网络和可用区(AZ)的信息，说明它将把资源部署到哪些地方，如下面的代码片段所示：
- en: '[PRE13]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'It will now give details of which version of the AMI it is going to use, along
    with the Kubernetes version that the image supports, as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 它现在将显示将要使用的AMI版本的详细信息，以及该镜像所支持的Kubernetes版本，如下所示：
- en: '[PRE14]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now it knows all the elements, it is going to create a cluster. Here, you can
    see it making a start on the deployment:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它已经知道了所有元素，将要创建一个集群。在这里，你可以看到它开始部署：
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you can see, it has called my cluster `hilarious-wardrobe-1717847351`; this
    will be referenced throughout the build. By default, logging is not enabled, as
    we can see here:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，它已经将我的集群命名为`hilarious-wardrobe-1717847351`；这个名称将在整个构建过程中被引用。默认情况下，日志记录是禁用的，正如我们在这里所见：
- en: '[PRE16]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now is the point where we wait as the control plane and cluster are deploying:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是我们等待的时候，控制平面和集群正在部署：
- en: '[PRE17]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once deployed, it will download the cluster credentials and configure `kubectl`,
    as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 部署后，它将下载集群凭证并配置`kubectl`，如下所示：
- en: '[PRE18]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The final step is to wait for the nodes to become available, as is happening
    here:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的步骤是等待节点变为可用，如此处所示：
- en: '[PRE19]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now that we have both nodes online and ready, it is time to display a message
    confirming that everything is ready, as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经让两个节点在线并准备就绪，是时候显示一条消息来确认一切已准备好，如下所示：
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now that the cluster is ready, let’s do as the output suggests and run `kubectl
    get nodes`. As expected, this gives us details on the two nodes that make up our
    cluster, as illustrated in the following screenshot:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在集群已经准备好，让我们按照输出提示，运行`kubectl get nodes`。如预期所示，这将为我们提供组成集群的两个节点的详细信息，如下图所示：
- en: '![A screenshot of a computer screen'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '![一张计算机屏幕的截图'
- en: Description automatically generated](img/B22019_16_05.png)
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_05.png)
- en: 'Figure 16.5: Viewing the two Amazon EKS cluster nodes'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.5：查看两个Amazon EKS集群节点
- en: Now that we have a cluster up and running, let’s deploy the same workload we
    launched when we worked with our **Google Kubernetes Engine** (**GKE**) cluster.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的集群已经启动并运行，让我们部署与之前在**Google Kubernetes Engine**（**GKE**）集群中启动时相同的工作负载。
- en: Deploying a workload and interacting with your cluster
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署工作负载并与集群进行交互
- en: In *Chapter 15*, *Kubernetes Clusters on Google Kubernetes Engine*, we used
    the Guestbook example from the GCP GKE examples GitHub repository. In this section,
    first we will deploy the workload before exploring the web-based AWS console.
    So now let’s start on our Guestbook deployment.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第15章*，*Google Kubernetes Engine上的Kubernetes集群*中，我们使用了来自GCP GKE示例GitHub仓库的Guestbook示例。在这一部分，我们首先将部署工作负载，然后再探索基于Web的AWS控制台。所以现在让我们开始部署Guestbook。
- en: Deploying the workload
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署工作负载
- en: 'Even though our cluster runs in AWS using Amazon EKS, we will use the same
    set of YAML files we used to launch our workload in GKE using our local `kubectl`;
    to do this, follow the steps below:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们的集群运行在AWS中，使用Amazon EKS，我们仍然会使用之前在GKE中启动工作负载时所使用的相同YAML文件，并通过本地的`kubectl`进行操作；为此，请按照以下步骤操作：
- en: 'As before, our first step is launching the Redis Leader deployment and service
    by running the two commands below:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如之前所述，我们的第一步是通过运行以下两条命令来启动Redis主节点的部署和服务：
- en: '[PRE21]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Once the Redis Leader is deployed, we need to launch the Redis Follower deployment
    and service, as follows:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Redis主节点部署完成，我们需要按以下步骤启动Redis从节点的部署和服务：
- en: '[PRE22]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Once the Redis Leader and Follower are up and running, it’s time to launch
    the frontend deployment and service using the following commands:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Redis主节点和从节点启动并运行，就该使用以下命令启动前端部署和服务：
- en: '[PRE23]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'After a few minutes, we will be able to run the following command to get information
    on the service we have just launched, which should include details on where to
    access our workload:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几分钟后，我们将能够运行以下命令以获取有关我们刚刚启动的服务的信息，其中应该包括访问工作负载的相关细节：
- en: '[PRE24]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You will notice that, this time, the output is slightly different from the
    output we got when running the workload on GKE, as we can see in the following
    screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，这次输出与我们在GKE上运行工作负载时得到的输出略有不同，如下图所示：
- en: '![A screenshot of a computer'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![一张计算机的截图'
- en: Description automatically generated](img/B22019_16_06.png)
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_06.png)
- en: 'Figure 16.6: Getting information on the frontend service'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.6：获取前端服务信息
- en: As you can see, rather than an **Internet Protocol** (**IP**) address, we get
    a **Uniform Resource Locator** (**URL**). Copy that into your browser.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们得到的不是**互联网协议**（**IP**）地址，而是**统一资源定位符**（**URL**）。将其复制到浏览器中。
- en: 'Once you have opened the URL, given that we have used the same commands and
    workload configuration, you won’t be surprised to see the **Guestbook** application,
    as shown in the following screenshot:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你打开了网址，鉴于我们使用了相同的命令和工作负载配置，你不会对看到**Guestbook**应用感到惊讶，如下图所示：
- en: '![A screenshot of a computer'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![一张计算机的截图'
- en: Description automatically generated](img/B22019_16_07.png)
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[描述自动生成](img/B22019_16_07.png)'
- en: 'Figure 16.7: The Guestbook application with a few examples'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.7：Guestbook 应用示例
- en: Now that our workload is up and running, let’s explore what we can see about
    our cluster within the AWS console.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的工作负载已经启动并运行，让我们来探索一下在 AWS 控制台中可以看到关于我们集群的信息。
- en: Exploring the AWS console
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 AWS 控制台
- en: This section will examine our newly deployed workload using the AWS console.
    First, log in to the AWS console at [https://console.aws.amazon.com/](https://console.aws.amazon.com/).
    Once logged in, select the **US West (Oregon) us-west-2** Region in the Region
    selector at the top right of the screen, next to your username.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将通过 AWS 控制台查看我们新部署的工作负载。首先，登录到 AWS 控制台，网址是[https://console.aws.amazon.com/](https://console.aws.amazon.com/)。登录后，选择屏幕右上角用户名旁边的**美国西部（俄勒冈）us-west-2**区域。
- en: '![A screenshot of a computer'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_08.png)
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[描述自动生成](img/B22019_16_08.png)'
- en: 'Figure 16.8: Selecting the correct Region'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.8：选择正确的区域
- en: Once the correct Region is selected, search for **Elastic Kubernetes Service**
    in the search bar on the top right and select the service, which should be the
    first result, to be taken to the EKS page in the Oregon Region.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的区域后，在右上角的搜索栏中搜索**弹性 Kubernetes 服务**，并选择该服务，它应该是第一个结果，进入俄勒冈区域的 EKS 页面。
- en: '![A screenshot of a computer'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_09.png)
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[描述自动生成](img/B22019_16_09.png)'
- en: 'Figure 16.9: Our first look at our EKS cluster in the AWS console'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.9：我们首次查看 AWS 控制台中的 EKS 集群
- en: 'So far, so good; well, we will talk about it in a moment – click on your cluster
    name, and you will be presented with something that looks like the following page:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，一切顺利；好了，我们稍后会谈到它——点击你的集群名称，你将看到类似以下页面的内容：
- en: '![A screenshot of a computer'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_10.png)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '[描述自动生成](img/B22019_16_10.png)'
- en: 'Figure 16.10: Access denied!'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.10：访问被拒绝！
- en: So, let’s unpack what is happening here. You may think, *“This is my main user,
    and surely it has full access?”.*
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们来分析一下这里发生了什么。你可能会想，*“这是我的主用户，肯定拥有完全访问权限吧？”*
- en: There is a good reason for this; when `eksctl` launched our cluster, it granted
    the **ekscluster** user we created earlier in the chapter permission to interact
    with the cluster using AWS services as we configured the AWS CLI to connect using
    this user and not the main user we are currently logged in as.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这么做是有原因的；当`eksctl`启动我们的集群时，它授予了我们之前创建的**ekscluster**用户权限，以便使用 AWS 服务与集群进行交互，因为我们已配置
    AWS CLI 使用该用户连接，而不是我们当前登录的主用户。
- en: 'This means that to view workloads and the like within the AWS console, we need
    to log in as the user we created earlier. To do this, return to IAM in the AWS
    console, go to the **Users** page, and select the **ekscluster** user; go to the
    **Security Credentials** tab and then click on the **Enable console access** button:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着要在 AWS 控制台中查看工作负载等内容，我们需要以之前创建的用户身份登录。为此，返回到 AWS 控制台中的 IAM，进入**用户**页面，选择**ekscluster**用户；然后转到**安全凭证**标签页，点击**启用控制台访问**按钮：
- en: '![A screenshot of a computer'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_11.png)
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[描述自动生成](img/B22019_16_11.png)'
- en: 'Figure 16.11: Enabling console access for the ekscluster user'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.11：为 ekscluster 用户启用控制台访问
- en: Select the **Autogenerated password** option and enable access; finally, download
    the CSV file containing the credentials as before.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**自动生成的密码**选项并启用访问；最后，像之前一样下载包含凭证的 CSV 文件。
- en: Once downloaded, sign out of the AWS console and open the CSV file you downloaded.
    Go to the console sign-in URL. This is a URL that allows IAM users, like the one
    we created, to sign in to your account; use the username and password in the CSV
    file.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，退出 AWS 控制台并打开你下载的 CSV 文件。进入控制台登录网址。这是一个允许 IAM 用户（如我们创建的用户）登录到你账户的 URL；使用
    CSV 文件中的用户名和密码。
- en: Once you have signed in, return to the EKS page and select your cluster; this
    time, you will not see any complaints about permissions.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，返回 EKS 页面并选择你的集群；这次你将不再看到权限相关的警告。
- en: 'When you first open the cluster, you will see several tabs. These are:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 当你首次打开集群时，你将看到几个标签页。它们是：
- en: '**Overview**: Displays various cluster details, such as the version of Kubernetes
    running, endpoint information, the cluster status, creation time and date, etc.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**概述**：显示各种集群详细信息，例如运行的Kubernetes版本、端点信息、集群状态、创建时间和日期等'
- en: '**Resources**: Provides information on nodes, Pods, namespaces, and workloads'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源**：提供有关节点、Pods、命名空间和工作负载的信息'
- en: '**Compute**: Shows node information, node groups, and details on any Fargate
    profiles associated with the cluster'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算**：显示节点信息、节点组以及与集群关联的任何Fargate配置文件的详细信息'
- en: '**Networking**: Details the VPC configuration'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络**：详细说明VPC配置'
- en: '**Add-ons**: Lists installed and available add-ons for the cluster'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加组件**：列出已安装和可用的集群附加组件'
- en: '**Access**: Displays IAM roles, AWS auth ConfigMap, and Kubernetes RBAC role
    bindings'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问**：显示IAM角色、AWS认证ConfigMap和Kubernetes RBAC角色绑定'
- en: '**Observability**: Configures and shows logging, monitoring, and recent events'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可观察性**：配置并显示日志、监控和最近的事件'
- en: '**Upgrade insights**: Lists available Kubernetes version upgrades and compatibility
    checks'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**升级洞察**：列出可用的Kubernetes版本升级和兼容性检查'
- en: '**Update history**: Provides a history of cluster and node group updates'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新历史**：提供集群和节点组更新的历史记录'
- en: '**Tags**: Lists and manages tags associated with the EKS cluster'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签**：列出并管理与EKS集群相关的标签'
- en: 'Below, you can see details on the nodes:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 下面，你可以看到有关节点的详细信息：
- en: '![A screenshot of a computer'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_12.png)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_12.png)
- en: 'Figure 16.12: Viewing the two nodes in the cluster in the Compute tab'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.12：在计算选项卡中查看集群中的两个节点
- en: 'Clicking on **Resources**, selecting **Deployments**, and filtering down to
    the **default** workspace will show the workload we launched:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**资源**，选择**部署**，并过滤到**default**工作区，将显示我们启动的工作负载：
- en: '![A screenshot of a computer'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_13.png)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_13.png)
- en: 'Figure 16.13: Viewing our workload'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.13：查看我们的工作负载
- en: Clicking on one of the deployments will give you more information on the deployment
    – this includes details of the Pods, configuration, and so on. However, as you
    click around, you will find that all you can really do is view information on
    the services; there are no graphs, logging output, or anything that gives more
    than a basic overview of our workloads. This is because the AWS console is mostly
    just exposing information from Kubernetes itself.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 点击其中一个部署将为你提供有关该部署的更多信息——包括Pods、配置等详细信息。然而，当你四处点击时，你会发现实际上你只能查看有关服务的信息；没有图表、日志输出或任何提供比基本概述更多信息的内容。这是因为AWS控制台主要只是暴露Kubernetes本身的信息。
- en: 'Moving away from the EKS service page and going to the EC2 service section
    of the AWS console will display the two nodes, as illustrated in the following
    screenshot:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 从EKS服务页面移开，进入AWS控制台的EC2服务部分，将显示两个节点，如下图所示：
- en: '![A screenshot of a computer'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_14.png)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_14.png)
- en: 'Figure 16.14: Looking at the raw EC2 compute resource'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.14：查看原始EC2计算资源
- en: Here, you can drill down and find out more information on the instance, including
    CPU, RAM, and network utilization; however, this is only for the instance itself
    and not our Kubernetes workload.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以深入了解实例的更多信息，包括CPU、RAM和网络利用率；不过，这仅适用于实例本身，而不是我们的Kubernetes工作负载。
- en: 'Selecting **Load Balancers** from the **Load Balancing** section of the left-hand-side
    menu will show you the elastic load balancer that was launched and configured
    when we applied the frontend service, as illustrated in the following screenshot:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 从左侧菜单的**负载均衡**部分选择**负载均衡器**，将显示我们在应用前端服务时启动和配置的弹性负载均衡器，如下图所示：
- en: '![A screenshot of a computer'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '![计算机截图'
- en: Description automatically generated](img/B22019_16_15.png)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 描述自动生成](img/B22019_16_15.png)
- en: 'Figure 16.15: Looking at the raw load balancer resource'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.15：查看原始负载均衡器资源
- en: One final AWS service we are using is AWS CloudFormation, so entering **CloudFormation**
    in the Services menu and clicking on the link will take you to the CloudFormation
    service page.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的最后一个AWS服务是AWS CloudFormation，因此在服务菜单中输入**CloudFormation**并点击链接将带你进入CloudFormation服务页面。
- en: 'Here, you will see two stacks: one for the EKS nodes, our two EC2 instances,
    and one for the EKS cluster, which is our Kubernetes management plane. These stacks
    are illustrated in the following screenshot:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B22019_16_16.png)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 16.16: The two stacks that make up our cluster'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: Selecting one of the stacks will give you details on what happened when the
    stack was launched. It will list all the many resources created during the launch
    of the Amazon EKS cluster using `eksctl`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'You select a template and then view it in the designer; you can even see the
    CloudFormation template generated by `eksctl`, which is quite a complicated JSON
    file – if you click on the **View in Application Composer** button, you will be
    able to get a more digestible visual representation of the stack. A screenshot
    of this view can be seen below:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '![A screenshot of a computer'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Description automatically generated](img/B22019_16_17.png)
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 16.17: Reviewing the CloudFormation template in Application Composer'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: That is about all we can see in the AWS console. As we have seen, while Amazon
    EKS is relatively simple to launch using `eksctl`, its level of integration with
    the AWS console could be better compared to the GKE cluster we launched in the
    previous chapter.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: While we were able to explore and view our workload, we could not interact with
    too much; also, the feedback on the cluster is tied to the basic monitoring offered
    by the Amazon EC2 service.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Once you have finished with your Amazon EKS cluster, you can delete it.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: Deleting your Amazon Elastic Kubernetes Service cluster
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can delete your cluster by running the following command, making sure to
    replace the cluster name with that of your own:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Deleting the cluster takes less time to run than when we launched it; in fact,
    it takes around 5 minutes.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: 'As before, `eksctl` gives you details on what it is doing as it deletes the
    resources:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The first thing that is updated is the local kubectl configuration, as we can
    see here:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Then, any resources that have been launched as part of deploying workloads
    into our cluster are terminated:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Then, the two AWS CloudFormation stacks are removed, which in turn removes
    all of the resources they created and configured, as illustrated in the following
    code snippet:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: At this point, our cluster has been completely deleted.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: Please double-check the EC2, EKS, and CloudFormation sections in the AWS console
    to ensure that all services have been correctly deleted, as you will be charged
    for any orphaned or idle resources left behind. While this is an unlikely scenario,
    it is best to double-check now rather than receive an unexpected bill at the end
    of the month.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: So, how much would our Amazon EKS cluster have cost us to run for a month?
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two sets of costs that we need to consider:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: The first is for the Amazon EKS cluster itself. It is US Dollars (USD) 0.10
    per hour for each Amazon EKS cluster you create; however, each Amazon EKS cluster
    can run multiple node groups, so you shouldn’t have to launch more than one per
    Region. This means that the Amazon EKS cluster costs around $73 per month.
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The next consideration is the AWS resources used by the cluster, for example,
    the EC2 cluster nodes, in our case, would have cost around $70 each, and the total
    cost to run our cluster for a month would be around $213\. I say around because
    there are charges for bandwidth and the AWS **Elastic Load Balancing** (**ELB**)
    service, which will increase the cost of our workload further.
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A link to the pricing overview page can be found in the *Further reading* section
    at the end of this chapter.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed the origins of AWS and Amazon EKS before walking
    through how to sign up for an account and how to install and configure the two
    command-line tools required to easily launch an Amazon EKS cluster.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Once our cluster was up and running, we deployed the same workload as when we
    launched our GKE cluster. We did not have to make any allowances for the workload
    running on a different cloud provider – it just worked, even deploying a load
    balancer using the AWS native load balancing service without us having to instruct
    it to do so.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: However, we did find that Amazon EKS is less integrated with the AWS console
    than the Google service we looked at. We also learned that we had to install a
    second command-line tool to easily launch our cluster due to the complications
    of trying to do so using the AWS CLI. This would have been around eight steps,
    assuming the Amazon VPC configuration and IAM roles had been created and deployed.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: This lack of integration and complexity in launching and maintaining clusters
    compared to other providers would put me off running my Kubernetes workloads on
    Amazon EKS – it all feels a little disjointed and not as slick as the Google offering.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will examine launching an **Azure Kubernetes Service**
    (**AKS**) cluster on Microsoft Azure, the last of the three public providers we
    will cover.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are links to more information on some of the topics and tools we have
    covered in this chapter:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: 'AWS: [https://aws.amazon.com/](https://aws.amazon.com/'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: 'Amazon EKS: [https://aws.amazon.com/eks/](https://aws.amazon.com/eks/'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: 'The AWS CLI: [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: 'eksctl: [https://eksctl.io/](https://eksctl.io/'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: 'eksctl support status update: [https://github.com/aws/containers-roadmap/issues/2280](https://github.com/aws/containers-roadmap/issues/2280'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: 'Official documentation: [https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html](https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: 'Amazon EKS pricing: [https://aws.amazon.com/eks/pricing/](https://aws.amazon.com/eks/pricing/'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: Join our community on Discord
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Join our community’s Discord space for discussions with the authors and other
    readers:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的Discord空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/cloudanddevops](https://packt.link/cloudanddevops)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/cloudanddevops](https://packt.link/cloudanddevops)'
- en: '![](img/QR_Code119001106479081656.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code119001106479081656.png)'
