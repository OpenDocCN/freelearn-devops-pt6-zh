["```\ndocker run --it --cpu-rt-runtime=950000 \\\n --ulimit rtprio=99 \\\n --memory=1024m \\\n --cpus=\".5\"\n alpine /bin/sh\n```", "```\nspec.containers[].resources.limits.cpu\nspec.containers[].resources.requests.cpu\nspec.containers[].resources.limits.memory\nspec.containers[].resources.requests.memory\n```", "```\n$ kubectl describe pod web| grep -C 3 Events\nEvents:\nFirstSeen LastSeen Count From Subobject PathReason Message\n74s 15s 2 {scheduler } FailedScheduling Failed for reason PodExceedsFreeCPU and possibly others\n```", "```\nmaster $ kubectl create namespace low-memory-area\nnamespace \"low-memory-area\" created\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n name: mem-limit-range\nspec:\n limits:\n - default:\n     memory: 512Mi\n   defaultRequest:\n     memory: 256Mi\n   type: Container\n```", "```\nmaster $ kubectl create -f test.ym --namespace=low-memory-area\nlimitrange \"mem-limit-range\" created\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n name: low-mem-demo\nspec:\n containers:\n - name: low-mem-demo\n   image: redis\n```", "```\nkubectl create -f low-memory-pod.yaml --namespace=low-memory-area\npod \"low-mem-demo\" created\n```", "```\nkubectl get pod low-mem-demo --output=yaml --namespace=low-memory-area\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n annotations:\n kubernetes.io/limit-ranger: 'LimitRanger plugin set: memory request for container\n low-mem-demo; memory limit for container low-mem-demo'\n creationTimestamp: 2018-09-20T01:41:40Z\n name: low-mem-demo\n namespace: low-memory-area\n resourceVersion: \"1132\"\n selfLink: /api/v1/namespaces/low-memory-area/pods/low-mem-demo\n uid: 52610141-bc76-11e8-a910-0242ac11006a\nspec:\n containers:\n - image: redis\n imagePullPolicy: Always\n name: low-mem-demo\n resources:\n limits:\n memory: 512Mi\n requests:\n memory: 256Mi\n terminationMessagePath: /dev/termination-log\n terminationMessagePolicy: File\n volumeMounts:\n - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n name: default-token-t6xqm\n readOnly: true\n dnsPolicy: ClusterFirst\n nodeName: node01\n restartPolicy: Always\n schedulerName: default-scheduler\n securityContext: {}\n serviceAccount: default\n serviceAccountName: default\n terminationGracePeriodSeconds: 30\n tolerations:\n - effect: NoExecute\n key: node.kubernetes.io/not-ready\n operator: Exists\n tolerationSeconds: 300\n - effect: NoExecute\n key: node.kubernetes.io/unreachable\n operator: Exists\n tolerationSeconds: 300\n volumes:\n - name: default-token-t6xqm\n secret:\n defaultMode: 420\n secretName: default-token-t6xqm\n hostIP: 172.17.1.21\n phase: Running\n podIP: 10.32.0.3\n qosClass: Burstable\n startTime: 2018-09-20T01:41:40Z\n\n```", "```\nKubectl delete pod low-mem-demo --namespace=low-memory-area\npod \"low-mem-demo\" delete\n```", "```\nresources:\n limits:\n   memory: 4096m\n requests:\n   memory: 4096m\n```", "```\nkubectl create namespace cpu-low-area\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n name: cpu-demo-range\nspec:\n limits:\n - max:\n     cpu: \"500m\"\n   min:\n     cpu: \"300m\"\n   type: Container\n```", "```\nkubectl create -f cpu-constraint.yaml --namespace=cpu-low-area\n```", "```\nkubectl get limitrange cpu-demo-range --output=yaml --namespace=cpu-low-area\n\nlimits:\n- default:\n cpu: 500m\n defaultRequest:\n cpu: 500m\n max:\n cpu: 500m\n min:\n cpu: 300m\n type: Container\n```", "```\nkubectl get pod cpu-demo-range --output=yaml --namespace=cpu-low-area\n\nresources:\n limits:\n cpu: 500m\n requests:\n cpu: 300m\n```", "```\nkubectl delete pod cpu-demo-range --namespace=cpu-low-area\n```"]