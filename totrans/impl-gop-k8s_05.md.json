["```\nproject: default\nsource:\n  repoURL: 'git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git'\n  path: ./chapter05/chapter-5-the-app-of-apps-approach/app-of-app/simple-webapp\n  targetRevision: main\ndestination:\n  server: 'https://kubernetes.default.svc'\n  namespace: app-of-app\nsyncPolicy:\n  automated:\n    prune: true\n    selfHeal: true\n```", "```\nproject: default\nsource:\n  repoURL: 'git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git'\n  path: ./chapter05/chapter-5-the-app-of-apps-approach app-of-apps/simple-webapps\n  targetRevision: main\n  directory:\n    recurse: true\n destination:\n  server: 'https://kubernetes.default.svc'\n  namespace: app-of-apps\nsyncPolicy:\n  automated:\n    prune: true\n    selfHeal: true\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: ApplicationSet\nmetadata:\n  name: simple-webapp\n  namespace: argocd\nspec:\n  generators:\n    - clusters:\n        selector:\n          matchLabels:\n            env: prod\n        values:\n          branch: main\n  template:\n    metadata:\n      name: \"{{name}}-simple-webapp\"\n      annotations:\n        argocd.argoproj.io/manifest-generate-paths: \".;..\"\n    spec:\n      project: default\n      sources:\n        - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n          targetRevision: \"{{values.branch}}\"\n          path: ./chapter05/chapter-5-the-app-of-apps-approach/applicationsets/simple-webapp\n      destination:\n        name: \"{{name}}\"\n        namespace: \"argocd\"\n        syncOptions:\n          - CreateNamespace=true\n```", "```\nkubectl apply -f simple-webapp-applicationset.yaml\n```", "```\nkubectl get applicationsets -n argocd\n```", "```\nkubectl get application -n argocd\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: simple-webapp\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: simple-webapp\n  template:\n    metadata:\n      labels:\n        app: simple-webapp\n    spec:\n      containers:\n        - image: \"ghcr.io/la-cc/simple-webapp:1.0.1-stable\" #specific version\n          name: simple-webapp\n          env:\n            - name: UI_X_COLOR #business-related values\n              value: darkblue\n            - name: SUBSCRIPTION_TIER\n              value: silver\n```", "```\nresources:\n  - deployment.yaml\n```", "```\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - ../../base\npatches:\n  - path: patch.yaml\nnamePrefix: qa-\ncommonLabels:\n  variant: qa\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: simple-webapp\nspec:\n  replicas: 1\n  template:\n    spec:\n      containers:\n        - image: \"ghcr.io/la-cc/simple-webapp:1.1.5-new-ui\"\n          name: simple-webapp\n          env:\n            - name: UI_X_COLOR\n              value: aqua\n```", "```\nkustomize build overlays/qa\n```", "```\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - ../../base\npatches:\n  - path: patch.yaml\nnamePrefix: stage-\ncommonLabels:\n  variant: stage\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: simple-webapp\nspec:\n  replicas: 2\n  template:\n    spec:\n      containers:\n        - image: \"ghcr.io/la-cc/simple-webapp:1.1.4-feature-login\"\n          name: simple-webapp\n```", "```\napiVersion: v2\nname: ingress-nginx #umbrella chart\nversion: 1.0.0\ndescription: This Chart deploys ingress-nginx.\ndependencies:\n  - name: ingress-nginx #subchart\n    version: 4.8.0\n    repository: https://kubernetes.github.io/ingress-nginx\n```", "```\nspec:\n  generators:\n    - clusters:\n        selector:\n          matchLabels:\n            env: prod\n        values:\n          branch: main\n  template:\n    metadata:\n      name: \"{{name}}-ingress-nginx \"\n    spec:\n      sources:\n        - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n          targetRevision: main\n          ref: valuesRepo\n        - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n          targetRevision: \"{{values.branch}}\"\n          path: \"./chapter05/chapter-5-building-a-service-catalog-for-kubernetes/networking/ingress-nginx\"\n          helm:\n            releaseName: \"ingress-nginx\"\n            valueFiles:\n              - \"values.yaml\"\n              - \"$valuesRepo/chapter05/chapter-5-building-a-service-catalog-for-kubernetes/cluster/{{name}}/networking/ingress-nginx/values.yaml\"\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: ApplicationSet\nmetadata:\n  name: ingress-nginx\n  namespace: argocd\nspec:\n  generators:\n    - clusters:\n        selector:\n          matchLabels:\n            env: dev\n            core-basic: enabled\n        values:\n          branch: main\n    - clusters:\n        selector:\n          matchLabels:\n            env: prod\n            core-basic: enabled\n        values:\n          branch: main\n....\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: ApplicationSet\nmetadata:\n  name: cert-manager\n  namespace: argocd\nspec:\n  generators:\n    - clusters:\n        selector:\n          matchLabels:\n            env: dev\n            core-basic: enabled\n            security-basic: enabled\n        values:\n          branch: main\n    - clusters:\n        selector:\n          matchLabels:\n            env: prod\n            core-basic: enabled\n            security-basic: enabled\n        values:\n          branch: main\n...\n```", "```\n{{- if .Values.ingress -}}\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: argocd-server-ingress\n  annotations:\n    kubernetes.io/ingress.class: {{ .Values.ingress.className }}\n    ingress.kubernetes.io/force-ssl-redirect: \"true\"\n    nginx.ingress.kubernetes.io/ssl-passthrough: {{ .Values.ingress.sslPassthrough | default \"false\" | quote }}\n    cert-manager.io/cluster-issuer: {{ .Values.ingress.issuer }}\n    cert-manager.io/renew-before: 360h #15 days\n    cert-manager.io/common-name: {{ .Values.ingress.host }}\n    kubernetes.io/tls-acme: \"true\"\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nspec:\n  rules:\n    - host: {{ .Values.ingress.host }}\n…\n```", "```\n#overwrite helm umbrella chart values:\ningress:\n  host: argocd.your-domain.com\n  issuer: \"letsencrypt\"\n  className: \"nginx\"\n```", "```\n...\n      sources:\n        - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n          targetRevision: \"{{values.branch}}\"\n          path: \"./kustomize/dns/external-dns-secrets\"\n        - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n...\n```", "```\nName: External DNS\nVersion in Chart.yaml: 6.23.6\nLatest Version in Repository: 6.26.4\nbetween     /tmp/tmp.aJBFfh/diff_value.yaml\nand /tmp/tmp.aJBFfh/diff_latest_value.yaml\n     _        __  __\n   _| |_   _ / _|/ _|\n / _' | | | | |_| |_ \n| (_| | |_| |  _|  _|\n \\__,_|\\__, |_| |_|           \n|___/\nreturned three differences\nimage.tag\n  ± value change\n    - 0.13.5-debian-11-r79\n    + 0.13.6-debian-11-r28\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: AppProject\nmetadata:\n  name: devteam-a\n  namespace: argocd  finalizers:\n    - resources-finalizer.argocd.argoproj.io\nspec:  description: Enable DevTeam-A Project to deploy new applications  sourceRepos:\n    - \"*\"\n  destinations:\n    - namespace: \"devteam-a\"\n      server: https://kubernetes.default.svc\n  # Restrict Namespace cluster-scoped resources from being created\n  clusterResourceBlacklist:\n    - group: \"\"\n      kind: \"Namespace\"\n  # Restrict namespaced-scoped resources from being created\n  namespaceResourceBlacklist:\n    - group: \"argoproj.io\"\n      kind: \"AppProject\"\n    - group: \"argoproj.io\"\n      kind: \"Application\"\n    - group: \"\"\n      kind: \"ResourceQuota\"\n    - group: \"networking.k8s.io\"\n      kind: \"NetworkPolicy\"\n```", "```\ndestinations:\n    - namespace: \"!kube-system\"\n      server: https://kubernetes.default.svc\n    - namespace: \"devteam-a-*\"\n      server: https://kubernetes.default.svc\n    - namespace: \"*\"\n      server: https://kubernetes.default.svc\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: application-initializer-devteam-a\n  namespace: argocd\nspec:\n  project: devteam-a\n  source:\n    repoURL: https://dev.azure.com/ORGA-X/devteam-a/_git/application\n    targetRevision: main\n    path: ./applicationset\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: devteam-a\n…\n```", "```\n  sources:\n    - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n      targetRevision: main\n      ref: valuesRepo\n  # - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n  #   path: \"./chapter05chapter-5-building-a-service-catalog-for-kubernetes/cluster/vcluster-team-a/\" #this part allows to deploy additional manifest like rbac.yaml\n  #   targetRevision: main\n    - repoURL: git@github.com:PacktPublishing/Implementing-GitOps-with-Kubernetes.git\n      targetRevision: main\n      path: \"./chapter05/chapter-5-building-a-service-catalog-for-kubernetes/optimization/vcluster\"\n      helm:\n        releaseName: \"vcluster-team-a\"\n        valueFiles:\n          - \"values.yaml\"\n          - \"$valuesRepo/chapter05/chapter-5-building-a-service-catalog-for-kubernetes/cluster/vcluster-team-a/optimization/vcluster/values.yaml\"\n```", "```\n    vcluster connect vcluster-team-a -n vcluster-team-a\n    ```", "```\n    vcluster connect vcluster-team-a \\\n    -n vcluster-team-a \\\n    --server=https://vcluster-team-a.example.com\n    ```", "```\n    argocd cluster add vcluster_vcluster-team-a \\\n    --label env=vdev \\\n    --upsert \\\n    --name vcuster-team-a\n    ```"]