["```\nyum install -y \\\n btrfs-progs-devel \\\n device-mapper-devel \\\n git \\\n glib2-devel \\\n glibc-devel \\\n glibc-static \\\n go \\\n golang-github-cpuguy83-go-md2man \\\n gpgme-devel \\\n libassuan-devel \\\n libgpg-error-devel \\\n libseccomp-devel \\\n libselinux-devel \\\n ostree-devel \\\n pkgconfig \\\n runc \\\n skopeo-containers\n```", "```\napt-get install -y \\\n btrfs-tools \\\n git \\\n golang-go \\\n libassuan-dev \\\n libdevmapper-dev \\\n libglib2.0-dev \\\n libc6-dev \\\n libgpgme11-dev \\\n libgpg-error-dev \\\n libseccomp-dev \\\n libselinux1-dev \\\n pkg-config \\\n go-md2man \\\n runc \\\n skopeo-containers\n```", "```\ngit clone https://github.com/kubernetes-incubator/cri-o # or your fork\ncd cri-o\n```", "```\nmake install.tools\nmake\nsudo make install\n```", "```\ngit clone https://github.com/kubernetes/kubernetes.git\n```", "```\nCGROUP_DRIVER=systemd \\\n CONTAINER_RUNTIME=remote \\\n CONTAINER_RUNTIME_ENDPOINT='unix:///var/run/crio/crio.sock  --runtime-request-timeout=15m' \\\n ./hack/local-up-cluster.sh\n```", "```\nminikube start \\\n --network-plugin=cni \\\n --extra-config=kubelet.container-runtime=remote \\\n --extra-config=kubelet.container-runtime-endpoint=/var/run/crio/crio.sock \\\n --extra-config=kubelet.image-service-endpoint=/var/run/crio/crio.sock \\\n --bootstrapper=kubeadm\n```", "```\ngcloud compute instances create cri-o \\\n --machine-type n1-standard-2 \\\n --image-family ubuntu-1610 \\\n --image-project ubuntu-os-cloud\n```", "```\nwget https://github.com/opencontainers/runc/releases/download/v1.0.0-rc4/runc.amd64\n```", "```\nchmod +x runc.amd64\nsudo mv runc.amd64 /usr/bin/runc\n```", "```\n$ runc -version\nrunc version 1.0.0-rc4\ncommit: 2e7cfe036e2c6dc51ccca6eb7fa3ee6b63976dcd\nspec: 1.0.0\n```", "```\nwget https://storage.googleapis.com/golang/go1.8.5.linux-amd64.tar.gz\nsudo tar -xvf go1.8.5.linux-amd64.tar.gz -C /usr/local/\nmkdir -p $HOME/go/src\nexport GOPATH=$HOME/go\nexport PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n```", "```\ngo version\ngo version go1.8.5 linux/amd64\n```", "```\ngo get github.com/kubernetes-incubator/cri-tools/cmd/crictl\ncd $GOPATH/src/github.com/kubernetes-incubator/cri-tools\nmake\nmake install\n```", "```\nsudo apt-get update && apt-get install -y libglib2.0-dev \\\n libseccomp-dev \\\n libgpgme11-dev \\\n libdevmapper-dev \\\n make \\\n git\n```", "```\ngo get -d github.com/kubernetes-incubator/cri-o\ncd $GOPATH/src/github.com/kubernetes-incubator/cri-o\nmake install.tools\nMake\nsudo make install\n```", "```\nregistries = ['registry.access..com', 'registry.fedoraproject.org', 'docker.io']\n```", "```\n$ vim /etc/systemd/system/crio.service\n```", "```\n[Unit]\nDescription=OCI-based implementation of Kubernetes Container Runtime Interface\nDocumentation=https://github.com/kubernetes-incubator/cri-o\n\n[Service]\nExecStart=/usr/local/bin/crio\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\n```", "```\n$ sudo systemctl daemon-reload && \\\n sudo systemctl enable crio && \\\n sudo systemctl start crio\n```", "```\n$ sudo crictl --runtime-endpoint unix:///var/run/crio/crio.sock version\nVersion:  0.1.0\nRuntimeName:  cri-o\nRuntimeVersion:  1.10.0-dev\nRuntimeApiVersion:  v1alpha1\n```", "```\ngo get -d github.com/containernetworking/plugins\ncd $GOPATH/src/github.com/containernetworking/plugins\n./build.sh\n```", "```\nsudo mkdir -p /opt/cni/bin\nsudo cp bin/* /opt/cni/bin/\n```", "```\nsudo mkdir -p /etc/cni/net.d\n```", "```\nsudo sh -c 'cat >/etc/cni/net.d/10-mynet.conf <<-EOF\n{\n\"cniVersion\": \"0.2.0\",\n   \"name\": \"mynet\",\n   \"type\": \"bridge\",\n   \"bridge\": \"cni0\",\n   \"isGateway\": true,\n   \"ipMasq\": true,\n   \"ipam\": {\n       \"type\": \"host-local\",\n       \"subnet\": \"10.88.0.0/16\",\n       \"routes\": [\n           { \"dst\": \"0.0.0.0/0\"  }\n       ]\n   }\n}\nEOF'\n```", "```\nsudo sh -c 'cat >/etc/cni/net.d/99-loopback.conf <<-EOF\n{\n \"cniVersion\": \"0.2.0\",\n \"type\": \"loopback\"\n}\nEOF'\n```", "```\nsudo add-apt-repository ppa:projectatomic/ppa\nsudo apt-get update\nsudo apt-get install skopeo-containers -y\n```", "```\ncd $GOPATH/src/github.com/kubernetes-incubator/cri-o\n```", "```\nsudo mkdir /etc/containers/\nsudo cp test/policy.json /etc/containers\n```", "```\nsudo crictl inspectp --output table $POD_ID\nID: cd6c0883663c6f4f99697aaa15af8219e351e03696bd866bc3ac055ef289702a\nName: podsandbox1\nUID: redhat-test-crio\nNamespace: redhat.test.crio\nAttempt: 1\nStatus: SANDBOX_READY\nCreated: 2016-12-14 15:59:04.373680832 +0000 UTC\nNetwork namespace: /var/run/netns/cni-bc37b858-fb4d-41e6-58b0-9905d0ba23f8\nIP Address: 10.88.0.2\nLabels:\ngroup -> test\nAnnotations:\nowner -> jwhite\nsecurity.alpha.kubernetes.io/seccomp/pod -> unconfined\nsecurity.alpha.kubernetes.io/sysctls ->\nkernel.shm_rmid_forced=1,net.ipv4.ip_local_port_range=1024 65000\nsecurity.alpha.kubernetes.io/unsafe-sysctls -> kernel.msgmax=8192\n```", "```\nsudo crictl pull quay.io/crio/redis:alpine\nCONTAINER_ID=$(sudo crictl create $POD_ID test/testdata/container_redis.json test/testdata/sandbox_config.json)\n```", "```\nsudo crictl start $CONTAINER_ID\nsudo crictl inspect $CONTAINER_ID\n```", "```\ntelnet 10.88.0.2 6379\nTrying 10.88.0.2â€¦\nConnected to 10.88.0.2.\nEscape character is '^]'.\n```", "```\nsudo crictl stop $CONTAINER_ID\nsudo crictl rm $CONTAINER_ID\nsudo crictl stopp $POD_ID\nsudo crictl rmp $POD_ID\nsudo crictl pods\nsudo crictl ps\n```", "```\n$ kube-aws status\n```", "```\napiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority: credentials/ca.pem\n    server: https://coreos.mydomain.com\n  name: kube-aws-my-coreos-cluster-cluster\ncontexts:\n- context:\n    cluster: kube-aws-my-coreos-cluster-cluster\n    namespace: default\n    user: kube-aws-my-coreos-cluster-admin\n  name: kube-aws-my-coreos-cluster-context\nusers:\n- name: kube-aws-my-coreos-cluster-admin\n  user:\n    client-certificate: credentials/admin.pem\n    client-key: credentials/admin-key.pem\ncurrent-context: kube-aws-my-coreos-cluster-context\n```", "```\n$ ./kubectl --kubeconfig=kubeconfig get nodes\n```"]