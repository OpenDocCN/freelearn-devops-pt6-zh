["```\n$ sudo apt-get remove docker docker-engine docker.io containerd runc\n```", "```\n$ sudo apt install docker.io\n```", "```\n$ sudo groupadd docker\n$ sudo usermod –aG docker <YOUR_USERNAME>\n```", "```\n$ docker run hello-world\n```", "```\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n70f5ac315c5a: Pull complete\nDigest: sha256:88ec0acaa3ec199d3b7eaf73588f4518c25 f9d34f58ce9a0df68429c5af48e8d\nStatus: Downloaded newer image for hello-world:latest\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1\\. The Docker client contacted the Docker daemon.\n 2\\. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n 3\\. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading.\n 4\\. The Docker daemon streamed that output to the Docker client, which sent it to your terminal.\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n```", "```\n$ docker search nginx\n```", "```\n$ docker pull nginx:latest\n```", "```\n$ docker pull nginx:1.25.2-alpine-slim\n```", "```\n$ docker run --name nginxcontainer –p 80:80 nginx:1.25.2-alpine-slim\n```", "```\n$ docker rm nginxcontainer\n```", "```\n$ docker ps –a\n```", "```\n$ docker images\n```", "```\n$ docker run -it --rm julia:1.9.3-bullseye\n```", "```\n$ using Statistics\n$ function descriptive_statistics(x)\n    m = mean(x)\n    sd = std(x)\n    return Dict(\"mean\" => m, \"std_dev\" => sd)\n  end\n```", "```\n$ myvector = rand(5)\n$ descriptive_statistics(myvector)\n```", "```\n$ exit()\n```", "```\nimport pandas as pd\nurl = 'https://raw.githubusercontent.com/jbrownlee/Datasets/master/pima-indians-diabetes.data.csv'\ndf = pd.read_csv(url, header=None)\ndf[\"newcolumn\"] = df[5].apply(lambda x: x*2)\nprint(df.columns)\nprint(df.head())\nprint(df.shape)\n```", "```\npip3 install pandas\n```", "```\npython3 run.py\n```", "```\nIndex([0, 1, 2, 3, 4, 5, 6, 7, 8, 'newcolumn'], dtype='object')\n   0    1   2   3    4     5      6   7  8  newcolumn\n0  6  148  72  35    0  33.6  0.627  50  1       67.2\n1  1   85  66  29    0  26.6  0.351  31  0       53.2\n2  8  183  64   0    0  23.3  0.672  32  1       46.6\n3  1   89  66  23   94  28.1  0.167  21  0       56.2\n4  0  137  40  35  168  43.1  2.288  33  1       86.2\n(768, 10)\n```", "```\nFROM python:3.11.6-slim\nRUN pip3 install pandas\nCOPY run.py /run.py\nCMD python3 /run.py\n```", "```\ndocker build -f Dockerfile_job -t data_processing_job:1.0 .\n```", "```\ndocker images\n```", "```\nREPOSITORY       TAG  IMAGE ID      CREATED        SIZE\ndata_process...  1.0  39bae1eb068c  6 minutes ago  351MB\n```", "```\ndocker run --name data_processing data_processing_job:1.0\n```", "```\nIndex([0, 1, 2, 3, 4, 5, 6, 7, 8, 'newcolumn'], dtype='object')\n   0    1   2   3    4     5      6   7  8  newcolumn\n0  6  148  72  35    0  33.6  0.627  50  1       67.2\n1  1   85  66  29    0  26.6  0.351  31  0       53.2\n2  8  183  64   0    0  23.3  0.672  32  1       46.6\n3  1   89  66  23   94  28.1  0.167  21  0       56.2\n4  0  137  40  35  168  43.1  2.288  33  1       86.2\n(768, 10)\n```", "```\ndocker ps –a\ndocker rm data_processing\n```", "```\nfrom fastapi import FastAPI\nimport random\n```", "```\napp = FastAPI()\n```", "```\n@app.get(\"/api\")\nasync def root():\n    return {\"message\": \"You are doing great with FastAPI...\"}\n```", "```\n@app.get(\"/api/{name}\")\nasync def return_name(name):\n    return {\n        \"name\": name,\n        \"message\": f\"Hello, {name}!\"\n    }\n```", "```\n@app.get(\"/joke\")\nasync def return_joke():\n    jokes = [\n        \"What do you call a fish wearing a bowtie? Sofishticated.\",\n        \"What did the ocean say to the beach? Nothing. It just waved\",\n        \"Have you heard about the chocolate record player? It sounds pretty sweet.\"\n    ]\n    return {\n        \"joke\": random.choice(jokes)\n    }\n```", "```\npip3 install fastapi uvicorn\n```", "```\nuvicorn app.main:app --host 0.0.0.0 --port 8087\n```", "```\nINFO:  Started server process [14417]\nINFO:  Waiting for application startup.\nINFO:  Application startup complete.\nINFO:  Uvicorn running on http://0.0.0.0:8087 (Press CTRL+C to quit)\n```", "```\nFROM python:3.11-alpine\nRUN pip3 --no-cache-dir install fastapi uvicorn\nEXPOSE 8087\nCOPY ./app /app\nCMD uvicorn app.main:app --host 0.0.0.0 --port 8087\n```", "```\ndocker build -t my_api:1.0 .\n```", "```\ndocker run -p 8087:8087 -d --rm --name api my_api:1.0\n```", "```\ndocker ps –a\n```", "```\ndocker logs api\n```", "```\nINFO:  Started server process [1]\nINFO:  Waiting for application startup.\nINFO:  Application startup complete.\nINFO:  Uvicorn running on http://0.0.0.0:8087 (Press CTRL+C to quit)\n```", "```\ndocker stop api\n```", "```\ndocker ps -a\n```"]