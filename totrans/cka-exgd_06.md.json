["```\nkubectl get serviceaccounts\n```", "```\nkubectl get sa\n```", "```\nNAME      SECRETS   AGE\ndefault   1         5d\n```", "```\nk get sa -A\n```", "```\nk get serviceaccounts --all-namespaces\n```", "```\nkubectl create serviceaccount melon-serviceaccount\n```", "```\nserviceaccount/melon-serviceaccount created\n```", "```\nkubectl create ns melon-ns\nkubectl create sa melonsa -n melon-ns\n```", "```\nk get –n melon-ns serviceaccounts\n```", "```\nNAME                   SECRETS   AGE \nmelon-ssa   1         46s\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n   name: melon-serviceaccount-pod\nspec:\n   serviceAccountName: melon-serviceaccount\n   containers:\n   - name: melonapp-svcaccount-container\n     image: busybox\n     command: ['sh', '-c','echo stay tuned!&& sleep 3600']\n```", "```\nkubectl delete sa melon-serviceaccount\n```", "```\nserviceaccount \"melon-serviceaccount\" deleted\n```", "```\ncloudmelon@cloudmelonplayground:~$ cd $HOME/.kube\ncloudmelon@cloudmelonplayground:~/.kube$ ls\ncache/  config\n```", "```\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /home/cloudmelon/.minikube/ca.crt\n    extensions:\n    - extension:\n        last-update: Wed, 11 May 2022 23:47:43 UTC\n        provider: minikube.sigs.k8s.io\n        version: v1.25.2\n      name: cluster_info\n    server: https://192.168.49.2:8443\n  name: minikube\ncontexts:\n- context:\n    cluster: minikube\n    extensions:\n    - extension:\n        last-update: Wed, 11 May 2022 23:47:43 UTC\n        provider: minikube.sigs.k8s.io\n        version: v1.25.2\n      name: context_info\n    namespace: default\n    user: minikube\n  name: minikube\ncurrent-context: minikube\nkind: Config\npreferences: {}\nusers:\n- name: minikube\n  user:\n    client-certificate: /home/cloudmelon/.minikube/profiles/minikube/client.crt\n    client-key: /home/cloudmelon/.minikube/profiles/minikube/client.key\n```", "```\nkubectl config view\n```", "```\nkubectl config current-context\n```", "```\nminikube\n```", "```\nkubectl config --help\n```", "```\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: \n < authority data >\n    server: https://xx.xx.xx.xx\n  name: gke_cluster\n- cluster:\n    certificate-authority-data: \n < authority data >\n    server: https://xx.xx.xx.xx\n  name: arctestaks\ncontexts:\n- context:\n    cluster: gke_cluster\n    user: gke_cluster\n  name: gke_cluster\n- context:\n    cluster: arctestaks\n    user: clusterUser_akscluster\n  name: akscluster\ncurrent-context: akscluster\nkind: Config\npreferences: {}\nusers:\n- name: gke_cluster\n  user:\n    auth-provider:\n      config:\n        access-token: \n < token data >\n        cmd-args: config config-helper --format=json\n        cmd-path: C:\\Program Files (x86)\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\n        expiry: '2022-05-12T00:28:06Z'\n        expiry-key: '{.credential.token_expiry}'\n        token-key: '{.credential.access_token}'\n      name: gcp\n- name: clusterUser_akscluster\n  user:\n    client-certificate-data: <data>\n    client-key-data: <data>\n    token: \n < token >\n```", "```\n gke-cluster\n```", "```\nkubectl config use-context akscluster     \n```", "```\naks-cluster\n```", "```\nkubectl create role dev-user --verb=get --verb=list --resource=pods --namespace=dev\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: dev\n  name: dev-user\nrules:\n- apiGroups: [\"\"] \n  resources: [\"pods\"]\n  verbs: [\"get\", \"list\"]\n```", "```\nrole.rbac.authorization.k8s.io/dev-user created\n```", "```\ncloudmelon@cloudmelonplayground:~$ k get role -n dev\nNAME       CREATED AT\ndev-user   2022-05-13T04:14:59Z\n```", "```\nkubectl create rolebinding dev-pods-binding --role=dev-user - -user=melon-dev --namespace=dev\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: dev-pods-binding\n  namespace: dev\nsubjects:\n- kind: User\n  apiGroup: rbac.authorization.k8s.io\n  name:melon-dev\nroleRef:\nkind: Role \n  name: dev-user \n  apiGroup: rbac.authorization.k8s.io\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: secret-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\", \"list\"]\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-secrets\n  namespace: development\nsubjects:\n- kind: Group\n  name: manager\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: secret-reader\n  apiGroup: rbac.authorization.k8s.io\n```", "```\ncloudmelon@cloudmelonplayground:~$ kubectl get roles -A\nNAMESPACE          NAME                                 CREATED AT\ndev                dev-user                                        \nkube-public        kubeadm:bootstrap-signer-clusterinfo             \nkube-public        system:controller:bootstrap-signer               \nkube-system        extension-apiserver-authentication-reader        \nkube-system        kube-proxy                                       \nkube-system        kubeadm:kubelet-config-1.23                      \nkube-system        kubeadm:nodes-kubeadm-config                     \nkube-system        system::leader-locking-kube-controller-manager   \nkube-system        system::leader-locking-kube-scheduler            \nkube-system        system:controller:bootstrap-signer               \nkube-system        system:controller:cloud-provider                 \nkube-system        system:controller:token-cleaner                  \nkube-system        system:persistent-volume-provisioner             \n```", "```\ncloudmelon@cloudmelonplayground:~$ kubectl get rolebindings -A\nNAMESPACE          NAME                                                \nROLE                                                  AGE\ndev                dev-pods-binding                                    \nRole/dev-user                                         15s\nkube-public        kubeadm:bootstrap-signer-clusterinfo                \nRole/kubeadm:bootstrap-signer-clusterinfo             6d\nkube-public        system:controller:bootstrap-signer                  \nRole/system:controller:bootstrap-signer               6d\nkube-system        kube-proxy                                          \nRole/kube-proxy                                       6d\nkube-system        kubeadm:kubelet-config-1.23                         \nRole/kubeadm:kubelet-config-1.23                      6d\nkube-system        kubeadm:nodes-kubeadm-config                        \nRole/kubeadm:nodes-kubeadm-config                     6d\nkube-system        metrics-server-auth-reader                          \nRole/extension-apiserver-authentication-reader        3h\nkube-system        system::extension-apiserver-authentication-reader   Role/extension-apiserver-authentication-reader        \n6d\nkube-system        system::leader-locking-kube-controller-manager      Role/system::leader-locking-kube-controller-manager   6d\nkube-system        system::leader-locking-kube-scheduler               \nRole/system::leader-locking-kube-scheduler            6d\nkube-system        system:controller:bootstrap-signer                  \nRole/system:controller:bootstrap-signer               6d\nkube-system        system:controller:cloud-provider                    \nRole/system:controller:cloud-provider                 6d\nkube-system        system:controller:token-cleaner                     \nRole/system:controller:token-cleaner                  6d\nkube-system        system:persistent-volume-provisioner                \nRole/system:persistent-volume-provisioner             6d\n```", "```\nkube-apiserver –authorization-mode=RBAC\n```", "```\nkubectl create deployment mybusybox –-image=busybox \n```", "```\nkubectl config use-context dev-user\n```", "```\ncloudmelon@cloudmelonplayground:~$ kubectl delete deployment mybusybox\nError from server (Forbidden): deployments.apps is forbidden: User \"dev-user\" cannot delete resource \"deployments\" in API group \"apps\" in the namespace \"t\n```", "```\nsudo useradd -u 2000 container-user-0\nsudo groupadd -g 3000 container-group-0\n```", "```\nsudo mkdir -p /etc/message\necho \"hello Packt\" | sudo tee -a /etc/message/message.txt\n```", "```\n hello Packt\n```", "```\nsudo chown 2000:3000 /etc/message/message.txt\nsudo chmod 640 /etc/message/message.txt\n```", "```\n  apiVersion: v1\n  kind: Pod\n  metadata:\n    name: melon-securitycontext-pod\n  spec:\n    securityContext:\n      runAsUser: 2000\n      fsGroup: 3000\n    containers:\n    - name: melonapp-secret-container\n      image: busybox\n      command: ['sh', '-c','cat /message/message.txt && sleep 3600']\n      volumeMounts:\n      - name: message-volume\n        mountPath: /message\n    volumes:\n    - name: message-volume\n      hostPath:\n        path: /etc/message\n\n```", "```\nkubectl apply -f pod-permission.yaml\n```", "```\nNAME                        READY   STATUS          RESTARTS    \nAGE\nmelon-securitycontext-pod 0/1     CrashLoopBackOff   1 5m\n```", "```\nsecurityContext:\n    runAsUser: 1000\n    runAsGroup: 3000\n    fsGroup: 2000\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: security-context-message\nspec:\n  securityContext:\n    runAsUser: 1000\n    runAsGroup: 3000\n    fsGroup: 2000\n  volumes:\n  - name: sec-ctx-msg\n    emptyDir: {}\n  containers:\n  - name: sec-ctx-msg\n    image: busybox:1.28\n    command: [ \"sh\", \"-c\", \"sleep 1h\" ]\n    volumeMounts:\n    - name: sec-ctx-msg\n      mountPath: /message\n    securityContext:\n      allowPrivilegeEscalation: false\n```", "```\ncloudmelon@cloudmelonplayground:/$ kubectl get pod security-context-demo\nNAME                    READY   STATUS    RESTARTS   AGE\nsecurity-context-message  1/1     Running   0          3m4s\n```", "```\nkubectl exec -it security-context-message -- sh\n```", "```\n/ $ id\nuid=1000 gid=3000 groups=2000\n```"]