["```\nnamespace/kubearmor created\n![](img/Untitled-2-01.png)       Installed helm release : kubearmor-operator\n![](img/Untitled-2-02.png)      KubeArmorConfig created\n![](img/Untitled-2-03.png)      This may take a couple of minutes\n![](img/Untitled-2-04.png)      KubeArmor Snitch Deployed!\n![](img/Untitled-2-05.png)      KubeArmor Daemonset Deployed!\n![](img/Untitled-2-04.png)      Done Checking , ALL Services are running!\n![](img/Untitled-2-07.png)      Execution Time : 2m1.206181193s\n![](img/Untitled-2-08.png)      Verifying KubeArmor functionality (this may take upto a minute) —.\n        ![](img/Untitled-2-09.png)       Your Cluster is Armored Up! \n```", "```\nkubearmor-controller-7cb5467b99-wmlz5    2/2     Running   0          6m  \nkubearmor-gvs5f                               1/1     Running   0          6m6s\nkubearmor-lpkj6                             1/1     Running   0          6m6s\nkubearmor-relay-5ccb6b6ffb-c4dlm               1/1     Running   0          6m6s \n```", "```\nspec:\n  template:\n    spec:\n      containers:\n      - name: kubearmor-relay-server\n        env:\n        - name: ENABLE_STDOUT_LOGS\n          value: \"true\"\n        - name: ENABLE_STDOUT_ALERTS\n          value: \"true\" \n```", "```\nkubectl patch deploy kubearmor-relay -n kubearmor --patch-file patch-relay.yaml \n```", "```\n{\"Timestamp\":1701200947,\"UpdatedTime\":\"2023-11-28T19:49:07.625696Z\",\"ClusterName\":\"default\",\"HostName\":\"cluster01-worker\",\"NamespaceName\":\"my-ext-secret\",\"Owner\":{\"Ref\":\"Pod\",\"Name\":\"nginx-secrets\",\"Namespace\":\"my-ext-secret\"},\"PodName\":\"nginx-secrets\",\"Labels\":\"app=nginx-web\",\"ContainerID\":\"88f324db1f6ffa01f42b2811288b6f8b0e66001f41c5101ce578f69c bd932e5e\",\"ContainerName\":\"nginx-web\",\"ContainerImage\":\"docker.io/library/nginx :latest@sha256:10d1f5b58f74683ad34eb29287e07dab1e90f10af243f151bb50aa5 dbb4d62ee\",\"HostPPID\":1441261,\"HostPID\":1441503,\"PPID\":43,\"PID\":50,\"ProcessName\":\"/usr/bin/cat\",\"PolicyName\":\"nginx-secret\",\"Severity\":\"1\",\"Type\":\"MatchedPolicy\",\"Source\":\"/usr/bin/cat /etc/secrets/\",\"Operation\":\"File\",\"Resource\":\"/etc/secrets/\",\"Data\":\"syscall=SYS_OPENAT fd=-100 flags=O_RDONLY\",\"Enforcer\":\"AppArmor\",\"Action\":\"Block\",\"Result\":\"Permission denied\"} \n```", "```\nkubearmor-local-path-storage-local-path-provisioner-local-path-provisioner\nkubearmor-my-ext-secret-nginx-secrets-nginx-web\nkubearmor-calico-apiserver-calico-apiserver-calico-apiserver             kubearmor-tigera-operator-tigera-operator-tigera-operator\nkubearmor-calico-system-calico-kube-controllers-calico-kube-controllers  kubearmor-vault-vault-agent-injector-sidecar-injector\nkubearmor-calico-system-calico-node-calico-node                          kubearmor-vault-vault-vault\nkubearmor-calico-system-csi-node-driver-calico-csi\nkubearmor-calico-system-csi-node-driver-csi-node-driver-registrar        lsb_release\nkubearmor-cert-manager-cert-manager-cainjector-cert-manager-cainjector   nvidia_modprobe\nkubearmor-cert-manager-cert-manager-cert-manager-controller              tunables \n```", "```\n## == Managed by KubeArmor == ##\n#include <tunables/global>profile kubearmor-vault-vault-vault flags=(attach_disconnected,mediate_deleted) {\n  ## == PRE START == ##\n  #include <abstractions/base>\n  umount,\n  file,\n  network,\n  capability,\n  ## == PRE END == ##\n  ## == POLICY START == ##\n  ## == POLICY END == ##\n  ## == POST START == ##\n  /lib/x86_64-linux-gnu/{*,**} rm,\n  deny @{PROC}/{*,**^[0-9*],sys/kernel/shm*} wkx,\n  deny @{PROC}/sysrq-trigger rwklx,\n  deny @{PROC}/mem rwklx,\n  deny @{PROC}/kmem rwklx,\n  deny @{PROC}/kcore rwklx,\n  deny mount,\n  deny /sys/[^f]*/** wklx,\n  deny /sys/f[^s]*/** wklx,\n  deny /sys/fs/[^c]*/** wklx,\n  deny /sys/fs/c[^g]*/** wklx,\n  deny /sys/fs/cg[^r]*/** wklx,\n  deny /sys/firmware/efi/efivars/** rwklx,\n  deny /sys/kernel/security/** rwklx,\n  ## == POST END == ##\n} \n```", "```\napiVersion: security.kubearmor.com/v1\nkind: KubeArmorPolicy\nmetadata:\n  name: block-write-bin\n  namespace: demo\nspec:\n  action: Block\n  file:\n    matchDirectories:\n    - dir: /bin/\n      readOnly: true\n      recursive: true\n  message: Alert! An attempt to write to the /bin directory denied. \n```", "```\ndefaultFilePosture: block        #Can be block or audit\ndefaultNetworkPosture: block         #Can be block or audit\ndefaultCapabilitiesPosture: block     #Can be block or audit \n```", "```\nkubectl annotate ns default kubearmor-file-posture=block --overwrite \n```", "```\nkubectl exec -it nginx-secrets -n my-ext-secret -- bash \n```", "```\ncat /etc/secrets/myenv \n```", "```\nsome-password: mysupersecretp@ssw0rd \n```", "```\napiVersion: security.kubearmor.com/v1\nkind: KubeArmorPolicy\nmetadata:\n  name: nginx-secret\n  namespace: my-ext-secret\nspec:\n  selector:\n    matchLabels:\n      app: nginx-web\n  file:\n    matchDirectories:\n    - dir: /\n      recursive: true\n    - dir: /etc/nginx/\n      recursive: true\n      fromSource:\n        - path: /usr/sbin/nginx\n    - dir: /etc/secrets/\n      recursive: true\n      fromSource:\n        - path: /usr/sbin/nginx\n    - dir: /etc/nginx/\n      recursive: true\n      action: Block\n    - dir: /etc/secrets/\n      recursive: true\n      action: Block\n  process:\n    matchPaths:\n    - path: /usr/sbin/nginx\n  action:\n    Allow \n```", "```\ncat /etc/secrets/myenv \n```", "```\nroot@nginx-secrets:/etc/secrets# cat /etc/secrets/myenv\ncat: /etc/secrets/myenv: Permission denied \n```", "```\nkarmor profile -n demo \n```", "```\n./out\n├── kube-system-coredns\n├── kube-system-kubearmor-controller\n└── kube-system-kubearmor-relay \n```", "```\nkube-system-coredns/\n├── registry-k8s-io-coredns-coredns-v1-10-1-cronjob-cfg.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-file-integrity-monitoring.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-impair-defense.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-k8s-client-tool-exec.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-maint-tools-access.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-network-service-scanning.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-pkg-mngr-exec.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-remote-file-copy.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-remote-services.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-shell-history-mod.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-system-owner-discovery.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-trusted-cert-mod.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-write-etc-dir.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-write-in-shm-dir.yaml\n├── registry-k8s-io-coredns-coredns-v1-10-1-write-under-bin-dir.yaml\n└── registry-k8s-io-coredns-coredns-v1-10-1-write-under-dev-dir.yaml \n```", "```\napiVersion: security.kubearmor.com/v1\nkind: KubeArmorPolicy\nmetadata:\n  name: coredns-registry-k8s-io-coredns-coredns-v1-10-1-write-etc-dir\n  namespace: kube-system\nspec:\n  action: Block\n  file:\n    matchDirectories:\n    - dir: /etc/\n      readOnly: true\n      recursive: true\n  message: Alert! File creation under /etc/ directory detected.\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  severity: 5\n  tags:\n  - NIST_800-53_SI-7\n  - NIST\n  - NIST_800-53_SI-4\n  - NIST_800-53\n  - MITRE_T1562.001_disable_or_modify_tools\n  - MITRE_T1036.005_match_legitimate_name_or_location\n  - MITRE_TA0003_persistence\n  - MITRE\n  - MITRE_T1036_masquerading\n  - MITRE_TA0005_defense_evasion \n```", "```\nkarmor recommend -n kube-system -t PCI-DSS,CIS \n```", "```\nkarmor recommend -i bitnami/nginx \n```", "```\nout\n└── bitnami-nginx-latest\nNotice that the directory name does not contain a namespace; it only has the image name and tag that we tested against, bitnami/nginx:latest. This example run created a number of policies since we ran it against all included policies:\n├── access-ctrl-permission-mod.yaml\n├── cis-commandline-warning-banner.yaml\n├── cronjob-cfg.yaml\n├── file-integrity-monitoring.yaml\n├── file-system-mounts.yaml\n├── impair-defense.yaml\n├── k8s-client-tool-exec.yaml\n├── maint-tools-access.yaml\n├── network-service-scanning.yaml\n├── pkg-mngr-exec.yaml\n├── remote-file-copy.yaml\n├── remote-services.yaml\n├── shell-history-mod.yaml\n├── system-network-env-mod.yaml\n├── system-owner-discovery.yaml\n├── trusted-cert-mod.yaml\n├── write-etc-dir.yaml\n├── write-in-shm-dir.yaml\n├── write-under-bin-dir.yaml\n└── write-under-dev-dir.yaml \n```", "```\n├── access-ctrl-permission-mod.yaml\n├── cis-commandline-warning-banner.yaml\n├── cronjob-cfg.yaml\n├── file-system-mounts.yaml\n└── system-network-env-mod.yaml \n```", "```\nlocal port to be used for port forwarding kubearmor-relay-7676f9684f-652ll: 32879\nCreated a gRPC client (localhost:32879)\nChecked the liveness of the gRPC server\nStarted to watch alerts \n```", "```\nI have no name!@nginx-web-57794669f5-gd4r4:/app$ cd /bin\nI have no name!@nginx-web-57794669f5-gd4r4:/bin$ touch test\ntouch: cannot touch 'test': Permission denied \n```", "```\n== Alert / 2023-10-09 14:14:32.192243 ==\nClusterName: default\nHostName: cluster01-worker\nNamespaceName: demo\nPodName: nginx-web-57794669f5-gd4r4\nLabels: app=nginx-web\nContainerName: nginx\nContainerID: 8048c5fb3fd2425e401505cb4c12d147fddd71e6587ba3f3c488e609b28819a8\nContainerImage: docker.io/bitnami/nginx:latest@sha256:4ce786ce4a547b796cf23efe62b54a910de6fd41245012f10e5f75e85ed3563c\nType: MatchedPolicy\nPolicyName: DefaultPosture\nSource: /usr/bin/touch test\nResource: test\nOperation: File\nAction: Block\nData: syscall=SYS_OPENAT fd=-100 flags=O_WRONLY|O_CREAT|O_NOCTTY|O_NONBLOCK\nEnforcer: AppArmor\nResult: Permission denied\nHostPID: 2.731789e+06\nHostPPID: 2.731618e+06\nOwner: map[Name:nginx-web Namespace:demo Ref:Deployment]\nPID: 59\nPPID: 53\nParentProcessName: /bin/bash\nProcessName: /bin/touch\nUID: 1001 \n```", "```\n{\"Timestamp\":1696861352,\"UpdatedTime\":\"2023-10-09T14:22:32.445655Z\",\"ClusterName\":\"default\",\"HostName\":\"cluster01-worker\",\"NamespaceName\":\"demo\",\"Owner\":{\"Ref\":\"Deployment\",\"Name\":\"nginx-web\",\"Namespace\":\"demo\"},\"PodName\":\"nginx-web-57794669f5-gd4r4\",\"Labels\":\"app=nginx-web\",\"ContainerID\":\"8048c5fb3fd2425e401505cb4c12d147fddd71e6587ba3f3c488e6 09b28819a8\",\"ContainerName\":\"nginx\",\"ContainerImage\":\"docker.io/bitnami /nginx:latest@sha256:4ce786ce4a547b796cf23efe62b54a910de6fd41245012f 10e5f75e85ed3563c\",\"HostPPID\":2731618,\"HostPID\":2739719,\"PPID\":53,\"PID\":60,\"UID\":1001,\"ProcessName\":\"/bin/touch\",\"PolicyName\":\"DefaultPosture\",\"Type\":\"MatchedPolicy\",\"Source\":\"/usr/bin/touch test\",\"Operation\":\"File\",\"Resource\":\"test\",\"Data\":\"syscall=SYS_OPENAT fd=-100 flags=O_WRONLY|O_CREAT|O_NOCTTY|O_NONBLOCK\",\"Enforcer\":\"AppArmor\",\"Action\":\"Block\",\"Result\":\"Permission denied\"} \n```", "```\nkarmor logs --json --logPath ~/karmor.logs \n```", "```\n-rw-rw-r--  1 surovich surovich  2602 Oct  9 14:49 karmor.logs \n```"]