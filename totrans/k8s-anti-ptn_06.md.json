["```\nDockerfile\n# Stage 1: Build the application\nFROM node:16 as builder\n# Set the working directory\nWORKDIR /app\n# Copy package.json and package-lock.json\nCOPY package.json package-lock.json ./\n# Install dependencies\nRUN npm install\n# Copy the rest of your application code\nCOPY . .\n# Build the application (if applicable)\nRUN npm run build\n```", "```\n# Stage 2: Setup the runtime environment\nFROM node:16-alpine\n# Set the working directory\nWORKDIR /app\n# Copy only the built artifacts and necessary files from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\n# Set the command to start your app\nCMD [\"node\", \"build/app.js\"]\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: nginx-example-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/load-balance: \"least_conn\" # Load balancing algorithm\n    nginx.ingress.kubernetes.io/affinity: \"cookie\" # Enable session affinity\n    nginx.ingress.kubernetes.io/session-cookie-name: \"nginxaffinity\" # Set cookie name\n    nginx.ingress.kubernetes.io/session-cookie-hash: \"sha1\" # Hash algorithm for cookie\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - myapp.example.com\n    secretName: myapp-tls-secret\n  rules:\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: myapp-service\n            port:\n              number: 80\n```", "```\napiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: traefik-example-ingressroute\nspec:\n  entryPoints:\n    - web\n  routes:\n  - match: Host(`myapp.example.com`)\n    kind: Rule\n    services:\n    - name: myapp-service\n      port: 80\n      strategy: RoundRobin\n    middlewares:\n    - name: auth-middleware\n---\napiVersion: traefik.containo.us/v1alpha1\nkind: Middleware\nmetadata:\n  name: auth-middleware\nspec:\n  basicAuth:\n    secret: myapp-basic-auth-secret\n```", "```\nkubectl apply -f nginx-ingress.yaml\n```", "```\nkubectl apply -f traefik-ingress.yaml\n```"]