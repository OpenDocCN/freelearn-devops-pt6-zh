["```\nDowntime per year in hours = (1 - Uptime Availability) x 365 x 24\n```", "```\nAvailability Percentage = (Uptime / (Uptime + Downtime) x 100\n```", "```\nMTBF = ‘Total hours in a year' / ‘Number of yearly failures'\n```", "```\nMTTR = (‘Amount of failure' x ‘Time to repair the system') / ‘Total number of failures'\n```", "```\nUptime Availability = MTBF/(MTTR + MTBF)\nDowntime per Year (Hours) = (1 – Uptime Ratio) x 365 x 24\n```", "```\nLANG=C ifconfig -a | grep -Po 'HWaddr \\K.*$'\n```", "```\nsudo cat /sys/class/dmi/id/product_uuid\n```", "```\neval $(ssh-agent)\nssh-add ~/.ssh/id_rsa\n```", "```\nsudo -E -s\n```", "```\napiVersion: kubeadm.k8s.io/v1alpha2\nkind: MasterConfiguration\nkubernetesVersion: v1.11.0\napiServerCertSANs:\n- \"LB_DNS\"\napi:\n   controlPlaneEndpoint: \"LB_DNS:LB_PORT\"\netcd:\n local:\n   extraArgs:\n     listen-client-urls: \"https://127.0.0.1:2379,https://CONTROL01_IP:2379\"\n     advertise-client-urls: \"https://CONTROL01_IP:2379\"\n     listen-peer-urls: \"https://CONTROL01_IP:2380\"\n     initial-advertise-peer-urls: \"https://CONTROL01_IP:2380\"\n     initial-cluster: \"CONTROL01_HOSTNAME=https://CONTROL01_IP:2380\"\n   serverCertSANs:\n     - CONTROL01_HOSTNAME\n     - CONTROL01_IP\n   peerCertSANs:\n     - CONTROL01_HOSTNAME\n     - CONTROL01_IP\nnetworking:\n   podSubnet: \"192.168.0.0/16\"\n```", "```\nkubeadm init --config kubeadm-conf-01.yaml\n```", "```\n/etc/kubernetes/pki/ca.crt\n/etc/kubernetes/pki/ca.key\n/etc/kubernetes/pki/sa.key\n/etc/kubernetes/pki/sa.pub\n/etc/kubernetes/pki/front-proxy-ca.crt\n/etc/kubernetes/pki/front-proxy-ca.key\n/etc/kubernetes/pki/etcd/ca.crt\n/etc/kubernetes/pki/etcd/ca.key\n/etc/kubernetes/admin.conf\n```", "```\napiVersion: kubeadm.k8s.io/v1alpha2\nkind: MasterConfiguration\nkubernetesVersion: v1.11.0\napiServerCertSANs:\n- \"LOAD_BALANCER_DNS\"\napi:\n   controlPlaneEndpoint: \"LB_DNS:LB_PORT\"\netcd:\n local:\n   extraArgs:\n     listen-client-urls: \"https://127.0.0.1:2379,https://CONTROL02_IP:2379\"\n     advertise-client-urls: \"https://CONTROL02_IP:2379\"\n     listen-peer-urls: \"https://CONTROL02_IP:2380\"\n     initial-advertise-peer-urls: \"https://CONTROL01_IP:2380\"\n     initial-cluster: \"CONTROL01_HOSTNAME=https://CONTROL01_IP:2380,CONTROL02_HOSTNAME=https://CONTROL02_IP:2380\"\n     initial-cluster-state: existing\n   serverCertSANs:\n     - CONTROL02_HOSTNAME\n     - CONTROL02_IP\n   peerCertSANs:\n     - CONTROL02_HOSTNAME\n     - CONTROL02_IP\nnetworking:\n   podSubnet: \"192.168.0.0/16\"\n```", "```\n mkdir -p /etc/kubernetes/pki/etcd\n mv /home/${USER}/ca.crt /etc/kubernetes/pki/\n mv /home/${USER}/ca.key /etc/kubernetes/pki/\n mv /home/${USER}/sa.pub /etc/kubernetes/pki/\n mv /home/${USER}/sa.key /etc/kubernetes/pki/\n mv /home/${USER}/front-proxy-ca.crt /etc/kubernetes/pki/\n mv /home/${USER}/front-proxy-ca.key /etc/kubernetes/pki/\n mv /home/${USER}/etcd-ca.crt /etc/kubernetes/pki/etcd/ca.crt\n mv /home/${USER}/etcd-ca.key /etc/kubernetes/pki/etcd/ca.key\n mv /home/${USER}/admin.conf /etc/kubernetes/admin.conf\n```", "```\nkubeadm alpha phase certs all --config kubeadm-conf-02.yaml\nkubeadm alpha phase kubelet config write-to-disk --config kubeadm-conf-02.yaml\nkubeadm alpha phase kubelet write-env-file --config kubeadm-conf-02.yaml\nkubeadm alpha phase kubeconfig kubelet --config kubeadm-conf-02.yaml\nsystemctl start kubelet\n```", "```\nexport CONTROL01_IP=<YOUR_IP_HERE>\nexport CONTROL01_HOSTNAME=cp01H\nexport CONTROL02_IP=<YOUR_IP_HERE>\nexport CONTROL02_HOSTNAME=cp02H\n```", "```\nexport KUBECONFIG=/etc/kubernetes/admin.conf\nkubectl exec -n kube-system etcd-${CONTROL01_HOSTNAME} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://${CONTROL01_IP}:2379 member add ${CONTROL02_HOSTNAME} https://${CP1_IP}:2380\n```", "```\nkubeadm alpha phase etcd local --config kubeadm-config-02.yaml\n```", "```\nkubeadm alpha phase kubeconfig all --config kubeadm-conf-02.yaml\nkubeadm alpha phase controlplane all --config kubeadm-conf-02.yaml\nkubeadm alpha phase mark-master --config kubeadm-conf-02.yaml\n```", "```\napiVersion: kubeadm.k8s.io/v1alpha2\nkind: MasterConfiguration\nkubernetesVersion: v1.11.0\napiServerCertSANs:\n- \"LB_DNS\"\napi:\n   controlPlaneEndpoint: \"LB_DNS:LB_PORT\"\netcd:\n local:\n   extraArgs:\n     listen-client-urls: \"https://127.0.0.1:2379,https://CONTROL03_IP:2379\"\n     advertise-client-urls: \"https://CONTROL03_IP:2379\"\n     listen-peer-urls: \"https://CONTROL03_IP:2380\"\n     initial-advertise-peer-urls: \"https://CONTROL03_IP:2380\"\n     initial-cluster: \"CONTRL01_HOSTNAME=https://CONTROL01_IP:2380,CONTROL02_HOSTNAME=https://CONTROL02_IP:2380,CONTRL03_HOSTNAME=https://CONTROL03_IP:2380\"\n     initial-cluster-state: existing\n   serverCertSANs:\n     - CONTRL03_HOSTNAME\n     - CONTROL03_IP\n   peerCertSANs:\n     - CONTRL03_HOSTNAME\n     - CONTROL03_IP\nnetworking:\n   podSubnet: \"192.168.0.0/16\"\n```", "```\n mkdir -p /etc/kubernetes/pki/etcd\n mv /home/${USER}/ca.crt /etc/kubernetes/pki/\n mv /home/${USER}/ca.key /etc/kubernetes/pki/\n mv /home/${USER}/sa.pub /etc/kubernetes/pki/\n mv /home/${USER}/sa.key /etc/kubernetes/pki/\n mv /home/${USER}/front-proxy-ca.crt /etc/kubernetes/pki/\n mv /home/${USER}/front-proxy-ca.key /etc/kubernetes/pki/\n mv /home/${USER}/etcd-ca.crt /etc/kubernetes/pki/etcd/ca.crt\n mv /home/${USER}/etcd-ca.key /etc/kubernetes/pki/etcd/ca.key\n mv /home/${USER}/admin.conf /etc/kubernetes/admin.conf\n```", "```\nkubeadm alpha phase certs all --config kubeadm-conf-03.yaml\nkubeadm alpha phase kubelet config write-to-disk --config kubeadm-conf-03.yaml\nkubeadm alpha phase kubelet write-env-file --config kubeadm-conf-03.yaml\nkubeadm alpha phase kubeconfig kubelet --config kubeadm-conf-03.yaml\nsystemctl start kubelet\n```", "```\nexport CONTROL01_IP=<YOUR_IP_HERE>\nexport CONTROL01_HOSTNAME=cp01H\nexport CONTROL03_IP=<YOUR_IP_HERE>\nexport CONTROL03_HOSTNAME=cp03H\n```", "```\nexport KUBECONFIG=/etc/kubernetes/admin.conf\n\nkubectl exec -n kube-system etcd-${CONTROL01_HOSTNAME} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://${CONTROL01_IP}:2379 member add ${CONTROL03_HOSTNAME} https://${CONTROL03_IP}:2380\n\nkubeadm alpha phase etcd local --config kubeadm-conf-03.yaml\n\n```", "```\nkubeadm alpha phase kubeconfig all --config kubeadm-conf-03.yaml\n\nkubeadm alpha phase controlplane all --config kubeadm-conf-03.yaml\n\nkubeadm alpha phase mark-master --config kubeadm-conf-03.yaml\n```", "```\nmaster $ kubectl get namespaces\n NAME STATUS AGE\n default Active 23m\n kube-public Active 23m\n kube-system Active 23m\n```", "```\nmaster $ kubectl run nodejs --image nodej2 --namespace not-here\n Error from server (NotFound): namespaces \"not-here\" not found\n```", "```\nkube-apiserver --enable-admission-plugins\n```", "```\nkube-apiserver --disable-admission-plugins=\n```", "```\nkube-apiserver --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\n```", "```\ngcloud container clusters create gswk8s \\\n  --cluster-version 1.10.6-gke.2 \\\n  --zone us-east1-b \\\n  --num-nodes 1 \\\n  --machine-type n1-standard-1\n<lots of text>\n...\nCreating cluster gsk8s...done.\nCreated [https://container.googleapis.com/v1/projects/gsw-k8s-3/zones/us-east1-b/clusters/gsk8s].\nTo inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/us-east1-b/gsk8s?project=gsw-k8s-3\nkubeconfig entry generated for gsk8s.\nNAME LOCATION MASTER_VERSION MASTER_IP MACHINE_TYPE NODE_VERSION NUM_NODES STATUS\ngsk8s us-east1-b 1.10.6-gke.2 35.196.63.146 n1-standard-1 1.10.6-gke.2 1 RUNNING\n```", "```\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  # name must match the spec fields below, and be in the form: <plural>.<group>\n  name: crontabs.stable.example.com\nspec:\n  # group name to use for REST API: /apis/<group>/<version>\n  group: stable.example.com\n  # list of versions supported by this CustomResourceDefinition\n  version: v1\n  # either Namespaced or Cluster\n  scope: Namespaced\n  names:\n    # plural name to be used in the URL: /apis/<group>/<version>/<plural>\n    plural: crontabs\n    # singular name to be used as an alias on the CLI and for display\n    singular: crontab\n    # kind is normally the CamelCased singular type. Your resource\nmanifests use this.\n    kind: CronTab\n    # shortNames allow shorter string to match your resource on the CLI\n    shortNames:\n    - cront\n```", "```\nanonymuse@cloudshell:~ (gsw-k8s-3)$ kubectl apply -f resourcedefinition.yaml\ncustomresourcedefinition \"crontabs.stable.example.com\" created\n```", "```\napiVersion: \"stable.example.com/v1\"\nkind: CronTab\nmetadata:\n  name: cron-object-os-01\nspec:\n  intervalSpec: \"* * 8 * *\"\n  os: ubuntu\nanonymuse@cloudshell:~ (gsw-k8s-3)$ kubectl create -f os-crontab.yaml\ncrontab \"cron-object-os-01\" created\n```", "```\nanonymuse@cloudshell:~ (gsw-k8s-3)$ kubectl get crontab\nNAME                AGE\ncron-object-os-01   38s\n```", "```\nanonymuse@cloudshell:~ (gsw-k8s-3)$ kubectl get cront-o yaml\napiVersion: v1\nitems:\n- apiVersion: stable.example.com/v1\n  kind: CronTab\n  metadata:\n    clusterName: \"\"\n    creationTimestamp: 2018-09-03T23:27:27Z\n    generation: 1\n    name: cron-object-os-01\n    namespace: default\n    resourceVersion: \"2449\"\n    selfLink: /apis/stable.example.com/v1/namespaces/default/crontabs/cron-object-os-01\n    uid: eb5dd081-afd0-11e8-b133-42010a8e0095\n  spec:\n    intervalSpec: '* * 8 * *'\n    os: Ubuntu\nkind: List\nmetadata:\n  resourceVersion: \"\"\n  selfLink: \"\"\n```"]