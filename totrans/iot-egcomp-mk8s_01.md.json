["```\nkubectl [command] [type] [name] [flags]\n```", "```\n    kubectl create -f FILENAME.\n    ```", "```\n    kubectl get pod pod1\n    ```", "```\n    kubectl delete -f FILENAME.\n    ```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-sample-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1:21\n        ports:\n        - containerPort: 80\n```", "```\n    kubectl apply -f FILENAME.\n    ```", "```\n    kubectl get deployments \n    ```", "```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-sample-deployment   3/3     0            0           1s\n```", "```\n    kubectl describe deployments\n    ```", "```\n    kubectl delete -f FILENAME.\n    ```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  ports:\n  - port: 80\n    name: web\n  clusterIP: None\n  selector:\n    app: nginx\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: web\nspec:\n  selector:\n    matchLabels:\n      app: nginx \n  serviceName: \"nginx\"\n  replicas: 3 \n  template:\n    metadata:\n      labels:\n        app: nginx \n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n          name: web\n        volumeMounts:\n        - name: www_volume\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: www_volume\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"my-storage-class\"\n      resources:\n        requests:\n          storage: 10Gi\n```", "```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluent-bit\n  namespace: kube-system\n  labels:\n    k8s-app: fluent-bit\nspec:\n  selector:\n    matchLabels:\n      name: fluent-bit\n  template:\n    metadata:\n      labels:\n        name: fluent-bit\n    spec:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      containers:\n      - name: fluent-bit\n        image: fluent/fluent-bit:latest\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n```", "```\n    kubectl apply -f FILENAME.\n    ```", "```\n    kubectl get daemonset \n    ```", "```\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\ndaemonset-deployment   3/3     0            0           1s\n```", "```\n    kubectl describe daemonset\n    ```", "```\n    kubectl delete <<daemonset>>\n    ```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: example-job\nspec:\n template:\n    spec:\n      containers:\n      - name: example-job\n        image: busybox\n        command: ['echo', 'echo example Job Pod is Running']\n      restartPolicy: OnFailure\n      backoffLimit: 4\n```", "```\n    kubectl apply -f FILENAME.\n    ```", "```\n    kubectl describe jobs <<job name>>\n    ```", "```\napiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: example-cronjob\nspec:\n  schedule: \"*/1 * * * *\"\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: example-cronjob\n            image: busybox\n            imagePullPolicy: IfNotPresent\n            command:\n            - /bin/sh\n            - -c\n            - date; echo example-cronjob Pod is Running ; sleep 5\n          restartPolicy: OnFailure\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: example-service\nspec:\n  selector:\n    app: exampleApp\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 9876\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: webserver-nginx-multiport-example\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n    - name: https\n      protocol: TCP\n      port: 443\n      targetPort: 8090\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: apache-deployment\n  labels:\n    app: webserver\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: webserver\n  template:\n    metadata:\n      labels:\n        app: webserver\n    spec:\n      containers: \n      - name: apache\n        image: httpd:latest\n        ports:\n        - containerPort: 80\n```"]