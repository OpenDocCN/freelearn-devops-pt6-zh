- en: 12\. Connecting an application to an Azure database
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12\. 将应用程序连接到 Azure 数据库
- en: In previous chapters, you stored the state of your application in your cluster,
    either on a Redis cluster or on MariaDB. You might remember that both had some
    issues when it came to high availability. This chapter will take you through the
    process of connecting to a MySQL database managed by Azure.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，你将应用程序的状态存储在集群中，无论是 Redis 集群还是 MariaDB。你可能记得，它们在高可用性方面都有一些问题。本章将带你通过连接到
    Azure 托管 MySQL 数据库的过程。
- en: We will discuss the benefits of using a hosted database rather than running **StatefulSets** on
    Kubernetes. To create this hosted and managed database, you will make use of **Azure
    Service Operator** (**ASO**). ASO is a way to create Azure resources, such as
    a managed MySQL database, from within a Kubernetes cluster. In this chapter, you
    will learn more details about the ASO project, and you will set up and configure
    ASO on your cluster.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论使用托管数据库的好处，而不是在 Kubernetes 上运行**StatefulSets**。为了创建这个托管和管理的数据库，你将使用**Azure
    服务操作器**（**ASO**）。ASO 是一种通过 Kubernetes 集群内部创建 Azure 资源（如托管的 MySQL 数据库）的方法。在本章中，你将了解更多关于
    ASO 项目的细节，并将在你的集群上设置和配置 ASO。
- en: 'You will then make use of ASO to create a MySQL database in Azure. You will
    use this managed database as part of a WordPress application. This will show you
    how you can connect an application to a managed database. This chapter is broken
    down into the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你将使用 ASO 在 Azure 中创建一个 MySQL 数据库。你将使用这个托管数据库作为 WordPress 应用的一部分。这将向你展示如何将应用程序连接到托管数据库。本章分为以下几个主题：
- en: Azure Service Operator
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 服务操作器
- en: Installing ASO on your cluster
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的集群上安装 ASO
- en: Creating a MySQL database using ASO
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ASO 创建 MySQL 数据库
- en: Creating an application using the MySQL database
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MySQL 数据库创建应用程序
- en: Let's start by exploring ASO.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从探索 ASO 开始。
- en: Azure Service Operator
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure 服务操作器
- en: In this section, you will learn more about ASO. We will start by exploring the
    benefits of using a hosted database versus running StatefulSets on Kubernetes
    itself, and then learn more details about ASO.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你将了解更多关于 ASO 的内容。我们将从探索使用托管数据库与直接在 Kubernetes 上运行 StatefulSets 的优缺点开始，然后进一步了解
    ASO 的细节。
- en: All the examples that you have gone through so far have been self-contained;
    that is, everything ran inside the Kubernetes cluster. Almost any production application
    has a state, which is generally stored in a database. While there is a great advantage
    to being mostly cloud-agnostic, this has a huge disadvantage when it comes to
    managing a stateful workload such as a database.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你所经历的所有示例都是自包含的；也就是说，所有内容都在 Kubernetes 集群内部运行。几乎所有的生产应用程序都有状态，这些状态通常存储在数据库中。尽管大部分云无关的架构有很大优势，但当涉及到管理像数据库这样的有状态工作负载时，这会带来巨大的劣势。
- en: When you are running your own database on top of a Kubernetes cluster, you need
    to take care of scalability, security, high availability, DR, and backup. Managed
    database services offered by cloud providers can offload you or your team from
    having to execute these tasks. For example, Azure Database for MySQL comes with
    enterprise-grade security and compliance, built-in high availability, and automated
    backups. The service scales within seconds. Finally, you also have the option
    to configure DR to a secondary region.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 Kubernetes 集群上运行自己的数据库时，你需要处理可扩展性、安全性、高可用性、灾难恢复和备份等问题。云服务提供商提供的托管数据库服务可以减轻你或你的团队执行这些任务的负担。例如，Azure
    Database for MySQL 提供企业级的安全性和合规性，内建高可用性和自动备份，且服务能够在几秒钟内进行扩展。最后，你还可以选择将灾难恢复配置为次要区域。
- en: It is a lot simpler to consume a production-grade database from Azure than it
    is to set up and manage your own on Kubernetes. In the next section, you will
    explore a way that Kubernetes can be used to create these databases on Azure.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Azure 获取一个生产级别的数据库比在 Kubernetes 上设置并管理自己的数据库要简单得多。在接下来的部分中，你将探索如何使用 Kubernetes
    来在 Azure 上创建这些数据库的方法。
- en: What is ASO?
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是 ASO？
- en: As with most applications these days, much of the hard work has already been
    done for us by the open-source community (including those who work for Microsoft).
    Microsoft has realized that many users would like to use their managed services
    from Kubernetes and that they require an easier way of using the same methodologies
    that are used for Kubernetes deployment. The ASO project was created to solve
    this problem.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 与如今的大多数应用程序一样，许多繁重的工作已经由开源社区（包括微软员工）为我们完成。微软意识到许多用户希望从 Kubernetes 中使用他们的托管服务，并且需要一种更简便的方式来使用
    Kubernetes 部署中使用的方法。ASO 项目就是为了解决这个问题而创建的。
- en: ASO is a new project started in 2020 that succeeds the **Open Service Broker
    for Azure** (**OSBA**) project. OSBA was Microsoft's original implementation that
    allowed you to create Azure resources from within Kubernetes, but this project
    is no longer maintained and has been deprecated. ASO serves the same purpose and
    is actively maintained and developed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ASO 是一个于 2020 年启动的新项目，它继承了 **Open Service Broker for Azure** (**OSBA**) 项目。OSBA
    是微软最初的实现，允许你在 Kubernetes 中创建 Azure 资源，但这个项目现在不再维护，已被弃用。ASO 实现了相同的功能，并且在积极维护和开发中。
- en: 'There are two parts to ASO: a set of **CustomResourceDefinitions** (**CRDs**)
    and a controller that manages those CRDs. The CRDs are a set of API extensions
    for Kubernetes that allow you to specify which Azure resources you want to create.
    There are CRDs for resource groups, virtual machines, MySQL databases, and more.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ASO 包含两个部分：一组 **CustomResourceDefinitions** (**CRDs**) 和一个管理这些 CRDs 的控制器。CRDs
    是 Kubernetes 的一组 API 扩展，允许你指定想要创建的 Azure 资源。资源组、虚拟机、MySQL 数据库等都有对应的 CRD。
- en: Most APIs in ASO are still in either the alpha or beta stage, meaning they might
    change in the future. Please refer to the documentation at [https://github.com/Azure/azure-service-operator](https://github.com/Azure/azure-service-operator)
    for an up-to-date resource definition, as the definitions used in this chapter
    might have changed.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ASO 中的大多数 API 仍处于 alpha 或 beta 阶段，意味着它们可能在未来发生变化。请参考文档 [https://github.com/Azure/azure-service-operator](https://github.com/Azure/azure-service-operator)
    获取最新的资源定义，因为本章使用的定义可能已经发生变化。
- en: The controller is a pod that runs on your cluster and monitors the Kubernetes
    API for any objects that are created using these CRDs. It's this controller that
    will interface with the Azure API and create the resource you create using ASO.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器是一个运行在集群中的 pod，监视 Kubernetes API 中通过这些 CRDs 创建的任何对象。正是这个控制器与 Azure API 交互，并创建你使用
    ASO 创建的资源。
- en: ASO depends on two other projects that you have already learned about in this
    book, namely **Azure Active Directory** (**Azure AD**) pod-managed identities
    and cert-manager. ASO uses Azure AD pod-managed identities to link a managed identity
    to the ASO pod. This also means that this managed identity needs to have permissions
    to create those resources. ASO uses cert-manager to get access to a certificate
    for the ASO pod to use.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ASO 依赖于另外两个你已经在本书中学到的项目，即 **Azure Active Directory** (**Azure AD**) pod 管理身份和
    cert-manager。ASO 使用 Azure AD pod 管理身份将托管身份链接到 ASO pod。这也意味着该托管身份需要有权限来创建这些资源。ASO
    使用 cert-manager 获取证书以供 ASO pod 使用。
- en: By default, ASO will store secrets such as connection strings in Kubernetes
    secrets. As you have learned in the preceding chapters, it's better to store secrets
    in Key Vault rather than in Kubernetes. ASO has the option to store secrets in
    Key Vault as well, and during the setup, you will configure ASO to store secrets
    in Key Vault.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，ASO 会将连接字符串等秘密存储在 Kubernetes secrets 中。正如你在前几章中学到的，最好将秘密存储在 Key Vault
    中，而不是 Kubernetes 中。ASO 也有将秘密存储在 Key Vault 中的选项，在设置过程中，你将配置 ASO 将秘密存储在 Key Vault
    中。
- en: 'For a user perspective using ASO, *Figure 12.1* describes what happens when
    you create a resource:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户使用 ASO 的角度来看，*图 12.1* 描述了当你创建资源时发生的情况：
- en: As a user, you submit a YAML definition for an Azure resource to the Kubernetes
    API. The Azure resources are defined in a CRD.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为用户，你将一个 Azure 资源的 YAML 定义提交给 Kubernetes API。Azure 资源在 CRD 中定义。
- en: The ASO pod is monitoring the Kubernetes API for changes to the Azure CRD objects.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ASO pod 正在监视 Kubernetes API 中 Azure CRD 对象的变化。
- en: When changes are detected, ASO will create the resources in Azure.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当检测到变化时，ASO 将在 Azure 中创建资源。
- en: If a connection string was created as part of the resource creation, this connection
    string will be stored either as a Kubernetes secret (default) or in Key Vault
    (if configured).
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在资源创建过程中生成了连接字符串，这个连接字符串将存储在 Kubernetes secret 中（默认情况下），或者存储在 Key Vault 中（如果已配置）。
- en: '![High-level process diagram of resource creation using ASO](img/B17338_12_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![使用 ASO 创建资源的高级过程图](img/B17338_12_01.jpg)'
- en: 'Figure 12.1: High-level process diagram of resource creation using ASO'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1：使用 ASO 创建资源的高级过程图
- en: In this section, you've learned the basics of the ASO project. In the next section,
    you will go ahead and install ASO on your cluster.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你已经了解了 ASO 项目的基本知识。在接下来的章节中，你将开始在集群上安装 ASO。
- en: Installing ASO on your cluster
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在集群上安装 ASO
- en: To install ASO on your cluster, you will need a cluster. At the end of the previous
    chapter, you deleted your cluster, so you will create a new one here. After that,
    you will need to create a managed identity and Key Vault. Both are best practices
    when setting up ASO, which is why this chapter will explain how to set up ASO
    this way. After the creation of these resources, you need to ensure that cert-manager
    is set up in your cluster. Once that is confirmed, you can install ASO using a
    Helm chart.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要在集群上安装 ASO，你需要一个集群。在上一章结束时，你删除了集群，因此这里你需要创建一个新集群。之后，你需要创建一个托管身份和一个密钥库。设置 ASO
    时，创建这两项资源是最佳实践，这就是本章将解释如何以这种方式设置 ASO的原因。创建这些资源后，你需要确保 cert-manager 已在集群中设置。确认后，你可以使用
    Helm chart 安装 ASO。
- en: Let's start with the first step, creating a new AKS cluster.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从第一步开始，创建一个新的 AKS 集群。
- en: Creating a new AKS cluster
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个新的 AKS 集群
- en: 'Since you deleted your cluster at the end of the previous chapter, let''s start
    by creating a new cluster. You can do all these steps using Cloud Shell. Let''s
    get started:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你在上一章结束时删除了集群，接下来我们从创建一个新集群开始。你可以通过 Cloud Shell 执行所有这些步骤。让我们开始吧：
- en: First, you will create a new cluster. Since you will be making use of pod identities
    for the authorization of ASO, you will also enable the pod identity add-on on
    this new cluster. At the time of this writing, the pod identity add-on is in preview.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要创建一个新集群。由于你将使用 pod 身份进行 ASO 授权，你还需要在新集群上启用 pod 身份附加组件。在写这篇文章时，pod 身份附加组件处于预览阶段。
- en: 'If you haven''t registered for your subscription for this preview as explained
    in *Chapter 9*, *Azure Active Directory pod-managed identities in AKS*, please
    do so now using the following commands:'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你还没有按照*第9章*，*Azure Active Directory 在 AKS 中的 pod 管理身份*中的说明为你的订阅注册此预览，请使用以下命令进行注册：
- en: '[PRE0]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will also need a preview extension of the Azure CLI, which you can install
    using the following command:'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还需要安装 Azure CLI 的预览扩展，可以使用以下命令进行安装：
- en: '[PRE1]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You will have to wait until the pod identity preview is registered on your
    subscription. You can use the following command to verify this status:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要等到 pod 身份预览在你的订阅中注册完成。你可以使用以下命令来验证此状态：
- en: '[PRE2]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Wait until the status shows as registered, as shown in *Figure 12.2*:'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 等待状态显示为已注册，如*图 12.2*所示：
- en: '![Output displaying the status as registered](img/B17338_09_03.jpg)'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![显示注册状态的输出](img/B17338_09_03.jpg)'
- en: '[PRE3]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once you registered the preview provider, or if you had already done so as
    part of *Chapter 9*, *Azure Active Directory pod-managed identities in AKS*, you
    can create a new cluster using the following command:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你注册了预览提供程序，或者如果你已经在*第9章*，*Azure Active Directory 在 AKS 中的 pod 管理身份*部分完成了此操作，你可以使用以下命令创建一个新集群：
- en: '[PRE4]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once the command is finished, get the credentials to get access to your cluster
    using the following command:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦命令执行完成，使用以下命令获取凭证以访问你的集群：
- en: '[PRE5]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You now have a new Kubernetes cluster with pod identities enabled. To continue
    the setup of ASO, let's now create a managed identity.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了一个启用了 pod 身份的新 Kubernetes 集群。为了继续设置 ASO，让我们现在创建一个托管身份。
- en: Creating a managed identity
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个托管身份
- en: 'In this section, you will use the Azure portal to create a managed identity.
    You will then give permission to your AKS cluster to manage this managed identity
    and give the managed identity access to your subscription to create the resources.
    Let''s start:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将使用 Azure 门户创建一个托管身份。然后，你将授权 AKS 集群管理这个托管身份，并授予托管身份访问你的订阅，以便创建资源。让我们开始：
- en: In the Azure search bar, look for *Managed Identities*, as shown in *Figure
    12.3*:![Searching for Managed Identity in the Azure search bar](img/B17338_12_03.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure 搜索栏中，查找*托管身份*，如*图 12.3*所示：![在 Azure 搜索栏中搜索托管身份](img/B17338_12_03.jpg)
- en: 'Figure 12.3: Searching for Managed Identities'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.3：搜索托管身份
- en: In the resulting screen, click on + New to create a new managed identity, as
    shown in *Figure 12.4*:![Clicking on the Add new button to create a new managed
    identity](img/B17338_12_04.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在结果页面中，点击+ 新建以创建新的托管身份，如*图12.4*所示：![点击“添加新建”按钮以创建新的托管身份](img/B17338_12_04.jpg)
- en: 'Figure 12.4: Creating a new managed identity'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.4：创建新的托管身份
- en: To organize the resources for this chapter together, create a new resource group
    called ASO, as shown in *Figure 12.5*:![Creating a new resource group](img/B17338_12_05.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将本章的资源进行组织，创建一个名为ASO的新资源组，如*图12.5*所示：![创建新的资源组](img/B17338_12_05.jpg)
- en: 'Figure 12.5: Creating a new resource group'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.5：创建新的资源组
- en: Provide the location and a name for your managed identity; use the name `aso-mi`
    as shown in *Figure 12.6* if you wish to follow the example here. Make sure to
    select the same region as the region of your cluster:![Providing necessary details
    to create a managed identity](img/B17338_12_06.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为托管身份提供位置和名称；如果你希望遵循此示例，请使用名称`aso-mi`，如*图12.6*所示。确保选择与集群所在区域相同的区域：![提供必要的详细信息以创建托管身份](img/B17338_12_06.jpg)
- en: 'Figure 12.6: Providing Project and Instance details for creating the managed
    identity'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.6：提供项目和实例详细信息以创建托管身份
- en: Click Review + create at the bottom of the screen and create the managed identity.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕底部的“审核 + 创建”并创建托管身份。
- en: Once the managed identity is created, you need to capture the client ID and
    resource ID for later use. Copy and paste this information in a location where
    you can access it later. You can get the client ID in the Overview pane, as shown
    in *Figure 12.7*:![Getting the client ID details from the Managed Identity pane](img/B17338_12_07.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 托管身份创建完成后，你需要捕获客户端ID和资源ID以备后用。复制并粘贴这些信息到可以稍后访问的位置。你可以在概览窗格中找到客户端ID，如*图12.7*所示：![从托管身份窗格获取客户端ID详细信息](img/B17338_12_07.jpg)
- en: 'Figure 12.7: Getting the client ID from the managed identity'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.7：从托管身份获取客户端ID
- en: 'You can get the resource ID in the Properties pane, as shown in *Figure 12.8*:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以在属性窗格中找到资源ID，如*图12.8*所示：
- en: '![Getting the Resource ID details from the Managed Identity pane](img/B17338_12_08.jpg)'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![从托管身份窗格获取资源ID详细信息](img/B17338_12_08.jpg)'
- en: 'Figure 12.8: Getting the resource ID of the managed identity'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.8：获取托管身份的资源ID
- en: The next thing to do on the managed identity is to give our AKS cluster permissions
    to it. To do this, click on Access control (IAM) in the left pane, click on the
    + Add button at the top of the screen, click Add role assignment from the dropdown
    menu, select the Managed Identity Operator role, select User assigned managed
    identity from the Assign access to dropdown menu, and select the handsonaks-agentpool
    identity and save. This process is shown in *Figure 12.9*:![Giving AKS cluster
    permissions to access the managed identity](img/B17338_12_09.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是为托管身份赋予AKS集群权限。为此，点击左侧窗格中的“访问控制 (IAM)”，点击屏幕顶部的+ 添加按钮，点击下拉菜单中的“添加角色分配”，选择“托管身份操作员”角色，在“分配访问权限给”下拉菜单中选择“用户分配的托管身份”，然后选择handsonaks-agentpool身份并保存。此过程如*图12.9*所示：![为AKS集群赋予访问托管身份的权限](img/B17338_12_09.jpg)
- en: 'Figure 12.9: Giving AKS access to the managed identity'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.9：为AKS赋予对托管身份的访问权限
- en: You will now give Managed Identities permission to create resources on your
    subscription. To do this, look for Subscriptions in the Azure search bar, as shown
    in *Figure 12.10*, and then select your subscription:![Searching for subscriptions
    in the Azure search bar](img/B17338_12_10.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将为托管身份赋予在你的订阅上创建资源的权限。为此，查找Azure搜索栏中的“订阅”，如*图12.10*所示，然后选择你的订阅：![在Azure搜索栏中查找订阅](img/B17338_12_10.jpg)
- en: 'Figure 12.10: Looking for subscriptions in the Azure search bar'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.10：在Azure搜索栏中查找订阅
- en: 'In the Subscription pane, click on Access control (IAM), click on the + Add
    button at the top of the screen, click Add role assignment, select the Contributor
    role, select User assigned managed identity from the Assign access to dropdown
    menu, and select the aso-mi identity and save. This process is shown in *Figure 12.11*:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在订阅窗格中，点击“访问控制 (IAM)”，点击屏幕顶部的+ 添加按钮，点击“添加角色分配”，选择“贡献者”角色，在“分配访问权限给”下拉菜单中选择“用户分配的托管身份”，然后选择aso-mi身份并保存。此过程如*图12.11*所示：
- en: '![Giving the aso-mi the contributor role at the subscription level](img/B17338_12_11.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![为aso-mi分配订阅级别的贡献者角色](img/B17338_12_11.jpg)'
- en: 'Figure 12.11: Giving the aso-mi permissions to your subscription'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.11：为你的订阅赋予aso-mi权限
- en: This completes the setup of the managed identity. In the next section, you will
    create a key vault and allow the managed identity you just created to create and
    read secrets.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了托管标识的设置。在下一节中，您将创建一个密钥保管库，并允许您刚刚创建的托管标识进行机密的创建和读取。
- en: Creating a key vault
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建密钥保管库
- en: In this section, you will create the key vault that ASO will use to store connection
    strings and secrets. This is optional in the ASO setup process but recommended.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将创建ASO将用于存储连接字符串和机密的密钥保管库。虽然在ASO设置过程中这是可选步骤，但我们推荐执行此操作。
- en: To start, look for key vaults in the Azure search bar, as shown in *Figure 12.12*:![Searching
    for Key Vault in the Azure search bar](img/B17338_12_12.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在Azure搜索栏中搜索“密钥保管库”，如*图12.12*所示：![在Azure搜索栏中搜索Key Vault](img/B17338_12_12.jpg)
- en: 'Figure 12.12: Looking for key vaults in the Azure search bar'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.12：在Azure搜索栏中寻找密钥保管库
- en: Click the + New button at the top of the screen to create a new key vault. Select
    the ASO resource group you created earlier and give your key vault a name. Please
    note that your key vault name has to be unique, so consider adding extra characters
    to the name if it is not unique. Also, make sure to create the key vault in the
    same region as your AKS cluster. The resulting configuration is shown in *Figure
    12.13*:![Providing the necessary details to create a key vault](img/B17338_12_13.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕顶部的“+ 新建”按钮以创建新的密钥保管库。选择您之前创建的ASO资源组，并为您的密钥保管库命名。请注意，密钥保管库的名称必须唯一，如果不唯一，请考虑在名称中添加额外的字符。另外，确保在与AKS集群相同的区域创建密钥保管库。最终的配置如*图12.13*所示：![提供必要的详细信息以创建密钥保管库](img/B17338_12_13.jpg)
- en: 'Figure 12.13: Key vault configuration'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.13：密钥保管库配置
- en: 'Now select Next: Access policy > to configure a new access policy. Here you
    will give the aso-mi managed identity you created in the previous section permission
    to do secret management in this key vault. To do this, start by clicking the +
    Add Access Policy button, as shown in *Figure 12.14*:![Clicking the Add access
    policy button](img/B17338_12_14.jpg)'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择“下一步：访问策略 >”以配置新的访问策略。在此处，您将为前面部分创建的aso-mi托管标识授予在此密钥保管库中进行机密管理的权限。为此，首先点击“+
    添加访问策略”按钮，如*图12.14*所示：![点击添加访问策略按钮](img/B17338_12_14.jpg)
- en: 'Figure 12.14: Clicking the + Add Access Policy button'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.14：点击“+ 添加访问策略”按钮
- en: In the resulting popup, select the Secret Management template, then click on
    None selected to select your managed identity. In the resulting popup, look for
    the aso-mi managed identity, select it, and then click Select followed by clicking
    on Add, as shown in *Figure 12.15*:![Adding the secret management permissions
    to the managed identity](img/B17338_12_15.jpg)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的窗口中，选择“机密管理”模板，然后点击“未选择”以选择您的托管标识。在接下来的弹窗中，找到aso-mi托管标识，选择它，然后点击“选择”，接着点击“添加”，如*图12.15*所示：![为托管标识添加机密管理权限](img/B17338_12_15.jpg)
- en: 'Figure 12.15: Adding the secret management permissions to the managed identity'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.15：为托管标识添加机密管理权限
- en: This has configured the access policy in Key Vault. Now click the Review + create
    button, and in the last window hit Create to create the key vault. This should
    take a couple of minutes to complete.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这已配置了密钥保管库中的访问策略。现在点击“审核 + 创建”按钮，在最后的窗口中点击“创建”以创建密钥保管库。完成这一过程应该需要几分钟时间。
- en: Once your key vault has been deployed, you are ready to start installing ASO,
    which will be explained in the next section.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的密钥保管库部署完成，您就可以开始安装ASO，下一节将详细说明如何操作。
- en: Setting up ASO on your cluster
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在集群上设置ASO
- en: 'Now that you have the required managed identity and Key Vault, you are ready
    to start deploying ASO on your cluster. You can do all these steps using Cloud
    Shell. Let''s get started:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经具备了所需的托管标识和密钥保管库，您可以开始在集群上部署ASO。您可以使用Cloud Shell执行所有这些步骤。让我们开始吧：
- en: 'You created a new cluster in the *Creating a new AKS cluster* section. You
    will need to link the managed identity you created earlier to the cluster. The
    ASO components will be created in their own namespace, so you will also create
    a new namespace for this:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您在*创建新的AKS集群*一节中创建了一个新集群。您需要将之前创建的托管标识链接到该集群。ASO组件将创建在它们自己的命名空间中，因此您还需要为此创建一个新的命名空间：
- en: '[PRE6]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now you can install cert-manager on your cluster. You''ve done this once before
    in *Chapter 6*, *Securing your application with HTTPS*, but at the end of the
    chapter you were asked to remove this component. You can install it again using
    the following command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以在集群上安装 cert-manager。你之前在*第 6 章*《用 HTTPS 保护你的应用》中已经安装过一次，但在该章结尾时要求你移除这个组件。你可以使用以下命令重新安装：
- en: '[PRE7]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Track the deployment status of cert-manager using the following command:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令跟踪 cert-manager 的部署状态：
- en: '[PRE8]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Wait until the rollout shows that it''s successfully rolled out, as shown in
    *Figure 12.16*:'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 等待直到部署显示成功完成，如*图 12.16*所示：
- en: '![Output verifying the roll-out status of cert-manager](img/B17338_12_16.jpg)'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![验证 cert-manager 部署状态的输出](img/B17338_12_16.jpg)'
- en: 'Figure 12.16: Checking the rollout status of cert-manager'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.16：检查 cert-manager 的部署状态
- en: 'Once cert-manager has fully rolled out, you can start the ASO installation.
    Start by adding the Helm repo for ASO using the following command:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 cert-manager 完全部署完毕，你可以开始安装 ASO。首先使用以下命令添加 ASO 的 Helm 仓库：
- en: '[PRE9]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, you need to provide configuration values for your ASO installation. Open
    the `values.yaml` file that is part of the code sample that comes with this chapter
    using the following command:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要为 ASO 安装提供配置值。使用以下命令打开本章附带代码示例中的 `values.yaml` 文件：
- en: '[PRE10]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Fill in all the required values in that file, as shown here:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按照此处所示，填写该文件中的所有必需值：
- en: '[PRE11]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As shown in the previous code sample, you will need to provide your tenant
    ID, subscription ID, key vault name, client ID of the managed identity (twice),
    and resource ID of the managed identity. You can find the tenant ID and subscription
    ID with the following command:'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前面的代码示例所示，你需要提供租户 ID、订阅 ID、密钥库名称、托管身份的客户端 ID（两次）以及托管身份的资源 ID。你可以使用以下命令查找租户
    ID 和订阅 ID：
- en: '[PRE12]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This will return an output similar to *Figure 12.17*, in which the tenant ID
    and subscription ID have been highlighted:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似*图 12.17*的输出，其中租户 ID 和订阅 ID 已经被突出显示：
- en: '![Getting the subscription ID and tenant ID from the output](img/B17338_12_17.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![从输出中获取订阅 ID 和租户 ID](img/B17338_12_17.jpg)'
- en: 'Figure 12.17: Getting the subscription ID and tenant ID'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.17：获取订阅 ID 和租户 ID
- en: 'Once you have the values filled in, you can install ASO using the following
    command:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦填入这些值，你可以使用以下命令安装 ASO：
- en: '[PRE13]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The installation process takes a couple of minutes. Wait until the following
    command returns a successful rollout:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装过程需要几分钟。等待直到以下命令返回成功的部署信息：
- en: '[PRE14]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output should look similar to *Figure 12.18*:'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出应类似于*图 12.18*：
- en: '![Output verifying the status of the deployments for ASO](img/B17338_12_18.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![验证 ASO 部署状态的输出](img/B17338_12_18.jpg)'
- en: 'Figure 12.18: Checking the status of the deployments for ASO'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.18：检查 ASO 部署状态
- en: 'At the time of writing, there was an issue with the `aadpodidbinding` label
    on the deployment of `azureoperator-controller-manager`. This can, however, be
    fixed by applying a patch, to apply a new label to that deployment. The patch
    has been provided in the files for the chapter, specifically in the `patch.yaml`
    file:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在写作时，`azureoperator-controller-manager` 部署的 `aadpodidbinding` 标签存在问题。不过，通过应用一个补丁可以修复此问题，给该部署应用一个新标签。这个补丁文件已经包含在本章的文件中，特别是在
    `patch.yaml` 文件中：
- en: '[PRE15]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As you can see, the patch itself applies a new label to the pods in the deployment.
    You can apply the patch using the following command:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，补丁本身会将一个新的标签应用到部署中的 pod。你可以使用以下命令应用这个补丁：
- en: '[PRE16]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This will ensure that you can use ASO in the next section.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将确保你可以在下一部分中使用 ASO。
- en: Now that ASO has been deployed on your cluster, you are ready to start deploying
    Azure resources using Kubernetes and ASO. You will do that in the next section.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，ASO 已经在你的集群上部署完毕，你准备好开始使用 Kubernetes 和 ASO 部署 Azure 资源了。你将在下一节中进行操作。
- en: Deploying Azure Database for MySQL using ASO
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ASO 部署 Azure MySQL 数据库
- en: 'In the previous section, you deployed ASO on your Kubernetes cluster. This
    means that now you can use the Kubernetes API to deploy Azure resources. In this
    section, you will create a MySQL database running on the Azure Database for MySQL
    service using YAML files that you will submit to Kubernetes using `kubectl`. Let''s
    get started:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，你已经在 Kubernetes 集群上部署了 ASO。这意味着现在你可以使用 Kubernetes API 部署 Azure 资源。在本节中，你将使用
    YAML 文件创建一个运行在 Azure MySQL 数据库服务上的 MySQL 数据库，并使用 `kubectl` 提交这些文件到 Kubernetes。让我们开始吧：
- en: 'First, you need to create a resource group. The code for the resource group
    definition is also available in the code samples with this chapter. Create this
    file and save it as `rg.yaml`:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要创建一个资源组。资源组定义的代码也可以在本章的代码示例中找到。创建此文件并将其保存为 `rg.yaml`：
- en: '[PRE17]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As you can see in the code for the resource, `apiVersion` refers to `azure.microsoft.com`
    and `kind` is `ResourceGroup`. Furthermore, you provide the details for the resource
    group, being its name and its location. Make sure to change `location` to the
    location of your cluster.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，在资源的代码中，`apiVersion` 指向 `azure.microsoft.com`，而 `kind` 是 `ResourceGroup`。此外，你需要提供资源组的详细信息，包括其名称和位置。确保将
    `location` 更改为你集群的位置。
- en: 'You can create this resource group using the following command:'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用以下命令创建该资源组：
- en: '[PRE18]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To monitor the process of the resource group creation, you can use the following
    command:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 若要监视资源组创建过程，可以使用以下命令：
- en: '[PRE19]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This returns an output similar to *Figure 12.19*:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回一个类似于*图 12.19*的输出：
- en: '![Output confirming the successful creation of a new resource group](img/B17338_12_19.jpg)'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![确认成功创建新资源组的输出](img/B17338_12_19.jpg)'
- en: 'Figure 12.19: Monitoring the creation of a new resource group'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.19：监视新资源组的创建
- en: Let's also verify that the resource group was created in Azure. To do so, look
    for the resource group name (`aso-resources`, in this example) in the Azure search
    bar, as shown in *Figure 12.20*:![Searching for the resource group in the Azure
    search bar](img/B17338_12_20.jpg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们还验证一下资源组是否已在 Azure 中创建。为此，请在 Azure 搜索栏中查找资源组名称（例如本示例中的 `aso-resources`），如*图
    12.20*所示：![在 Azure 搜索栏中搜索资源组](img/B17338_12_20.jpg)
- en: 'Figure 12.20: Searching for the resource group in the Azure portal'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.20：在 Azure 门户中搜索资源组
- en: As you can see, the resource group is returned in the search results, meaning
    the resource group was successfully created.
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，资源组已在搜索结果中返回，表示资源组已成功创建。
- en: 'Now you can create the MySQL server. You won''t create a virtual machine to
    run MySQL, but rather create a managed MySQL server on Azure. To create this,
    you can use the `mysql-server.yaml` file that is provided for you:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以创建 MySQL 服务器了。你不会创建虚拟机来运行 MySQL，而是创建一个在 Azure 上管理的 MySQL 服务器。要创建此服务器，可以使用为你提供的
    `mysql-server.yaml` 文件：
- en: '[PRE20]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This file contains specific configurations for the MySQL server. A number of
    elements are worth pointing out:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该文件包含 MySQL 服务器的特定配置。以下几个要点值得注意：
- en: '`MySQLServer` instance.'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MySQLServer` 实例。'
- en: '`location` to the location of your cluster.'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`location` 为你集群的位置。'
- en: '`sslEnforcement` is disabled for this demo. This has been done to make the
    demo easier to follow. If you create a production cluster, it is highly recommended
    to enable `sslEnforcement`.'
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本演示中已禁用 `sslEnforcement`。这样做是为了使演示更容易理解。如果你创建的是生产集群，强烈建议启用 `sslEnforcement`。
- en: '**Line 11-16**: Here you define the size of the MySQL server. In this case,
    you are creating a basic server with 5 GB of capacity. If you plan to use this
    for production use cases, you will likely need a larger server.'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 11-16 行**：在这里你定义了 MySQL 服务器的大小。在这种情况下，你正在创建一个基本服务器，容量为 5 GB。如果你计划将其用于生产环境，可能需要更大的服务器。'
- en: 'You can create the MySQL server using the following command:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用以下命令创建 MySQL 服务器：
- en: '[PRE21]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This will take a couple of minutes to complete. You can follow the progress
    using the following command:'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将需要几分钟时间才能完成。你可以使用以下命令跟踪进度：
- en: '[PRE22]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This will return an output similar to *Figure 12.21*:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回一个类似于*图 12.21*的输出：
- en: '![Output confirming the successful creation of a new MySQL server](img/B17338_12_21.jpg)'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![确认成功创建新 MySQL 服务器的输出](img/B17338_12_21.jpg)'
- en: 'Figure 12.21: Monitoring the creation of the MySQL server'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.21：监视 MySQL 服务器的创建
- en: If you were to run into errors when creating the MySQL server, please refer
    to the ASO documentation at [https://github.com/Azure/azure-service-operator/blob/master/docs/troubleshooting.md](https://github.com/Azure/azure-service-operator/blob/master/docs/troubleshooting.md).
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在创建 MySQL 服务器时遇到错误，请参考 [https://github.com/Azure/azure-service-operator/blob/master/docs/troubleshooting.md](https://github.com/Azure/azure-service-operator/blob/master/docs/troubleshooting.md)
    上的 ASO 文档。
- en: Once you get the message that the server has successfully been provisioned,
    you can exit out of this command by pressing *Ctrl + C*.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦你收到服务器成功配置的消息，可以按 *Ctrl + C* 退出此命令。
- en: 'After the MySQL server, you can create the MySQL database. The definition of
    the MySQL database has been provided in the `mysql-database.yaml` file:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建 MySQL 服务器之后，你可以创建 MySQL 数据库。MySQL 数据库的定义已在 `mysql-database.yaml` 文件中提供：
- en: '[PRE23]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The definition of the database is providing a name and referring to the server
    you created earlier. To create the database, you can use the following command:'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据库的定义是提供一个名称并引用你之前创建的服务器。要创建数据库，你可以使用以下命令：
- en: '[PRE24]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This will take a couple of seconds to complete. You can follow the progress
    using the following command:'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将需要几秒钟才能完成。你可以使用以下命令来跟踪进度：
- en: '[PRE25]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This will return an output similar to *Figure 12.22*:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于*图 12.22*的输出：
- en: '![Output confirming the successful creation of a MySQL database](img/B17338_12_22.jpg)'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![确认 MySQL 数据库成功创建的输出](img/B17338_12_22.jpg)'
- en: 'Figure 12.22: Monitoring the creation of the MySQL database'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.22：监控 MySQL 数据库的创建
- en: Once you get the message that the database has successfully been provisioned,
    you can exit out of this command by pressing *Ctrl + C*.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦你收到数据库已成功配置的消息，你可以通过按*Ctrl + C*退出此命令。
- en: 'You can create a firewall rule that will allow traffic to your database. In
    this example, you will create a rule that will allow traffic from all sources.
    In a production environment, this is not recommended. For the recommended networking
    configurations for Azure Database for MySQL, please refer to the documentation:
    [https://docs.microsoft.com/azure/mysql/flexible-server/concepts-networking](https://docs.microsoft.com/azure/mysql/flexible-server/concepts-networking).The
    configuration for the firewall rule has been provided in the `mysql-firewall.yaml`
    file:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以创建一个允许数据库流量的防火墙规则。在此示例中，你将创建一个允许来自所有来源的流量的规则。在生产环境中，不建议这样做。有关 Azure Database
    for MySQL 的推荐网络配置，请参阅文档：[https://docs.microsoft.com/azure/mysql/flexible-server/concepts-networking](https://docs.microsoft.com/azure/mysql/flexible-server/concepts-networking)。防火墙规则的配置已在
    `mysql-firewall.yaml` 文件中提供：
- en: '[PRE26]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: As you can see, we refer to the MySQL server that was created earlier and allow
    traffic from all IP addresses (meaning from `0.0.0.0` to `255.255.255.255`).
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，我们引用了先前创建的 MySQL 服务器，并允许来自所有 IP 地址的流量（即从 `0.0.0.0` 到 `255.255.255.255`）。
- en: 'To create the firewall rule, you can use the following command:'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要创建防火墙规则，你可以使用以下命令：
- en: '[PRE27]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'This will take a couple of seconds to complete. You can follow the progress
    using the following command:'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将需要几秒钟才能完成。你可以使用以下命令来跟踪进度：
- en: '[PRE28]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This will return an output similar to *Figure 12.23*:'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将返回类似于*图 12.23*的输出：
- en: '![Output confirming the successful creation of a MySQL firewall rule](img/B17338_12_23.jpg)'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![确认 MySQL 防火墙规则成功创建的输出](img/B17338_12_23.jpg)'
- en: 'Figure 12.23: Monitoring the creation of the MySQL firewall rule'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.23：监控 MySQL 防火墙规则的创建
- en: Once you get the message that the firewall rule has successfully been provisioned,
    you can exit out of this command by pressing *Ctrl + C*.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦你收到防火墙规则已成功配置的消息，你可以通过按*Ctrl + C*退出此命令。
- en: Let's verify that all of this was successfully created in the Azure portal.
    To do so, start by searching for the MySQL server name (`wp-helm-mysql` in this
    example) in the Azure search bar as shown in *Figure 12.24*. Click on the server
    to go to the details:![Searching for the MySQL server using the Azure search bar](img/B17338_12_24.jpg)
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们验证一下这些内容是否已经成功创建在 Azure 门户中。为此，首先在 Azure 搜索框中搜索 MySQL 服务器名称（在此示例中为 `wp-helm-mysql`），如*图
    12.24*所示。点击服务器以查看详细信息：![使用 Azure 搜索框搜索 MySQL 服务器](img/B17338_12_24.jpg)
- en: 'Figure 12.24: Searching for the MySQL server in the Azure portal'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.24：在 Azure 门户中搜索 MySQL 服务器
- en: This will take you to the Overview pane of the MySQL server. Scroll down in
    this pane and expand the Available resources section. Here you should see that
    wordpress-db was created, as shown in *Figure 12.25*:![The database created through
    ASO as shown in the Azure portal](img/B17338_12_25.jpg)
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你到 MySQL 服务器的概览面板。在此面板中向下滚动并展开“可用资源”部分。在这里，你应该能看到 `wordpress-db` 已被创建，如*图
    12.25*所示：![通过 ASO 在 Azure 门户中创建的数据库](img/B17338_12_25.jpg)
- en: 'Figure 12.25: The database created through ASO is shown in the Azure portal'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.25：通过 ASO 创建的数据库在 Azure 门户中的显示
- en: 'From the MySQL server pane, click on Connection security in the left-hand navigation
    to verify the firewall rule. You should see the firewall rule you created through
    ASO on this pane, as shown in *Figure 12.26*:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 MySQL 服务器面板中，点击左侧导航栏中的“连接安全性”以验证防火墙规则。你应该能在此面板上看到你通过 ASO 创建的防火墙规则，如*图 12.26*所示：
- en: '![The firewall rule created through ASO is set on the MySQL server](img/B17338_12_26.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![通过 ASO 创建的防火墙规则已设置在 MySQL 服务器上](img/B17338_12_26.jpg)'
- en: 'Figure 12.26: The firewall rule created through ASO is set on the MySQL server'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.26：通过 ASO 创建的防火墙规则已设置在 MySQL 服务器上
- en: This verifies that you were able to create a MySQL server with a database in
    Azure and configure its firewall settings.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这验证了您能够在 Azure 中创建一个具有数据库的 MySQL 服务器，并配置其防火墙设置。
- en: In this section, you've used ASO to create a MySQL server, as well as a database
    on that server, and then finally configured its firewall. You were able to do
    all of this using Kubernetes YAML files. ASO translated those YAML files to Azure
    and created the resources for you. Finally, you were able to confirm everything
    was created and configured in the Azure portal.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您使用 ASO 创建了一个 MySQL 服务器，以及该服务器上的一个数据库，然后最终配置了其防火墙。您能够使用 Kubernetes YAML
    文件完成所有这些操作。ASO 将这些 YAML 文件转换为 Azure，并为您创建了资源。最后，您确认在 Azure 门户中一切都已创建和配置完成。
- en: In the next and final section, you will use this database to support the WordPress
    application.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节，您将使用此数据库来支持 WordPress 应用程序。
- en: Creating an application using the MySQL database
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 MySQL 数据库创建应用程序
- en: 'You now have a MySQL database. To showcase that you can use this database to
    configure an application, you will use the WordPress application. You can install
    this using Helm and provide the connection information to your database in the
    Helm configuration:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在拥有一个 MySQL 数据库。为了展示您可以使用此数据库来配置一个应用程序，您将使用 WordPress 应用程序。您可以使用 Helm 安装它，并在
    Helm 配置中提供与您的数据库的连接信息：
- en: To start, you will need the connection information to your database server.
    When you installed ASO on your cluster, you configured it to use Key Vault as
    a secret store rather than Kubernetes secrets. You will need this connection information
    to connect WordPress to your Azure MySQL database.Search for `Key Vaults` in the
    Azure search bar, as shown in *Figure 12.27*, click on Key vaults, and then select
    the key vault you created earlier in the chapter:![Searching for Key Vault using
    the Azure search bar](img/B17338_12_27.jpg)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要连接到数据库服务器的连接信息。当您在集群上安装 ASO 时，您配置它使用 Key Vault 作为秘密存储而不是 Kubernetes 秘密。您需要此连接信息将
    WordPress 连接到 Azure MySQL 数据库。在 Azure 搜索栏中搜索 `Key Vaults`，如*图 12.27*所示，点击 Key
    vaults，然后选择您在本章前面创建的密钥库：![使用 Azure 搜索栏搜索 Key Vault](img/B17338_12_27.jpg)
- en: 'Figure 12.27: Searching for key vaults in the Azure portal'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.27：在 Azure 门户中搜索密钥库
- en: In the resulting pane, click on Secrets in the left-hand navigation and then
    click on the secret, as shown in *Figure 12.28*. The name of this secret follows
    the naming convention `<object type>-<Kubernetes namesapce>-<object name>`.![The
    MySQL secret in the Azure portal](img/B17338_12_28.jpg)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在结果窗格中，点击左侧导航中的 Secrets，然后点击秘密，如*图 12.28*所示。此秘密的命名遵循命名约定 `<object type>-<Kubernetes
    namesapce>-<object name>`。![Azure 门户中的 MySQL 秘密](img/B17338_12_28.jpg)
- en: 'Figure 12.28: The MySQL secret in the Azure portal'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.28：Azure 门户中的 MySQL 秘密
- en: You will then get a view with multiple versions of your secret; click the current
    version as shown in *Figure 12.29*:![Different versions of the secret in Key Vault](img/B17338_12_29.jpg)
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到一个包含多个版本秘密的视图；点击当前版本，如*图 12.29*所示：![密钥库中不同版本的秘密](img/B17338_12_29.jpg)
- en: 'Figure 12.29: Different secret versions in your key vault'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.29：您的密钥库中不同的秘密版本
- en: 'Now, copy the value of the secret, as shown in *Figure 12.30*:'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，复制秘密的值，如*图 12.30*所示：
- en: '![Clicking the Copy to clipboard button to copy the value of the secret](img/B17338_12_30.jpg)'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![点击“复制到剪贴板”按钮复制秘密的值](img/B17338_12_30.jpg)'
- en: 'Figure 12.30: Copying the value of the secret to clipboard'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.30：将秘密的值复制到剪贴板
- en: 'The secret contains several pieces of information related to your database
    connection that you will need for the Helm installation. It contains the fully
    qualified server name, the username, and the password. The values in the secret
    are Base64 encoded. To make working with this secret easier, a shell script has
    been provided that will give you the required decoded values. To run this script,
    use the following command:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该秘密包含与您的数据库连接相关的多个信息，您将在 Helm 安装中需要这些信息。它包含完全限定的服务器名称、用户名和密码。秘密中的值是 Base64 编码的。为了更轻松地处理此秘密，提供了一个
    shell 脚本，该脚本将为您提供所需的解码值。要运行此脚本，请使用以下命令：
- en: '[PRE29]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'An example is shown in *Figure 12.31*:'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例如*图 12.31*所示：
- en: '![Running a script to generate decoded values of the secret](img/B17338_12_31.jpg)'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![运行脚本以生成解码的秘密值](img/B17338_12_31.jpg)'
- en: 'Figure 12.31: Decoding the secret'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.31：解码秘密
- en: 'You can use the values outputted by the previous step to configure Helm to
    use your Azure MySQL database. The following Helm command will set up WordPress
    on your cluster, but use an external database:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用前一步输出的值配置Helm，使用您的Azure MySQL数据库。以下Helm命令将设置WordPress在您的集群上运行，但会使用外部数据库：
- en: '[PRE30]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: As you can see, with this command, you disabled the MariaDB installation by
    setting the `mariadb.enabled` value to `false` and then provided the connection
    information to the external database.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，使用此命令，您通过将`mariadb.enabled`值设置为`false`，禁用了MariaDB安装，然后提供了外部数据库的连接信息。
- en: 'To monitor the setup of WordPress, you can use the following command:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要监控WordPress的设置，您可以使用以下命令：
- en: '[PRE31]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This will take a couple of minutes to fully set up, and finally, you should
    see the WordPress pod in a running state and ready, as shown in *Figure 12.32*:'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将需要几分钟才能完全设置，最终，您应该能看到WordPress pod处于运行状态并准备就绪，如*图12.32*所示：
- en: '![Output displaying the WordPress pod in a running state](img/B17338_12_32.jpg)'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![显示WordPress pod正在运行状态的输出](img/B17338_12_32.jpg)'
- en: 'Figure 12.32: WordPress pod in a running state'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.32：WordPress pod处于运行状态
- en: Once the pod is running and ready, you can stop this command by pressing *Ctrl
    + C*. If you remember the WordPress deployment in *Chapter 3*, *Application deployment
    on AKS*, there was a second pod present in the WordPress installation hosting
    a MariaDB database. This pod is no longer there since we replaced it with an Azure
    MySQL database.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦pod运行并准备就绪，您可以通过按*Ctrl + C*来停止此命令。如果您还记得*第3章*中的WordPress部署，即*AKS上的应用程序部署*，在WordPress安装中曾有一个第二个pod，它托管了一个MariaDB数据库。由于我们已将其替换为Azure
    MySQL数据库，因此这个pod不再存在。
- en: 'Let''s now finally connect to this WordPress application. You can get the public
    IP address of the WordPress website using the following command:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们最终连接到这个WordPress应用程序。您可以使用以下命令获取WordPress网站的公共IP地址：
- en: '[PRE32]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This will show you the public IP, as shown in *Figure 12.33*:'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将显示公共IP，如*图12.33*所示：
- en: '![Getting the public IP of the WordPress website from the output](img/B17338_12_33.jpg)'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![从输出中获取WordPress网站的公共IP](img/B17338_12_33.jpg)'
- en: 'Figure 12.33: Getting the public IP of the WordPress website'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.33：获取WordPress网站的公共IP
- en: 'Enter this IP address in your web browser''s address bar and hit *Enter*. You
    should be able to see the WordPress landing page with the default demo post, as
    shown in *Figure 12.34*:'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在您的网页浏览器的地址栏中输入此IP地址并按*Enter*键。您应该能看到带有默认示例帖子的WordPress登录页面，如*图12.34*所示：
- en: '![Browsing to the WordPress website](img/B17338_12_34.jpg)'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![浏览到WordPress网站](img/B17338_12_34.jpg)'
- en: 'Figure 12.34: Browsing to the WordPress website'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.34：浏览到WordPress网站
- en: You now have a fully functional WordPress website hosted on Kubernetes, with
    the database being backed by Azure Database for MySQL.
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，您已经在Kubernetes上托管了一个功能完整的WordPress网站，数据库由Azure MySQL数据库支持。
- en: 'This concluded the examples from this chapter. You created a number of resources
    and installed a number of cluster components. Let''s also clean them up from the
    cluster using the following commands:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本章的示例已结束。您创建了多个资源并安装了多个集群组件。让我们使用以下命令将它们从集群中清理掉：
- en: '[PRE33]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: You've been able to connect an application on Kubernetes to an Azure-managed
    MySQL database. You used the WordPress Helm chart and provided custom values to
    configure this Helm chart to make it connect to the managed database.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经成功将Kubernetes上的应用程序连接到Azure托管的MySQL数据库。您使用了WordPress Helm图表，并提供了自定义值来配置该Helm图表，使其连接到托管数据库。
- en: Summary
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter introduced **Azure Service Operator** (**ASO**). ASO is an open-source
    project that makes it possible to create Azure services using Kubernetes. This
    allows you as the user to not have to switch between the Azure portal or CLI and
    Kubernetes resource definitions.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了**Azure服务操作员**（**ASO**）。ASO是一个开源项目，使得通过Kubernetes创建Azure服务成为可能。这样，您作为用户就无需在Azure门户或CLI和Kubernetes资源定义之间切换。
- en: In this chapter, you created a new AKS cluster and then installed ASO on this
    cluster. You then created a MySQL database on Azure using ASO. You verified that
    this database was available in Azure using the Azure portal.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您创建了一个新的AKS集群，然后在该集群上安装了ASO。接着，您使用ASO在Azure上创建了一个MySQL数据库。您通过Azure门户验证了此数据库在Azure中的可用性。
- en: Finally, you created a WordPress application on your Kubernetes cluster that
    connected to the external database. You verified that the application was running
    and available as you've seen in previous chapters.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你在 Kubernetes 集群上创建了一个 WordPress 应用，并连接到外部数据库。你验证了应用程序正在运行并且可用，就像你在前面的章节中看到的那样。
- en: In the next chapter, you will learn about other Azure integrations with AKS,
    namely Azure Security Center and Azure Defender for Kubernetes, which are used
    to monitor the security configuration of your cluster and mitigate threats.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将了解其他与 AKS 集成的 Azure 服务，即 Azure 安全中心和 Azure Defender for Kubernetes，这些服务用于监控集群的安全配置并减少威胁。
