["```\n$ kn quickstart kind\nRunning Knative Quickstart using Kind\n![](img/B18998_12_001.png) Checking dependencies...\n    Kind version is: 0.16.0\n![](img/B18998_12_002.png) Creating Kind cluster...\nCreating cluster \"knative\" ...\n ![](img/B18998_04_003.png) Ensuring node image (kindest/node:v1.24.3) ![](img/B18998_04_002.png)\n ![](img/B18998_04_003.png) Preparing nodes ![](img/B18998_12_006.png)\n ![](img/B18998_04_001.png) Writing configuration ![](img/B18998_12_008.png)\n ![](img/B18998_04_003.png) Starting control-plane ![](img/B18998_12_010.png)\n ![](img/B18998_04_001.png) Installing CNI ![](img/B18998_12_012.png)\n ![](img/B18998_04_001.png) Installing StorageClass ![](img/B18998_12_014.png)\n ![](img/B18998_04_001.png) Waiting ≤ 2m0s for control-plane = Ready ![](img/B18998_12_016.png) kind-knative | default\n • Ready after 19s ![](img/B18998_12_017.png)\nSet kubectl context to \"kind-knative\"\nYou can now use your cluster with:\nkubectl cluster-info --context kind-knative\nHave a nice day! ![](img/B18998_12_018.png)\n![](img/B18998_12_019.png) Installing Knative Serving v1.6.0 ...\n    CRDs installed...\n    Core installed...\n    Finished installing Knative Serving\n![](img/B18998_12_020.png) Installing Kourier networking layer v1.6.0 ...\n    Kourier installed...\n    Ingress patched...\n    Finished installing Kourier Networking layer\n![](img/B18998_12_021.png) Configuring Kourier for Kind...\n    Kourier service installed...\n    Domain DNS set up...\n    Finished configuring Kourier\n![](img/B18998_12_022.png) Installing Knative Eventing v1.6.0 ...\n    CRDs installed...\n    Core installed...\n    In-memory channel installed...\n    Mt-channel broker installed...\n    Example broker installed...\n    Finished installing Knative Eventing\n![](img/B18998_12_023.png) Knative install took: 2m22s\n![](img/B18998_12_024.png) Now have some fun with Serverless and Event Driven Apps! \n```", "```\n$ kn service create hello \\\n--image gcr.io/knative-samples/helloworld-go \\\n--port 8080 \\\n--env TARGET=World\nCreating service 'hello' in namespace 'default':\n  0.080s The Route is still working to reflect the latest desired specification.\n  0.115s ...\n  0.127s Configuration \"hello\" is waiting for a Revision to become ready.\n 21.229s ...\n 21.290s Ingress has not yet been reconciled.\n 21.471s Waiting for load balancer to be ready\n 21.665s Ready to serve.\nService 'hello' created to latest revision 'hello-00001' is available at URL:\nhttp://hello.default.127.0.0.1.sslip.io \n```", "```\n$ http --body http://hello.default.127.0.0.1.sslip.io\nHello World! \n```", "```\n$ k get ksvc hello -o json | jq .metadata\n{\n  \"annotations\": {\n    \"serving.knative.dev/creator\": \"kubernetes-admin\",\n    \"serving.knative.dev/lastModifier\": \"kubernetes-admin\"\n  },\n  \"creationTimestamp\": \"2022-09-25T21:11:21Z\",\n  \"generation\": 1,\n  \"name\": \"hello\",\n  \"namespace\": \"default\",\n  \"resourceVersion\": \"19380\",\n  \"uid\": \"03b5c668-3934-4260-bdba-13357a48501e\"\n} \n```", "```\n$ k get ksvc hello -o json | jq .spec\n{\n  \"template\": {\n    \"metadata\": {\n      \"annotations\": {\n        \"client.knative.dev/updateTimestamp\": \"2022-09-25T21:11:21Z\",\n        \"client.knative.dev/user-image\": \"gcr.io/knative-samples/helloworld-go\"\n      },\n      \"creationTimestamp\": null\n    },\n    \"spec\": {\n      \"containerConcurrency\": 0,\n      \"containers\": [\n        {\n          \"env\": [\n            {\n              \"name\": \"TARGET\",\n              \"value\": \"World\"\n            }\n          ],\n          \"image\": \"gcr.io/knative-samples/helloworld-go\",\n          \"name\": \"user-container\",\n          \"ports\": [\n            {\n              \"containerPort\": 8080,\n              \"protocol\": \"TCP\"\n            }\n          ],\n          \"readinessProbe\": {\n            \"successThreshold\": 1,\n            \"tcpSocket\": {\n              \"port\": 0\n            }\n          },\n          \"resources\": {}\n        }\n      ],\n      \"enableServiceLinks\": false,\n      \"timeoutSeconds\": 300\n    }\n  },\n  \"traffic\": [\n    {\n      \"latestRevision\": true,\n      \"percent\": 100\n    }\n  ]\n} \n```", "```\n$ kn service update hello --env TARGET=Knative\nUpdating Service 'hello' in namespace 'default':\n  0.097s The Configuration is still working to reflect the latest desired specification.\n  3.000s Traffic is not yet migrated to the latest revision.\n  3.041s Ingress has not yet been reconciled.\n  3.155s Waiting for load balancer to be ready\n  3.415s Ready to serve. \n```", "```\n$ k get revisions\nNAME          CONFIG NAME   K8S SERVICE NAME   GENERATION   READY   REASON   ACTUAL REPLICAS   DESIRED REPLICAS\nhello-00001   hello                            1            True             0                 0\nhello-00002   hello                            2            True             1                 1 \n```", "```\n$ http --body http://hello.default.127.0.0.1.sslip.io\nHello Knative! \n```", "```\napiVersion: serving.knative.dev/v1\nkind: Route\nmetadata:\n  annotations:\n    serving.knative.dev/creator: kubernetes-admin\n    serving.knative.dev/lastModifier: kubernetes-admin\n  labels:\n    serving.knative.dev/service: hello\n  name: hello\n  namespace: default\nspec:\n  traffic:\n  - configurationName: hello\n    latestRevision: true\n    percent: 100 \n```", "```\n$ kn service update hello \\\n--traffic hello-00001=50 \\\n--traffic @latest=50\nUpdating Service 'hello' in namespace 'default':\n  0.078s The Route is still working to reflect the latest desired specification.\n  0.124s Ingress has not yet been reconciled.\n  0.192s Waiting for load balancer to be ready\n  0.399s Ready to serve.\nService 'hello' with latest revision 'hello-00002' (unchanged) is available at URL:\nhttp://hello.default.127.0.0.1.sslip.io \n```", "```\n$ while true; do http --body http://hello.default.127.0.0.1.sslip.io; done\nHello World!\nHello World!\nHello World!\nHello Knative!\nHello Knative!\nHello Knative!\nHello Knative!\nHello World!\nHello Knative!\nHello World! \n```", "```\n$ k get route hello -o yaml | k neat\napiVersion: serving.knative.dev/v1\nkind: Route\nmetadata:\n  annotations:\n    serving.knative.dev/creator: kubernetes-admin\n    serving.knative.dev/lastModifier: kubernetes-admin\n  labels:\n    serving.knative.dev/service: hello\n  name: hello\n  namespace: default\nspec:\n  traffic:\n  - configurationName: hello\n    latestRevision: true\n    percent: 50\n  - latestRevision: false\n    percent: 50\n    revisionName: hello-00001 \n```", "```\napiVersion: serving.knative.dev/v1 # Current version of Knative\nkind: Service\nmetadata:\n  name: helloworld-go # The name of the app\n  namespace: default # The namespace the app will use\nspec:\n  template:\n    spec:\n      containers:\n        - image: gcr.io/knative-samples/helloworld-go # The URL to the image of the app\n          env:\n            - name: TARGET # The environment variable printed out by the sample app\n              value: \"Yeah, it still works - version 2 !!!\" \n```", "```\n$ k get configuration hello -o yaml\napiVersion: serving.knative.dev/v1\nkind: Configuration\nmetadata:\n  annotations:\n    serving.knative.dev/creator: kubernetes-admin\n    serving.knative.dev/lastModifier: kubernetes-admin\n    serving.knative.dev/routes: hello\n  creationTimestamp: \"2022-09-25T21:11:21Z\"\n  generation: 2\n  labels:\n    serving.knative.dev/service: hello\n    serving.knative.dev/serviceUID: 03b5c668-3934-4260-bdba-13357a48501e\n  name: hello\n  namespace: default\n  ownerReferences:\n  - apiVersion: serving.knative.dev/v1\n    blockOwnerDeletion: true\n    controller: true\n    kind: Service\n    name: hello\n    uid: 03b5c668-3934-4260-bdba-13357a48501e\n  resourceVersion: \"22625\"\n  uid: fabfcb7c-e3bc-454e-a887-9f84057943f7\nspec:\n  template:\n    metadata:\n      annotations: kind-knative | default\n        client.knative.dev/updateTimestamp: \"2022-09-25T21:21:00Z\"\n        client.knative.dev/user-image: gcr.io/knative-samples/helloworld-go\n      creationTimestamp: null\n    spec:\n      containerConcurrency: 0\n      containers:\n      - env:\n        - name: TARGET\n          value: Knative\n        image: gcr.io/knative-samples/helloworld-go@sha256:5ea96ba4b872685ff4ddb5cd8d1a97ec18c18fae79ee8df0d29f446c5efe5f50\n        name: user-container\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        readinessProbe:\n          successThreshold: 1\n          tcpSocket:\n            port: 0\n        resources: {}\n      enableServiceLinks: false\n      timeoutSeconds: 300\nstatus:\n  conditions:\n  - lastTransitionTime: \"2022-09-25T21:21:03Z\"\n    status: \"True\"\n    type: Ready\n  latestCreatedRevisionName: hello-00002\n  latestReadyRevisionName: hello-00002\n  observedGeneration: 2 \n```", "```\n$ kubectl get po\nNo resources found in default namespace. \n```", "```\n$ http --body http://hello.default.127.0.0.1.sslip.io\nHello World! \n```", "```\n$ k get po -w\nNAME                                      READY   STATUS        RESTARTS   AGE\nhello-00001-deployment-7c4b6cc4df-4j7bf   2/2     Running       0          46s\nhello-00001-deployment-7c4b6cc4df-4j7bf   2/2     Terminating   0          98s\nhello-00001-deployment-7c4b6cc4df-4j7bf   1/2     Terminating   0          2m\nhello-00001-deployment-7c4b6cc4df-4j7bf   0/2     Terminating   0          2m9s\nhello-00001-deployment-7c4b6cc4df-4j7bf   0/2     Terminating   0          2m9s\nhello-00001-deployment-7c4b6cc4df-4j7bf   0/2     Terminating   0          2m9s \n```", "```\n$ brew install arkade \n```", "```\n$ curl -sLS https://get.arkade.dev | sh \n```", "```\n$ ark\n            _             _\n  __ _ _ __| | ____ _  __| | ___\n / _` | '__| |/ / _` |/ _` |/ _ \\\n| (_| | |  |   < (_| | (_| |  __/\n \\__,_|_|  |_|\\_\\__,_|\\__,_|\\___|\nOpen Source Marketplace For Developer Tools\nUsage:\n  arkade [flags]\n  arkade [command]\nAvailable Commands:\n  chart       Chart utilities\n  completion  Output shell completion for the given shell (bash or zsh)\n  get         The get command downloads a tool\n  help        Help about any command\n  info        Find info about a Kubernetes app\n  install     Install Kubernetes apps from helm charts or YAML files\n  system      System apps\n  uninstall   Uninstall apps installed with arkade\n  update      Print update instructions\n  version     Print the version\nFlags:\n  -h, --help   help for arkade\nUse \"arkade [command] --help\" for more information about a command. \n```", "```\n$ ark install openfaas\nUsing Kubeconfig: /Users/gigi.sayfan/.kube/config\nClient: arm64, Darwin\n2022/10/01 11:29:14 User dir established as: /Users/gigi.sayfan/.arkade/\nDownloading: https://get.helm.sh/helm-v3.9.3-darwin-amd64.tar.gz\n/var/folders/qv/7l781jhs6j19gw3b89f4fcz40000gq/T/helm-v3.9.3-darwin-amd64.tar.gz written.\n2022/10/01 11:29:17 Extracted: /var/folders/qv/7l781jhs6j19gw3b89f4fcz40000gq/T/helm\n2022/10/01 11:29:17 Copying /var/folders/qv/7l781jhs6j19gw3b89f4fcz40000gq/T/helm to /Users/gigi.sayfan/.arkade/bin/helm\nDownloaded to:  /Users/gigi.sayfan/.arkade/bin/helm helm\n\"openfaas\" has been added to your repositories\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the \"openfaas\" chart repository\nUpdate Complete. ![](img/B18998_09_001.png)Happy Helming!![](img/B18998_09_001.png)\nVALUES values-arm64.yaml\nCommand: /Users/gigi.sayfan/.arkade/bin/helm [upgrade --install openfaas openfaas/openfaas --namespace openfaas --values /var/folders/qv/7l781jhs6j19gw3b89f4fcz40000gq/T/charts/openfaas/values-arm64.yaml --set gateway.directFunctions=false --set openfaasImagePullPolicy=IfNotPresent --set gateway.replicas=1 --set queueWorker.replicas=1 --set dashboard.publicURL=http://127.0.0.1:8080 --set queueWorker.maxInflight=1 --set autoscaler.enabled=false --set basic_auth=true --set faasnetes.imagePullPolicy=Always --set basicAuthPlugin.replicas=1 --set clusterRole=false --set operator.create=false --set ingressOperator.create=false --set dashboard.enabled=false --set serviceType=NodePort]\nRelease \"openfaas\" does not exist. Installing it now.\nNAME: openfaas\nLAST DEPLOYED: Sat Oct  1 11:29:28 2022\nNAMESPACE: openfaas\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nTo verify that openfaas has started, run:\n  kubectl -n openfaas get deployments -l \"release=openfaas, app=openfaas\"\n=======================================================================\n= OpenFaaS has been installed.                                        =\n=======================================================================\n# Get the faascli\nkind-openfass | default\ncurl -SLsf https://cli.openfaas.com | sudo sh\n# Forward the gateway to your machine\nkubectl rollout status -n openfaas deploy/gateway\nkubectl port-forward -n openfaas svc/gateway 8080:8080 &\n# If basic auth is enabled, you can now log into your gateway:\nPASSWORD=$(kubectl get secret -n openfaas basic-auth -o jsonpath=\"{.data.basic-auth-password}\" | base64 --decode; echo)\necho -n $PASSWORD | faas-cli login --username admin --password-stdin\nfaas-cli store deploy figlet\nfaas-cli list\n# For Raspberry Pi\nfaas-cli store list \\\n --platform armhf\nfaas-cli store deploy figlet \\\n --platform armhf\n# Find out more at:\n# https://github.com/openfaas/faas\n![](img/B18998_12_027.png) arkade needs your support: https://github.com/sponsors/alexellis \n```", "```\n$ k get deploy -n openfaas\nNAME                READY   UP-TO-DATE   AVAILABLE   AGE\nalertmanager        1/1     1            1           6m2s\nbasic-auth-plugin   1/1     1            1           6m2s\ngateway             1/1     1            1           6m2s\nnats                1/1     1            1           6m2s\nprometheus          1/1     1            1           6m2s\nqueue-worker        1/1     1            1           6m2s \n```", "```\n$ brew install faas-cli\n==> Downloading https://ghcr.io/v2/homebrew/core/faas-cli/manifests/0.14.8\n######################################################################## 100.0%\n==> Downloading https://ghcr.io/v2/homebrew/core/faas-cli/blobs/sha256:cf9460398c45ea401ac688e77a8884cbceaf255064a1d583f8113b6c2bd68450\n==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:cf9460398c45ea401ac688e77a8884cbceaf255064a1d583f8113b6c2bd68450?se=2022-10-01T18%3A50%3A00Z&sig=V%\n######################################################################## 100.0%\n==> Pouring faas-cli--0.14.8.arm64_monterey.bottle.tar.gz\n==> Caveats\nzsh completions have been installed to:\n  /opt/homebrew/share/zsh/site-functions\n==> Summary\n![](img/B18998_12_028.png)  /opt/homebrew/Cellar/faas-cli/0.14.8: 9 files, 8.4MB\n==> Running `brew cleanup faas-cli`...\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\nHide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`). \n```", "```\n$ kubectl port-forward -n openfaas svc/gateway 8080:8080 &\n[3] 76489\n$ Forwarding from 127.0.0.1:8080 -> 8080\nForwarding from [::1]:8080 -> 8080 \n```", "```\n$ PASSWORD=$(kubectl get secret -n openfaas basic-auth -o jsonpath=\"{.data.basic-auth-password}\" | base64 --decode; echo)\necho -n $PASSWORD | faas-cli login --username admin --password-stdin \n```", "```\n$ faas-cli template store list\nNAME                     SOURCE             DESCRIPTION\ncsharp                   openfaas           Classic C# template\ndockerfile               openfaas           Classic Dockerfile template\ngo                       openfaas           Classic Golang template\njava11                   openfaas           Java 11 template\njava11-vert-x            openfaas           Java 11 Vert.x template\nnode17                   openfaas           HTTP-based Node 17 template\nnode16                   openfaas           HTTP-based Node 16 template\nnode14                   openfaas           HTTP-based Node 14 template\nnode12                   openfaas           HTTP-based Node 12 template\nnode                     openfaas           Classic NodeJS 8 template\nphp7                     openfaas           Classic PHP 7 template\nphp8                     openfaas           Classic PHP 8 template\npython                   openfaas           Classic Python 2.7 template\npython3                  openfaas           Classic Python 3.6 template\npython3-dlrs             intel              Deep Learning Reference Stack v0.4 for ML workloads\nruby                     openfaas           Classic Ruby 2.5 template\nruby-http                openfaas           Ruby 2.4 HTTP template\npython27-flask           openfaas           Python 2.7 Flask template\npython3-flask            openfaas           Python 3.7 Flask template\npython3-flask-debian     openfaas           Python 3.7 Flask template based on Debian\npython3-http             openfaas           Python 3.7 with Flask and HTTP\npython3-http-debian      openfaas           Python 3.7 with Flask and HTTP based on Debian\ngolang-http              openfaas           Golang HTTP template\ngolang-middleware        openfaas           Golang Middleware template\npython3-debian           openfaas           Python 3 Debian template\npowershell-template      openfaas-incubator Powershell Core Ubuntu:16.04 template\npowershell-http-template openfaas-incubator Powershell Core HTTP Ubuntu:16.04 template\nrust                     booyaa             Rust template\ncrystal                  tpei               Crystal template\ncsharp-httprequest       distantcam         C# HTTP template\ncsharp-kestrel           burtonr            C# Kestrel HTTP template\nvertx-native             pmlopes            Eclipse Vert.x native image template\nswift                    affix              Swift 4.2 Template\nlua53                    affix              Lua 5.3 Template\nvala                     affix              Vala Template\nvala-http                affix              Non-Forking Vala Template\nquarkus-native           pmlopes            Quarkus.io native image template\nperl-alpine              tmiklas            Perl language template based on Alpine image\ncrystal-http             koffeinfrei        Crystal HTTP template\nrust-http                openfaas-incubator Rust HTTP template\nbash-streaming           openfaas-incubator Bash Streaming template\ncobol                    devries            COBOL Template \n```", "```\n$ faas-cli template store pull golang-http\nFetch templates from repository: https://github.com/openfaas/golang-http-template at\n2022/10/02 14:48:38 Attempting to expand templates from https://github.com/openfaas/golang-http-template\n2022/10/02 14:48:39 Fetched 2 template(s) : [golang-http golang-middleware] from https://github.com/openfaas/golang-http-template \n```", "```\n$ ls -la template/golang-http\ntotal 64\ndrwxr-xr-x  11 gigi.sayfan  staff   352 Oct  2 14:48 .\ndrwxr-xr-x   4 gigi.sayfan  staff   128 Oct  2 14:52 ..\n-rw-r--r--   1 gigi.sayfan  staff    52 Oct  2 14:48 .dockerignore\n-rw-r--r--   1 gigi.sayfan  staff     9 Oct  2 14:48 .gitignore\n-rw-r--r--   1 gigi.sayfan  staff  1738 Oct  2 14:48 Dockerfile\ndrwxr-xr-x   4 gigi.sayfan  staff   128 Oct  2 14:48 function\n-rw-r--r--   1 gigi.sayfan  staff   110 Oct  2 14:48 go.mod\n-rw-r--r--   1 gigi.sayfan  staff   257 Oct  2 14:48 go.sum\n-rw-r--r--   1 gigi.sayfan  staff    32 Oct  2 14:48 go.work\n-rw-r--r--   1 gigi.sayfan  staff  3017 Oct  2 14:48 main.go\n-rw-r--r--   1 gigi.sayfan  staff   465 Oct  2 14:48 template.yml \n```", "```\n$ faas-cli new --prefix docker.io/g1g1 --lang golang-http openfaas-go\nFolder: openfaas-go created.\nkind-openfaas | openfaas\n  ___                   _____           ____\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\n| | | | '_ \\ / _ \\ '_ \\| |_ / _` |/ _` \\___ \\\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\n      |_|\nFunction created in folder: openfaas-go\nStack file written: openfaas-go.yml\nNotes:\nYou have created a new function which uses Go 1.18 and Alpine\nLinux as its base image.\nTo disable the go module, for private vendor code, please use\n\"--build-arg GO111MODULE=off\" with faas-cli build or configure this\nvia your stack.yml file.\nSee more: https://docs.openfaas.com/cli/templates/\nFor the template's repo and more examples:\nhttps://github.com/openfaas/golang-http-template \n```", "```\n$ cat openfaas-go.yml\nversion: 1.0\nprovider:\n  name: openfaas\n  gateway: http://127.0.0.1:8080\nfunctions:\n  openfaas-go:\n    lang: golang-http\n    handler: ./openfaas-go\n    image: docker.io/g1g1/openfaas-go:latest \n```", "```\n$ cat openfaas-go/go.mod\nmodule handler/function\ngo 1.18 \n```", "```\n$ cat openfaas-go/handler.go\npackage function\nimport (\n    \"fmt\"\n    \"net/http\"\n    handler \"github.com/openfaas/templates-sdk/go-http\"\n)\n// Handle a function invocation\nfunc Handle(req handler.Request) (handler.Response, error) {\n    var err error\n    message := fmt.Sprintf(\"Body: %s\", string(req.Body))\n    return handler.Response{\n        Body:       []byte(message),\n        StatusCode: http.StatusOK,\n    }, err\n} \n```", "```\n$ faas-cli build -f openfaas-go.yml --quiet\n[0] > Building openfaas-go.\nClearing temporary build folder: ./build/openfaas-go/\nPreparing: ./openfaas-go/ build/openfaas-go/function\nBuilding: docker.io/g1g1/openfaas-go:latest with golang-http template. Please wait..\nImage: docker.io/g1g1/openfaas-go:latest built.\n[0] < Building openfaas-go done in 0.93s.\n[0] Worker done.\nTotal build time: 0.93s \n```", "```\n$ docker images | grep openfaas\ng1g1/openfaas-go                   latest         215e95884a9b   3 minutes ago   18.3MB \n```", "```\n$ faas-cli push -f openfaas-go.yml\n[0] > Pushing openfaas-go [docker.io/g1g1/openfaas-go:latest].\nThe push refers to repository [docker.io/g1g1/openfaas-go]\n668bbc37657f: Pushed\n185851557ef2: Pushed\n1d14a6a345f2: Pushed\n5f70bf18a086: Pushed\necf2d64591ca: Pushed\nf6b0a98cfe18: Pushed\n5d3e392a13a0: Mounted from library/golang\nlatest: digest: sha256:cb2b3051e2cac7c10ce78a844e331a5c55e9a2296c5c3ba9e0e8ee0523ceba84 size: 1780\n[0] < Pushing openfaas-go [docker.io/g1g1/openfaas-go:latest] done. \n```", "```\n$ faas-cli deploy -f openfaas-go.yml\nDeploying: openfaas-go.\nHandling connection for 8080\nDeployed. 202 Accepted.\nURL: http://127.0.0.1:8080/function/openfaas-go \n```", "```\n$ http POST http://127.0.0.1:8080/function/openfaas-go body='yeah, it works!' -b\nHandling connection for 8080\nBody: {\n    \"body\": \"yeah, it works!\"\n}\n$ http POST http://127.0.0.1:8080/function/openfaas-go body='awesome!' -b\nHandling connection for 8080\nBody: {\n    \"body\": \"awesome!\"\n} \n```", "```\n$ faas-cli list\nHandling connection for 8080\nFunction                        Invocations     Replicas\nopenfaas-go                     6               1 \n```", "```\napiVersion: 1\ndescription: Send a message to a slack channel when the temperature exceeds a certain threshold\noutput: CreateResult\n# Input: 'San Fransisco, CA'\ntasks:\n  # Fetch weather for input\n  FetchWeather:\n    run: wunderground-conditions\n    inputs:\n      default:\n        apiKey: <API_KEY>\n        state: \"{$.Invocation.Inputs.default.substring($.Invocation.Inputs.default.indexOf(',') + 1).trim()}\"\n        city: \"{$.Invocation.Inputs.default.substring(0, $.Invocation.Inputs.default.indexOf(',')).trim()}\"\n  ToCelsius:\n    run: tempconv\n    inputs:\n      default:\n        temperature: \"{$.Tasks.FetchWeather.Output.current_observation.temp_f}\"\n        format: F\n        target: C\n    requires:\n    - FetchWeather\n  # Send a slack message if the temperature threshold has been exceeded\n  CheckTemperatureThreshold:\n    run: if\n    inputs:\n      if: \"{$.Tasks.ToCelsius.Output.temperature > 25}\"\n      then:\n        run: slack-post-message\n        inputs:\n          default:\n            message: \"{'It is ' + $.Tasks.ToCelsius.Output.temperature + 'C in ' + $.Invocation.Inputs.default + ' :fire:'}\"\n            path: <HOOK_URL>\n    requires:\n    - ToCelsius\n    # Besides the potential Slack message, compose the response of this workflow {location, celsius, fahrenheit}\n  CreateResult:\n    run: compose\n    inputs:\n      celsius: \"{$.Tasks.ToCelsius.Output.temperature}\"\n      fahrenheit: \"{$.Tasks.FetchWeather.Output.current_observation.temp_f}\"\n      location: \"{$.Invocation.Inputs.default}\"\n      sentSlackMsg: \"{$.Tasks.CheckTemperatureThreshold.Output}\"\n    requires:\n    - ToCelsius\n    - CheckTemperatureThreshold \n```", "```\n$ k create ns fission\n$ k create -k \"github.com/fission/fission/crds/v1?ref=v1.17.0\"\n$ helm repo add fission-charts https://fission.github.io/fission-charts/\n$ helm repo update\n$ helm install --version v1.17.0 --namespace fission fission \\\n  --set serviceType=NodePort,routerServiceType=NodePort \\\n  fission-charts/fission-all \n```", "```\n$ k get crd -o name | grep fission\ncustomresourcedefinition.apiextensions.k8s.io/canaryconfigs.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/environments.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/functions.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/httptriggers.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/kuberneteswatchtriggers.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/messagequeuetriggers.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/packages.fission.io\ncustomresourcedefinition.apiextensions.k8s.io/timetriggers.fission.io \n```", "```\n$ curl -Lo fission https://github.com/fission/fission/releases/download/v1.17.0/fission-v1.17.0-darwin-amd64 && chmod +x fission && sudo mv fission /usr/local/bin/ \n```", "```\n$ curl -Lo fission https://github.com/fission/fission/releases/download/v1.17.0/fission-v1.17.0-linux-amd64 && chmod +x fission && sudo mv fission /usr/local/bin/ \n```", "```\n$ fission environment create --name python --image fission/python-env\npoolsize setting default to 3\nenvironment 'python' created \n```", "```\ndef main():\n    return 'Yeah, it works!!!' \n```", "```\n$ fission function create --name yeah --env python --code yeah.py\nPackage 'yeah-b9d5d944-9c6e-4e67-81fb-96e047625b74' created\nfunction 'yeah' created \n```", "```\n$ fission function test --name yeah\nYeah, it works!!! \n```", "```\n$ fission route create --method GET --url /yeah --function yeah --name yeah\ntrigger 'yeah' created \n```", "```\n$ k -n fission port-forward $(k -n fission get pod -l svc=router -o name) 8888:8888 &\n$ export FISSION_ROUTER=127.0.0.1:8888 \n```", "```\n$ http http://${FISSION_ROUTER}/yeah -b\nHandling connection for 8888\nYeah, it works!!! \n```", "```\n$ fission function test yeah --name yeah\nYeah, it works!!! \n```"]