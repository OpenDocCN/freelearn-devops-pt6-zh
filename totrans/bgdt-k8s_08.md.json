["```\n    eksctl create cluster --managed --alb-ingress-access --node-private-networking --full-ecr-access --name=studycluster --instance-types=m6i.xlarge --region=us-east-1 --nodes-min=3 --nodes-max=4 --nodegroup-name=ng-studycluster\n    ```", "```\n    eksctl utils associate-iam-oidc-provider --region=us-east-1 --cluster=studycluster --approve\n    ```", "```\n    eksctl create iamserviceaccount --name ebs-csi-controller-sa --namespace kube-system --cluster studycluster --role-name AmazonEKS_EBS_CSI_DriverRole --role-only --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy --approve\n    ```", "```\n    eksctl create addon --name aws-ebs-csi-driver --cluster studycluster --service-account-role-arn arn:aws:iam::<YOUR_ACCOUNT_NUMBER>:role/AmazonEKS_EBS_CSI_DriverRole --force\n    ```", "```\n    kubectl create namespace spark-operator\n    ```", "```\n    helm install spark-operator https://github.com/kubeflow/spark-operator/releases/download/spark-operator-chart-1.1.27/spark-operator-1.1.27.tgz --namespace spark-operator --set webhook.enable=true\n    ```", "```\n    kubectl get pods -n spark-operator\n    ```", "```\n    NAME                                READY   STATUS\n    spark-operator-74db6fcf98-grhdw     1/1     Running\n    spark-operator-webhook-init-mw8gf   0/1     Completed\n    ```", "```\n    kubectl create secret generic aws-credentials --from-literal=aws_access_key_id=<YOUR_ACCESS_KEY_ID> --from-literal=aws_secret_access_key=\"<YOUR_SECRET_ACCESS_KEY>\" -n spark-operator\n    ```", "```\n    kubectl apply -f spark_job.yaml -n spark-operator\n    kubectl get sparkapplication -n spark-operator\n    ```", "```\n    kubectl describe sparkapplication/test-spark-job -n spark-operator\n    ```", "```\n    kubectl logs test-spark-job-driver -n spark-operator\n    ```", "```\nkubectl delete sparkapplication/test-spark-job -n spark-operator\n```", "```\nhelm repo add apache-airflow https://airflow.apache.org\n```", "```\n    env:\n        - name: \"AIRFLOW__LOGGING__REMOTE_LOGGING\"\n        value: \"True\"\n        - name: \"AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER\"\n        value: \"s3://airflow-logs-<YOUR_ACCOUNT_NUMBER>/airflow-logs/\"\n        - name: \"AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID\"\n        value: \"aws_conn\"\n    ```", "```\n        defaultUser:\n          enabled: true\n          role: Admin\n          username: <YOUR_USERNAME>\n          email: admin@example.com\n          firstName: NAME\n          lastName: LASTNAME\n          password: admin\n    ```", "```\n    gitSync:\n        enabled: true\n        repo: https://github.com/<USERNAME>/<REPO_NAME>.git\n        branch: main\n        rev: HEAD\n        ref: main\n        depth: 1\n        maxFailures: 0\n        subPath: \"dags\"\n    ```", "```\n    helm install airflow apache-airflow/airflow --namespace airflow --create-namespace -f custom_values.yaml\n    ```", "```\nkubectl get svc -n airflow\n```", "```\n    helm repo add strimzi https://strimzi.io/charts/\n    ```", "```\n    helm install kafka strimzi/strimzi-kafka-operator --namespace kafka --create-namespace --version 0.40.0\n    ```", "```\n    helm status kafka -n kafka\n    kubectl get pods -n kafka\n    ```", "```\n    apiVersion: kafka.strimzi.io/v1beta2\n    kind: Kafka\n    metadata:\n        name: kafka-cluster\n    spec:\n        kafka:\n        version: 3.7.0\n        replicas: 3\n    ```", "```\n        listeners:\n          - name: plain\n            port: 9092\n            type: internal\n            tls: false\n          - name: tls\n            port: 9093\n            type: internal\n            tls: true\n          - name: external\n            port: 9094\n            type: loadbalancer\n            tls: false\n    ```", "```\n            readinessProbe:\n              initialDelaySeconds: 15\n              timeoutSeconds: 5\n            livenessProbe:\n              initialDelaySeconds: 15\n              timeoutSeconds: 5\n        ```", "```\n        config:\n          default.replication.factor: 3\n          num.partitions: 9\n          offsets.topic.replication.factor: 3\n          transaction.state.log.replication.factor: 3\n          transaction.state.log.min.isr: 1\n          log.message.format.version: \"3.7\"\n          inter.broker.protocol.version: \"3.7\"\n          min.insync.replicas: 2\n          log.retention.hours: 2160\n    ```", "```\n        storage:\n          type: jbod\n          volumes:\n          - id: 0\n            type: persistent-claim\n            size: 15Gi\n            deleteClaim: false\n          - id: 1\n            type: persistent-claim\n            size: 15Gi\n            deleteClaim: false\n    ```", "```\n        resources:\n          requests:\n            memory: 512Mi\n            cpu: \"500m\"\n          limits:\n            memory: 1Gi\n            cpu: \"1000m\"\n    ```", "```\n        zookeeper:\n        replicas: 3\n        storage:\n            type: persistent-claim\n            size: 10Gi\n            deleteClaim: false\n        resources:\n          requests:\n            memory: 512Mi\n            cpu: \"250m\"\n          limits:\n            memory: 1Gi\n            cpu: \"500m\"\n    ```", "```\n    kubectl apply -f kafka_jbod.yaml -n kafka\n    kubectl get kafka -n kafka\n    ```", "```\n    NAME          DESIRED KAFKA REPLICAS   DESIRED ZK REPLICAS\n    kafka-class   3                        3\n    kubectl describe kafka -n kafka\n    ```", "```\n    kubectl get pods -n kafka\n    ```", "```\nNAME                      READY   STATUS\nkafka-class-kafka-0       1/1     Running\nkafka-class-kafka-1       1/1     Running\nkafka-class-kafka-2       1/1     Running\nkafka-class-zookeeper-0   1/1     Running\nkafka-class-zookeeper-1   1/1     Running\nkafka-class-zookeeper-2   1/1     Running\n```"]