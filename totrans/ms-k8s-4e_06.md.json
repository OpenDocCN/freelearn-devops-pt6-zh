["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hue-scheduler\nspec:\n  containers:\n  - image: g1g1/hue-global-listener:1.0\n    name: hue-global-listener\n    volumeMounts:\n    - mountPath: /notifications\n      name: shared-volume\n  - image: g1g1/hue-job-scheduler:1.0\n    name: hue-job-scheduler\n    volumeMounts:\n    - mountPath: /incoming\n      name: shared-volume\n  volumes:\n  - name: shared-volume\n    emptyDir: {} \n```", "```\n volumes:\n  - name: shared-volume\n    emptyDir:\n     medium: Memory \n```", "```\n$ k create -f hue-scheduler.yaml\npod/hue-scheduler created \n```", "```\n$ k get pod hue-scheduler -o json | jq .spec.containers\n[\n  {\n    \"image\": \"g1g1/hue-global-listener:1.0\",\n    \"name\": \"hue-global-listener\",\n    \"volumeMounts\": [\n      {\n        \"mountPath\": \"/notifications\",\n        \"name\": \"shared-volume\"\n      },\n      ...\n    ]\n    ...\n  },\n  {\n    \"image\": \"g1g1/hue-job-scheduler:1.0\",\n    \"name\": \"hue-job-scheduler\",\n    \"volumeMounts\": [\n      {\n        \"mountPath\": \"/incoming\",\n        \"name\": \"shared-volume\"\n      },\n      ...  \n    ]\n    ...\n  }\n] \n```", "```\n$ kubectl exec -it hue-scheduler -c hue-global-listener -- touch /notifications/1.txt\n$ kubectl exec -it hue-scheduler -c hue-job-scheduler -- ls /incoming\n1.txt \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hue-coupon-hunter\nspec:\n  containers:\n  - image: the_g1g1/hue-coupon-hunter\n    name: hue-coupon-hunter\n    volumeMounts:\n    - mountPath: /coupons\n      name: coupons-volume\n  volumes:\n  - name: coupons-volume\n    host-path:\n        path: /etc/hue/data/coupons \n```", "```\n - image: the_g1g1/hue-coupon-hunter\n    name: hue-coupon-hunter\n    volumeMounts:\n    - mountPath: /coupons\n      name: coupons-volume\n    securityContext:\n      privileged: true \n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: local-storage\nprovisioner: kubernetes.io/no-provisioner\nvolumeBindingMode: WaitForFirstConsumer\n$ k create -f local-storage-class.yaml\nstorageclass.storage.k8s.io/local-storage created \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: local-pv\n  labels:\n    release: stable\n    capacity: 10Gi\nspec:\n  capacity:\n    storage: 10Gi\n  volumeMode: Filesystem\n  accessModes:\n  - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Delete\n  storageClassName: local-storage\n  local:\n    path: /mnt/disks/disk-1\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - k3d-k3s-default-agent-1 \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-777\nspec:\n  capacity:\n    storage: 10Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteMany\n    - ReadOnlyMany\n  persistentVolumeReclaimPolicy: Recycle\n  storageClassName: slow\n  mountOptions:\n    - hard\n    - nfsvers=4.2\n  nfs:\n    path: /tmp\n    server: nfs-server.default.svc.cluster.local \n```", "```\ncapacity:\n    storage: 10Gi \n```", "```\naccessModes:\n    - ReadWriteMany\n    - ReadOnlyMany \n```", "```\n storageClassName: slow \n```", "```\nnfs:\n    path: /tmp\n    server: 172.17.0.8 \n```", "```\n mountOptions:\n    - hard\n    - nfsvers=4.1 \n```", "```\nConfigMap and a Secret into the same directory: \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: projected-volumes-demo\nspec:\n  containers:\n  - name: projected-volumes-demo\n    image: busybox:1.28\n    volumeMounts:\n    - name: projected-volumes-demo\n      mountPath: \"/projected-volume\"\n      readOnly: true\n  volumes:\n  - name: projected-volumes-demo\n    projected:\n      sources:\n      - secret:\n          name: the-user\n          items:\n            - key: username\n              path: the-group/the-user\n      - configMap:\n          name: the-config-map\n          items:\n            - key: config\n              path: the-group/the-config-map \n```", "```\n$ docker exec -it k3d-k3s-default-agent-1 mkdir -p /mnt/disks/disk-1\n$ docker exec -it k3d-k3s-default-agent-1 ls -la /mnt/disks\ntotal 12\ndrwxr-xr-x 3 0 0 4096 Jun 29 21:40 .\ndrwxr-xr-x 3 0 0 4096 Jun 29 21:40 ..\ndrwxr-xr-x 2 0 0 4096 Jun 29 21:40 disk-1 \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: local-pv\n  labels:\n    release: stable\n    capacity: 10Gi\nspec:\n  capacity:\n    storage: 10Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Delete\n  storageClassName: local-storage\n  local:\n    path: /mnt/disks/disk-1\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n        - matchExpressions:\n            - key: kubernetes.io/hostname\n              operator: In\n              values:\n                - k3d-k3s-default-agent-1 \n```", "```\n$ k create -f local-volume.yaml\npersistentvolume/local-pv created\n$ k get pv\nNAME       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                         STORAGECLASS    REASON   AGE\nlocal-pv   10Gi       RWO            Delete           Bound    default/local-storage-claim   local-storage            6m44s \n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: local-storage-claim\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 8Gi\n  storageClassName: local-storage\n  selector:\n    matchLabels:\n      release: \"stable\"\n    matchExpressions:\n      - {key: capacity, operator: In, values: [8Gi, 10Gi]} \n```", "```\n$ k create -f local-persistent-volume-claim.yaml\npersistentvolumeclaim/local-storage-claim created\n$ k get pvc\nNAME                  STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS    AGE\nlocal-storage-claim    WaitForFirstConsumer    local-pv   10Gi       RWO            local-storage   21m \n```", "```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: the-pod\nspec:\n  containers:\n    - name: the-container\n      image: g1g1/py-kube:0.3\n      volumeMounts:\n      - mountPath: \"/mnt/data\"\n        name: persistent-volume\n  volumes:\n    - name: persistent-volume\n      persistentVolumeClaim:\n        claimName: local-storage-claim \n```", "```\n$ k get pvc\nNAME                  STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS    AGE\nlocal-storage-claim   Pending                                      local-storage   6m14s \n```", "```\n$ k create -f pod-with-local-claim.yaml\npod/the-pod created\n$ k get pvc\nNAME                  STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS    AGE\nlocal-storage-claim   Bound    local-pv   100Gi      RWO            local-storage   20m \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: block-pv\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Block\n  persistentVolumeReclaimPolicy: Retain\n  fc:\n    targetWWNs: [\"50060e801049cfd1\"]\n    lun: 0\n    readOnly: false \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: block-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Block\n  resources:\n    requests:\n      storage: 10Gi \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-with-block-volume\nspec:\n  containers:\n    - name: fc-container\n      image: fedora:26\n      command: [\"/bin/sh\", \"-c\"]\n      args: [\"tail -f /dev/null\"]\n      volumeDevices:\n        - name: data\n          devicePath: /dev/xvda\n  volumes:\n    - name: data\n      persistentVolumeClaim:\n        claimName: block-pvc \n```", "```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: the-pod\nspec:\n  containers:\n    - name: the-container\n      image: g1g1/py-kube:0.3\n      volumeMounts:\n        - mountPath: \"/data\"\n          name: the-volume\n      command: [ \"sleep\", \"1000000\" ]\n  volumes:\n    - name: the-volume\n      csi:\n        driver: inline.storage.kubernetes.io\n        volumeAttributes:\n          key: value \n```", "```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: the-pod\nspec:\n  containers:\n    - name: the-container\n      image: g1g1/py-kube:0.3\n      volumeMounts:\n        - mountPath: \"/data\"\n          name: the-volume\n      command: [ \"sleep\", \"1000000\" ]\n  volumes:\n    - name: the-volume\n      ephemeral:\n        volumeClaimTemplate:\n          metadata:\n            labels:\n              type: generic-ephemeral-volume\n          spec:\n            accessModes: [ \"ReadWriteOnce\" ]\n            storageClassName: generic-storage\n            resources:\n              requests:\n                storage: 1Gi \n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: standard\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\nreclaimPolicy: Retain\nallowVolumeExpansion: true\nmountOptions:\n  - debug\nvolumeBindingMode: Immediate \n```", "```\nkind: PersistentVolume\napiVersion: v1\nmetadata:\n  name: dir-pv\nspec:\n  storageClassName: dir\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteMany\n  hostPath:\n    path: \"/tmp/data\" \n```", "```\n$ k create -f dir-persistent-volume.yaml\npersistentvolume/dir-pv created \n```", "```\n$ k get pv\nNAME       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS    REASON   AGE\ndir-pv     1Gi        RWX            Retain           Available           dir                      22s \n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: dir-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi \n```", "```\n$ k create -f  dir-persistent-volume-claim.yaml\npersistentvolumeclaim/dir-pvc created \n```", "```\n$ k get pvc\nNAME                  STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS    AGE\ndir-pvc               Bound    dir-pv     1Gi        RWX            dir             106s\n$ k get pv\nNAME       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM             STORAGECLASS    REASON   AGE\ndir-pv     1Gi        RWX            Retain           Bound    default/dir-pvc   dir                      4m25s \n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: some-pvc\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Gi \n```", "```\n$ k create -f some-persistent-volume-claim.yaml\npersistentvolumeclaim/some-pvc created \n```", "```\n$ k get pvc some-pvc\nNAME       STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nsome-pvc   Pending                                      local-path     3m29s \n```", "```\n$ k get storageclass local-path -o yaml\nkind: StorageClass\nmetadata:\n  annotations:\n    objectset.rio.cattle.io/applied: H4sIAAAAAAAA/4yRT+vUMBCGv4rMua1bu1tKwIO u7EUEQdDzNJlux6aZkkwry7LfXbIqrIffn2PyZN7hfXIFXPg7xcQSwEBSiXimaupSxfJ2q6GAiYMDA9 /+oKPHlKCAmRQdKoK5AoYgisoSUj5K/5OsJtIqslQWVT3lNM4xUDzJ5VegWJ63CQxMTXogW128+czBvf/gnIQXIwLOBAa8WPTl30qvGkoL2jw5rT2V6ZKUZij+SbG5eZVRDKR0F8SpdDTg6rW8YzCgcSW4FeCxJ/+sjxHTCAbqrhmag20Pw9DbZtfu210z7JuhPnQ719m2w3cOe7fPof81W1DHfLlE2Th/IEUwEDHYkWJe8PCs gJgL8PxVPNsLGPhEnjRr2cSvM33k4Dicv4jLC34g60niiWPSo4S0zhTh9jsAAP//ytgh5S0CAAA\n    objectset.rio.cattle.io/id: \"\"\n    objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon\n    objectset.rio.cattle.io/owner-name: local-storage\n    objectset.rio.cattle.io/owner-namespace: kube-system\n    storageclass.kubernetes.io/is-default-class: \"true\"\n  creationTimestamp: \"2022-06-22T18:16:56Z\"\n  labels:\n    objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4\n  name: local-path\n  resourceVersion: \"290\"\n  uid: b51cf456-f87e-48ac-9062-4652bf8f683e\nprovisioner: rancher.io/local-path\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer \n```", "```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: just-a-shell\n  labels:\n    name: just-a-shell\nspec:\n  containers:\n    - name: a-shell\n      image: g1g1/py-kube:0.3\n      command: [\"sleep\", \"10000\"]\n      volumeMounts:\n        - mountPath: \"/data\"\n          name: pv\n    - name: another-shell\n      image: g1g1/py-kube:0.3\n      command: [\"sleep\", \"10000\"]\n      volumeMounts:\n        - mountPath: \"/another-data\"\n          name: pv\n  volumes:\n    - name: pv\n      persistentVolumeClaim:\n        claimName: dir-pvc \n```", "```\n$ k create -f shell-pod.yaml\npod/just-a-shell created\n$ k get po just-a-shell -o wide\nNAME           READY   STATUS    RESTARTS   AGE   IP            NODE                      NOMINATED NODE   READINESS GATES\njust-a-shell   2/2     Running   0          74m   10.42.2.104   k3d-k3s-default-agent-1   <none>           <none> \n```", "```\n$ docker exec -it k3d-k3s-default-agent-1 sh\n/ # \n```", "```\n/ # echo \"yeah, it works\" > /tmp/data/cool.txt \n```", "```\n$ docker exec -it k3d-k3s-default-agent-1 cat /tmp/data/cool.txt\nyeah, it works \n```", "```\n$ k exec -it just-a-shell -c a-shell -- cat  /data/cool.txt\nyeah, it works\n$ k exec -it just-a-shell -c another-shell -- cat  /another-data/cool.txt\nyeah, it works \n```", "```\n$ k exec -it just-a-shell -c another-shell – bash –c \"echo yo  > /another-data/yo.txt\"\nyo /another-data/yo.txt\n$ k exec -it just-a-shell -c a-shell cat /data/yo.txt\nyo\n$ k exec -it just-a-shell -c another-shell cat /another-data/yo.txt\nyo \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: test-pv\nspec:\n  accessModes:\n  - ReadWriteOnce\n  capacity:\n    storage: 5Gi\n  csi:\n    driver: ebs.csi.aws.com\n    volumeHandle: {EBS volume ID}\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n        - matchExpressions:\n            - key: topology.ebs.csi.aws.com/zone\n              operator: In\n              values:\n                - {availability zone} \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ebs-claim\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: some-pod\nspec:\n  containers:\n  - image: some-container\n    name: some-container\n    volumeMounts:\n    - name: persistent-storage\n      mountPath: /data\n  volumes:\n  - name: persistent-storage\n    persistentVolumeClaim:\n      claimName: ebs-claim \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: efs-pv\nspec:\n  capacity:\n    storage: 1Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  csi:\n    driver: efs.csi.aws.com\n    volumeHandle: <Filesystem Id> \n```", "```\naws efs describe-file-systems --query \"FileSystems[*].FileSystemId\" \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: efs-claim\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: \"\"\n  resources:\n    requests:\n      storage: 1Gi \n```", "```\npiVersion: v1\nkind: Pod\nmetadata:\n  name: efs-app\nspec:\n  containers:\n  - name: app\n    image: centos\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"while true; do echo $(date -u) >> /data/out.txt; sleep 5; done\"]\n    volumeMounts:\n    - name: persistent-storage\n      mountPath: /data\n  volumes:\n  - name: persistent-storage\n    persistentVolumeClaim:\n      claimName: efs-claim \n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-sc\nprovisioner: efs.csi.aws.com\nparameters:\n  provisioningMode: efs-ap\n  fileSystemId: <Filesystem Id>\n  directoryPerms: \"700\"\n  gidRangeStart: \"1000\" # optional\n  gidRangeEnd: \"2000\" # optional\n  basePath: \"/dynamic_provisioning\" # optional \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: efs-claim\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: efs-sc\n  resources:\n    requests:\n      storage: 5Gi \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: efs-app\nspec:\n  containers:\n    - name: app\n      image: centos\n      command: [\"/bin/sh\"]\n      args: [\"-c\", \"while true; do echo $(date -u) >> /data/out; sleep 5; done\"]\n      volumeMounts:\n        - name: persistent-storage\n          mountPath: /data\n  volumes:\n    - name: persistent-storage\n      persistentVolumeClaim:\n        claimName: efs-claim \n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: csi-gce-pd\nprovisioner: pd.csi.storage.gke.io\nparameters:\n  labels: key1=value1,key2=value2\nvolumeBindingMode: WaitForFirstConsumer \n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: gce-pd-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: csi-gce-pd\n  resources:\n    requests:\n      storage: 200Gi \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: some-pod\nspec:\n  containers:\n  - image: some-image\n    name: some-container\n    volumeMounts:\n    - mountPath: /pd\n      name: some-volume\n  volumes:\n  - name: some-volume\n    persistentVolumeClaim:\n       claimName: gce-pd-pvc\n       readOnly: false \n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: csi-gce-pd\nprovisioner: pd.csi.storage.gke.io\nparameters:\n  type: pd-standard\n  replication-type: regional-pd\nvolumeBindingMode: WaitForFirstConsumer \n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-azuredisk\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: managed-csi\n  csi:\n    driver: disk.csi.azure.com\n    readOnly: false\n    volumeHandle: /subscriptions/{sub-id}/resourcegroups/{group-name}/providers/microsoft.compute/disks/{disk-id}\n    volumeAttributes:\n      fsType: ext4 \n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: azure-file-secret\ntype: Opaque\ndata:\n  azurestorageaccountname: <base64 encoded account name>\n  azurestorageaccountkey: <base64 encoded account key> \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n name: some-pod\nspec:\n containers:\n  - image: some-container\n    name: some-container\n    volumeMounts:\n      - name: some-volume\n        mountPath: /azure\n volumes:\n      - name: some-volume\n        azureFile:\n          secretName: azure-file-secret\n         shareName: azure-share\n          readOnly: false \n```", "```\nkind: Endpoints\napiVersion: v1\nmetadata:\n  name: glusterfs-cluster\nsubsets:\n- addresses:\n  - ip: 10.240.106.152\n  ports:\n  - port: 1\n- addresses:\n  - ip: 10.240.79.157\n  ports:\n  - port: 1 \n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n  name: glusterfs-cluster\nspec:\n  ports:\n  - port: 1 \n```", "```\nvolumes:\n- name: glusterfsvol\n  glusterfs:\n    endpoints: glusterfs-cluster\n    path: kube_vol\n    readOnly: true \n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ceph-secret\ntype: \"kubernetes.io/rbd\"\ndata:\n  key: QVFCMTZWMVZvRjVtRXhBQTVrQ1FzN2JCajhWVUxSdzI2Qzg0SEE9PQ== \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: rbd2\nspec:\n  containers:\n    - image: kubernetes/pause\n      name: rbd-rw\n      volumeMounts:\n      - name: rbdpd\n        mountPath: /mnt/rbd\n  volumes:\n    - name: rbdpd\n      rbd:\n        monitors:\n        - '10.16.154.78:6789'\n        - '10.16.154.82:6789'\n        - '10.16.154.83:6789'\n        pool: kube\n        image: foo\n        fsType: ext4\n        readOnly: true\n        user: admin\n        secretRef:\n          name: ceph-secret \n```", "```\napiVersion: ceph.rook.io/v1\nkind: CephCluster\nmetadata:\n  name: rook-ceph\n  namespace: rook-ceph # namespace:cluster\nspec:\n  cephVersion:\n    image: quay.io/ceph/ceph:v17.2.5\n    allowUnsupported: false\n  dataDirHostPath: /var/lib/rook\n  skipUpgradeChecks: false\n  continueUpgradeAfterChecksEvenIfNotHealthy: false\n  waitTimeoutForHealthyOSDInMinutes: 10\n  mon:\n    count: 3\n    allowMultiplePerNode: false\n  mgr:\n    count: 2\n    allowMultiplePerNode: false\n    modules:\n      - name: pg_autoscaler\n        enabled: true\n  dashboard:\n    enabled: true\n    ssl: true\n  monitoring:    \n   enabled: false\n  network:\n    connections:\n      encryption:\n        enabled: false\n      compression:\n        enabled: false\n  crashCollector:\n    disable: false\n  logCollector:\n    enabled: true\n    periodicity: daily # one of: hourly, daily, weekly, monthly\n    maxLogSize: 500M # SUFFIX may be 'M' or 'G'. Must be at least 1M.\n  cleanupPolicy:\n    confirmation: \"\"\n    sanitizeDisks:\n      method: quick\n      dataSource: zero\n      iteration: 1\n    allowUninstallWithVolumes: false\n  annotations:\n  labels:\n  resources:\n  removeOSDsIfOutAndSafeToRemove: false\n  priorityClassNames:\n    mon: system-node-critical\n    osd: system-node-critical\n    mgr: system-cluster-critical\n  storage: # cluster level storage configuration and selection\n    useAllNodes: true\n    useAllDevices: true\n    config:\n    onlyApplyOSDPlacement: false\n  disruptionManagement:\n    managePodBudgets: true\n    osdMaintenanceTimeout: 30\n    pgHealthCheckTimeout: 0\n    manageMachineDisruptionBudgets: false\n    machineDisruptionBudgetNamespace: openshift-machine-api\n  healthCheck:\n    daemonHealth:\n      mon:\n        disabled: false\n        interval: 45s\n      osd:\n        disabled: false\n        interval: 60s\n      status:\n        disabled: false\n        interval: 60s\n    livenessProbe:\n      mon:\n        disabled: false\n      mgr:\n        disabled: false\n      osd:\n        disabled: false\n    startupProbe:\n      mon:\n        disabled: false\n      mgr:\n        disabled: false\n      osd:\n        disabled: false \n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n   name: rook-ceph-retain-bucket\nprovisioner: rook-ceph.ceph.rook.io/bucket # driver:namespace:cluster\n# set the reclaim policy to retain the bucket when its OBC is deleted\nreclaimPolicy: Retain\nparameters:\n   objectStoreName: my-store # port 80 assumed\n   objectStoreNamespace: rook-ceph # namespace:cluster \n```", "```\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: iscsipd\nspec:\n  containers:\n  - name: iscsipd-rw\n    image: kubernetes/pause\n    volumeMounts:\n    - mountPath: \"/mnt/iscsipd\"\n      name: iscsipd-rw\n  volumes:\n  - name: iscsipd-rw\n    iscsi:\n      targetPortal: 10.0.2.15:3260\n      portals: ['10.0.2.16:3260', '10.0.2.17:3260']\n      iqn: iqn.2001-04.com.example:storage.kube.sys1.xyz\n      lun: 0\n      fsType: ext4\n      readOnly: true \n```", "```\napiVersion: snapshot.storage.k8s.io/v1\nkind: VolumeSnapshot\nmetadata:\n  name: new-snapshot-test\nspec:\n  volumeSnapshotClassName: csi-hostpath-snapclass\n  source:\n    persistentVolumeClaimName: pvc-test \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: restore-pvc\nspec:\n  storageClassName: csi-hostpath-sc\n  dataSource:\n    name: new-snapshot-test\n    kind: VolumeSnapshot\n    apiGroup: snapshot.storage.k8s.io\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: clone-of-pvc-1\n    namespace: myns\nspec:\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: cloning\n  resources:\n    requests:\n      storage: 5Gi\n  dataSource:\n    kind: PersistentVolumeClaim\n    name: pvc-1 \n```"]