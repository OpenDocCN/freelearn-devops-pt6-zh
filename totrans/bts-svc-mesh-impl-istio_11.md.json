["```\n    % kubectl -n istio-system port-forward deploy/istiod 15014 &\n    [1] 68745\n    Forwarding from 127.0.0.1:15014 -> 15014\n    ```", "```\n% curl http://localhost:15014/metrics\nHandling connection for 15014\n# HELP citadel_server_csr_count The number of CSRs received by Citadel server.\n# TYPE citadel_server_csr_count counter\ncitadel_server_csr_count 6\n# HELP citadel_server_root_cert_expiry_timestamp The unix timestamp, in seconds, when Citadel root cert will expire. A negative time indicates the cert is expired.\n# TYPE citadel_server_root_cert_expiry_timestamp gauge\ncitadel_server_root_cert_expiry_timestamp 1.986355163e+09\n……….\n```", "```\n    % istioctl dashboard controlz deployment/istiod.istio-system\n    ```", "```\n$ kubectl exec -it curl -c curl -n chapter11 -- curl  istiod.istio-system.svc.cluster.local:15014/version\n1.16.0-8f2e2dc5d57f6f1f7a453e03ec96ca72b2205783-Clean\n```", "```\n% istioctl proxy-status\nNAME       CLUSTER       CDS       LDS       EDS        RDS       ECDS       ISTIOD              VERSION\ncurl.chapter11\nKubernetes     SYNCED     SYNCED     SYNCED     SYNCED        NOT SENT     istiod-58c6454c57-9nt4r     1.16.0\nenvoydummy.chapter11\nKubernetes     SYNCED     SYNCED     SYNCED     SYNCED        NOT SENT     istiod-58c6454c57-9nt4r     1.16.0\nistio-egressgateway-5bdd756dfd-bjqrg.istio-system      Kubernetes     SYNCED     SYNCED     SYNCED     NOT SENT     NOT SENT     istiod-58c6454c57-9nt4r     1.16.0\nistio-ingressgateway-67f7b5f88d-xx5fb.istio-system\nKubernetes     SYNCED     SYNCED     SYNCED     SYNCED        NOT SENT     istiod-58c6454c57-9nt4r     1.16.0\n```", "```\n% istioctl proxy-status envoydummy.chapter11\nClusters Match\nListeners Match\nRoutes Match (RDS last loaded at Sat, 17 Dec 2022 11:53:31 AEDT)Access Logs\n```", "```\n% kubectl exec curl -c curl -n chapter11 -- curl localhost:15000/config_dump > config_dump.json\n```", "```\n% istioctl proxy-config endpoints envoydummy.chapter11 -o json > endpoints-envoydummy.json\n% istioctl proxy-config routes envoydummy.chapter11 -o json > routes-envoydummy.json\n% istioctl proxy-config listener envoydummy.chapter11 -o json > listener-envoydummy.json\n% istioctl proxy-config cluster envoydummy.chapter11 -o json > cluster-envoydummy.json\n```", "```\n% kubectl exec istiod-58c6454c57-gj6cw -n istio-system -- curl 'localhost:8080/debug/config_dump?proxyID=curl.chapter11' | jq . > Chapter11/config-from-istiod-for-curl.json\n```", "```\n$ kubectl port-forward envoydummy -n chapter11 15000\n```", "```\n% istioctl x describe pod envoydummy -n chapter11\nPod: envoydummy\n   Pod Revision: default\n   Pod Ports: 10000 (envoyproxy), 15090 (istio-proxy)\nSuggestion: add 'app' label to pod for Istio telemetry.\n--------------------\nService: envoydummy\n   Port:  80/auto-detect targets pod port 10000\n--------------------\nEffective PeerAuthentication:\n   Workload mTLS mode: PERMISSIVE\n```", "```\n% kubectl apply -f Chapter11/04-istio-gateway-chaos.yaml\ngateway.networking.istio.io/chapter11-gateway configured\nvirtualservice.networking.istio.io/mockshop configured\ndestinationrule.networking.istio.io/envoydummy configured\n% istioctl x describe pod envoydummy -n chapter11\nPod: envoydummy\n   Pod Revision: default\n   Pod Ports: 10000 (envoyproxy), 15090 (istio-proxy)\n--------------------\nService: envoydummy\n   Port:  80/auto-detect targets pod port 10000\nDestinationRule: envoydummy for \"envoydummy\"\n   Matching subsets: v1\n      (Non-matching subsets v2)\n   No Traffic Policy\n--------------------\nEffective PeerAuthentication:\n   Workload mTLS mode: PERMISSIVE\nExposed on Ingress Gateway http://192.168.49.2\nVirtualService: mockshop\n   WARNING: No destinations match pod subsets (checked 1 HTTP routes)\n      Warning: Route to UNKNOWN subset v3; check DestinationRule envoydummy\n```", "```\n% istioctl analyze Chapter11/04-istio-gateway-chaos.yaml -n chapter11\nError [IST0101] (VirtualService chapter11/mockshop Chapter11/04-istio-gateway-chaos.yaml:35) Referenced host+subset in destinationrule not found: \"envoydummy+v3\"\nInfo [IST0118] (Service chapter11/envoydummy) Port name  (port: 80, targetPort: 10000) doesn't follow the naming convention of Istio port.\nError: Analyzers found issues when analyzing namespace: chapter11.\nSee https://istio.io/v1.16/docs/reference/config/analysis for more information about causes and resolutions.\n```", "```\n% kubectl get cm/istio -n istio-system -o json | jq .data.mesh\n\"accessLogFile: \\\"\\\"\\ndefaultConfig:\\n  discoveryAddress: istiod.istio-system.svc:15012\\n  proxyMetadata: {}\\n  tracing:\\n    zipkin:\\n      address: zipkin.istio-system:9411\\nenablePrometheusMerge: true\\nextensionProviders:\\n- envoyOtelAls:\\n    port: 4317\\n    service: opentelemetry-collector.istio-system.svc.cluster.local\\n  name: otel\\nrootNamespace: istio-system\\ntrustDomain: cluster.local\"\n```", "```\n% istioctl install --set profile=demo --set meshConfig.accessLogFile=\"/dev/stdout\"\n```", "```\n% istioctl install --set profile=demo --set meshConfig.accessLogFile=\"\"\n```", "```\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: envoy-dummy-accesslog-overwrite\n  namespace: chapter11\nspec:\n  selector:\n    matchLabels:\n      service.istio.io/canonical-name: envoydummy\n  accessLogging:\n  - providers:\n    - name: envoy\n  - disabled: false\n```", "```\n    $ kubectl apply -f Chapter11/03-telemetry-01.yaml\n    telemetry.telemetry.istio.io/envoy-dummy-accesslog-overwrite configured\n    ```", "```\n    % kubectl exec -it curl -n chapter11 -c curl -- curl envoydummy.chapter11\n    Bootstrap Service Mesh Implementation with Istio\n    ```", "```\n    [2022-12-15T00:48:54.972Z] \"GET / HTTP/1.1\" 200 - via_upstream - \"-\" 0 48 0 0 \"-\" \"curl/7.86.0-DEV\" \"2d4eec8a-5c17-9e2c-8699-27a341c21b8b\" \"envoydummy.chapter11\" \"172.17.0.9:10000\" inbound|10000|| 127.0.0.6:49977 172.17.0.9:10000 172.17.0.8:56294 outbound_.80_._.envoydummy.chapter11.svc.cluster.local default\n    ```", "```\n[%START_TIME%] \\\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\\\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% \\\"%UPSTREAM_TRANSPORT_FAILURE_REASON%\\\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \\\"%REQ(X-FORWARDED-FOR)%\\\" \\\"%REQ(USER-AGENT)%\\\" \\\"%REQ(X-REQUEST-ID)%\\\" \\\"%REQ(:AUTHORITY)%\\\" \\\"%UPSTREAM_HOST%\\\" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\\n\n```", "```\n% istioctl install --set profile=demo --set meshConfig.accessLogFile=\"\" --set meshConfig.accessLogFormat=\"\" --set meshConfig.accessLogEncoding=\"JSON\"\n```", "```\n{\n   \"duration\":0,\n   \"start_time\":\"2022-12-15T01:03:02.725Z\",\n   \"bytes_received\":0,\n   \"authority\":\"envoydummy.chapter11\",\n   \"upstream_transport_failure_reason\":null,\n   \"upstream_cluster\":\"inbound|10000||\",\n   \"x_forwarded_for\":null,\n   \"response_code_details\":\"via_upstream\",\n   \"upstream_host\":\"172.17.0.9:10000\",\n   \"user_agent\":\"curl/7.86.0-DEV\",\n   \"request_id\":\"a56200f2-da0c-9396-a168-8dfddf8b623f\",\n   \"response_code\":200,\n   \"route_name\":\"default\",\n   \"method\":\"GET\",\n   \"downstream_remote_address\":\"172.17.0.8:45378\",\n   \"upstream_service_time\":\"0\",\n   \"requested_server_name\":\"outbound_.80_._.envoydummy.chapter11.svc.cluster.local\",\n   \"protocol\":\"HTTP/1.1\",\n   \"path\":\"/\",\n   \"bytes_sent\":48,\n   \"downstream_local_address\":\"172.17.0.9:10000\",\n   \"connection_termination_details\":null,\n   \"response_flags\":\"-\",\n   \"upstream_local_address\":\"127.0.0.6:42313\"\n}\n```", "```\n    % kubectl apply -f Chapter11/03-telemetry-02.yaml\n    telemetry.telemetry.istio.io/curl-accesslog-overwrite created\n    ```", "```\n    % kubectl delete po envoydummy -n chapter11\n    pod \"envoydummy\" deleted\n    ```", "```\n    % kubectl exec -it curl -n chapter11 -c curl -- curl envoydummy.chapter11\n    no healthy upstream\n    ```", "```\n    % kubectl logs -f curl -n chapter11 -c istio-proxy | grep response_flag\n    {\"path\":\"/\",\"response_code\":503,\"method\":\"GET\",\"upstream_cluster\":\"outbound|80||envoydummy.chapter11.svc.cluster.local\",\"user_agent\":\"curl/7.86.0-DEV\",\"connection_termination_details\":null,\"authority\":\"envoydummy.chapter11\",\"x_forwarded_for\":null,\"upstream_transport_failure_reason\":null,\"downstream_local_address\":\"10.98.203.175:80\",\"bytes_received\":0,\"requested_server_name\":null,\"response_code_details\":\"no_healthy_upstream\",\"upstream_service_time\":null,\"request_id\":\"4b39f4ca-ffe3-9c6a-a202-0650b0eea8ef\",\"route_name\":\"default\",\"upstream_local_address\":null,\"response_flags\":\"UH\",\"protocol\":\"HTTP/1.1\",\"start_time\":\"2022-12-15T03:49:38.504Z\",\"duration\":0,\"upstream_host\":null,\"downstream_remote_address\":\"172.17.0.8:52180\",\"bytes_sent\":19}\n    ```", "```\nistioctl proxy-config log [<type>/]<name>[.<namespace>] [flags]\n```", "```\n% istioctl proxy-config log envoydummy.chapter11 -n chapter11 --level debug\n```", "```\n% istioctl analyze --log_output_level validation:debug,validationController:info,ads:debug\n```", "```\n% istioctl admin log | grep -E 'ads|validation'\nads                    ads debugging                                debug\nadsc                   adsc debugging                               info\nvalidation             CRD validation debugging                     debug\nvalidationController   validation webhook controller                info\nvalidationServer       validation webhook server                    info\n```", "```\n% istioctl admin log\nACTIVE    SCOPE      DESCRIPTION               LOG LEVEL\nads                    ads debugging                                debug\nadsc                   adsc debugging                               info\nanalysis               Scope for configuration analysis runtime     info\nauthn                  authn debugging                              info\nauthorization          Istio Authorization Policy                   info\nca                     ca client                                    info\ncontrollers            common controller logic                      info\ndefault                Unscoped logging messages.                   info\ndelta                  delta xds debugging                          info\nfile                   File client messages                         info\ngateway                gateway-api controller                       info\ngrpcgen                xDS Generator for Proxyless gRPC             info\n……\n```", "```\n$ istioctl proxy-config bootstrap envoydummy -n chapter11 -o json >bootstrap-envoydummy.json\n```", "```\n% istioctl proxy-config secret envoydummy -n chapter11\nRESOURCE NAME     TYPE           STATUS     VALID CERT     SERIAL NUMBER                               NOT AFTER                NOT BEFORE\ndefault           Cert \nChain      ACTIVE      true     151990293406794295074718429679 77531899      20XX-12-26T01:02:53Z     20XX-12-25T01:00:53Z\nROOTCA        CA        ACTIVE        true 177195801324177165655021729164749485784     20XX-12-11T05:19:23Z     20XX-12-14T05:19:23Z\n```", "```\n% istioctl proxy-config secret envoydummy -n chapter11 -o json | jq '.dynamicActiveSecrets[0].secret.tlsCertificate.certificateChain.inlineBytes' -r | base64 -d | openssl x509 -noout -text\n```", "```\n% kubectl exec -it envoydummy -n chapter11 -c istio-proxy --  pilot-agent wait\n2022-12-25T05:29:44.310696Z info Waiting for Envoy proxy to be ready (timeout: 60 seconds)...\n2022-12-25T05:29:44.818220Z info Envoy is ready!\n```", "```\n20XX-12-25T05:58:02.225208Z     warning envoy config    StreamAggregatedResources gRPC config stream to xds-grpc closed since 49s ago: 14, connection error: desc = \"transport: Error while dialing dial tcp 10.107.188.192:15012: connect: connection refused\"\n```", "```\n20XX-12-25T06:00:08.082523Z     info    xdsproxy        connected to upstream XDS server: istiod.istio-system.svc:15012\n```", "```\n    % kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml\n    ```", "```\n    apiVersion: config.gatekeeper.sh/v1alpha1\n    kind: Config\n    metadata:\n      name: config\n      namespace: gatekeeper-system\n    spec:\n      sync:\n        syncOnly:\n          - group: \"\"\n            version: \"v1\"\n            kind: \"Namespace\"\n          - group: \"\"\n            version: \"v1\"\n            kind: \"Pod\"\n          - group: \"\"\n            version: \"v1\"\n            kind: \"Service\"\n          - group: \"networking.istio.io\"\n            version: \"v1alpha3\"\n            kind: \"Gateway\"\n          - group: \"networking.istio.io\"\n            version: \"v1alpha3\"\n            kind: \"VirtualService\"\n          - group: \"networking.istio.io\"\n            version: \"v1alpha3\"\n            kind: \"DestinationRule\"\n          - group: \"authentication.istio.io\"\n            version: \"v1alpha1\"\n            kind: \"Policy\"\n          - group: \"rbac.istio.io\"\n            version: \"v1alpha1\"\n            kind: \"ServiceRoleBinding\"\n    ```", "```\n    % kubectl apply -f Chapter11/05-GatekeeperConfig.yaml\n    config.config.gatekeeper.sh/config created\n    ```", "```\napiVersion: templates.gatekeeper.sh/v1beta1\nkind: ConstraintTemplate\nmetadata:\n  name: istiorequiredlabels\n  annotations:\n    description: Requires all resources to contain a specified label with a value\n      matching a provided regular expression.\n```", "```\nspec:\n  crd:\n    spec:\n      names:\n        kind: istiorequiredlabels\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          properties:\n            message:\n              type: string\n            labels:\n              type: array\n              items:\n                type: object\n                properties:\n                  key:\n                    type: string\n```", "```\n targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package istiorequiredlabels\n        get_message(parameters, _default) = msg {\n          not parameters.message\n          msg := _default\n        }\n        get_message(parameters, _default) = msg {\n          msg := parameters.message\n        }\n        violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] {\n          provided := {label | input.review.object.metadata.labels[label]}\n          required := {label | label := input.parameters.labels[_].key}\n          missing := required - provided\n          count(missing) > 0\n          def_msg := sprintf(\"you must provide labels: %v\", [missing])\n          msg := get_message(input.parameters, def_msg)\n        }\n```", "```\n% kubectl apply -f Chapter11/gatekeeper/01-istiopodlabelconstraint_template.yaml\nconstrainttemplate.templates.gatekeeper.sh/istiorequiredlabels created\n```", "```\n    apiVersion: constraints.gatekeeper.sh/v1beta1\n    kind: istiorequiredlabels\n    metadata:\n      name: mesh-pods-must-have-app-and-version\n    spec:\n      enforcementAction: deny\n      match:\n        kinds:\n          - apiGroups: [\"\"]\n            kinds: [\"Pod\"]\n        namespaceSelector:\n          matchExpressions:\n            - key: istio-injection\n              operator: In\n              values: [\"enabled\"]\n      parameters:\n        message: \"All pods must have an `app and version` label\"\n        labels:\n          - key: app\n          - key: version\n    ```", "```\n    % kubectl apply -f Chapter11/gatekeeper/01-istiopodlabelconstraint.yaml\n    istiorequiredlabels.constraints.gatekeeper.sh/mesh-pods-must-have-app-and-version created\n    ```", "```\n    % kubectl apply -f Chapter11/06-envoy-proxy-chaos.yaml -n chapter11\n    service/envoydummy created\n    Error from server (Forbidden): error when creating \"Chapter11/01-envoy-proxy.yaml\": admission webhook \"validation.gatekeeper.sh\" denied the request: [all-must-have-owner] All pods must have an `app` label\n    ```", "```\npackage istio.allowedistioserviceportname\n        get_message(parameters, _default) = msg {\n          not parameters.message\n          msg := _default\n        }\n        get_message(parameters, _default) = msg {\n          msg := parameters.message\n        }\n        violation[{\"msg\": msg, \"details\": {\"missing_prefixes\": prefixes}}] {\n          service := input.review.object\n          port := service.spec.ports[_]\n          prefixes := input.parameters.prefixes\n          not is_prefixed(port, prefixes)\n          def_msg := sprintf(\"service %v.%v port name missing prefix\",\n            [service.metadata.name, service.metadata.namespace])\n          msg := get_message(input.parameters, def_msg)\n        }\n        is_prefixed(port, prefixes) {\n          prefix := prefixes[_]\n          startswith(port.name, prefix)\n        }\n```", "```\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: AllowedIstioServicePortName\nmetadata:\n  name: port-name-constraint\nspec:\n  enforcementAction: deny\n  match:\n    kinds:\n      - apiGroups: [\"\"]\n        kinds: [\"Service\"]\n    namespaceSelector:\n      matchExpressions:\n        - key: istio-injection\n          operator: In\n          values: [\"enabled\"]\n  parameters:\n    message: \"All services declaration must have port name will one of following  prefix http-, http2-, grpc-, mongo-,redis-\"\n    prefixes: [\"http-\", \"http2-\",\"grpc-\",\"mongo-\",\"redis-\"]\n```", "```\n% kubectl apply -f Chapter11/gatekeeper/02-istioportconstraints_template.yaml\nconstrainttemplate.templates.gatekeeper.sh/allowedistioserviceportname created\n% kubectl apply -f Chapter11/gatekeeper/02-istioportconstraints.yaml\nallowedistioserviceportname.constraints.gatekeeper.sh/port-name-constraint configured\n```", "```\nspec:\n  ports:\n  - port: 80\n    targetPort: 10000\n  selector:\n    name: envoydummy\n```", "```\n% kubectl apply -f Chapter11/07-envoy-proxy-chaos.yaml\npod/envoydummy created\nError from server (Forbidden): error when creating \"Chapter11/07-envoy-proxy-chaos.yaml\": admission webhook \"validation.gatekeeper.sh\" denied the request: [port-name-constraint] All services declaration must have port name with one of following prefix http-, http2-, grpc-, mongo-, redis-\n```", "```\nspec:\n  ports:\n  - port: 80\n    targetPort: 10000\n    name: http-envoy\n  selector:\n    name: envoydummy\n```"]