["```\n# nginx-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-hello\n  labels:\n    app: test\nimmutable: false\ndata:\n  hello1.html: |\n    <html>\n      hello world 1\n    </html>\n  hello2.html: |\n    <html>\n      hello world 2\n    </html> \n```", "```\n# nginx-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-hello\n  labels:\n    app: test\nspec:\n  containers:\n    - name: nginx\n      image: nginx:1.14.2\n      ports:\n        - containerPort: 80\n      volumeMounts:\n        - name: nginx-hello\n          mountPath: \"/usr/share/nginx/html/hello\"\n  volumes:\n    - name: nginx-hello\n      configMap:\n        name: nginx-hello \n```", "```\n$ kubectl apply -f nginx-configmap.yaml\nconfigmap/nginx-hello created\n$ kubectl apply -f nginx-pod.yaml\npod/nginx-hello created \n```", "```\n$ kubectl get pod,cm\nNAME              READY   STATUS    RESTARTS   AGE\npod/nginx-hello   1/1     Running   0          7m26s\nNAME                         DATA   AGE\nconfigmap/kube-root-ca.crt   1      7d17h\nconfigmap/nginx-hello        2      7m31s \n```", "```\n$ kubectl exec -t pod/nginx-hello -- ls -al /usr/share/nginx/html/hello/\ntotal 12\n...<removed for brevity>...\nlrwxrwxrwx 1 root root   18 Sep  7 21:19 hello1.html -> ..data/hello1.html\nlrwxrwxrwx 1 root root   18 Sep  7 21:19 hello2.html -> ..data/hello2.html \n```", "```\n$ kubectl port-forward nginx-hello 8080:80\nForwarding from 127.0.0.1:8080 -> 80\nForwarding from [::1]:8080 -> 80 \n```", "```\n$ curl 127.0.0.1:8080/hello/hello1.html\n<html>\n  hello world 1\n</html>\n$ curl 127.0.0.1:8080/hello/hello2.html\n<html>\n  hello world 2\n</html> \n```", "```\n    ...\n        - name: nginx\n          image: nginx:1.14.2\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: fc-vol\n              mountPath: \"/usr/share/nginx/html/hello\"\n      volumes:\n        - name: fc-vol\n          fc:\n            targetWWNs:\n              - 500a0982991b8dc5\n              - 500a0982891b8dc5\n            lun: 2\n            fsType: ext4\n            readOnly: true \n    ```", "```\n    ...\n      containers:\n        - name: nginx\n          image: nginx:1.14.2\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: nfs-volume\n              mountPath: \"/usr/share/nginx/html/hello\"\n      volumes:\n        - name: nfs-volume\n          nfs:\n            server: nfs.corp.mycompany.org\n            path: /k8s-nginx-hello\n            readOnly: true \n    ```", "```\n$ kubectl get persistentvolume\nNo resource found \n```", "```\n$ kubectl get persistentvolume\nNo resource found\n$ kubectl get persistentvolumes\nNo resource found\n$ kubectl get pv\nNo resource found \n```", "```\n---\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-hostpath\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: \"/mnt/data\" \n```", "```\n$ kubectl apply -f pv-hostpath.yaml\npersistentvolume/pv-hostpath created \n```", "```\n# pv-nfs.yaml\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-nfs\nspec:\n  capacity:\n    storage: 5Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Recycle\n  storageClassName: slow\n  mountOptions:\n    - hard\n    - nfsvers=4.1\n  nfs:\n    path: /appshare\n    server: nfs.example.com \n```", "```\n# pv-block.yaml\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-block\nspec:\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Block\n  persistentVolumeReclaimPolicy: Retain\n  fc:\n    targetWWNs: [\"50060e801049cfd1\"]\n    lun: 0\n    readOnly: false \n```", "```\n$ kubectl get persistentvolumeclaims\nNo resources found in default namespace. \n```", "```\n$ kubectl get pvc\nNo resources found in default namespace. \n```", "```\n# pv.yaml\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-hostpath-pv\n  labels:\n    type: hostpath\n    env: prod\nspec:\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: \"/tmp/test\"\n  storageClassName: slow \n```", "```\n$ kubectl apply -f pv.yaml\npersistentvolume/my-hostpath-pv created\n$ kubectl get pv\nNAME             CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   VOLUMEATTRIBUTESCLASS   REASON   AGE\nmy-hostpath-pv   1Gi        RWO            Retain           Available           slow           <unset>                          3s \n```", "```\n$ kubectl apply -f pv-ns.yaml\nnamespace/pv-ns created \n```", "```\n# pvc.yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-hostpath-pvc\n  namespace: pv-ns\nspec:\n  resources:\n    requests:\n      storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  selector:\n    matchLabels:\n      type: hostpath\n      env: prod\n  storageClassName: slow \n```", "```\n$ kubectl apply -f pvc.yaml\npersistentvolumeclaim/my-hostpath-pvc created\n$ kubectl get pvc -n pv-ns\nNAME              STATUS   VOLUME           CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\nmy-hostpath-pvc   Bound    my-hostpath-pv   1Gi        RWO            slow           <unset>                 2m29s \n```", "```\n# pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  namespace: pv-ns\nspec:\n  containers:\n    - image: nginx\n      name: nginx\n      volumeMounts:\n        - mountPath: \"/var/www/html\"\n          name: mypersistentvolume\n  volumes:\n    - name: mypersistentvolume\n      persistentVolumeClaim:\n        claimName: my-hostpath-pvc \n```", "```\n$ kubectl apply -f pod.yaml\npod/nginx created\n$ kubectl get pvc,pod -n pv-ns\nNAME                                    STATUS   VOLUME           CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\npersistentvolumeclaim/my-hostpath-pvc   Bound    my-hostpath-pv   1Gi        RWO            slow           <unset>                 4m32s\nNAME        READY   STATUS    RESTARTS   AGE\npod/nginx   1/1     Running   0          13s \n```", "```\n$ kubectl api-resources --namespaced=false |grep -i volume\npersistentvolumes                 pv           v1                                false        PersistentVolume\nvolumeattachments                              storage.k8s.io/v1                 false        VolumeAttachment \n```", "```\n$ kubectl get pod,pvc -n pv-ns\nNAME        READY   STATUS    RESTARTS   AGE\npod/nginx   1/1     Running   0          30m\nNAME                                    STATUS   VOLUME           CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\npersistentvolumeclaim/my-hostpath-pvc   Bound    my-hostpath-pv   1Gi        RWO            slow           <unset>                 34m \n```", "```\n$ kubectl delete pod nginx -n pv-ns\npod \"nginx\" deleted\n$ kubectl delete pvc my-hostpath-pvc -n pv-ns\npersistentvolumeclaim \"my-hostpath-pvc\" deleted \n```", "```\n$ kubectl get pv\nNAME             CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS     CLAIM                   STORAGECLASS   VOLUMEATTRIBUTESCLASS   REASON   AGE\nmy-hostpath-pv   1Gi        RWO            Retain           Released   pv-ns/my-hostpath-pvc   slow           <unset>                          129m \n```", "```\n$ kubectl patch pv/my-hostpath-pv -p '{\"spec\":{\"persistentVolumeReclaimPolicy\":\"Delete\"}}'\npersistentvolume/my-hostpath-pv patched\nSince the PV is not bound to any PVC, the PV will be instantly deleted due to the Delete reclaim policy:\n$ kubectl get pv\nNo resources found \n```", "```\n$ kubectl get sc\nNAME                 PROVISIONER                RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE\nstandard (default)   k8s.io/minikube-hostpath \n```", "```\n$ kubectl get storageclasses standard  -o yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\n...<removed for brevity>...\n  name: standard\n  resourceVersion: \"290\"\n  uid: f41b765f-301f-4781-b9d0-46aec694336b\nprovisioner: k8s.io/minikube-hostpath\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate \n```", "```\n$ kubectl get storageclass\n$ kubectl get storageclasses\n$ kubectl get sc \n```", "```\n# gce-pd-sc.yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: slow\nprovisioner: kubernetes.io/gce-pd\nparameters:\n  type: pd-standard \n```", "```\n$ kubectl create ns dynamicstorage\nnamespace/dynamicstorage created \n```", "```\n$ kubectl get sc\nNAME                 PROVISIONER                RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE\nstandard (default)   k8s.io/minikube-hostpath   Delete          Immediate           false                  21d \n```", "```\n# pvc-dynamic.yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-dynamic-hostpath-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: standard # VERY IMPORTANT !\n  resources:\n    requests:\n      storage: 1Gi\n  selector:\n    matchLabels:\n      type: hostpath\n      env: prod \n```", "```\n$ kubectl apply -f pvc-dynamic.yaml -n dynamicstorage\npersistentvolumeclaim/my-dynamic-hostpath-pvc created \n```", "```\n$ kubectl get pod,pvc,pv -n dynamicstorage\nNAME                                            STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\npersistentvolumeclaim/my-dynamic-hostpath-pvc   Bound    pvc-4597ab27-c894-40de-a7ac-1b6ca961bcdc   1Gi        RWO            standard       <unset>                 7s\nNAME                                                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                    STORAGECLASS   VOLUMEATTRIBUTESCLASS   REASON   AGE\npersistentvolume/pvc-4597ab27-c894-40de-a7ac-1b6ca961bcdc   1Gi        RWO            Delete           Bound    dynamicstorage/my-dynamic-hostpath-pvc   standard       <unset>                          7s \n```", "```\n# pod-with-dynamic-pvc.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-dynamic-storage\nspec:\n  containers:\n    - image: nginx\n      name: nginx\n      volumeMounts:\n        - mountPath: \"/var/www/html\"\n          name: mypersistentvolume\n  volumes:\n    - name: mypersistentvolume\n      persistentVolumeClaim:\n        claimName: my-dynamic-hostpath-pvc \n```", "```\n$ kubectl apply -f pod-with-dynamic-pvc.yaml -n dynamicstorage\npod/nginx-dynamic-storage created\n$ kubectl get pod,pvc,pv -n dynamicstorage\nNAME                        READY   STATUS    RESTARTS   AGE\npod/nginx-dynamic-storage   1/1     Running   0          45s\nNAME                                            STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE\npersistentvolumeclaim/my-dynamic-hostpath-pvc   Bound    pvc-4597ab27-c894-40de-a7ac-1b6ca961bcdc   1Gi        RWO            standard       <unset>                 7m39s\nNAME                                                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                    STORAGECLASS   VOLUMEATTRIBUTESCLASS   REASON   AGE\npersistentvolume/pvc-4597ab27-c894-40de-a7ac-1b6ca961bcdc   1Gi        RWO            Delete           Bound    dynamicstorage/my-dynamic-hostpath-pvc   standard       <unset>                          7m39s \n```", "```\n$ kubectl delete po nginx-dynamic-storage -n dynamicstorage\npod \"nginx-dynamic-storage\" deleted\n$ kubectl delete pvc my-dynamic-hostpath-pvc -n dynamicstorage\npersistentvolumeclaim \"my-dynamic-hostpath-pvc\" deleted\n$ kubectl get pod,pvc,pv -n dynamicstorage\nNo resources found \n```", "```\n# pv-cloning.yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloned-pvc\n  namespace: mynamespace\nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: custom-storage-class\n  resources:\n    requests:\n      storage: 5Gi\n  dataSource:\n    kind: PersistentVolumeClaim\n    name: original-pvc \n```", "```\n# storageclass-expandable.yaml\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: expadable-sc\nprovisioner: vendor-name.example/magicstorage\n...<removed for brevity>...\nallowVolumeExpansion: true \n```"]