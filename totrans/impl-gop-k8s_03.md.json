["```\n$ git version\n```", "```\ngit version 2.45.1\n```", "```\n    Chapter_3 as the current working directory, type cd Chapter_3 into the command prompt.\n    ```", "```\n    $ git init\n    ```", "```\n    hint: Using 'master' as the name for the initial branch. This default branch name\n    hint: is subject to change. To configure the initial branch name to use in all\n    …\n    hint:   git branch -m <name>\n    Initialized empty Git repository in /home/pietro/Chapter_3/.git/\n    ```", "```\n    .git directory, you can use the ls -a ./.git command. This will display all the files and subdirectories within the .git directory, providing insight into the structure of the initialized Git repository:\n\n    ```", "```\n\n    The output should look like the following:\n\n    ```", "```\n\n    ```", "```\n    $ git clone https://github.com/PacktPublishing/Implementing-GitOps-with-Kubernetes\n    ```", "```\n    Cloning into 'Implementing-GitOps-with-Kubernetes'...\n    remote: Enumerating objects: 151, done.\n    remote: Compressing objects: 100% (94/94), done.\n    ...\n    Resolving deltas: 100% (32/32), done.\n    ```", "```\n    $ git config --global user.email \"you@example.com\"\n    git status command to see the current state of your files, whether they are untracked, modified, or ready to be committed:\n\n    ```", "```\n\n    The response to this command should look something like this:\n\n    ```", "```\n\n    This indicates that your working directory is clean, meaning that no tracked files have been modified and no untracked files are present. Additionally, it confirms that you’re on a specific branch (`master`) that hasn’t diverged from its remote counterpart.\n    ```", "```\n    README file in the current working directory.\n    ```", "```\n    On branch master\n    No commits yet\n    Untracked files:\n       (use \"git add <file>...\" to include in what will be committed)\n           README\n    README file appears with the untracked status because Git recognizes it as a file that is not present in the last commit and that hasn’t been prepared for inclusion in future commits. The untracked status prevents Git from automatically adding files that might not be intended for version control, such as binary files. To include the README file in your project’s version history, you need to explicitly track it with Git, ensuring it’s considered for subsequent commit snapshots.\n    ```", "```\n    git status command again:\n\n    ```", "```\n\n    ```", "```\n    git commit command should be like the following:\n\n    ```", "```\n\n    Whenever you add, modify, or delete one or more files (or non-empty folders), you’ll need to repeat *steps 5* and *7* to ensure that those changes are properly staged and committed.\n    ```", "```\n    ## This repository will be used to show GitOps and GitHub capabilities\n    ```", "```\n    name: Create Docker Image CI\n    on:\n      push:\n        branches: [ main ]\n      pull_request:\n        branches: [ main ]\n    jobs:\n      build:\n        runs-on: ubuntu-latest\n        steps:\n        - uses: actions/checkout@v4.1.1\n        - name: Build the Docker image\n          run: docker build . --file dockerfile --tag my-image-name:$(date +%s)\n    ```"]