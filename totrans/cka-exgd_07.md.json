["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: multi-container-pod\n  labels:\n      app: multi-container\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n  - name: busybox-sidecar\n    image: busybox:latest\n    command: ['sh', '-c', 'while true; do sleep 3600; done;']\n```", "```\npod/multi-container-pod created\n```", "```\nkubectl exec multi-container-pod -c busybox-sidecar -- wget http://localhost:80\n```", "```\nkubectl exec multi-container-pod -c busybox-sidecar -- cat index.xhtml\n```", "```\nkubectl run nginx --image=nginx –-port=8080\n```", "```\npod/nginx created\n```", "```\n  NAME    READY   STATUS             RESTARTS   AGE   IP           \nNODE       NOMINATED NODE   READINESS GATES\nnginx   1/1     running   0          34s   172.17.0.4   \nminikube   <none>           <none>\n```", "```\nk get pods -o wide\n```", "```\nkubectl get node minikube -o json | jq .spec.podCIDR\n```", "```\n10.244.0.0/24\n```", "```\nkubectl create deployment nginx --image=nginx --replicas=2\n```", "```\nkubectl get deploy nginx -o wide\n```", "```\nkubectl get pods\n```", "```\n kubectl expose deployment nginx --type=ClusterIP --port 8080 --name=melon-service --target-port 80\n```", "```\nservice/melon-service exposed\n```", "```\n apiVersion: v1\n kind: Service\n metadata:\n   name: melon-service\n spec:\n   type: ClusterIP\nselector: \n     app: nginx\n  ports:\n  - protocol: TCP\n    port: 8080\n    targetPort: 80\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        ports:\n        - containerPort: 80\n```", "```\nk get ep melon-service\n```", "```\nkubectl get svc  melon-service -o yaml\n```", "```\nkubectl create deployment webfront-app --image=nginx --replicas=2\n```", "```\ndeployment.apps/webfront-app created\n```", "```\nkubectl expose deployment webfront-app --port=8080 --target-port=80 --type=NodePort\n```", "```\nservice/webfront-app exposed\n```", "```\nkubectl get svc webfront-app -o wide\n```", "```\nkubectl get node -o wide\n```", "```\n192.168.65.4:31400\n```", "```\nkubectl run -it sandbox --image=nginx --rm --restart=Never -- curl -Is http://192.168.65.4:31400\n```", "```\n kubectl get nodes -o jsonpath='{.items[*].status.addresses[?( @.type==\"ExternalIP\")].address}'\n```", "```\n kubectl get nodes -o jsonpath='{.items[*].status.addresses[?( @.type==\" InternalIP \")].address}'\n```", "```\ncurl -Is http://192.168.65.4:31400\n```", "```\ncurl -Is http://<node external IP>:<node port>\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: webfront-app\n  labels:\n    app: webfront-app\nspec:\n  ports:\n  - port: 8080\n    targetPort: 80\n  selector:\n    app: webfrontapp\n  type: NodePort\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: packt-svc\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n    targetPort: 8080\n  selector:\n    app: my-packt-app\n```", "```\nkubectl expose deployment nginx --port=80 --target-port=8080 \\\n        --name=packt-svc --type=LoadBalancer\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-packt-svc\n  namespace: prod\nspec:\n  type: ExternalName\n  externalName: my.melonapp.packt.com\n```", "```\nkubectl get services --all-namespaces\n```", "```\nkubectl get svcs -A\n```", "```\nkubectl get svc <service-name> -n <namespace>\n```", "```\nkubectl describe svc kube-dns -n kube-system\n```", "```\nkubectl get endpoints melon-service\n```", "```\nNAME            ENDPOINTS                   AGE\nmelon-service   10.1.0.32:80,10.1.0.33:80   5h7m\n```", "```\nkubectl get ep --all-namespaces\n```", "```\nkubectl get ep <service-name> -n <namespace>\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minimal-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: packt-nginx\n  rules:\n  - http:\n      paths:\n      - path: /packs\n        pathType: Prefix\n        backend:\n          service:\n            name: test\n            port:\n              number: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n  name: nginx-example\n  annotations:\n    ingressclass.kubernetes.io/is-default-class: \"true\"\nspec:\n  controller: k8s.io/ingress-nginx\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\n  name: packt-ingress\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: book.packt.com\n    http:\n      paths:\n      - path: /packt-book\n        pathType: Prefix\n        backend:\n          service:\n            name: packt-svc\n            port:\n              number: 80\n```", "```\nkubectl get pods -n kube-system\n```", "```\nkubectl get pods -n kube-system | grep coredns\n```", "```\n coredns-6d4b75cb6d-4xcmf          1/1     Running   0          82m\n coredns-6d4b75cb6d-kj6cq          1/1     Running   0          82m\n```", "```\nkubectl describe deploy coredns -n kube-system \n```", "```\nkubectl scale deploy coredns -n kube-system --replicas=1\n```", "```\ndeployment.apps/coredns scaled\n```", "```\nNAME      READY   UP-TO-DATE   AVAILABLE   AGE\ncoredns   1/1 1 1 11h\n```", "```\nkubectl scale deploy coredns -n kube-system --replicas=4\n```", "```\nkubectl get pods -n kube-system\n```", "```\nk describe pod coredns-6d4b75cb6d-4h89j -n kube-system\n```", "```\n/etc/coredns/Corefile\n```", "```\nkubectl get configmaps -n kube-system\n```", "```\nk describe configmap coredns -n kube-system\n```", "```\n<your-pod-ip-address>.<namespace-name>.pod.cluster.local\n```", "```\nkubectl run nginx --image=nginx –-port=8080\n```", "```\nNAME                  READY   STATUS    RESTARTS   AGE\nnginx                 1/1     Running   0          3s\n```", "```\nkubectl get pod nginx -o wide\n```", "```\n10-1-0-9.default.pod.cluster.local\n```", "```\nkubectl run -it busybox --image=busybox:latest \nkubect exec busybox -- nslookup 10.1.0.9\n```", "```\nkubectl run -it sandbox --image=busybox:latest --rm --restart=Never -- nslookup 10.1.0.9\n```", "```\nkubectl run -it sandbox --image=busybox:latest --rm --restart=Never -- nslookup 10-1-0-9.default.pod.cluster.local\n```", "```\nServer:    10.96.0.10\nAddress 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local\n\nName:      10-1-0-9.default.pod.cluster.local\nAddress 1: 10.1.0.9\npod \"sandbox\" deleted\n```", "```\n$ kubectl run -it test-nginx --image=nginx --rm --restart=Never -- curl -Is 10-1-0-9.default.pod.cluster.local\n```", "```\n<service-name>.<namespace-name>.svc.cluster.local\n```", "```\nkubectl get svc -n kube-system\n```", "```\nkubectl run -it sandbox --image=busybox:latest --rm --restart=Never -- nslookup 10.96.0.10\n```", "```\nkube-dns.kube-system.svc.cluster.local\n```", "```\nkubectl expose pod nginx --name=nginx-svc --port 80\n```", "```\nservice/nginx-svc exposed\n```", "```\nnginx-svc.default.svc.cluster.local\n```", "```\nkubectl get svc \n```", "```\nNAME        TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   \nAGE   SELECTOR\nnginx-svc   ClusterIP   10.107.75.83   <none>        80/TCP    \n59m  run=nginx\n```", "```\nkubectl run -it sandbox --image=busybox:latest --rm --restart=Never -- nslookup 10.107.75.83\n```", "```\nkubectl run -it sandbox --image=busybox:latest --rm --restart=Never -- nslookup nginx-svc.default.svc.cluster.local\n```", "```\nServer:    10.96.0.10\nAddress 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local\n\nName:      nginx-svc.default.svc.cluster.local\nAddress 1: 10.107.75.83 nginx-svc.default.svc.cluster.local\npod \"sandbox\" deleted\n```", "```\nkubectl run -it challenge-nginx --image=nginx --rm --restart=Never -- curl -Is http://nginx-svc.default.svc.cluster.local\n```"]