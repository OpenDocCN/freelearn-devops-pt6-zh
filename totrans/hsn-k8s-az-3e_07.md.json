["```\n    git clone https: //github.com/PacktPublishing/Hands-on-Kubernetes-on-Azure-Third-Edition/\n    ```", "```\n    cd Hands-On-Kubernetes-on-Azure/Chapter03/\n    ```", "```\n    kubectl apply -f redis-master-deployment.yaml\n    ```", "```\n    1   apiVersion: apps/v1\n    2   kind: Deployment\n    3   metadata:\n    4     name: redis-master\n    5     labels:\n    6       app: redis\n    7   spec:\n    8     selector:\n    9       matchLabels:\n    10        app: redis\n    11        role: master\n    12        tier: backend\n    13    replicas: 1\n    14    template:\n    15      metadata:\n    16        labels:\n    17          app: redis\n    18          role: master\n    19          tier: backend\n    20      spec:\n    21        containers:\n    22        - name: master\n    23          image: k8s.gcr.io/redis:e2e \n    24          resources:\n    25            requests:\n    26              cpu: 100m\n    27              memory: 100Mi\n    28            limits:\n    29              cpu: 250m\n    30              memory: 1024Mi\n    31          ports:\n    32          - containerPort: 6379\n    ```", "```\nkubectl get all\n```", "```\nkubectl describe deployment/redis-master\n```", "```\nkubectl delete deployment/redis-master\n```", "```\ndeployment.apps \"redis-master\" deleted\n```", "```\nmaxmemory 2mb\nmaxmemory-policy allkeys-lru\n```", "```\n    maxmemory 2mb\n    maxmemory-policy allkeys-lru\n    ```", "```\n    kubectl create configmap \\\n      example-redis-config --from-file=redis-config\n    ```", "```\n    configmap/example-redis-config created\n    ```", "```\n    kubectl describe configmap/example-redis-config\n    ```", "```\n    kubectl delete configmap/example-redis-config\n    ```", "```\n    1  apiVersion: v1\n    2  data:\n    3    redis-config: |-\n    4      maxmemory 2mb\n    5      maxmemory-policy allkeys-lru\n    6  kind: ConfigMap\n    7  metadata:\n    8    name: example-redis-config\n    ```", "```\n    kubectl create -f example-redis-config.yaml\n    ```", "```\n    configmap/example-redis-config created\n    ```", "```\n    kubectl describe configmap/example-redis-config\n    ```", "```\n    1  apiVersion: apps/v1\n    2  kind: Deployment\n    3  metadata:\n    4    name: redis-master\n    5    labels:\n    6      app: redis\n    7  spec:\n    8    selector:\n    9      matchLabels:\n    10       app: redis\n    11       role: master\n    12       tier: backend\n    13   replicas: 1\n    14   template:\n    15     metadata:\n    16       labels:\n    17         app: redis\n    18         role: master\n    19         tier: backend\n    20     spec:\n    21       containers:\n    22       - name: master\n    23         image: k8s.gcr.io/redis:e2e\n    24         command:\n    25         - redis-server\n    26         - \"/redis-master/redis.conf\"\n    27         env:\n    28         - name: MASTER\n    29           value: \"true\"\n    30         volumeMounts:\n    31         - mountPath: /redis-master\n    32           name: config\n    33         resources:\n    34           requests:\n    35             cpu: 100m\n    36             memory: 100Mi\n    37         ports:\n    38         - containerPort: 6379\n    39       volumes:\n    40         - name: config\n    41           configMap:\n    42             name: example-redis-config\n    43             items:\n    44             - key: redis-config\n    45               path: redis.conf\n    ```", "```\n    kubectl create -f redis-master-deployment_Modified.yaml\n    ```", "```\n    deployment.apps/redis-master created\n    ```", "```\n    kubectl get pods\n    ```", "```\n    kubectl exec -it redis-master-<pod-id> -- redis-cli\n    ```", "```\n    CONFIG GET maxmemory\n    ```", "```\n    CONFIG GET maxmemory-policy\n    ```", "```\nkubectl apply -f redis-master-service.yaml\n```", "```\n1   apiVersion: v1\n2   kind: Service\n3   metadata:\n4     name: redis-master\n5     labels:\n6       app: redis\n7       role: master\n8       tier: backend\n9   spec:\n10   ports:\n11   - port: 6379\n12     targetPort: 6379\n13    selector:\n14      app: redis\n15      role: master\n16      tier: backend\n```", "```\nkubectl get service\n```", "```\nkubectl get pods\n#note the name of your redis-master pod\nkubectl exec -it redis-master-<pod-id> -- bash\nping redis-master\n```", "```\n    kubectl apply -f redis-replica-deployment.yaml\n    ```", "```\n    kubectl get all\n    ```", "```\n    1   apiVersion: apps/v1\n    2   kind: Deployment\n    3   metadata:\n    4     name: redis-replica\n    5     labels:\n    6       app: redis\n    7   spec:\n    8     selector:\n    9       matchLabels:\n    10       app: redis\n    11       role: replica\n    12       tier: backend\n    13   replicas: 2\n    14   template:\n    15     metadata:\n    16       labels:\n    17         app: redis\n    18         role: replica\n    19         tier: backend\n    20     spec:\n    21       containers:\n    22       - name: replica\n    23         image: gcr.io/google-samples/gb-redis-follower:v1 24         resources:\n    25           requests:\n    26             cpu: 100m\n    27             memory: 100Mi\n    28         env:\n    29         - name: GET_HOSTS_FROM\n    30           value: dns\n    31         ports:\n    32         - containerPort: 6379\n    ```", "```\n    kubectl apply -f redis-replica-service.yaml\n    ```", "```\n    kubectl get service\n    ```", "```\nkubectl apply -f frontend-deployment.yaml\n```", "```\nkubectl get pods\n```", "```\n1  apiVersion: apps/v1\n2   kind: Deployment\n3   metadata:\n4     name: frontend\n5     labels:\n6       app: guestbook\n7   spec:\n8     selector:\n9       matchLabels:\n10        app: guestbook\n11        tier: frontend\n12    replicas: 3\n13    template:\n14      metadata:\n15        labels:\n16          app: guestbook\n17          tier: frontend\n18      spec:\n19        containers:\n20        - name: php-redis\n21          image: gcr.io/google-samples/gb-frontend:v4\n22          resources:\n23            requests:\n24              cpu: 100m\n25              memory: 100Mi\n26          env:\n27          - name: GET_HOSTS_FROM\n28            value: env\n29          - name: REDIS_SLAVE_SERVICE_HOST\n30            value: redis-replica\n31          ports:\n32          - containerPort: 80\n```", "```\n1   apiVersion: v1\n2   kind: Service\n3   metadata:\n4     name: frontend\n5     labels:\n6       app: guestbook\n7       tier: frontend\n8   spec:\n9     type: LoadBalancer # line uncommented\n10    ports:\n11    - port: 80\n12    selector:\n13      app: guestbook\n14      tier: frontend\n```", "```\n    kubectl create -f frontend-service.yaml\n    ```", "```\n    kubectl get service -w\n    ```", "```\nkubectl delete deployment frontend redis-master redis-replica\nkubectl delete service frontend redis-master redis-replica\n```", "```\n    helm repo add bitnami \\\n      https://charts.bitnami.com/bitnami\n    ```", "```\n    helm install handsonakswp bitnami/wordpress\n    ```", "```\nkubectl get pods\n```", "```\nkubectl get statefulset -o yaml > mariadbss.yaml\ncode mariadbss.yaml\n```", "```\n1   apiVersion: v1\n2   items:\n3   - apiVersion: apps/v1\n4     kind: StatefulSet\n...\n285           volumeMounts:\n286           - mountPath: /bitnami/mariadb\n287             name: data\n...           \n306 volumeClaimTemplates:\n307 - apiVersion: v1\n308   kind: PersistentVolumeClaim\n309   metadata:\n310     creationTimestamp: null\n311     labels:\n312       app.kubernetes.io/component: primary\n313       app.kubernetes.io/instance: handsonakswp\n314       app.kubernetes.io/name: mariadb\n315     name: data\n316   spec:\n317     accessModes:\n318     - ReadWriteOnce\n319     resources:\n320       requests:\n321         storage: 8Gi\n322     volumeMode: Filesystem\n...\n```", "```\nkubectl get storageclass\n```", "```\nkubectl get pvc\n```", "```\nhelm ls\n```", "```\nhelm status handsonakswp\n```", "```\nkubectl get all\n```", "```\nhelm delete handsonakswp\n```", "```\nkubectl delete pvc --all\n```"]