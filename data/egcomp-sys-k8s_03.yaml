- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: K3s Advanced Configurations and Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K3s 高级配置与管理
- en: This chapter covers more advanced configurations for your K3s clusters. By default,
    K3s includes a load balancer called KlipperLB, but it has some limitations. For
    example, you don't have to repeat a port while creating a service, and it affects
    the way that you use a regular load balancer and NodePort service. It works well
    for simple deployments. In case you need another load balancer instead of Klipper,
    we cover how to install **MetalLB**, a bare metal load balancer. Then, we cover
    how to use advanced storage configuration to support read/write access modes for
    storage volumes with Longhorn, substituting the default local storage class provided
    by K3s. After this, we will do some common cluster management, including upgrading
    K3s, backing up, and restoring the cluster.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了 K3s 集群的更多高级配置。默认情况下，K3s 包含一个名为 KlipperLB 的负载均衡器，但它有一些限制。例如，在创建服务时，你不必重复端口号，这会影响你使用常规负载均衡器和
    NodePort 服务的方式。它适用于简单的部署。如果你需要替代 Klipper 的其他负载均衡器，我们将介绍如何安装**MetalLB**，一个裸金属负载均衡器。接着，我们将讲解如何使用高级存储配置，支持
    Longhorn 存储卷的读写访问模式，替代 K3s 提供的默认本地存储类。之后，我们将进行一些常见的集群管理，包括升级 K3s、备份和恢复集群。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主要内容：
- en: Bare metal load balancer with MetalLB
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MetalLB 的裸金属负载均衡器
- en: Setting up Longhorn for storage
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Longhorn 作为存储
- en: Upgrading your cluster
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级你的集群
- en: Backing up and restoring your K3s configurations
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份和恢复你的 K3s 配置
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you need the following:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节，你需要以下内容：
- en: Raspberry Pi 4 model B with 4 GB RAM (minimum suggested)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配备 4 GB RAM（最小推荐）的 Raspberry Pi 4 型 B
- en: A cloud server or VM with Ubuntu 20.04 LTS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台运行 Ubuntu 20.04 LTS 的云服务器或虚拟机
- en: Helm v3 installed in your device or client
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的设备或客户端已安装 Helm v3
- en: With this, we are ready to learn this advanced configuration for K3s. So, let's
    get started.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们就准备好学习 K3s 的高级配置了。让我们开始吧。
- en: Bare metal load balancer with MetalLB
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 MetalLB 的裸金属负载均衡器
- en: In this section, you are going to explore MetalLB as a bare metal load balancer,
    which can give you powerful features to expose your services at the edge.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将探索作为裸金属负载均衡器的 MetalLB，它能够为你提供强大的功能，将服务暴露到边缘。
- en: Load balancer services in Kubernetes
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kubernetes 中的负载均衡器服务
- en: Before starting with KlipperLB, it's necessary to give some context about load
    balancers in Kubernetes. Kubernetes uses services to communicate or access your
    application. A ClusterIP service creates a DNS record, so this service could be
    reachable from within the cluster. A NodePort service exposes the service on each
    node's IP at a static port. This port is in the range of 30000–32767\. And, finally,
    Kubernetes supports a load balancer service that exposes the service externally
    using a cloud provider's load balancer. In the case of K3s, it's going to use
    KlipperLB by default.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用 KlipperLB 之前，有必要了解 Kubernetes 中负载均衡器的背景。Kubernetes 使用服务来通信或访问你的应用程序。ClusterIP
    服务会创建一个 DNS 记录，使得该服务可以在集群内部访问。NodePort 服务在每个节点的 IP 上以静态端口暴露服务，端口范围是 30000–32767。最后，Kubernetes
    支持一个负载均衡器服务，通过云服务商的负载均衡器将服务暴露到外部。在 K3s 中，默认使用 KlipperLB。
- en: KlipperLB and MetalLB as bare metal load balancers
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KlipperLB 和 MetalLB 作为裸金属负载均衡器
- en: Edge devices and edge computing don't have a lot of resources, so it is common
    to find clusters that only have a single node. Generally, a Kubernetes load balancer
    service depends on the implementation of a specific cloud provider. It also works
    in layer 4 (the transport layer) to transmit **Transmission Control Protocol**
    (**TCP**) and **User Datagram Protocol** (**UDP**) protocols, and this load balancer
    is connected to a NodePort service too. So, in the case of edge devices, K3s implements
    KlipperLB.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘设备和边缘计算资源有限，因此通常可以找到只有一个节点的集群。通常，Kubernetes 的负载均衡器服务依赖于特定云服务商的实现。它还在第四层（传输层）工作，传输**传输控制协议**（**TCP**）和**用户数据报协议**（**UDP**），并且这个负载均衡器也与
    NodePort 服务连接。因此，在边缘设备的情况下，K3s 实现了 KlipperLB。
- en: KlipperLB works really nicely on low-resource devices or environments as k3s'
    load balancer. But when you have multi-node clusters, maybe KlipperLB doesn't
    offer the best features for service availability. That's where MetalLB comes into
    the game. KlipperLB and MetalLB offer a bare metal load balancer service on Kubernetes.
    In this case, you can use these implementations on K3s.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: KlipperLB 在低资源设备或环境中作为 k3s 的负载均衡器运行非常顺利。但当你拥有多节点集群时，KlipperLB 可能无法提供最佳的服务可用性特性。这时，MetalLB
    就发挥作用了。KlipperLB 和 MetalLB 都提供裸金属负载均衡器服务，适用于 Kubernetes。在这种情况下，你可以在 K3s 上使用这些实现。
- en: KlipperLB and MetalLB – the goods and the bads
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KlipperLB 和 MetalLB——优缺点分析
- en: Now, let's mention the pros and cons of each of those bare metal load balancers
    in terms of the implementation, dependencies, and use case. So, let's get started
    with KlipperLB.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从实现、依赖关系和使用场景的角度，谈一谈这些裸金属负载均衡器的优缺点。首先，我们从 KlipperLB 开始。
- en: 'The pros of KlipperLB are as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: KlipperLB 的优点如下：
- en: Pretty lightweight
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相当轻量级
- en: Simple to use with enough features for single node clusters
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于单节点集群来说，使用简单且功能足够的工具。
- en: 'The cons of KlipperLB are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: KlipperLB 的缺点如下：
- en: Depends on **hostPort** or available ports to expose a pod.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖于 **hostPort** 或可用端口来暴露一个 Pod。
- en: If the port is not available, the load balancer service stays on the pending
    state.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果端口不可用，负载均衡器服务将保持挂起状态。
- en: 'Talking about MetalLB, it uses layer 2 (the data link layer) where the format
    of data is defined. In this way, MetalLB uses a node for load balancing and has
    its own advantages and disadvantages. The next table summarizes this information:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 说到 MetalLB，它使用第2层（数据链路层），该层定义了数据的格式。因此，MetalLB 使用一个节点来进行负载均衡，具有自己的优缺点。下表总结了这些信息：
- en: '![](img/B16945_Table_3.1.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B16945_Table_3.1.jpg)'
- en: In general, choose KlipperLB if you have a single node cluster and you want
    to avoid complex installations that use unique ports. Use MetalLB for multi-node
    clusters or installations where you can reuse ports and a more robust load balancer
    service.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，如果你只有单节点集群并且希望避免复杂的安装过程，选择 KlipperLB。对于多节点集群或可以重用端口并且需要更强大负载均衡服务的安装，使用
    MetalLB。
- en: Installing MetalLB
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 MetalLB
- en: 'You need a K3s installation with the `--disable servicelb` option; if you have
    a previous installation, you have to reinstall K3s. To install K3s with this option,
    follow these steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个带有 `--disable servicelb` 选项的 K3s 安装；如果你已有旧的安装版本，需要重新安装 K3s。按照以下步骤安装带有此选项的
    K3s：
- en: 'Log in to your **virtual machine** (**VM**) or device using the following command:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令登录到你的 **虚拟机**（**VM**）或设备：
- en: '[PRE0]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Install K3s using the following line. This applies to a simple ARM device for
    a basic installation without installing KlipperLB:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装 K3s。此步骤适用于简单的 ARM 设备，用于基本安装，不包含 KlipperLB：
- en: '[PRE1]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '(*Optional*) Install K3s using the following lines. First, set the `PUBLIC_IP`
    environment variable with the IP of your device or VM:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: （*可选*）使用以下命令安装 K3s。首先，设置 `PUBLIC_IP` 环境变量为你设备或虚拟机的 IP 地址：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, use the next lines to install K3s in a node that has a public IP:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令在具有公共 IP 的节点上安装 K3s：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create a MetalLB namespace (`metallb-system`) with the official manifests,
    executing the following lines:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用官方清单创建一个 MetalLB 命名空间（`metallb-system`），执行以下命令：
- en: '[PRE4]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Before running the command to install MetalLB, you have to create a ConfigMap
    called `metallb-config` inside the `metallb-system` namespace. Let''s call this
    file `config.yaml` with the following content:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行安装 MetalLB 的命令之前，你需要在 `metallb-system` 命名空间中创建一个名为 `metallb-config` 的 ConfigMap。我们将这个文件命名为
    `config.yaml`，并填写以下内容：
- en: '[PRE5]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, create the ConfigMap by executing the following command:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，执行以下命令创建 ConfigMap：
- en: '[PRE6]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Install MetalLB with the official manifests by executing the following lines:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用官方清单安装 MetalLB，执行以下命令：
- en: '[PRE7]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now that MetalLB is installed using YAML files, let's continue with the installation
    using Helm instead of YAML files.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过 YAML 文件安装了 MetalLB，让我们继续使用 Helm 代替 YAML 文件进行安装。
- en: Important Note
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If you want to delete this or other installations, use the `delete` option instead
    of `apply` using the same command – for example, `kubectl delete -f YOUR_YAML_FILE`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想删除此或其他安装，请使用 `delete` 选项代替 `apply`，使用相同的命令——例如，`kubectl delete -f YOUR_YAML_FILE`。
- en: 'In case you want to install MetalLB using Helm v3, follow these steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用 Helm v3 安装 MetalLB，请按照以下步骤操作：
- en: 'Add the Helm Chart repository of MetalLB using the following commands:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令添加 MetalLB 的 Helm Chart 仓库：
- en: '[PRE8]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Install MetalLB using Helm by executing the following command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Helm 安装 MetalLB，执行以下命令：
- en: '[PRE9]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you want to install MetalLB with the `values.yaml` file, execute the following
    lines:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想通过 `values.yaml` 文件安装 MetalLB，请执行以下命令：
- en: '[PRE10]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You have to create the `values.yaml` file, with the following example content:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要创建一个 `values.yaml` 文件，内容如下示例：
- en: '[PRE11]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, you have to create the ConfigMap based on the installation using `kubectl`
    and change the namespace to `metallb-system` and the name to `metallb-config`.
    Then, apply `YAML`:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要根据安装情况使用 `kubectl` 创建 ConfigMap，并将命名空间更改为 `metallb-system`，名称更改为 `metallb-config`。然后，应用
    `YAML` 文件：
- en: '[PRE12]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Important Note
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The `addresses` field corresponds to the range of IP addresses that MetalLB
    will use to assign to your services every time that you create a `LoadBalancer`
    service in Kubernetes.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`addresses` 字段对应 MetalLB 用来分配给服务的 IP 地址范围，每次你在 Kubernetes 中创建 `LoadBalancer`
    服务时都会使用这个范围。'
- en: Now, MetalLB is installed and ready to use.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，MetalLB 已经安装完成并可以使用。
- en: Now you have a fresh installation of MetalLB ready to use. Now you have to learn
    how to troubleshoot MetalLB in the next section.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经有了一个可以使用的 MetalLB 全新安装。接下来，你需要在下一部分学习如何排查 MetalLB 的故障。
- en: Troubleshooting MetalLB
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MetalLB 故障排查
- en: 'Sometimes, it''s necessary to troubleshoot our installations. If you are having
    trouble with your installation, here are some commands that you can use to troubleshoot
    a new installation of MetalLB. The following are steps and commands that you can
    use for this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们需要排查安装过程中的问题。如果你在安装过程中遇到问题，以下是一些可以用来排查 MetalLB 新安装问题的命令。以下是你可以使用的步骤和命令：
- en: 'Log in to your VM or device:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的虚拟机或设备：
- en: '[PRE13]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a pod to check whether your cluster can schedule pods:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 Pod 来检查你的集群是否可以调度 Pod：
- en: '[PRE14]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a service to expose the pod created previously and test whether the
    `LoadBalancer` service works:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个服务以暴露之前创建的 Pod，并测试 `LoadBalancer` 服务是否正常工作：
- en: '[PRE15]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Execute the following command if you want to check whether the services and
    port work to expose your services, which can be either `LoadBalancer` or `NodePort`:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想检查服务和端口是否正常工作以暴露你的服务，可以执行以下命令，这些服务可以是 `LoadBalancer` 或 `NodePort`：
- en: '[PRE16]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, perform an access check for the assigned external IP to the NGINX service
    and execute the following command to check that MetalLB exposed your service:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，执行对分配给 NGINX 服务的外部 IP 进行访问检查，并执行以下命令，确认 MetalLB 已经成功暴露了你的服务：
- en: '[PRE17]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In case you want to check the logs of MetalLB in case of errors, look at the
    next pods inside the `metallb-system` namespace:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看 MetalLB 的日志以便排查错误，请查看 `metallb-system` 命名空间下的下一个 Pod：
- en: Controller
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制器
- en: Speaker
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演讲者
- en: Now you know how to do basic troubleshooting of MetalLB. Let's move to a more
    advanced storage configuration using Longhorn in the next section.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你知道如何进行基本的 MetalLB 故障排查了。接下来让我们进入下一部分，学习如何使用 Longhorn 配置更高级的存储。
- en: Setting up Longhorn for storage
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Longhorn 存储
- en: In terms of persistent information, you will find two types of containers, stateless
    and stateful containers. A stateless or ephemeral container doesn't persist information
    generated inside a container. A stateful container can persist the information
    even when this is deleted. K3s includes, by default, a way to persist data using
    a storage type (called **storage class** in Kubernetes) called **local-path**.
    This storage is a basic and pretty lightweight implementation, designed for edge
    devices. A common feature used on Kubernetes is to have a persistent volume claim
    that allows your pods to consume (write and read data) from different nodes. And
    this is a persistence volume configuration with the access mode key, set as **ReadWriteMany**
    (**RWX**). This feature is often used in production scenarios and it's pretty
    important because it enables you to share information from your different services.
    Longhorn provides this feature in a pretty lightweight presentation and it's optimized
    for edge devices. Let's move to learn what Longhorn is and how you can install
    it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在持久化信息方面，你会看到两种类型的容器，无状态和有状态容器。无状态或临时容器不会持久化容器内部生成的信息。有状态容器即使在删除后也能持久化信息。K3s
    默认提供一种通过存储类型（在 Kubernetes 中称为 **storage class**）持久化数据的方式，叫做 **local-path**。这种存储是一种基本且非常轻量的实现，专为边缘设备设计。Kubernetes
    中常用的功能是拥有持久卷声明，允许你的 Pod 从不同节点进行数据读写。这是一个持久卷配置，访问模式键设置为 **ReadWriteMany**（**RWX**）。这个功能通常在生产场景中使用，非常重要，因为它使你能够在不同服务间共享信息。Longhorn
    提供了这个功能，并且以非常轻量的方式进行了优化，专为边缘设备设计。接下来让我们了解什么是 Longhorn 以及如何安装它。
- en: Why use Longhorn?
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么使用 Longhorn？
- en: Longhorn is designed to be a distributed and hyper-converged storage stack.
    Hyper-converged storage means that virtualization software abstracts and pools
    storage. Longhorn doesn't use a lot of resources, which gives you the ability
    to use it for advanced storage in edge devices. You can even simplify your workflows
    of snapshots, backups, and even disaster recovery. So, if you are looking for
    lightweight and advanced edge solutions for storage, Longhorn can fit your needs.
    There are other options, such as Rook, but Longhorn is an easy piece of software
    that can give you extra storage power without having to sacrifice resource consumptions.
    So, let's move on to learn how to install it and create a simple **persistent
    volume claim** for a pod in the next section.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Longhorn 旨在成为一个分布式和超融合的存储堆栈。超融合存储意味着虚拟化软件抽象并汇聚存储资源。Longhorn 不会占用大量资源，这使得您可以将其用于边缘设备的高级存储。它甚至可以简化快照、备份甚至灾难恢复的工作流。因此，如果您正在寻找轻量级和高级的边缘存储解决方案，Longhorn
    可以满足您的需求。还有其他选项，比如 Rook，但 Longhorn 是一款简单的软件，可以在不牺牲资源消耗的情况下为您提供额外的存储能力。那么，接下来让我们学习如何安装它，并在下一节中为
    Pod 创建一个简单的**持久卷声明**。
- en: Installing Longhorn with ReadWriteMany mode
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Longhorn 时启用 ReadWriteMany 模式
- en: 'To install Longhorn, follow these steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Longhorn，请按照以下步骤操作：
- en: 'Log in to your VM or device:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您的虚拟机或设备：
- en: '[PRE18]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If you want to install the ReadWriteMany PVC mode, you have to install `nfs-common`
    on each VM with Ubuntu installed in your cluster. For this, execute the following
    command:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想安装 ReadWriteMany PVC 模式，您需要在集群中每个安装了 Ubuntu 的虚拟机上安装 `nfs-common`。为此，请执行以下命令：
- en: '[PRE19]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Apply the official Longhorn manifests, as follows:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用官方的 Longhorn 清单，如下所示：
- en: '[PRE20]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Important Note
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Longhorn will be installed in the `longhorn-system` namespace.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Longhorn 将安装在 `longhorn-system` 命名空间中。
- en: 'Create a `pvc.yaml` file:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `pvc.yaml` 文件：
- en: '[PRE21]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Apply the `pvc.yaml` file:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用 `pvc.yaml` 文件：
- en: '[PRE22]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Important Note
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can use different PVC modes such as `ReadWriteOnce` or `ReadOnlyMany`. By
    default, the storage classes at least support `ReadWriteOnce`. So, `ReadWriteMany`
    is a special feature that uses `NFS` and is included in Longhorn.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用不同的 PVC 模式，如 `ReadWriteOnce` 或 `ReadOnlyMany`。默认情况下，存储类至少支持 `ReadWriteOnce`。因此，`ReadWriteMany`
    是一个使用 `NFS` 的特殊功能，并包含在 Longhorn 中。
- en: 'Now, it''s time to create a pod using this PVC using the Longhorn storage class.
    To do this, follow these steps:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候使用 Longhorn 存储类创建一个 Pod 了。请按照以下步骤操作：
- en: 'Create the `pod.yaml` file to create a pod using the previously created PVC:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `pod.yaml` 文件，以便使用之前创建的 PVC 创建一个 Pod：
- en: '[PRE23]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Apply the `pod.yaml` file to create the pod:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用 `pod.yaml` 文件以创建 Pod：
- en: '[PRE24]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Now, you have Longhorn installed and running. So, let's move on to learn how
    to use the Longhorn UI in the next section.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经安装并运行了 Longhorn。那么，接下来让我们学习如何在下一节中使用 Longhorn UI。
- en: Using Longhorn UI
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Longhorn UI
- en: If you want to access the Longhorn UI, you have to check the services created
    on `longhorn-system` and execute a port-forward; if you installed MetalLB, you
    can create a `LoadBalancer` service to expose the Longhorn UI.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想访问 Longhorn UI，您需要检查 `longhorn-system` 上创建的服务并执行端口转发；如果您安装了 MetalLB，您可以创建一个
    `LoadBalancer` 服务来暴露 Longhorn UI。
- en: 'To access Longhorn with a port-forward, execute the following steps:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过端口转发访问 Longhorn，请执行以下步骤：
- en: 'Run the next port-forward command locally in order to access the UI in your
    browser:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地运行下一个端口转发命令，以便在浏览器中访问 UI：
- en: '[PRE25]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, open your browser at `http://localhost:8080`; you will see the following
    dashboard:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开浏览器，访问 `http://localhost:8080`，您将看到以下仪表板：
- en: '![Figure 3.1 – Longhorn UI'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.1 – Longhorn UI'
- en: '](img/B16945_Figure_3.1.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16945_Figure_3.1.jpg)'
- en: Figure 3.1 – Longhorn UI
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – Longhorn UI
- en: 'With this dashboard, you can manage your **Persistent Volume Claims** (**PVCs**)
    using the UI; for more references, you can visit the following link: [https://longhorn.io/docs/1.3.1/deploy/accessing-the-ui](https://longhorn.io/docs/1.3.1/deploy/accessing-the-ui).'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此仪表板，您可以通过 UI 管理您的**持久卷声明**（**PVCs**）；更多参考资料，请访问以下链接：[https://longhorn.io/docs/1.3.1/deploy/accessing-the-ui](https://longhorn.io/docs/1.3.1/deploy/accessing-the-ui)。
- en: Now you know how to install and use Longhorn. Let's go ahead and do some basic
    troubleshooting.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经知道如何安装和使用 Longhorn，让我们继续进行一些基础故障排除。
- en: Troubleshooting Longhorn
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Longhorn 故障排除
- en: 'Using the preceding example as reference, to troubleshoot the PVC creation
    using Longhorn, you can use the following commands:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以之前的示例为参考，要排查使用 Longhorn 创建 PVC 的问题，可以使用以下命令：
- en: 'Check whether the Longhorn pods are running successfully with the following
    command:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查 Longhorn Pod 是否成功运行：
- en: '[PRE26]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Check whether the PV was created:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查是否已创建 PV：
- en: '[PRE27]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Check whether the PVC was created:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查是否已创建 PVC：
- en: '[PRE28]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Check whether the pod from `pod.yaml` using the new Longhorn storage class
    was created:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查是否已创建使用新 Longhorn 存储类的 `pod.yaml` 中的 Pod：
- en: '[PRE29]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: With these commands, you can find errors that come up when a pod or deployment
    uses a PVC with the Longhorn storage class.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些命令，你可以找到在 Pod 或部署使用带有 Longhorn 存储类的 PVC 时出现的错误。
- en: Important Note
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The previous four commands will return errors in case something goes wrong.
    For more information about this, you can check [https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage](https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage)
    or [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现问题，前面四个命令会返回错误。有关更多信息，你可以查看 [https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage](https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage)
    或 [https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class)。
- en: Now, we are ready to learn another advanced topic about upgrading the cluster.
    So, let's move to the next section.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备学习有关升级集群的另一个高级主题。让我们继续进入下一节。
- en: Upgrading your cluster
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级你的集群
- en: Sometimes, you want to be up to date with the new versions and features of K3s.
    The next sections explain how to perform these upgrading processes.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，你想保持 K3s 的版本和功能更新。接下来的章节将解释如何执行这些升级过程。
- en: Upgrading using K3s Bash scripts
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 K3s Bash 脚本进行升级
- en: 'To perform an upgrade in your nodes, you have to follow these steps:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的节点上进行升级，你需要按照以下步骤操作：
- en: 'First, you have to stop K3s on your device with the following command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，你需要使用以下命令停止设备上的 K3s：
- en: '[PRE30]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now, you have to choose the version which you want to upgrade to. In general,
    there are three options – choose the latest or most stable channel, or pick a
    specific version. The next command will update your cluster to the latest stable
    version available:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要选择要升级到的版本。通常，有三个选项——选择最新的或最稳定的通道，或选择特定的版本。下一个命令将把你的集群更新到最新的稳定版本：
- en: '[PRE31]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now, if you want to update to the latest version, which is not so stable, you
    can execute the following command:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你想更新到最新版本（尽管它不太稳定），你可以执行以下命令：
- en: '[PRE32]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The last option is to pick a specific version. For this, you have to execute
    the following command:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后的选项是选择特定的版本。为此，你需要执行以下命令：
- en: '[PRE33]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Important Note
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can visit [https://update.k3s.io/v1-release/channels](https://update.k3s.io/v1-release/channels)
    to check the latest, stable, or specific available version of K3s or the official
    site of k3s at [https://k3s.io](https://k3s.io) in the GitHub section.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以访问 [https://update.k3s.io/v1-release/channels](https://update.k3s.io/v1-release/channels)
    查看最新、稳定或特定版本的 K3s，或者访问 K3s 的官方网站 [https://k3s.io](https://k3s.io) 中的 GitHub 部分。
- en: Now you know how to upgrade your cluster using the K3s scripts. Let's move on
    to learn this manually in the next section.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道如何使用 K3s 脚本升级集群了。让我们继续在下一节学习如何手动升级。
- en: Upgrading K3s manually
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 手动升级 K3s
- en: 'If you want to perform a manual upgrading of the K3s version, you can follow
    the following steps, based on the official K3s website documentation:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想手动升级 K3s 版本，可以根据官方 K3s 网站文档，按照以下步骤操作：
- en: 'Download your desired version of the K3s binary from releases. To do this,
    check this link: [https://github.com/k3s-io/k3s/releases](https://github.com/k3s-io/k3s/releases).'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从发布页面下载你需要的 K3s 二进制文件。要做到这一点，请查看此链接：[https://github.com/k3s-io/k3s/releases](https://github.com/k3s-io/k3s/releases)。
- en: Copy the downloaded binary to the `/usr/local/bin` folder.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的二进制文件复制到 `/usr/local/bin` 文件夹。
- en: 'Stop the old k3s binary. For this, you can execute the following command:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止旧的 K3s 二进制文件。为此，你可以执行以下命令：
- en: '[PRE34]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Delete the old binary.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除旧的二进制文件。
- en: 'Launch the new K3s binary with the next command:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启动新的 K3s 二进制文件：
- en: '[PRE35]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Now, you know how to do the K3s manually, but there is something that you have
    to know, and that is to restart the service to apply the next changes. This is
    covered in the next section.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你知道如何手动操作 K3s，但有一点你需要知道，那就是在应用下一个更改之前必须重启服务。这部分内容将在下一节中讲解。
- en: Restarting K3s
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重启 K3s。
- en: When you perform software or hardware upgrades, or when a restart is needed
    to fix errors, you can restart K3s services using `systemd` and **OpenRC**.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当你进行软件或硬件升级，或需要重启以修复错误时，你可以使用 `systemd` 和 **OpenRC** 重启 K3s 服务。
- en: 'To restart K3s using `systemd`, follow these steps:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `systemd` 重启 K3s，请按照以下步骤操作：
- en: 'To restart the K3s service in your master node, execute the following command:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在主节点中重启 K3s 服务，请执行以下命令：
- en: '[PRE36]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'To restart the K3s agent service in your agent nodes, execute the following
    command:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在代理节点中重启 K3s agent 服务，请执行以下命令：
- en: '[PRE37]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'To restart K3s using OpenRC, follow these steps:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OpenRC 重启 K3s，请按照以下步骤操作：
- en: 'To restart the K3s service in your master node, execute the following command:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在主节点中重启 K3s 服务，请执行以下命令：
- en: '[PRE38]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To restart the K3s-agent service in your agent nodes, execute the following
    command:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在代理节点中重启 K3s-agent 服务，请执行以下命令：
- en: '[PRE39]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Now that you know all the necessary steps to upgrade your K3s cluster, it's
    time to move on to other advanced topics – backups and restorations. Let's move
    on to the next section to learn about this.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道了升级 K3s 集群所需的所有步骤，是时候继续学习其他高级主题——备份和恢复。让我们继续下一个部分来了解这些内容。
- en: Backing up and restoring your K3s configurations
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份和恢复 K3s 配置
- en: Backups and restoration of your Kubernetes objects are something to consider
    in production environments. This section explains how to perform these kinds of
    tasks for the default storage, SQLite, how to install and manage **etcd** on K3s,
    and basic resources if you are using the SQL backends of K3s.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，Kubernetes 对象的备份和恢复是需要考虑的事项。本节将解释如何在默认存储（SQLite）中执行这些任务，如何在 K3s 上安装和管理**etcd**，以及如果你使用
    K3s 的 SQL 后端时的一些基本资源。
- en: Backups from SQLite
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 SQLite 备份
- en: 'If you are using the default storage, SQLite, follow these steps:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是默认存储 SQLite，请按照以下步骤操作：
- en: 'Log in to your master node:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到主节点：
- en: '[PRE40]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Stop the K3s using the following command:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令停止 K3s：
- en: '[PRE41]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Change to the `/var/lib/rancher/k3s/` directory server:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 `/var/lib/rancher/k3s/` 目录服务器：
- en: '[PRE42]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Copy the folder server inside the `k3s` folder:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制 `k3s` 文件夹中的文件夹服务器：
- en: '[PRE43]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Download this folder on another device if necessary.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，可以在另一台设备上下载此文件夹。
- en: Backups and restoring from the SQL database K3s backend
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 SQL 数据库 K3s 后端备份和恢复
- en: If you are using external storage – let's say, for example, MySQL – you have
    to use a tool or the command to back up your database.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用外部存储——例如 MySQL——你需要使用工具或命令来备份你的数据库。
- en: Backing up MySQL
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备份 MySQL
- en: 'In the case of MySQL, you can execute the following steps to back up your K3s
    configurations:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 MySQL，你可以执行以下步骤来备份 K3s 配置：
- en: Get your database credentials to use the `mysqldump` command.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取你的数据库凭证，以便使用 `mysqldump` 命令。
- en: 'Run the following command to back up your database, which in this case is called
    `k3s`, using the `YOUR_USER` user, the `YOUR_PASSWORD` password, and an output
    file called `output.sql` from the `YOUR_HOST` host:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令来备份数据库，这里的数据库名为 `k3s`，使用 `YOUR_USER` 用户，`YOUR_PASSWORD` 密码，并输出为 `output.sql`
    文件，数据库所在的主机是 `YOUR_HOST`：
- en: '[PRE44]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Important Note
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'You can modify the `YOUR_HOST`, `YOUR_USER`, and `YOUR_PASSWORD` values, the
    database name instead of `k3s`, and even the name of the output file to customize
    your backup command. The `–h` option can be optional if you are connected to the
    same host where the database is installed. By default, it connects to `localhost`.
    You can check this link for other examples to back up your MySQL: [https://www.tecmint.com/mysql-backup-and-restore-commands-for-database-administration](https://www.tecmint.com/mysql-backup-and-restore-commands-for-database-administration).'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以修改 `YOUR_HOST`、`YOUR_USER` 和 `YOUR_PASSWORD` 的值，使用其他数据库名代替 `k3s`，甚至可以修改输出文件名来自定义备份命令。如果你连接的主机与数据库安装在同一台主机上，`–h`
    选项是可选的。默认情况下，它会连接到 `localhost`。你可以查看这个链接获取更多 MySQL 备份的示例：[https://www.tecmint.com/mysql-backup-and-restore-commands-for-database-administration](https://www.tecmint.com/mysql-backup-and-restore-commands-for-database-administration)。
- en: Now the backup is ready to be used. In the next section, you are going to use
    the backup to restore your database.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在备份已经准备好可以使用。在下一节中，你将使用备份来恢复数据库。
- en: Restoring MySQL
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恢复 MySQL
- en: 'Now it is time to restore your database. Follow the next steps for the restoration:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是恢复数据库的时刻了。请按照以下步骤进行恢复：
- en: Get your database credentials to use the database with the `mysql` command.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取你的数据库凭证，以便使用 `mysql` 命令操作数据库。
- en: 'Run the following command to restore your database backup. We are using the
    `k3s` database. Change `YOUR_HOST` and `YOUR_PASSWORD` parameters according to
    the database used as data storage for your `k3s` cluster. Finally, the `output.sql`
    file is used to load your backup and restore your database:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令来恢复你的数据库备份。我们使用的是`k3s`数据库。根据你用于存储`k3s`集群数据的数据库，修改`YOUR_HOST`和`YOUR_PASSWORD`参数。最后，使用`output.sql`文件加载你的备份并恢复数据库：
- en: '[PRE45]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Important Note
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can modify the values from the previous command to perform your restoration
    with the `output.sql` file.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以修改之前命令中的值，通过`output.sql`文件执行恢复操作。
- en: Backing up and restoring other data storages
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备份和恢复其他数据存储
- en: If you are using other K3s backends, such as PostgreSQL or `etcd`, you can check
    the official documentation for each database.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是其他K3s后端，如PostgreSQL或`etcd`，你可以查看每个数据库的官方文档。
- en: 'For PostgreSQL, check the following link: [https://www.postgresql.org/docs/8.3/backup-dump.html](https://www.postgresql.org/docs/8.3/backup-dump.html).'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 对于PostgreSQL，请查看以下链接：[https://www.postgresql.org/docs/8.3/backup-dump.html](https://www.postgresql.org/docs/8.3/backup-dump.html)。
- en: 'For `etcd`, check the following link: [https://etcd.io](https://etcd.io).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`etcd`，请查看以下链接：[https://etcd.io](https://etcd.io)。
- en: Now that you have learned how to restore your MySQL data storage for your K3s
    cluster, let's move on to the next section to understand how to use `etcd` as
    your data storage.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解如何恢复K3s集群的MySQL数据存储，接下来让我们学习如何使用`etcd`作为你的数据存储。
- en: Embedded etcd management
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌入式etcd管理
- en: '`etcd` is the default type of storage to store all the Kubernetes objects in
    your cluster. `etcd`, by default, was removed from K3s, but you can install it.
    K3s customized how `etcd` works for your cluster; this includes some custom features
    that you can''t find in a regular Kubernetes cluster that uses `etcd`. So, let''s
    get started with installing `etcd` in K3s.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`etcd`是存储所有Kubernetes对象的默认存储类型。默认情况下，`etcd`已从K3s中移除，但你可以安装它。K3s自定义了`etcd`在集群中的工作方式，包括一些常规Kubernetes集群中没有的自定义功能。所以，让我们开始在K3s中安装`etcd`吧。'
- en: Installing the etcd backend
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装etcd后端
- en: 'If you want to install it, follow these steps:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想安装它，请按照以下步骤操作：
- en: 'To install K3s with the `etcd` backend, you have to execute the following command
    to include `etcd` in the K3s installation. This has to be executed in the master
    node:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装K3s并使用`etcd`后端，你需要执行以下命令将`etcd`包含在K3s安装中。这个命令需要在主节点上执行：
- en: '[PRE46]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Set your `TOKEN` variable, with the `YOUR_TOKEN` master token, to join the
    nodes to the cluster:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置你的`TOKEN`变量，使用`YOUR_TOKEN`主令牌，将节点加入集群：
- en: '[PRE47]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, if you need a multi-cluster configuration, execute the following command:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你需要多集群配置，请执行以下命令：
- en: '[PRE48]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Now that you have learned how to install the `etcd` feature for K3s, let's move
    on to the next section to learn how to create and restore `etcd` snapshots for
    your Kubernetes objects configurations.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解如何为K3s安装`etcd`功能，接下来让我们学习如何为你的Kubernetes对象配置创建和恢复`etcd`快照。
- en: Creating and restoring etcd snapshots
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建和恢复etcd快照
- en: 'K3s includes an experimental feature to back up and restore `etcd`. In this
    section, you are going to learn how to perform `etcd` snapshots and restoration
    for `etcd`. The snapshots are enabled by default with this backend. These snapshots
    are stored in `/var/lib/rancher/k3s/server/db/snapshots`. To create a backup,
    manually execute the following steps:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: K3s包含了一个实验性功能，用于备份和恢复`etcd`。在这一部分，你将学习如何执行`etcd`快照和恢复操作。默认情况下，这个后端启用了快照功能。这些快照存储在`/var/lib/rancher/k3s/server/db/snapshots`目录下。要创建备份，请手动执行以下步骤：
- en: 'Create a backup manually:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动创建备份：
- en: '[PRE49]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: This will generate a file inside the `snapshots` folder.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在`snapshots`文件夹内生成一个文件。
- en: 'To restore your `etcd` from this backup, execute the following command:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从备份中恢复你的`etcd`，请执行以下命令：
- en: '[PRE50]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'You can automate the snapshot generation with the following option:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用以下选项来自动化快照生成：
- en: '[PRE51]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'For more references to configure this, visit this link: [https://rancher.com/docs/k3s/latest/en/backup-restore/#options](https://rancher.com/docs/k3s/latest/en/backup-restore/#options).'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多配置参考内容，请访问此链接：[https://rancher.com/docs/k3s/latest/en/backup-restore/#options](https://rancher.com/docs/k3s/latest/en/backup-restore/#options)。
- en: 'You can even use the official documentation of `etcd`: [https://github.com/etcd-io/website/blob/main/content/en/docs/v3.5/op-guide/recovery.md](https://github.com/etcd-io/website/blob/main/content/en/docs/v3.5/op-guide/recovery.md).'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以参考官方的 `etcd` 文档：[https://github.com/etcd-io/website/blob/main/content/en/docs/v3.5/op-guide/recovery.md](https://github.com/etcd-io/website/blob/main/content/en/docs/v3.5/op-guide/recovery.md)。
- en: That's how you manage your `etcd` snapshots. Now, let's take a recap of what
    we have covered in this chapter.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是如何管理您的`etcd`快照。现在，让我们回顾一下本章的内容。
- en: Summary
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter covered common advanced configurations for Kubernetes edge clusters
    using Ubuntu and K3s. One of these common configurations was to install a bare
    metal load balancer using MetalLB. We also discussed the pros and cons of this
    as compared to the default K3s load balancer, KlipperLB, followed by the use cases
    of when to use each one. Then, we jumped to the advanced storage configurations
    of Longhorn, which is a really lightweight storage solution, and easy to install
    and configure for ReadWriteMany access modes for storage. Finally, we saw how
    to upgrade our cluster, and perform backups and restorations when using different
    data storage such as SQL or `etcd`. With all this knowledge, you are ready to
    create a production-ready cluster. In the next chapter, we are going to learn
    how to use k3OS to create your clusters using the K3s ISO image and overlay installation.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了使用 Ubuntu 和 K3s 配置 Kubernetes 边缘集群的常见高级配置。这些常见配置之一是使用 MetalLB 安装裸金属负载均衡器。我们还讨论了与默认
    K3s 负载均衡器 KlipperLB 相比，这种方式的优缺点，并介绍了在何种情况下使用各自的场景。接着，我们介绍了 Longhorn 的高级存储配置，它是一种非常轻量级的存储解决方案，易于安装和配置，支持
    ReadWriteMany 存储访问模式。最后，我们了解了如何升级集群，以及在使用不同数据存储（如 SQL 或`etcd`）时进行备份和恢复。掌握了这些知识，您已经准备好创建一个可投入生产的集群。在下一章中，我们将学习如何使用
    k3OS 创建集群，使用 K3s ISO 镜像和覆盖安装。
- en: Questions
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Here are a few questions to validate your new knowledge:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些问题，以验证您的新知识：
- en: When do you choose KlipperLB or MetalLB as a bare metal load balancer solution?
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么时候选择 KlipperLB 或 MetalLB 作为裸金属负载均衡解决方案？
- en: How can I troubleshoot my MetalLB installation?
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我如何排查 MetalLB 安装问题？
- en: How can I install Longhorn to get more robust data storage solutions for my
    deployments?
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何安装 Longhorn，以获得更强大的数据存储解决方案？
- en: How can I troubleshoot my Longhorn installation?
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何排查我的 Longhorn 安装问题？
- en: What other data storage solutions can I use instead of Longhorn?
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我可以使用哪些其他数据存储解决方案来替代 Longhorn？
- en: What are the steps to upgrade my K3s clusters?
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 升级我的 K3s 集群的步骤是什么？
- en: What are the steps to back up or restore my Kubernetes object configurations
    if I use a SQL backend or `etcd`?
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我使用 SQL 后端或`etcd`，备份或恢复我的 Kubernetes 对象配置的步骤是什么？
- en: Further reading
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'You can refer to the following references for more information on the topics
    covered in this chapter:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考以下资料，获取有关本章涉及主题的更多信息：
- en: 'What is the OSI Model?: [https://www.cloudflare.com/en-gb/learning/ddos/glossary/open-systems-interconnection-model-osi/](https://www.cloudflare.com/en-gb/learning/ddos/glossary/open-systems-interconnection-model-osi/)'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 OSI 模型？：[https://www.cloudflare.com/en-gb/learning/ddos/glossary/open-systems-interconnection-model-osi/](https://www.cloudflare.com/en-gb/learning/ddos/glossary/open-systems-interconnection-model-osi/)
- en: 'MetalLB official documentation: [https://metallb.universe.tf](https://metallb.universe.tf)'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MetalLB 官方文档：[https://metallb.universe.tf](https://metallb.universe.tf)
- en: 'MetalLB in layer 2 mode: [https://metallb.universe.tf/concepts/layer2](https://metallb.universe.tf/concepts/layer2)'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MetalLB 层 2 模式：[https://metallb.universe.tf/concepts/layer2](https://metallb.universe.tf/concepts/layer2)
- en: 'Kubernetes 101: Why You Need To Use MetalLB: [https://www.youtube.com/watch?v=Ytc24Y0YrXE](https://www.youtube.com/watch?v=Ytc24Y0YrXE)'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 101：为什么你需要使用 MetalLB：[https://www.youtube.com/watch?v=Ytc24Y0YrXE](https://www.youtube.com/watch?v=Ytc24Y0YrXE)
- en: 'MetalLB ConfigMap configuration: [https://metallb.universe.tf/configuration](https://metallb.universe.tf/configuration)'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MetalLB ConfigMap 配置：[https://metallb.universe.tf/configuration](https://metallb.universe.tf/configuration)
- en: 'Persistent Volumes: [https://kubernetes.io/docs/concepts/storage/persistent-volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes)'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持久卷： [https://kubernetes.io/docs/concepts/storage/persistent-volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes)
- en: 'Volumes and Storage: [https://rancher.com/docs/k3s/latest/en/storage](https://rancher.com/docs/k3s/latest/en/storage)'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卷和存储：[https://rancher.com/docs/k3s/latest/en/storage](https://rancher.com/docs/k3s/latest/en/storage)
- en: 'Longhorn official page: [https://longhorn.io](https://longhorn.io)'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Longhorn 官方页面：[https://longhorn.io](https://longhorn.io)
- en: 'Installing OpenEBS with RWM support: [https://docs.openebs.io/docs/next/rwm.html](https://docs.openebs.io/docs/next/rwm.html)'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '安装带 RWM 支持的 OpenEBS: [https://docs.openebs.io/docs/next/rwm.html](https://docs.openebs.io/docs/next/rwm.html)'
- en: 'Installing Rook with RWM support: [https://rook.io/docs/nfs/v1.7](https://rook.io/docs/nfs/v1.7)'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '安装带 RWM 支持的 Rook: [https://rook.io/docs/nfs/v1.7](https://rook.io/docs/nfs/v1.7)'
- en: 'Upgrading a K3s cluster: [https://rancher.com/docs/k3s/latest/en/upgrades](https://rancher.com/docs/k3s/latest/en/upgrades)'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '升级 K3s 集群: [https://rancher.com/docs/k3s/latest/en/upgrades](https://rancher.com/docs/k3s/latest/en/upgrades)'
- en: 'Backing up and restoring a K3s cluster: [https://rancher.com/docs/k3s/latest/en/backup-restore](https://rancher.com/docs/k3s/latest/en/backup-restore)'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '备份和恢复 K3s 集群: [https://rancher.com/docs/k3s/latest/en/backup-restore](https://rancher.com/docs/k3s/latest/en/backup-restore)'
- en: 'Installation options: [https://rancher.com/docs/k3s/latest/en/installation/install-options/#registration-options-for-the-k3s-server](https://rancher.com/docs/k3s/latest/en/installation/install-options/#registration-options-for-the-k3s-server)'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '安装选项: [https://rancher.com/docs/k3s/latest/en/installation/install-options/#registration-options-for-the-k3s-server](https://rancher.com/docs/k3s/latest/en/installation/install-options/#registration-options-for-the-k3s-server)'
