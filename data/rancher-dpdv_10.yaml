- en: '*Chapter 7*: Deploying a Hosted Cluster with Rancher'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 7 章*：使用 Rancher 部署托管集群'
- en: For teams that don't want to manage any servers, Rancher provides the ability
    to deploy and manage hosted Kubernetes services such as **Google Kubernetes Engine**
    (**GKE**), **Amazon Elastic Container Service for Kubernetes** (**Amazon EKS**),
    or **Azure Kubernetes Service** (**AKS**). This chapter will cover the pros and
    cons of using a hosted cluster versus an RKE cluster. Then, we'll cover the requirements
    and limitations of this type of cluster. At that point, we'll go through the process
    of prepping the cloud provider. Then, we'll go over setting up EKS, GKE, and AKS
    clusters using Rancher. Finally, we'll cover the maintenance tasks needed for
    ongoing cluster management.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不想管理任何服务器的团队，Rancher 提供了部署和管理托管 Kubernetes 服务的能力，如 **Google Kubernetes Engine**（**GKE**）、**Amazon
    Elastic Container Service for Kubernetes**（**Amazon EKS**）或 **Azure Kubernetes
    Service**（**AKS**）。本章将讨论使用托管集群与 RKE 集群的优缺点。然后，我们将介绍此类集群的要求和限制。接下来，我们将讲解如何准备云服务提供商。然后，我们将介绍如何使用
    Rancher 设置 EKS、GKE 和 AKS 集群。最后，我们将讨论集群管理所需的维护任务。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: How can Rancher manage a hosted cluster?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rancher 如何管理托管集群？
- en: Requirements and limitations
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求和限制
- en: Rules for architecting a solution
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构解决方案的规则
- en: Prepping the cloud provider
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备云服务提供商
- en: Installation steps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装步骤
- en: Ongoing maintenance tasks
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续的维护任务
- en: How can Rancher manage a hosted cluster?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rancher 如何管理托管集群？
- en: 'One of the first questions I get is, *what is a hosted cluster?* The short
    answer is that it''s a Kubernetes cluster created and managed by a cloud provider
    such as Google, Amazon, or Azure but with Rancher managing the configuration of
    the cluster. Rancher uses a cloud provider''s API and their SDK to create the
    cluster the same way you would as an end user through their web console or a command-line
    tool. As of Rancher v2.6, the current list of supported cloud providers is as
    follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常收到的第一个问题是，*什么是托管集群？* 简单来说，它是一个由云服务提供商（如 Google、Amazon 或 Azure）创建和管理的 Kubernetes
    集群，但由 Rancher 管理集群的配置。Rancher 使用云服务提供商的 API 和 SDK 来创建集群，就像你作为终端用户通过它们的 Web 控制台或命令行工具创建集群一样。自
    Rancher v2.6 以来，当前支持的云服务提供商如下：
- en: '**GKE**'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GKE**'
- en: '**Amazom EKS**'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazom EKS**'
- en: '**AKS**'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AKS**'
- en: '**Alibaba Cloud Container Service for Kubernetes**) (**Alibaba ACK**)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阿里云容器服务 for Kubernetes**（**Alibaba ACK**）'
- en: '**Tencent Kubernetes Engine** (**Tencent TKE**)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**腾讯 Kubernetes 引擎**（**Tencent TKE**）'
- en: '**Huawei Cloud Container Engine** (**Huawei CCE**)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**华为云容器引擎**（**Huawei CCE**）'
- en: Rancher does this by having a set of controllers in the Rancher leader pod.
    Each cloud provider has its controller, and each controller uses a Go library
    for communicating with the cloud provider. Rancher uses a process wherein Rancher
    stores the cluster's configuration as a specification in the cluster object. For
    example, EKS is stored under `Spec.EKSConfig`. For this section, we will go over
    the v1 controllers first and then the new v2 controllers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Rancher 通过在 Rancher 主控 pod 中设置一组控制器来实现这一点。每个云服务提供商都有自己的控制器，每个控制器使用 Go 库与云服务提供商进行通信。Rancher
    采用一种流程，其中 Rancher 将集群的配置存储为集群对象中的规范。例如，EKS 配置存储在 `Spec.EKSConfig` 下。对于本节内容，我们将首先讲解
    v1 控制器，然后讲解新的 v2 控制器。
- en: With the original v1 controllers, which are found in Rancher v2.0–2.4, the cluster
    config was stored in this object and was only updated when Rancher or a user changed.
    If you were to create an EKS cluster in Rancher and then make a change in the
    AWS console, that change wouldn't be reflected in Rancher, which would overwrite
    your change during the next update event. This means the source of truth for these
    types of clusters is Rancher, and at the time of writing, these clusters cannot
    be detached from Rancher and managed externally.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用最初的 v1 控制器（在 Rancher v2.0–2.4 版本中）时，集群配置存储在此对象中，只有在 Rancher 或用户进行更改时才会更新。如果你在
    Rancher 中创建了一个 EKS 集群，然后在 AWS 控制台中进行更改，那么这些更改不会反映在 Rancher 中，Rancher 会在下一次更新时覆盖这些更改。这意味着，对于这些类型的集群，Rancher
    是唯一的真实来源，而在撰写本文时，这些集群无法从 Rancher 中分离并进行外部管理。
- en: The new v2 controllers are only available for EKS and GKE, added to Rancher
    v2.5.8 and later. The idea of configuration synchronization was added to allow
    changes made outside Rancher to be synced to it. This is done by two operators
    called eks-operator and gke-operator. The operator stores the configuration for
    the cloud provider as `Spec.EKSStatus` and `Spec.GKEStatus`. These objects are
    refreshed every 5 minutes from the cloud provider. The local configuration of
    the cluster is stored as `Spec.EKSConfig` and `Spec.GKEConfig`, which represent
    the desired state of the cluster with most of the fields in the `config section`
    being `NULL`. Rancher keeps these values `NULL` until they are set in Rancher.
    Once the value has been set in Rancher, the operator uses the cloud provider's
    SDK to update the cluster. Once the cloud has been updated, the `Status` specs
    will get updated. If you change the cluster outside Rancher, that change will
    get picked up by it, and if the managed field is different, it will get overwritten.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 新的v2控制器仅适用于EKS和GKE，已添加到Rancher v2.5.8及以后的版本中。配置同步的概念被引入，以允许在Rancher外部所做的更改同步到Rancher中。这是通过两个操作器来完成的，分别是eks-operator和gke-operator。操作器将云提供商的配置存储为`Spec.EKSStatus`和`Spec.GKEStatus`。这些对象每5分钟从云提供商处刷新一次。集群的本地配置存储为`Spec.EKSConfig`和`Spec.GKEConfig`，它们表示集群的期望状态，其中大多数字段在`config
    section`中为`NULL`。Rancher会保持这些值为`NULL`，直到它们在Rancher中被设置。一旦在Rancher中设置了该值，操作器就会使用云提供商的SDK来更新集群。一旦云端被更新，`Status`规格将会被更新。如果你在Rancher外部更改了集群，这些更改会被Rancher捕获，如果`managed`字段不同，它将被覆盖。
- en: One question that always comes up is, *what is the difference between building
    a hosted cluster in Rancher and building it outside Rancher and then importing
    it?* The answer to this question depends on the type of cluster. If it's an EKS
    or GKE cluster, you'll import the cluster, and Rancher will detect the cluster
    type. Then, assuming Rancher has the correct permissions, Rancher will *convert*
    this cluster into a hosted cluster. At that point, the cluster can be managed
    in the same manner it would be if Rancher created it. We will be covering more
    about importing clusters into Rancher in the next chapter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经常被问到的问题是，*在Rancher中构建托管集群和在Rancher外部构建集群再导入之间有什么区别？* 这个问题的答案取决于集群的类型。如果是EKS或GKE集群，你将导入该集群，Rancher会自动检测集群类型。然后，假设Rancher具有正确的权限，Rancher将*转换*该集群为托管集群。此时，该集群可以像Rancher创建的集群一样进行管理。我们将在下一章中详细讨论如何将集群导入Rancher。
- en: Requirements and limitations
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要求和限制
- en: Now that we understand what a hosted cluster is and how it works in Rancher,
    we will move on to the requirements and limitations of a hosted cluster in Rancher,
    along with the design limitations and constraints when choosing a hosted cluster.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了什么是托管集群以及它在Rancher中的工作原理，接下来我们将讨论托管集群在Rancher中的要求和限制，以及选择托管集群时的设计限制和约束。
- en: Basic requirements
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本要求
- en: 'Rancher needs permissions from a cloud provider to be able to create a cluster
    and its related services. The required permissions will vary, depending upon the
    cloud provider. The links to the official Rancher documentation for each cloud
    provider type are listed as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Rancher需要来自云提供商的权限，才能创建集群及其相关服务。所需的权限会根据云提供商的不同而有所不同。每种云提供商类型的官方Rancher文档链接如下所示：
- en: 'Google Kubernetes Engine: [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/gke/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/gke/).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Kubernetes Engine: [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/gke/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/gke/)。'
- en: 'Amazon EKS: [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/eks/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/eks/).'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Amazon EKS: [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/eks/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/eks/)。'
- en: 'AKS: [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/aks/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/aks/).'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'AKS: [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/aks/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/aks/)。'
- en: The rest of the cloud providers can be found at [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/).
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他云提供商的信息可以在 [https://rancher.com/docs/rancher/v2.6/zh/cluster-provisioning/hosted-kubernetes-clusters/](https://rancher.com/docs/rancher/v2.6/zh/cluster-provisioning/hosted-kubernetes-clusters/)
    找到。
- en: It is recommended that Rancher be configured using a dedicated service account
    with the least permissions possible.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用最少权限的专用服务账户配置 Rancher。
- en: Rancher will need access to a cloud provider's API endpoint, which means that
    Rancher will need internet access directly or via an HTTP(S) proxy. If you are
    using a private API such as AWS's API gateway, that will need to be configured
    in Rancher.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Rancher 需要访问云提供商的 API 端点，这意味着 Rancher 需要直接或通过 HTTP(S) 代理访问互联网。如果您使用像 AWS 的 API
    网关这样的私有 API，那么需要在 Rancher 中进行配置。
- en: Rancher will need access to the Kubernetes-API endpoint for the cluster from
    the Rancher servers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Rancher 需要从 Rancher 服务器访问集群的 Kubernetes API 端点。
- en: It is recommended that cloud service accounts are configured in Rancher under
    a dedicated service account such as local admin, and this account should be the
    admin permissions in Rancher.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 建议在 Rancher 中配置云服务账户，使用专用的服务账户如本地管理员，并且此账户应该在 Rancher 中拥有管理员权限。
- en: Design limitations and considerations
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计限制和考虑
- en: Some settings such as the available regions are hardcoded in Rancher, meaning
    that if a cloud provider adds a new region, it might not be available in the Rancher
    UI until you upgrade Rancher.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一些设置，如可用区域，在 Rancher 中是硬编码的，这意味着如果云提供商添加了新的区域，可能在您升级 Rancher 之前在 Rancher UI
    中不可用。
- en: Important Note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: For the v2 controllers, you can work around the limitations in the Rancher UI
    by creating the cluster outside Rancher and then importing it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 v2 控制器，您可以通过在 Rancher 外部创建集群，然后导入来绕过 Rancher UI 中的限制。
- en: The Kubernetes versions that are available in the Rancher UI may not match what
    the cloud provider allows. For example, if you are running an older version of
    Rancher, you might have v1.13 available in the drop-down menu, but because Amazon
    no longer supports this version, you will get an error in Rancher stating that
    the cluster creation failed.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Rancher UI 中可用的 Kubernetes 版本可能与云提供商允许的版本不匹配。例如，如果您运行较旧版本的 Rancher，您可能在下拉菜单中看到
    v1.13，但因为 Amazon 不再支持此版本，您将在 Rancher 中收到集群创建失败的错误。
- en: 'More cloud providers will assume that the cluster being built will have public
    internet access and public IP addresses assigned to the nodes, load balancers,
    and a Kube-API endpoint if you want to set up an air-gapped or private IP-only
    cluster. You will need to work with the cloud provider to configure the additional
    firewall rules, routes, and other settings required for this cluster. The following
    are the documentations for using the private endpoints in Rancher:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 更多的云提供商将假定正在构建的集群具有公共互联网访问和为节点、负载均衡器分配公共 IP 地址，以及 Kube-API 端点，如果要设置无网络访问或仅私有
    IP 的集群。您需要与云提供商合作配置额外的防火墙规则、路由和其他必需的设置。以下是在 Rancher 中使用私有端点的文档：
- en: For EKS private-only endpoints, Rancher provides documentation for the additional
    steps needed, which are located at https://rancher.com/docs/rancher/v2.5/en/cluster-admin/editing-clusters/eks-config-reference/#private-only-api-endpoints.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于仅限私有的 EKS 端点，Rancher 提供了所需的额外步骤的文档，位于 https://rancher.com/docs/rancher/v2.5/zh/cluster-admin/editing-clusters/eks-config-reference/#private-only-api-endpoints。
- en: For the GKE private endpoint, you can find the documentation at https://rancher.com/docs/rancher/v2.5/en/cluster-admin/editing-clusters/gke-config-reference/#private-cluster.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关 GKE 私有端点的文档可以在 https://rancher.com/docs/rancher/v2.5/zh/cluster-admin/editing-clusters/gke-config-reference/#private-cluster
    找到。
- en: Note
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of writing, this type of configuration is not very mature and has
    several bugs.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在撰写时，此类配置并不十分成熟，并且存在一些 bug。
- en: Snapshots and backups are not a thing. Unlike an RKE/2 cluster, most of the
    hosted clusters do not provide you access to the etcd backup and do not provide
    an etcd backup option. If the cluster is lost or a user makes a mistake (for example,
    deleting the wrong namespace), your only option is to redeploy. There are third-party
    tools such as Velero that can address this shortcoming, and we will cover them
    later on in this chapter.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 快照和备份并不存在。与RKE/2集群不同，大多数托管集群不会提供访问etcd备份，也没有etcd备份选项。如果集群丢失或用户犯了错误（例如，删除了错误的命名空间），你唯一的选择就是重新部署。有一些第三方工具，例如Velero，可以解决这个不足，我们将在本章稍后介绍。
- en: The permissions Rancher requires can be too great for some security teams to
    approve. Rancher does provide a list of the minimum EKS permissions, located at
    [https://rancher.com/docs/rancher/v2.5/en/cluster-provisioning/hosted-kubernetes-clusters/eks/permissions/](https://rancher.com/docs/rancher/v2.5/en/cluster-provisioning/hosted-kubernetes-clusters/eks/permissions/).
    It is important to note that some features may not work with a lower set of permissions,
    and it may require tuning.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Rancher所需的权限可能对一些安全团队来说太大，难以批准。Rancher提供了最小EKS权限的列表，位于[https://rancher.com/docs/rancher/v2.5/en/cluster-provisioning/hosted-kubernetes-clusters/eks/permissions/](https://rancher.com/docs/rancher/v2.5/en/cluster-provisioning/hosted-kubernetes-clusters/eks/permissions/)。需要注意的是，某些功能可能无法在较低权限设置下正常工作，可能需要进行调优。
- en: The cost of load balancers with hosted clusters can be greater than an RKE/2
    cluster. This is because most cloud providers will deploy an external load balancer
    instead of the shared load balancer, the Ingress NGINX Controller, that RKE/2
    uses. Note that you can work around this limitation by deploying nginx-ingress
    with an external load balancer in front of it.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 托管集群的负载均衡器成本可能比RKE/2集群更高。这是因为大多数云提供商会部署外部负载均衡器，而不是RKE/2使用的共享负载均衡器——Ingress NGINX
    Controller。需要注意的是，你可以通过在其前面部署nginx-ingress和外部负载均衡器来绕过这一限制。
- en: In this section, we have covered the requirements and limitations. In the next
    section, we are going to use that knowledge along with additional rules and example
    designs to help us architect a solution that meets your needs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们已经讨论了需求和限制。在下一节中，我们将结合这些知识以及额外的规则和示例设计，帮助我们构建一个满足你需求的解决方案。
- en: Rules for architecting a solution
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构解决方案的规则
- en: In this section, we'll cover some of the standard designs and the pros and cons
    of each. It is important to note that each environment is unique and will require
    tuning for the best performance and experience. It's also important to note that
    all CPU, memory, and storage sizes are recommended starting points and may need
    to be increased or decreased by your workloads and deployment processes. Also,
    we'll be covering designs for the major infrastructure providers (Amazon EKS and
    GKE), but you should be able to translate the core concepts for other infrastructure
    providers.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一些标准设计及其优缺点。需要注意的是，每个环境都是独特的，需要进行调优以达到最佳性能和体验。同样需要注意的是，所有的CPU、内存和存储大小都只是建议的起始点，可能需要根据你的工作负载和部署过程进行增加或减少。此外，我们还将介绍主要基础设施提供商的设计（Amazon
    EKS 和 GKE），但你应该能够将核心概念迁移到其他基础设施提供商。
- en: 'Before designing a solution, you should be able to answer the following questions:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计解决方案之前，你应该能够回答以下问题：
- en: Will multiple environments be sharing the same cluster?
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个环境是否会共享同一个集群？
- en: Will production and non-production workloads be on the same cluster?
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产工作负载和非生产工作负载是否会在同一个集群中？
- en: What level of availability does this cluster require?
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个集群需要什么级别的可用性？
- en: Will this cluster be spanning multiple data centers in a metro cluster environment?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个集群是否会跨多个数据中心部署在城市集群环境中？
- en: How much latency will there be between nodes in the cluster?
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群中节点之间的延迟有多大？
- en: How many pods will be hosted in the cluster?
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群中将托管多少个Pod？
- en: What are the average and maximum size of pods for deployment in the cluster?
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群中部署的Pod的平均大小和最大大小是多少？
- en: Will you need GPU support for some of your applications?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否需要为某些应用程序提供GPU支持？
- en: Will you need to provide storage to your applications?
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是否需要为你的应用程序提供存储？
- en: If you need storage, do you need only `ReadWriteOnce` (RWO) or will you need
    `ReadWriteMany` (RWX)?
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你需要存储，你只需要`ReadWriteOnce` (RWO) 还是需要`ReadWriteMany` (RWX)？
- en: Let's start with Amazon EKS.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从Amazon EKS开始。
- en: Amazon EKS
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon EKS
- en: EKS is the most mature cloud provider when it comes to **Kubernetes as a Service**
    (**KaaS**). Because of this, EKS is one of the most flexible solutions, but some
    limitations and rules need to be followed when creating an EKS cluster in Rancher.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: EKS是最成熟的云服务提供商，特别是在**Kubernetes即服务**（**KaaS**）方面。因此，EKS是最灵活的解决方案之一，但在Rancher中创建EKS集群时需要遵守一些限制和规则。
- en: 'The **pros** of Amazon EKS are as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊EKS的**优点**如下：
- en: EKS supports enormous clusters, with the current limits being 3,000 nodes per
    cluster with 737 pods per node (depending on node size).
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS支持巨大的集群，当前的限制为每个集群3,000个节点，每个节点737个Pods（具体取决于节点大小）。
- en: EKS supports third-party **Container Network Interface** (**CNI**) providers
    such as Calico.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS支持第三方**容器网络接口**（**CNI**）提供商，如Calico。
- en: EKS natively supports `ReadWriteOnce` storage. The provisioner comes pre-installed.
    You can find more details about this storage class at [https://docs.aws.amazon.com/eks/latest/userguide/ebs-csi.html](https://docs.aws.amazon.com/eks/latest/userguide/ebs-csi.html).
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS本地支持`ReadWriteOnce`存储。该存储类的提供者已预安装。你可以在[https://docs.aws.amazon.com/eks/latest/userguide/ebs-csi.html](https://docs.aws.amazon.com/eks/latest/userguide/ebs-csi.html)找到关于此存储类的更多细节。
- en: For workloads that require `ReadWriteMany`, EKS supports **Elastic File System**
    (**EFS**), managed by NFS share from Amazon. You can find more details about this
    at [https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html](https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html).
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于需要`ReadWriteMany`的工作负载，EKS支持**弹性文件系统**（**EFS**），该系统由亚马逊的NFS共享进行管理。你可以在[https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html](https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html)找到更多细节。
- en: Because Amazon controls both the cloud networking and the cluster overlay network,
    you can assign IP addresses from your **Virtual Private Cloud** (**VPC**) directly
    to pods inside your cluster. This allows other Amazon services to communicate
    with pods directly. You can find more details about this at [https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html).
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于亚马逊同时控制了云网络和集群覆盖网络，你可以直接将**虚拟私有云**（**VPC**）中的IP地址分配给集群内的Pods。这允许其他亚马逊服务直接与Pods通信。你可以在[https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html](https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html)找到更多细节。
- en: EKS has direct integration between EKS and AWS load balancers. This allows you
    to deploy both an **Application Load Balancer** (**ALB**) as a layer 7/HTTP(S)
    load balancer and a **Network Load Balancer** (**NLB**) as a layer 4/TCP load
    balancer.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS与AWS负载均衡器之间有直接的集成。这使得你可以部署**应用负载均衡器**（**ALB**）作为第7层/HTTP(S)负载均衡器，以及**网络负载均衡器**（**NLB**）作为第4层/TCP负载均衡器。
- en: 'The **cons** of Amazon EKS are as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊EKS的**缺点**如下：
- en: EKS limits the number of pods per node based on the node size. For example,
    `t2.nano` only supports four pods per node. With so few available pods, most services
    such as the CNI, node exporters, and log collectors will use up all available
    slots of the node before any application pods can be started. `t2.large` or larger
    is generally recommended. You can find a list of all the node sizes versus the
    maximum pod count at [https://github.com/awslabs/amazon-eks-ami/blob/master/files/eni-max-pods.txt](https://github.com/awslabs/amazon-eks-ami/blob/master/files/eni-max-pods.txt).
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS根据节点大小限制每个节点的Pods数量。例如，`t2.nano`每个节点仅支持四个Pods。在这种可用Pods数量极少的情况下，大多数服务（如CNI、节点监控程序和日志收集器）将在任何应用Pods启动之前占满节点的所有可用插槽。通常建议使用`t2.large`或更大的节点。你可以在[https://github.com/awslabs/amazon-eks-ami/blob/master/files/eni-max-pods.txt](https://github.com/awslabs/amazon-eks-ami/blob/master/files/eni-max-pods.txt)找到所有节点大小与最大Pods数量的对照列表。
- en: At the time of writing, EKS doesn't have an automatic node repair process, so
    if a node crashes and doesn't recover, that node will not be replaced until you
    force a replacement. You can find more details about this limitation at [https://aws.amazon.com/premiumsupport/knowledge-center/eks-node-status-ready/](https://aws.amazon.com/premiumsupport/knowledge-center/eks-node-status-ready/).
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在撰写本文时，EKS没有自动节点修复过程，因此如果节点崩溃并且无法恢复，该节点不会被替换，直到你强制替换它。你可以在[https://aws.amazon.com/premiumsupport/knowledge-center/eks-node-status-ready/](https://aws.amazon.com/premiumsupport/knowledge-center/eks-node-status-ready/)找到有关此限制的更多细节。
- en: Several manual steps are required when doing upgrades. Amazon has these steps
    documented at [https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html](https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html).
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级过程中需要一些手动步骤。亚马逊已在[https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html](https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html)文档中列出了这些步骤。
- en: Now, let's talk about GKE.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来讨论GKE。
- en: GKE
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GKE
- en: GKE is the second-most mature cloud provider when it comes to KaaS. This is
    because Google created Kubernetes and still drives a lot of the integration and
    development work for core Kubernetes.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: GKE是KaaS领域中第二成熟的云服务提供商。这是因为Kubernetes由谷歌创建，并且谷歌仍然推动Kubernetes核心的集成和开发工作。
- en: 'The **pros** of GKE are as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: GKE的**优点**如下：
- en: GKE has the broadest range of supported Kubernetes (three significant releases),
    and GKE is typically very up to date with new releases. You can find more details
    about the release schedule and versions at [https://cloud.google.com/kubernetes-engine/docs/release-notes#latest_versions](https://cloud.google.com/kubernetes-engine/docs/release-notes#latest_versions).
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GKE支持最广泛的Kubernetes版本（三个主要版本），并且通常非常及时地推出新版本。你可以在[https://cloud.google.com/kubernetes-engine/docs/release-notes#latest_versions](https://cloud.google.com/kubernetes-engine/docs/release-notes#latest_versions)查看有关发布计划和版本的更多详细信息。
- en: With GKE, you can enable Autopilot on your cluster, and with that, you can fully
    automate the upgrade process for your cluster. This includes both the control
    plane and the worker node level. You can find the documentation for Autopilot
    at [https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview](https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview).
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用GKE，你可以在集群中启用自动驾驶功能，并且可以完全自动化集群的升级过程，包括控制平面和工作节点的升级。你可以在[https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview](https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview)查看自动驾驶功能的文档。
- en: You can set the release channel for your cluster to be rapid, which gives you
    releases every couple of weeks to the regular channel (which is the default option)
    and provides an update every 2 to 3 months. Finally, you can select the stable
    channel, which is very similar to regular, the difference being that it is the
    last channel to get updates. This allows even more time for accurate user testing.
    You can find more details about this at [https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels).
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以将集群的发布通道设置为快速发布通道，这样你每隔几周就会收到常规通道的更新（这是默认选项），并且每2到3个月提供一次更新。最后，你可以选择稳定通道，这与常规通道非常相似，不同之处在于它是最后一个获得更新的通道。这为准确的用户测试提供了更多时间。你可以在[https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels)查看更多详细信息。
- en: GKE provides automatic node repair; if a node fails, GKE can and will automatically
    replace it. It does this using the node status, which helps if kubelet crashes
    when the OS stays running, but the node is effectively dead in the cluster. You
    can learn more about this process at [https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair).
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GKE提供自动节点修复功能；如果某个节点出现故障，GKE会自动替换它。它通过节点状态来实现这一点，当kubelet崩溃而操作系统继续运行时，帮助处理节点在集群中的“死亡”状态。你可以在[https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair)了解更多关于此过程的信息。
- en: GKE is unique because you can select Google's container-optimized OS, a stripped-down
    OS designed for security and stability. Alternatively, you can choose an Ubuntu-based
    image. You can also mix and match inside a cluster. The complete list of node
    images is available at [https://cloud.google.com/kubernetes-engine/docs/concepts/node-images](https://cloud.google.com/kubernetes-engine/docs/concepts/node-images).
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GKE的独特之处在于，你可以选择谷歌的容器优化操作系统，这是一种为安全性和稳定性设计的精简版操作系统。或者，你也可以选择基于Ubuntu的镜像。你还可以在一个集群中混合使用不同的镜像。完整的节点镜像列表可以在[https://cloud.google.com/kubernetes-engine/docs/concepts/node-images](https://cloud.google.com/kubernetes-engine/docs/concepts/node-images)找到。
- en: GKE supports Windows Server containers. This is done by adding Windows workers
    nodes to your GKE cluster. The limitation of Windows nodes in GKE can be found
    at [https://cloud.google.com/kubernetes-engine/docs/concepts/windows-server-gke](https://cloud.google.com/kubernetes-engine/docs/concepts/windows-server-gke).
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GKE 支持 Windows Server 容器。这是通过将 Windows 工作节点添加到你的 GKE 集群中实现的。GKE 中 Windows 节点的限制可以在
    [https://cloud.google.com/kubernetes-engine/docs/concepts/windows-server-gke](https://cloud.google.com/kubernetes-engine/docs/concepts/windows-server-gke)
    找到。
- en: GKE allows you to remotely access worker nodes using an SSH client, which is
    excellent for troubleshooting node and application issues.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GKE 允许你使用 SSH 客户端远程访问工作节点，这对于排查节点和应用程序问题非常有帮助。
- en: 'The **cons** of GKE are as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: GKE 的 **缺点** 如下：
- en: GKE will only provide 99.95% of the **service-level agreement** (**SLA**) if
    you use regional clusters, which costs extra. The details about this cost can
    be found at https://cloud.google.com/kubernetes-engine/pricing#cluster_management_fee_and_free_tier.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GKE 仅在使用区域集群时提供 99.95% 的 **服务级别协议**（**SLA**），而使用区域集群需要额外付费。关于这个费用的详细信息可以在 https://cloud.google.com/kubernetes-engine/pricing#cluster_management_fee_and_free_tier
    找到。
- en: At the time of writing, GKE does not have a government cloud option. All the
    currently supported regions can be found at [https://cloud.google.com/compute/docs/regions-zones](https://cloud.google.com/compute/docs/regions-zones).
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 截至撰写时，GKE 没有政府云选项。所有当前支持的区域可以在 [https://cloud.google.com/compute/docs/regions-zones](https://cloud.google.com/compute/docs/regions-zones)
    找到。
- en: Lastly, we'll talk about AKS.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将讨论 AKS。
- en: Microsoft Azure Kubernetes Service (AKS)
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Microsoft Azure Kubernetes 服务（AKS）
- en: AKS is the new kid on the block when it comes to KaaS, but Microsoft has been
    investing a lot in AKS and has closed the feature gap very quickly.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: AKS 是在 KaaS 领域中的新秀，但 Microsoft 已经为 AKS 投入了大量资源，并且快速缩小了功能差距。
- en: 'The **pros** of AKS are as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: AKS 的 **优点** 如下：
- en: AKS follows Microsoft's standard monthly patch schedule as they do with their
    OSes. They also publish their releases on their GitHub page, which is located
    at [https://github.com/Azure/AKS/releases](https://github.com/Azure/AKS/releases).
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 遵循 Microsoft 的标准月度补丁计划，就像他们对待操作系统一样。他们还会在其 GitHub 页面上发布版本，页面地址为 [https://github.com/Azure/AKS/releases](https://github.com/Azure/AKS/releases)。
- en: AKS has automatic node repair whereas Microsoft Azure uses both node agents
    and the node status in the cluster to trigger a repair. Azure's restoration process
    is less advanced than the other cloud providers, as it will try rebooting the
    node before reimaging it and then giving up. Finally, if that fails, an Azure
    engineer will investigate the issue. You read more about this process at [https://docs.microsoft.com/en-us/azure/aks/node-auto-repair](https://docs.microsoft.com/en-us/azure/aks/node-auto-repair).
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 具有自动节点修复功能，而 Microsoft Azure 则通过节点代理和集群中的节点状态来触发修复。Azure 的恢复过程不如其他云服务提供商先进，因为它会尝试先重启节点，若无效则重新镜像，最后如果还失败，Azure
    工程师会调查问题。你可以在 [https://docs.microsoft.com/en-us/azure/aks/node-auto-repair](https://docs.microsoft.com/en-us/azure/aks/node-auto-repair)
    阅读更多关于此过程的内容。
- en: AKS fully supports integration with **Azure Active Directory** (**Azure AD**).
    This allows you to assign permissions inside your cluster using Azure AD users
    and groups. For more details, visit [https://docs.microsoft.com/en-us/azure/aks/managed-aad](https://docs.microsoft.com/en-us/azure/aks/managed-aad).
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 完全支持与 **Azure Active Directory**（**Azure AD**）的集成。这允许你使用 Azure AD 用户和组在集群内分配权限。更多细节，请访问
    [https://docs.microsoft.com/en-us/azure/aks/managed-aad](https://docs.microsoft.com/en-us/azure/aks/managed-aad)。
- en: AKS has Visual Studio Code extensions that allow developers to run and debug
    their code directly on their laptop as if it was part of the AKS cluster. Bridge
    to Kubernetes is basically like creating a VPN connection in your cluster so that
    pods running on your computer can directly communicate with the clusters and other
    pods running in the cluster. You can learn more about how this works at [https://docs.microsoft.com/en-us/visualstudio/bridge/overview-bridge-to-kubernetes?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/bridge/overview-bridge-to-kubernetes?view=vs-2019).
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 具有 Visual Studio Code 扩展，允许开发人员像在 AKS 集群中一样，在笔记本电脑上直接运行和调试代码。Bridge to Kubernetes
    基本上就像是在你的集群中创建一个 VPN 连接，使得在你的电脑上运行的 Pod 可以直接与集群及集群中其他 Pod 通信。你可以在 [https://docs.microsoft.com/en-us/visualstudio/bridge/overview-bridge-to-kubernetes?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/bridge/overview-bridge-to-kubernetes?view=vs-2019)
    了解更多关于如何工作的内容。
- en: 'The **cons** of AKS are as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: AKS 的 **缺点** 如下：
- en: The upgrade process for AKS has some manual steps.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 的升级过程包含一些手动步骤。
- en: Note
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The automatic cluster upgrade is in public preview. You can see the current
    status at [https://azure.microsoft.com/en-us/updates/public-preview-automatic-cluster-upgrades-in-aks/](https://azure.microsoft.com/en-us/updates/public-preview-automatic-cluster-upgrades-in-aks/).
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自动集群升级目前处于公开预览阶段。你可以在 [https://azure.microsoft.com/en-us/updates/public-preview-automatic-cluster-upgrades-in-aks/](https://azure.microsoft.com/en-us/updates/public-preview-automatic-cluster-upgrades-in-aks/)
    查看当前状态。
- en: Some settings such as network policies can only be set when creating clusters
    and cannot be enabled afterward. You can find more details at https://docs.microsoft.com/en-us/azure/aks/use-network-policies#create-an-aks-cluster-and-enable-network-policy.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些设置，如网络策略，只能在创建集群时设置，之后无法启用。你可以在 https://docs.microsoft.com/en-us/azure/aks/use-network-policies#create-an-aks-cluster-and-enable-network-policy
    中找到更多详细信息。
- en: AKS will only provide 99.95% of the SLA if you use regional clusters, which
    increases the cost of the cluster. Details about this cost can be found at [https://azure.microsoft.com/en-us/pricing/details/bandwidth/](https://azure.microsoft.com/en-us/pricing/details/bandwidth/).
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用的是区域集群，AKS 仅提供 99.95% 的 SLA，这会增加集群的成本。关于该成本的详细信息，可以在 [https://azure.microsoft.com/en-us/pricing/details/bandwidth/](https://azure.microsoft.com/en-us/pricing/details/bandwidth/)
    找到。
- en: Now that we understand the pros and cons of each of the major hosted providers,
    we are going to dive into getting everything set up in the cloud provider and
    in Rancher so that we can start creating clusters.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了每个主要托管提供商的优缺点，我们将深入探讨如何在云服务提供商和 Rancher 中设置一切，以便开始创建集群。
- en: Prepping the cloud provider
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备云服务提供商
- en: Before creating a hosted cluster in Rancher, we need to prepare the cloud provider
    for Rancher. In this section, we'll be covering setting up permissions in the
    three major hosted Kubernetes clusters, which are EKS, GKE, and AKS.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Rancher 中创建托管集群之前，我们需要为 Rancher 准备云服务提供商。在本节中，我们将涵盖如何在三个主要的托管 Kubernetes 集群中设置权限，分别是
    EKS、GKE 和 AKS。
- en: We'll start with Amazon EKS.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 Amazon EKS 开始。
- en: Amazon EKS
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon EKS
- en: 'The prerequisites are as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 前提条件如下：
- en: You should already have an AWS subscription created and available to use.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经创建并可以使用 AWS 订阅。
- en: You'll need permissions in AWS to be able to create **Identity and Access Management**
    (**IAM**) policies.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要在 AWS 中拥有权限，以便能够创建 **身份和访问管理** (**IAM**) 策略。
- en: Your Rancher server(s) should be able to reach AWS API public or private endpoints.
    You can read more about Amazon's API Gateway private endpoint at [https://aws.amazon.com/blogs/compute/introducing-amazon-api-gateway-private-endpoints/](https://aws.amazon.com/blogs/compute/introducing-amazon-api-gateway-private-endpoints/).
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 Rancher 服务器应该能够访问 AWS API 的公共或私有端点。你可以在 [https://aws.amazon.com/blogs/compute/introducing-amazon-api-gateway-private-endpoints/](https://aws.amazon.com/blogs/compute/introducing-amazon-api-gateway-private-endpoints/)
    阅读更多关于 Amazon API Gateway 私有端点的信息。
- en: EKS will require a VPC to be created, and you should work with your networking
    team to make it. Amazon has a tutorial located at [https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html](https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html)
    that covers creating a VPC.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EKS 需要创建一个 VPC，你应该与网络团队合作来完成这项工作。亚马逊提供了一个教程，位于 [https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html](https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html)，内容涵盖如何创建
    VPC。
- en: You should have a dedicated service account in AWS for Rancher.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该在 AWS 中为 Rancher 创建一个专用的服务账户。
- en: You should have a dedicated service account in Rancher, and this account should
    have admin-level permissions. You can use the local admin account for this role.
    For this section, we will assume that you will be using the local admin account.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该在 Rancher 中拥有一个专用的服务账户，并且该账户应该具备管理员级别的权限。你可以使用本地管理员账户来执行此角色。在本节中，我们假设你将使用本地管理员账户。
- en: Setup permissions
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置权限
- en: 'Here are the setup permissions for Rancher:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Rancher 的设置权限：
- en: If you do not already have a dedicated service account in AWS, you should follow
    the steps at [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html.](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html.)
    For this section, we are going to use the name `rancher` for this service account.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有在 AWS 中创建专用服务账户，你应该按照 [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html.](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html.)
    上的步骤创建。在本节中，我们将使用 `rancher` 作为此服务账户的名称。
- en: Now that we have the service account, we will assign an IAM policy to that account.
    This policy gives Rancher the permissions it needs to create an EKS cluster. The
    minimum required permissions can be found at https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/eks/#minimum-eks-permissions,
    and the steps for creating an IAM policy and attaching it to a service account
    can be found at [https://docs.aws.amazon.com/eks/latest/userguide/EKS_IAM_user_policies.html](https://docs.aws.amazon.com/eks/latest/userguide/EKS_IAM_user_policies.html).
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经拥有了服务账户，我们将为该账户分配一个IAM策略。此策略赋予Rancher创建EKS集群所需的权限。最小所需权限可以在https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/eks/#minimum-eks-permissions找到，创建IAM策略并将其附加到服务账户的步骤可以在[https://docs.aws.amazon.com/eks/latest/userguide/EKS_IAM_user_policies.html](https://docs.aws.amazon.com/eks/latest/userguide/EKS_IAM_user_policies.html)找到。
- en: We now need to create access and secret key pair, and the process for doing
    this can be found at https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey.
    It is important to note that as per Amazon's best practices guide for access keys,
    you should set an expiration time for the access key. This will require you to
    rotate it though. The best practices guide can be found at [https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html](https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html),
    and you can find the documentation for rotating access keys at [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#rotating_access_keys_console](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#rotating_access_keys_console).
    You should also store this key in a safe place if it is needed in the future.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要创建访问密钥和秘密密钥对，操作步骤可以在https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey找到。需要注意的是，根据Amazon的访问密钥最佳实践指南，你应该为访问密钥设置过期时间。这样，你将需要定期更换密钥。最佳实践指南可以在[https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html](https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html)找到，而旋转访问密钥的文档可以在[https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#rotating_access_keys_console](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#rotating_access_keys_console)找到。如果将来需要使用该密钥，建议将其存储在安全的位置。
- en: At this point, you should log into the Rancher web UI as the local admin or
    your dedicated service account.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，你应该以本地管理员或专用服务账户身份登录到Rancher Web UI。
- en: For the web UI, navigate to **Cluster Management** and then to **Cloud Credentials**.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Web UI，导航到**集群管理**，然后转到**云凭证**。
- en: Then, click on the **Create** button and select **Amazon** from the list.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**创建**按钮，并从列表中选择**Amazon**。
- en: 'Fill in the following form. You should give this credential a name that lets
    you know it''s for Amazon and what subscription it''s a part of – for example,
    you might call it `AWS-Prod`. The Rancher UI will test whether the credentials
    are correct but will not validate that the account has all the permissions that
    Rancher will need. Also, the default region doesn''t matter and can be changed
    at any time. It is also important to note that the access key will be visible,
    but the secret key is encrypted and cannot be quickly recovered from Rancher:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写以下表格。你应该为该凭证命名，使其能够标识这是针对Amazon的，并且是哪个订阅的一部分——例如，你可以将其命名为`AWS-Prod`。Rancher
    UI将测试凭证是否正确，但不会验证该账户是否具备Rancher所需的所有权限。另外，默认区域无关紧要，可以随时更改。还需要注意的是，访问密钥将会显示，但秘密密钥是加密的，无法从Rancher快速恢复：
- en: '![Figure 7.1 – The Cloud Credential setup wizard for Amazon'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.1 – Amazon云凭证设置向导'
- en: '](img/B18053_07_001.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18053_07_001.jpg)'
- en: Figure 7.1 – The Cloud Credential setup wizard for Amazon
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – Amazon云凭证设置向导
- en: For more details about the cloud credentials, please go to [https://rancher.com/docs/rancher/v2.5/en/user-settings/cloud-credentials/](https://rancher.com/docs/rancher/v2.5/en/user-settings/cloud-credentials/).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 有关云凭证的更多详情，请访问[https://rancher.com/docs/rancher/v2.5/en/user-settings/cloud-credentials/](https://rancher.com/docs/rancher/v2.5/en/user-settings/cloud-credentials/)。
- en: Now, let's move on to GKE.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续处理GKE。
- en: GKE
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GKE
- en: 'The prerequisites are as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 前提条件如下：
- en: You should already have a Google cloud project created and available to use.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经创建并准备好使用Google云项目。
- en: You'll need permissions in GCP to be able to create and assign roles.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要在GCP中具有创建和分配角色的权限。
- en: Your Rancher server(s) should be able to reach the GCP API public or private
    endpoints. You can read more about private access options for services at [https://cloud.google.com/vpc/docs/private-access-options](https://cloud.google.com/vpc/docs/private-access-options).
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 Rancher 服务器应该能够访问 GCP API 的公共或私有端点。你可以在[https://cloud.google.com/vpc/docs/private-access-options](https://cloud.google.com/vpc/docs/private-access-options)阅读更多关于私有访问选项的信息。
- en: As with AWS, you should have dedicated service accounts in both GCP and Rancher.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 AWS 一样，你应该在 GCP 和 Rancher 中都拥有专用的服务账户。
- en: If you want to use a private GKE cluster, you should review Rancher's documentation,
    [https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/private-clusters/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/private-clusters/),
    for all the additional steps and costs required for this type of cluster.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想使用私有的 GKE 集群，应该查看 Rancher 的文档，[https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/private-clusters/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/private-clusters/)，了解这种类型的集群所需的额外步骤和费用。
- en: Setup permissions
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置权限
- en: 'Here are the setup permissions for Rancher:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Rancher 的设置权限：
- en: If you do not already have a dedicated service account in GCP, you should follow
    the steps located at [https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances](https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances).
    For this section, we are going to use the name `rancher` for this service account.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有在 GCP 中创建专用服务账户，应该按照[https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances](https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances)中的步骤操作。在这一部分，我们将使用
    `rancher` 作为该服务账户的名称。
- en: 'Now that we have the service account, we will assign the following default
    roles to the rancher service account: `compute.viewer`, `viewer`, `container.admin`,
    and `iam.serviceAccountUser`.'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经有了服务账户，我们将为 Rancher 服务账户分配以下默认角色：`compute.viewer`、`viewer`、`container.admin`
    和 `iam.serviceAccountUser`。
- en: Instead of an API key pair, GCP uses a private key for service accounts. You'll
    need to save the key in JSON format. You can find a detailed set of instructions
    at https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys.
    You must keep this key for future use.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与 API 密钥对不同，GCP 使用服务账户的私钥。你需要将该密钥以 JSON 格式保存。你可以在 https://cloud.google.com/iam/docs/creating-managing-service-account-keys#creating_service_account_keys
    找到详细的操作指南。你必须保留此密钥以备将来使用。
- en: At this point, you should log into the Rancher web UI as the local admin or
    your dedicated service account.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，你应该以本地管理员身份或专用服务账户登录到 Rancher Web UI。
- en: Navigate to **Cluster Management** for the web UI and then to **Cloud Credentials**.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **集群管理** 的 Web UI，然后选择 **云凭证**。
- en: Then, click on the **Create** button and select **Google** from the list.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击 **创建** 按钮，并从列表中选择 **Google**。
- en: 'Fill in the following form. You should give this credential a name that lets
    you know it''s for Google and what project it''s a part of – for example, you
    might call it `GCP-Prod`. The Rancher UI will test whether the credentials are
    correct but will not validate that the account has all the permissions that Rancher
    will need:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写以下表单。你应该为这个凭证起个名字，能够让你知道它是用于 Google 的，并且属于哪个项目——例如，你可以称之为`GCP-Prod`。Rancher
    UI 会测试凭证是否正确，但不会验证该账户是否拥有 Rancher 所需的所有权限：
- en: '![Figure 7.2 – The Cloud Credential setup wizard for Google'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2 – Google 的云凭证设置向导'
- en: '](img/B18053_07_002.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18053_07_002.jpg)'
- en: Figure 7.2 – The Cloud Credential setup wizard for Google
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – Google 的云凭证设置向导
- en: Lastly, let's delve into AKS.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们深入了解 AKS。
- en: AKS
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AKS
- en: 'The prerequisites are as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 先决条件如下：
- en: You should already have an Azure subscription created and available to use.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经创建并可以使用 Azure 订阅。
- en: You'll need permissions in Azure AD to be able to create an app registration.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要在 Azure AD 中拥有权限，才能创建应用程序注册。
- en: Your Rancher server(s) should be able to reach the Azure API public or private
    endpoints. You can read more about private access options for services at [https://docs.microsoft.com/en-us/azure/api-management/api-management-using-with-internal-vnet?tabs=stv2](https://docs.microsoft.com/en-us/azure/api-management/api-management-using-with-internal-vnet?tabs=stv2).
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 Rancher 服务器应该能够访问 Azure API 的公共或私有端点。你可以在[https://docs.microsoft.com/en-us/azure/api-management/api-management-using-with-internal-vnet?tabs=stv2](https://docs.microsoft.com/en-us/azure/api-management/api-management-using-with-internal-vnet?tabs=stv2)阅读更多关于私有访问选项的信息。
- en: Azure doesn't need a dedicated service account, but as with AWS and GCP, Rancher
    should have one.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure不需要专用服务账户，但像AWS和GCP一样，Rancher应该有一个。
- en: You should have the Azure command-line tool already installed.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经安装了Azure命令行工具。
- en: You should have a resource group created for the AKS clusters and related services.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该为AKS集群和相关服务创建一个资源组。
- en: Setup permissions
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置权限
- en: 'Here are the setup permissions for Rancher:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是Rancher的设置权限：
- en: 'Run the following command. You''ll want to document the output, as we''ll need
    it later:'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行以下命令。你需要记录输出内容，因为稍后我们会用到：
- en: '[PRE0]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We now want to assign the contributor role to the service principal using the
    following command. Please note that you''ll need the app and subscription ID from
    the previous command:'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，我们想要使用以下命令为服务主体分配贡献者角色。请注意，你需要从之前的命令中获取应用程序和订阅ID：
- en: '[PRE1]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: At this point, you should log into the Rancher web UI as the local admin or
    your dedicated service account.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此时，你应该以本地管理员或专用服务账户登录到Rancher Web UI。
- en: Navigate to **Cluster Management** for the web UI and then to **Cloud Credentials**.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Web UI中导航到**集群管理**，然后进入**云凭证**。
- en: Then, click on the **Create** button and select **Azure** from the list.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，点击**创建**按钮，从列表中选择**Azure**。
- en: 'Fill in the following form. You should give this credential a name that lets
    you know it''s for Azure and what project it''s a part of – for example, you might
    call it `AZ-Prod`. The Rancher UI will test that the credentials are correct but
    will not validate that the account has all the permissions that Rancher will need.
    For the **Environment** field, **AzurePublicCloud** is the most common option
    unless you are using a government subscription:'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 填写以下表单。你应该给这个凭证起一个名称，以便你知道它是针对Azure的，以及它属于哪个项目——例如，你可以把它命名为`AZ-Prod`。Rancher
    UI会测试凭证是否正确，但不会验证该账户是否具有Rancher所需的所有权限。对于**环境**字段，**AzurePublicCloud**是最常见的选项，除非你正在使用政府订阅：
- en: '![Figure 7.3 – The Cloud Credential setup wizard for Azure'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.3 – Azure的云凭证设置向导'
- en: '](img/B18053_07_003.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18053_07_003.jpg)'
- en: Figure 7.3 – The Cloud Credential setup wizard for Azure
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – Azure的云凭证设置向导
- en: For the other cloud providers, you can find the steps at [https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/).
    At this point, Rancher should have access to the cloud provider. In the next section,
    we will go through creating some hosted clusters.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他云提供商，你可以在[https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/](https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/hosted-kubernetes-clusters/)找到步骤。此时，Rancher应该已经能够访问云提供商。接下来的部分我们将介绍如何创建一些托管集群。
- en: Installation steps
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装步骤
- en: In this section, we're going to create a hosted cluster, mainly using the default
    settings. For the examples, we will be continuing to use EKS, GKE, and AKS. Most
    of these settings can be translated for other cloud providers. It is important
    to note that you must already have the cloud credentials for each provider and
    environment you want to configure. It is also recommended that you keep Rancher
    up to date as cloud providers are constantly changing, and you might run into
    a bug simply because you are on an older version of Rancher. The latest stable
    versions can be found at [https://github.com/rancher/rancher#latest-release](https://github.com/rancher/rancher#latest-release).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个托管集群，主要使用默认设置。示例中，我们将继续使用EKS、GKE和AKS。这些设置大部分可以应用于其他云提供商。需要注意的是，你必须已经为每个提供商和环境配置了云凭证。还建议你保持Rancher的最新版本，因为云提供商不断变化，你可能会遇到一些bug，原因仅仅是你使用的是旧版本的Rancher。最新的稳定版本可以在[https://github.com/rancher/rancher#latest-release](https://github.com/rancher/rancher#latest-release)找到。
- en: We'll start with Amazon EKS.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从Amazon EKS开始。
- en: Amazon EKS
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon EKS
- en: 'The following steps show you how to set up EKS using Rancher:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了如何通过Rancher设置EKS：
- en: Log into Rancher using the service account that we used during the cloud credentials
    creation step.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们在创建云凭证步骤中使用的服务账户登录到Rancher。
- en: Browse the **Cluster Management** page, click on **Clusters**, and then click
    the **Create** button.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览**集群管理**页面，点击**集群**，然后点击**创建**按钮。
- en: Then, from the list, select **Amazon EKS**, at which point you should be prompted
    with a cluster setup wizard.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从列表中选择**Amazon EKS**，此时应该会弹出一个集群设置向导。
- en: 'You''ll want to give the cluster a name. This name can be changed later, but
    it is recommended not to change it, as that can lead to a name mismatch, which
    would then lead to a user deleting the wrong resource. Also, the description field
    is a freeform field that can provide additional information such as who owns this
    cluster or who should be contacted about this cluster; some users will use this
    field to post maintenance messages such as `Scheduled maintenance every Friday
    at 7 PM CDT`. This can be changed at any time. The bottom section assigns the
    cloud credential to this cluster:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要为集群指定一个名称。这个名称可以以后更改，但建议不要更改，因为这样可能导致名称不匹配，从而导致用户删除错误的资源。此外，描述字段是一个自由格式字段，可以提供额外的信息，例如谁拥有此集群或应该联系谁；一些用户会在此字段中发布维护信息，例如`每周五晚上7点CDT定期维护`。这个字段可以随时更改。底部部分将该云凭证分配给此集群：
- en: '![Figure 7.4 – The cluster creation wizard for Amazon EKS'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4 – Amazon EKS集群创建向导]'
- en: '](img/B18053_07_004.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B18053_07_004.jpg)'
- en: Figure 7.4 – The cluster creation wizard for Amazon EKS
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – Amazon EKS集群创建向导
- en: The rest of the wizard will fill in the default values. You can change them
    as you see fit, but you should know what you are changing.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向导的其余部分将填写默认值。你可以根据需要进行更改，但你应该知道自己在更改什么。
- en: The final step is to define the node groups. This includes settings such as
    the size of the node, the **Amazon Machine Image** (**AMI**) image, and the pool
    size. After defining the cluster, you should click the **Create** button, at which
    point Rancher will start the cluster creation process.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是定义节点组。这包括节点的大小、**Amazon机器镜像**（**AMI**）镜像和池大小等设置。定义完集群后，你应该点击**创建**按钮，此时Rancher将开始集群创建过程。
- en: The details for all the different settings can be found at [https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/eks-config-reference/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/eks-config-reference/).
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有不同设置的详细信息可以在[https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/eks-config-reference/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/eks-config-reference/)找到。
- en: The cluster will go into the **Updating** status, depending on the cluster's
    size and Amazon's request queue. This process can take anywhere from 2 to 60 minutes.
    Please note that the wait is primarily dependent on Amazon and how busy they are.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 集群将进入**更新中**状态，具体取决于集群的大小和Amazon的请求队列。这个过程可能需要2到60分钟不等。请注意，等待时间主要取决于Amazon及其繁忙程度。
- en: Let's move on to GKE.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们来看一下GKE。
- en: GKE
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GKE
- en: 'Now, let''s look at the installation steps for GKE:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来看看GKE的安装步骤：
- en: Follow the same steps as you did for EKS, but this time, select **Google GKE**
    from the options menu.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照你为EKS所做的相同步骤进行操作，但这次从选项菜单中选择**Google GKE**。
- en: The main difference is the **Account access** section, as it may ask you to
    re-enter the cloud credentials and Google project ID.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主要的区别在于**账户访问**部分，因为它可能会要求你重新输入云凭证和Google项目ID。
- en: The details for all the different settings can be found at [https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/).
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有不同设置的详细信息可以在[https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/gke-config-reference/)找到。
- en: Again, the final step of clicking the **Create** button will cause Rancher to
    start the cluster creation process.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次，点击**创建**按钮的最后一步将导致Rancher开始集群创建过程。
- en: The cluster will go into the **Updating** status, depending on the cluster's
    size and Google request queue. This process usually takes around 15 minutes.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 集群将进入**更新中**状态，具体取决于集群的大小和Google的请求队列。这个过程通常需要大约15分钟。
- en: Lastly, let's look into AKS.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来看一下AKS。
- en: AKS
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AKS
- en: 'Lastly, the installation procedure for AKS is as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，AKS的安装过程如下：
- en: Follow the same steps for EKS and GKE, but this time, select **Azure AKS** from
    the options menu.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照相同的步骤进行EKS和GKE的操作，但这次从选项菜单中选择**Azure AKS**。
- en: The details for all the different settings can be found at [https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/aks-config-reference/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/aks-config-reference/).
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有不同设置的详细信息可以在[https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/aks-config-reference/](https://rancher.com/docs/rancher/v2.6/en/cluster-admin/editing-clusters/aks-config-reference/)找到。
- en: It is important to note that the network policy is a setting that can only be
    enabled when creating clusters. You can find details about the different options
    at https://docs.microsoft.com/en-us/azure/aks/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要注意的是，网络策略是只能在创建集群时启用的设置。你可以在 [此链接](https://docs.microsoft.com/en-us/azure/aks/use-network-policies#differences-between-azure-and-calico-policies-and-their-capabilities)
    查找有关不同选项的详细信息。
- en: Again, the final step of clicking the **Create** button will cause Rancher to
    start the cluster creation process.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，点击**创建**按钮的最后一步将导致 Rancher 启动集群创建过程。
- en: The cluster will go into the **Updating** status, depending on the cluster's
    size and Microsoft's request queue. This process usually takes around 60 minutes.
    From experience, the first cluster in a subscription takes the longest, with additional
    clusters being faster.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 集群将进入**更新**状态，具体取决于集群的大小和微软的请求队列。此过程通常需要约 60 分钟。从经验来看，订阅中的第一个集群需要的时间最长，后续集群会更快。
- en: At this point, we should have a Kubernetes cluster from one or more of the cloud
    providers and be able to easily repeat this process for as many different clusters
    as we need. This leads us into the final section on what do you do after your
    cluster is up and running.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们应该已经拥有一个来自一个或多个云服务提供商的 Kubernetes 集群，并且能够轻松地为需要的不同集群重复此过程。这将引导我们进入最后一部分，讨论集群启动并运行后应该做什么。
- en: Ongoing maintenance tasks
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续维护任务
- en: After creating a cluster, a few ongoing maintenance tasks need to be done to
    keep it running in a healthy state.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建集群后，需要进行一些持续的维护任务，以保持集群的健康状态。
- en: The first recommended task is setting up backups. But because these are hosted
    clusters, we can't take an etcd backup as we would with an RKE1/2 cluster. So,
    we'll need to use a third-party tool such as `kubectl apply` on the backup files.
    We will be covering these tools in an upcoming chapter.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个推荐任务是设置备份。但由于这是托管集群，我们不能像在 RKE1/2 集群中那样进行 etcd 备份。因此，我们需要使用第三方工具，如对备份文件执行
    `kubectl apply`。我们将在后续章节中介绍这些工具。
- en: The second recommended task is testing and documenting how an upgrade impacts
    your applications. As most cloud providers will do a force drain of a node during
    a scheduled upgrade, you'll want to test how your application handles this kind
    of drain. For example, if you are using a multi-master database such as MariaDB
    Galera Cluster, do your database pods rebuild faster than the worker nodes are
    drained? A typical way to test this is by changing the node image to simulate
    the effects of a Kubernetes upgrade. This is because most providers don't allow
    you to downgrade your clusters. So, being able to repeat this test over and over
    again is not possible.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个推荐任务是测试和记录升级如何影响你的应用程序。由于大多数云服务提供商在计划升级期间会强制驱逐节点，你需要测试你的应用程序如何处理这种类型的驱逐。例如，如果你使用的是像
    MariaDB Galera Cluster 这样的多主数据库，你的数据库 pod 重建速度是否比工作节点的驱逐速度更快？测试这一点的典型方法是通过更改节点镜像来模拟
    Kubernetes 升级的影响。这是因为大多数提供商不允许你降级集群。因此，无法反复进行此测试。
- en: Summary
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we learned about the different types of hosted clusters that
    Rancher can deploy, including the requirements and limitations of each. We then
    covered the rules of architecting each type of cluster, including some of the
    pros and cons of each solution. We finally went into detail about the steps for
    creating each type of cluster. We ended the chapter by going over the major ongoing
    maintenance tasks.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了 Rancher 可以部署的不同类型的托管集群，包括每种类型的要求和限制。接着我们讨论了架构每种类型集群的规则，包括每种解决方案的一些优缺点。最后，我们详细介绍了创建每种类型集群的步骤。本章结束时，我们回顾了主要的持续维护任务。
- en: The next chapter will cover importing an externally managed cluster into Rancher.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍如何将外部管理的集群导入到 Rancher。
