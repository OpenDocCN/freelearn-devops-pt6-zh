- en: '18'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '18'
- en: The Future of Kubernetes
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes的未来
- en: In this chapter, we will look at the future of Kubernetes from multiple angles.
    We’ll start with the momentum of Kubernetes since its inception across dimensions
    such as community, ecosystem, and mindshare. Spoiler alert – Kubernetes won the
    container orchestration wars by a landslide. As Kubernetes grows and matures,
    the battle lines shift from beating competitors to fighting against its own complexity.
    Usability, tooling, and education will play a major role as container orchestration
    is still new, fast-moving, and not a well-understood domain. Then we will take
    a look at some very interesting patterns and trends, and finally, we will review
    my predictions from the second edition, and I will make some new predictions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将从多个角度审视Kubernetes的未来。我们将从Kubernetes自诞生以来在社区、生态系统和思维领导力等多个维度的势头开始。剧透一下——Kubernetes在容器编排战争中以压倒性优势获胜。随着Kubernetes的发展和成熟，竞争对手的较量逐渐转变为与自身复杂性作斗争。可用性、工具链和教育将发挥重要作用，因为容器编排仍然是一个全新的、快速发展的领域，而且尚未被充分理解。接下来，我们将看看一些非常有趣的模式和趋势，最后，我们将回顾我在第二版中的预测，并做出一些新的预测。
- en: 'The covered topics are as follows:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 涵盖的主题如下：
- en: The Kubernetes momentum
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes的势头
- en: The importance of CNCF
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CNCF的重要性
- en: Kubernetes extensibility
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes的可扩展性
- en: Service mesh integration
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务网格集成
- en: Serverless computing on Kubernetes
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kubernetes上实现无服务器计算
- en: Kubernetes and VMs
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes与虚拟机（VM）
- en: Cluster autoscaling
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群自动扩展
- en: Ubiquitous operators
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无处不在的操作员
- en: Kubernetes for AI
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes与人工智能
- en: Kubernetes challenges
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes的挑战
- en: The Kubernetes momentum
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes的势头
- en: Kubernetes is undeniably a juggernaut. Not only did Kubernetes beat all the
    other container orchestrators, but it is also the de facto solution on public
    clouds, utilized in many private clouds, and even VMware – the virtual machine
    company – is focused on Kubernetes solutions and integrating its products with
    Kubernetes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes无可否认地是一个巨头。Kubernetes不仅打败了所有其他容器编排工具，而且它还是公共云上的事实标准，许多私有云也在使用它，甚至虚拟机公司VMware也专注于Kubernetes解决方案并将其产品与Kubernetes集成。
- en: Kubernetes works very well in multi-cloud and hybrid-cloud scenarios due to
    its extensible design.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其可扩展的设计，Kubernetes在多云和混合云场景中表现非常出色。
- en: In addition, Kubernetes makes inroads on the edge, too, with custom distributions
    that expand its broad applicability even more.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Kubernetes还在边缘计算方面取得了进展，通过定制发行版进一步扩大了其广泛适用性。
- en: The Kubernetes project continues to release a new version every three months,
    like clockwork. The community just keeps growing.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes项目每三个月就会发布一个新版本，几乎像时钟一样精准。社区也在不断壮大。
- en: The Kubernetes GitHub repository has almost 100,000 stars. One of the major
    drivers of this phenomenal growth is the **CNCF** (**Cloud Native Computing Foundation**).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes的GitHub仓库几乎有100,000颗星。推动这一惊人增长的主要因素之一是**CNCF**（**云原生计算基金会**）。
- en: '![](img/B18998_18_01.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18998_18_01.png)'
- en: 'Figure 18.1: Star History chart'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.1：明星历史图表
- en: The importance of the CNCF
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CNCF的重要性
- en: 'The CNCF has become a very important organization in the cloud computing scene.
    While it is not Kubernetes-specific, the dominance of Kubernetes is undeniable.
    Kubernetes is the first project to graduate, and most of the other projects lean
    heavily toward Kubernetes. In particular, the CNCF offers certification and training
    only for Kubernetes. The CNCF, among other roles, ensures that cloud technologies
    will not suffer from vendor lock-in. Check out this crazy diagram of the entire
    CNCF landscape: [https://landscape.cncf.io](https://landscape.cncf.io).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: CNCF已成为云计算领域一个非常重要的组织。尽管它并非专门针对Kubernetes，Kubernetes的主导地位却是不可否认的。Kubernetes是第一个毕业的项目，其他大多数项目也都在很大程度上依赖Kubernetes。特别是，CNCF仅为Kubernetes提供认证和培训。CNCF除了其他角色之外，还确保云技术不会遭受厂商锁定。查看这张展示整个CNCF生态的疯狂图表：[https://landscape.cncf.io](https://landscape.cncf.io)。
- en: Project curation
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目策划
- en: 'The CNCF assigns maturity levels to projects: **graduated**, **incubating**,
    and **sandbox**:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: CNCF为项目分配成熟度级别：**已毕业**、**孵化中**和**沙箱**：
- en: '![CNCF maturity levels](img/B18998_18_02.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![CNCF成熟度级别](img/B18998_18_02.png)'
- en: 'Figure 18.2: CNCF maturity levels'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.2：CNCF成熟度级别
- en: Projects start at a certain level – sandbox or incubating – and over time, can
    graduate. That doesn’t mean that only graduated projects can be safely used. Many
    incubating and even sandbox projects are used heavily in production. For example,
    etcd is the persistent state store of Kubernetes itself, and it is just an incubating
    project. Obviously, it is a highly trusted component. Virtual Kubelet is a sandbox
    project that powers AWS Fargate and Microsoft ACI. This is clearly enterprise-grade
    software.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 项目从某个级别开始——沙箱或孵化阶段——并随着时间的推移，逐步毕业。这并不意味着只有毕业的项目才能安全使用。许多孵化阶段甚至沙箱阶段的项目在生产环境中被大量使用。例如，etcd
    是 Kubernetes 本身的持久状态存储，它只是一个孵化项目，但显然是一个高度可信赖的组件。虚拟 Kubelet 是一个沙箱项目，它支持 AWS Fargate
    和 Microsoft ACI。显然，这是一个企业级软件。
- en: The main benefit of the CNCF curation of projects is to help navigate the incredible
    ecosystem that grew around Kubernetes. When you look to extend your Kubernetes
    solution with additional technologies and tools, the CNCF projects are a good
    place to start.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: CNCF 对项目的策划和管理的主要好处是帮助人们导航 Kubernetes 周围庞大的生态系统。当你想通过额外的技术和工具扩展你的 Kubernetes
    解决方案时，CNCF 项目是一个很好的起点。
- en: Certification
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 认证
- en: 'When technologies start to offer certification programs, you can tell they
    are here to stay. The CNCF offers several types of certifications:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当技术开始提供认证项目时，可以看出它们会长期存在。CNCF 提供几种类型的认证：
- en: Certified Kubernetes for conforming Kubernetes distributions and installers
    (about 90).
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证 Kubernetes，适用于符合标准的 Kubernetes 发行版和安装程序（大约 90 个）。
- en: '**Kubernetes Certified Service Provider** (**KCSP**) for vetted service providers
    with deep Kubernetes experience (134 providers).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes 认证服务提供商**（**KCSP**），适用于具有深厚 Kubernetes 经验的经过验证的服务提供商（134 个提供商）。'
- en: '**Certified Kubernetes Administrator** (**CKA**) for administrators.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes 认证管理员**（**CKA**），适用于管理员。'
- en: '**Certified Kubernetes Application Developer** (**CKAD**) for developers.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes 认证应用开发者**（**CKAD**），适用于开发者。'
- en: '**Certified Kubernetes Security Specialist** (**CKS**) for security experts.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes 认证安全专家**（**CKS**），适用于安全专家。'
- en: Training
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 培训
- en: The CNCF offers training too. There is a free introduction to Kubernetes course
    and several paid courses that align with the CKA and CKAD certification exams.
    In addition, the CNCF maintains a list of Kubernetes training partners ([https://landscape.cncf.io/card-mode?category=kubernetes-training-partner&grouping=category](https://landscape.cncf.io/card-mode?category=kubernetes-training-partner&grouping=category)).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: CNCF 也提供培训。它提供免费的 Kubernetes 入门课程，以及与 CKA 和 CKAD 认证考试对接的多个付费课程。此外，CNCF 维护了一份
    Kubernetes 培训伙伴名单（[https://landscape.cncf.io/card-mode?category=kubernetes-training-partner&grouping=category](https://landscape.cncf.io/card-mode?category=kubernetes-training-partner&grouping=category)）。
- en: 'If you’re looking for free Kubernetes training, here are a couple of options:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找免费的 Kubernetes 培训，以下是一些选择：
- en: VMware Kubernetes academy
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware Kubernetes 学院
- en: Google Kubernetes Engine on Coursera
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Coursera 上的 Google Kubernetes Engine
- en: Community and education
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 社区与教育
- en: The CNCF also organizes conferences like KubeCon, CloudNativeCon, and meetups
    and maintains several communication avenues like Slack channels and mailing lists.
    It also publishes surveys and reports.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: CNCF 还组织诸如 KubeCon、CloudNativeCon 等会议和聚会，并维护多个通信渠道，如 Slack 频道和邮件列表。它还发布调查和报告。
- en: The number of attendees and participants keeps growing year after year.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 参会者和参与者的数量每年都在不断增长。
- en: Tooling
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具
- en: 'The number of tools to manage containers and clusters, the various add-ons,
    extensions, and plugins just keep growing. Here is a subset of the tools, projects,
    and companies that participate in the Kubernetes ecosystem:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 管理容器和集群的工具、各种附加组件、扩展和插件不断增加。以下是 Kubernetes 生态系统中一些参与的工具、项目和公司：
- en: '![Kubernetes Tooling](img/B18998_18_03.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![Kubernetes 工具](img/B18998_18_03.png)'
- en: 'Figure 18.3: Kubernetes tooling'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18.3：Kubernetes 工具
- en: The rise of managed Kubernetes platforms
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 托管 Kubernetes 平台的崛起
- en: Pretty much every cloud provider has a solid managed Kubernetes offering these
    days. Sometimes there are multiple flavors and ways of running Kubernetes on a
    given cloud provider.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个云服务提供商现在都有强大的托管 Kubernetes 服务。有时，在某些云服务提供商上，运行 Kubernetes 的方式和版本也会有所不同。
- en: Public cloud Kubernetes platforms
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公共云 Kubernetes 平台
- en: 'Here are some of the prominent managed platforms:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些著名的托管平台：
- en: Google GKE
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google GKE
- en: Microsoft AKS
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft AKS
- en: Amazon EKS
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon EKS
- en: Digital Ocean
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Digital Ocean
- en: Oracle Cloud
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle Cloud
- en: IBM Cloud Kubernetes service
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IBM Cloud Kubernetes 服务
- en: Alibaba ACK
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alibaba ACK
- en: Tencent TKE
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 腾讯 TKE
- en: Of course, you can always roll your own and use the public cloud providers just
    as infrastructure providers. This is a very common use case with Kubernetes.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您总是可以自己构建并将公共云服务提供商作为基础设施提供商使用。这是Kubernetes中非常常见的用例。
- en: Bare metal, private clouds, and Kubernetes on the edge
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 裸金属、私有云和边缘计算上的Kubernetes
- en: 'Here, you can find Kubernetes distributions that are designed or configured
    to run in special environments, often in your own data centers as a private cloud
    or in more restricted environments like edge computing on small devices:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以找到为在特定环境中运行而设计或配置的Kubernetes发行版，通常是在您的数据中心作为私有云，或者在边缘计算等更受限的环境中运行，例如在小型设备上：
- en: Google Anthos for GKE
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Anthos for GKE
- en: OpenStack
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenStack
- en: Rancher k3S
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rancher k3S
- en: Kubernetes on Raspberry PI
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raspberry PI上的Kubernetes
- en: KubeEdge
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KubeEdge
- en: Kubernetes PaaS (Platform as a Service)
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kubernetes PaaS（平台即服务）
- en: 'This category of offerings aims to abstract some of the complexity of Kubernetes
    and put a simpler facade in front of it. There are many varieties here. Some of
    them cater to the multi-cloud and hybrid-cloud scenarios, some expose a function-as-a-service
    interface, and some just focus on a better installation and support experience:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这一类产品旨在抽象出Kubernetes的一些复杂性，并为其提供一个更简单的外壳。这里有许多种类。其中一些迎合了多云和混合云的场景，一些提供了功能即服务的接口，另一些则专注于更好的安装和支持体验：
- en: Google Cloud Run
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud Run
- en: VMware PKS
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware PKS
- en: Platform 9 PMK
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Platform 9 PMK
- en: Giant Swarm
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giant Swarm
- en: OpenShift
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift
- en: Rancher RKE
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rancher RKE
- en: Upcoming trends
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 即将到来的趋势
- en: Let’s talk about some of the technological trends in the Kubernetes world that
    will be important in the near future.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们谈谈一些Kubernetes世界中即将到来的技术趋势，这些趋势将在不久的将来变得重要。
- en: Security
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全性
- en: Security is, of course, a paramount concern for large-scale systems. Kubernetes
    is primarily a platform for managing containerized workloads. Those containerized
    workloads are often run in a multi-tenant environment. The isolation between tenants
    is super important. Containers are lightweight and efficient because they share
    an OS and maintain their isolation through various mechanisms like namespace isolation,
    filesystem isolation, and cgroup resource isolation. In theory, this should be
    enough. In practice, the surface area is large, and there were multiple breakouts
    out of container isolation.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性当然是大规模系统中的首要问题。Kubernetes主要是一个用于管理容器化工作负载的平台。这些容器化的工作负载通常运行在一个多租户环境中。租户之间的隔离非常重要。容器轻量高效，因为它们共享一个操作系统，并通过各种机制（如命名空间隔离、文件系统隔离和cgroup资源隔离）来保持它们的隔离。理论上，这应该足够了。但在实践中，表面面积很大，容器隔离出现了多个突破。
- en: To address this risk, multiple lightweight VMs were designed to add a hypervisor
    (machine-level virtualization) as an additional isolation level between the container
    and the OS kernel. The big cloud providers already support these technologies,
    and the Kubernetes CRI interface provides a streamlined way to take advantage
    of these more secure runtimes.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对这一风险，设计了多个轻量级虚拟机，加入了一个超监视器（机器级虚拟化），作为容器和操作系统内核之间的额外隔离层。大型云服务提供商已经支持这些技术，而Kubernetes
    CRI接口提供了一种简化的方式来利用这些更安全的运行时。
- en: For example, FireCracker is integrated with containerd via firecracker-containerd.
    Google gVisor is another sandbox technology. It is a userspace kernel that implements
    most of the Linux system calls and provides a buffer between the application and
    the host OS. It is also available through containerd via gvisor-containerd-shim.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，FireCracker通过firecracker-containerd与containerd集成。Google gVisor是另一种沙盒技术，它是一个用户空间内核，实施大多数Linux系统调用，并在应用程序和宿主操作系统之间提供缓冲区。它也可以通过gvisor-containerd-shim通过containerd使用。
- en: Networking
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络
- en: Networking is another area that is an ongoing source of innovation. The Kubernetes
    CNI allows any number of innovative networking solutions behind a simple interface.
    A major theme is the incorportation of eBPF – a relatively new Linux kernel technology
    – into Kubernetes.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 网络是另一个持续创新的领域。Kubernetes CNI允许在一个简单的接口后面使用各种创新的网络解决方案。一个主要的主题是将eBPF（一种相对较新的Linux内核技术）整合到Kubernetes中。
- en: '**eBPF** stands for **extended Berkeley Packet Filter**. The core of eBPF is
    a mini-VM in the Linux kernel that executes special programs attached to kernel
    objects when certain events occur, such as a packet being transmitted or received.
    Originally, only sockets were supported, and the technology was called just BPF.
    Later, additional objects were added to the mix and that’s when the *e* for *extended*
    came along. eBPF’s claim to fame is its performance due to the fact it runs highly
    optimized compiled BPF programs in the kernel and doesn’t require extending the
    kernel with kernel modules.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**eBPF**代表**扩展伯克利数据包过滤器**。eBPF的核心是Linux内核中的一个迷你虚拟机，它在发生特定事件（如数据包传输或接收）时执行附加到内核对象的特殊程序。最初，只支持套接字，这项技术当时称为BPF。后来，更多的对象被添加到这个技术中，这就是为什么会有*e*代表*扩展*。eBPF的著名之处在于其性能，因为它在内核中运行经过高度优化的编译BPF程序，并且无需通过内核模块扩展内核。'
- en: 'There are many applications for eBPF:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: eBPF有很多应用场景：
- en: '**Dynamic network control**: iptables-based approaches don’t scale very well
    in a dynamic environment like a Kubernetes cluster where you have a constantly
    changing set of pods and services. Replacing iptables with BPF programs is both
    more performant and more manageable. Cilium is focused on routing and filtering
    traffic using eBPF.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态网络控制**：基于iptables的方法在像Kubernetes集群这样的动态环境中不太适用，因为Kubernetes集群中有不断变化的Pods和服务。用BPF程序替代iptables不仅更高效，而且更易管理。Cilium专注于使用eBPF进行流量路由和过滤。'
- en: '**Monitoring connections**: Creating an up-to-date map of TCP connections between
    containers is possible by attaching a BPF program kprobes that track socket-level
    events. WeaveScope utilizes this capability by running an agent on each node that
    collects this information and sends it to a server that provides a visual representation
    through a slick UI.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控连接**：通过附加一个跟踪套接字级事件的BPF程序kprobes，可以创建一个容器之间TCP连接的最新映射。WeaveScope通过在每个节点上运行一个代理来收集这些信息，并将其发送到一个服务器，通过流畅的UI提供可视化展示。'
- en: '**Restricting syscalls**: The Linux kernel provides more than 300 system calls.
    In a security-sensitive container environment, it is highly desirable. The original
    seccomp facility was pretty rudimentary. In Linux 3.5, seccomp was extended to
    support BPF for advanced custom filters.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制系统调用**：Linux内核提供了300多个系统调用。在一个对安全要求较高的容器环境中，限制这些系统调用是非常有益的。原始的seccomp功能相对基础。在Linux
    3.5中，seccomp被扩展以支持BPF进行高级自定义过滤。'
- en: '**Raw performance**: eBPF provides significant performance benefits, and projects
    like Calico took advantage and implemented a faster data plane that uses fewer
    resources.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始性能**：eBPF提供了显著的性能优势，像Calico这样的项目利用这一点实现了一个更快的数据平面，且使用了更少的资源。'
- en: Custom hardware and devices
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定制硬件和设备
- en: 'Kubernetes manages nodes, networking, and storage at a relatively high level.
    But there are many benefits to integrating specific hardware at a fine-grained
    level. For example, GPUs, high-performance network cards, FPGAs, InfiniBand adapters,
    and other compute and networking and storage resources. This is where the device
    plugin framework comes in, which can be found here: [https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins).
    It has been in GA since Kubernetes 1.26, and there is ongoing innovation in this
    area. For example, monitoring device plugin resources is also in beta since Kubernetes
    1.15\. It is very interesting to see what devices will be harnessed to Kubernetes.
    The framework itself follows modern Kubernetes extensibility practices by utilizing
    gRPC.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes在较高层次上管理节点、网络和存储。但将特定硬件集成到更细粒度的层次上有很多好处。例如，GPU、高性能网卡、FPGA、InfiniBand适配器以及其他计算、网络和存储资源。这时，设备插件框架就派上用场了，可以在这里找到：[https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins)。自Kubernetes
    1.26以来，它已进入GA阶段，并且这一领域的创新仍在持续。例如，自Kubernetes 1.15起，设备插件资源的监控也处于beta阶段。非常有趣的是，看到哪些设备将被集成到Kubernetes中。该框架本身通过使用gRPC遵循现代Kubernetes的可扩展性实践。
- en: Service mesh
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务网格
- en: The service mesh is arguably the most important trend in networking over the
    last couple of years. We covered service meshes in depth in *Chapter 14*, *Utilizing
    Service Meshes*. The adoption is impressive, and I predict that most Kubernetes
    distributions will provide a default service mesh and allow easy integration with
    other service meshes. The benefits that service meshes provide are just too valuable.
    It makes sense to provide a default platform that includes Kubernetes with an
    integrated service mesh. That said, Kubernetes itself will not absorb some service
    mesh and expose it through its API. This goes against the grain of keeping the
    core of Kubernetes small.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 服务网格可以说是过去几年中网络领域最重要的趋势。我们在*第14章*《利用服务网格》中深入探讨了服务网格的内容。服务网格的采用令人印象深刻，我预测大多数Kubernetes发行版将提供默认的服务网格，并允许与其他服务网格进行轻松集成。服务网格带来的好处是无价的。因此，提供一个包含集成服务网格的默认平台是合情合理的。然而，Kubernetes本身不会吸收某些服务网格并通过其API进行暴露。这与保持Kubernetes核心简洁的理念背道而驰。
- en: Google Anthos is a good example where Kubernetes + Knative + Istio are combined
    to provide a unified platform that provides an opinionated best-practices bundle
    that would take an organization a lot of time and resources to build on top of
    vanilla Kubernetes.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Google Anthos是一个很好的例子，它将Kubernetes + Knative + Istio结合在一起，提供了一个统一的平台，提供了一套有指导性的最佳实践组合，而这些组合如果由组织自行构建，将需要花费大量时间和资源，且必须基于原生Kubernetes。
- en: 'Another push in this direction is the sidecar container KEP; information about
    it can be found here: [https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/753-sidecar-containers/README.md](https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/753-sidecar-containers/README.md).'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个推动这一方向的举措是边车容器的KEP，相关信息可以在这里找到：[https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/753-sidecar-containers/README.md](https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/753-sidecar-containers/README.md)。
- en: The sidecar container pattern has been a staple of Kubernetes from the get-go.
    After all, pods can contain multiple containers. But there was no notion of a
    main container or a sidecar container. All containers in the pod have the same
    status. Most service meshes use sidecar containers to intercept traffic and perform
    their jobs. Formalizing sidecar containers will help those efforts and push service
    meshes even further.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 边车容器模式从一开始就是Kubernetes的一个重要组成部分。毕竟，Pod可以包含多个容器。但在早期并没有明确区分主容器和边车容器，Pod中的所有容器地位是平等的。大多数服务网格使用边车容器来拦截流量并执行其任务。规范化边车容器将有助于这些工作，并进一步推动服务网格的发展。
- en: It’s not clear at this stage if Kubernetes and the service mesh will be hidden
    behind a simpler abstraction on most platforms or if they will be front and center.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当前尚不清楚Kubernetes和服务网格是否会在大多数平台上隐藏在更简化的抽象层后面，或者它们是否会被直接暴露。
- en: Serverless computing
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无服务器计算
- en: Serverless computing is another trend that is here to stay. We discussed it
    at length in *Chapter 12*, *Serverless Computing on Kubernetes*. Kubernetes and
    serverless can be combined on multiple levels. Kubernetes can utilize serverless
    cloud solutions like AWS Fargate and **AKS Azure Container Instances** (**ACI**)
    to save the cluster administrator from managing nodes. This approach also caters
    to integrating lightweight VMs transparently with Kubernetes since the cloud platforms
    don’t use naked Linux containers for their container-as-a-service platforms.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器计算是另一个注定会持续的趋势。我们在*第12章*《Kubernetes上的无服务器计算》中进行了详细讨论。Kubernetes和无服务器计算可以在多个层次上结合使用。Kubernetes可以利用像AWS
    Fargate和**AKS Azure容器实例**（**ACI**）这样的无服务器云解决方案，减轻集群管理员管理节点的负担。该方法还可支持与Kubernetes的轻量级虚拟机透明集成，因为云平台并没有使用裸Linux容器作为其容器即服务平台的基础。
- en: Another avenue is to reverse the roles and expose containers as a service powered
    by Kubernetes under the covers. This is exactly what Google Cloud Run is doing.
    The lines blur here as there are multiple products from Google to manage containers
    and/or Kubernetes ranging from just GKE, through Anthos GKE (bring your own cluster
    to the GKE environment for your private data center), Anthos (managed Kubernetes
    + service mesh), and Anthos Cloud Run.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种途径是反转角色，将容器作为由Kubernetes提供支持的服务进行暴露。这正是Google Cloud Run所做的。在这里，界限变得模糊，因为Google提供了多个产品来管理容器和/或Kubernetes，从仅仅是GKE，到Anthos
    GKE（将自己的集群带入GKE环境，供私有数据中心使用），Anthos（托管Kubernetes + 服务网格），以及Anthos Cloud Run。
- en: Finally, there are functions-as-a-service and scale-to-zero projects running
    inside your Kubernetes cluster. Knative may become the leader here, as it is already
    used by many frameworks, and is deployed heavily through various Google products.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，有一些功能即服务和按需扩展的项目正在你的 Kubernetes 集群中运行。Knative 可能会成为这方面的领导者，因为它已经被许多框架使用，并且通过各种
    Google 产品进行广泛部署。
- en: Kubernetes on the edge
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘上的 Kubernetes
- en: 'Kubernetes is the poster boy of cloud-native computing, but with the **Internet
    of Things** (**IoT**) revolution, there is more need to perform computation at
    the edge of the network. Sending all data to the backend for processing suffers
    from several drawbacks:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 是云原生计算的代表，但随着**物联网**（**IoT**）的革命，越来越需要在网络边缘执行计算。将所有数据发送到后台进行处理存在几个缺点：
- en: Latency
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟
- en: Need for enough bandwidth
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 足够带宽的需求
- en: Cost
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本
- en: With edge locations collecting a lot of data via sensors, video cameras, etc.,
    the amount of edge data grows, and it makes more sense to perform more and more
    sophisticated processing at the edge. Kubernetes grew out of Google’s Borg, which
    was definitely not designed to run at the edge of the network. But Kubernetes’
    design proved to be flexible enough to accommodate it. I expect that we will see
    more and more Kubernetes deployments at the edge of the network, which will lead
    to very interesting systems that are composed of many Kubernetes clusters that
    will need to be managed centrally.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 随着边缘位置通过传感器、视频摄像头等收集大量数据，边缘数据量不断增长，进行越来越复杂的处理在边缘端变得更加合理。Kubernetes 源自 Google
    的 Borg，后者显然并非为了在网络边缘运行而设计。但 Kubernetes 的设计证明其足够灵活，可以适应这一需求。我预计，我们将看到越来越多的 Kubernetes
    部署在网络边缘，这将催生出由多个 Kubernetes 集群组成的非常有趣的系统，这些集群需要进行集中管理。
- en: KubeEdge is an open-source framework that is built on top of Kubernetes and
    Mosquito – an open-source implementation of MQTT message broker – to provide a
    foundation for networking, application deployment, and metadata synchronization
    between the cloud and the edge.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: KubeEdge 是一个开源框架，建立在 Kubernetes 和 Mosquito（一个开源的 MQTT 消息代理实现）之上，提供一个用于云端和边缘之间的网络、应用部署以及元数据同步的基础。
- en: Native CI/CD
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原生 CI/CD
- en: For developers, one of the most important questions is the construction of a
    CI/CD pipeline. There are many options and choosing between them can be difficult.
    The CD Foundation is an open source foundation that was formed to standardize
    concepts like pipelines and workflows, and define industry specifications that
    will allow different tools and communities to interoperate better.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对开发者而言，最重要的问题之一是构建 CI/CD 管道。市场上有很多选择，做出选择可能非常困难。CD 基金会是一个开源基金会，旨在标准化管道和工作流等概念，并定义行业规范，使不同的工具和社区能够更好地互操作。
- en: 'The current projects are:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的项目有：
- en: Jenkins
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenkins
- en: Tekton
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tekton
- en: Spinnaker
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spinnaker
- en: Jenkins X
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenkins X
- en: Screwdriver.cd
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Screwdriver.cd
- en: Ortelius
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ortelius
- en: CDEvents
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDEvents
- en: Pyrsia
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pyrsia
- en: Shipwright
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shipwright
- en: Note that only Jenkins and Tekton are considered graduated projects. The rest
    are incubating projects (even Spinnaker).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，只有 Jenkins 和 Tekton 被视为毕业项目，其它项目（甚至 Spinnaker）仍处于孵化阶段。
- en: One of my favorite native CD projects, Argo CD, is not part of the CD Foundation.
    I actually opened a GitHub issue asking to submit Argo CD to the CDF, but the
    Argo team has decided that CNCF is a better fit for their project.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的原生 CD 项目之一，Argo CD，并未成为 CD 基金会的一部分。事实上，我曾在 GitHub 上开设了一个 issue，要求将 Argo
    CD 提交给 CDF，但 Argo 团队决定 CNCF 更适合他们的项目。
- en: Another project to watch is CNB – Cloud Native Buildpacks. The project takes
    the source and creates OCI (think Docker) images. It is important for FaaS frameworks
    and native in-cluster CI. It is also a CNCF sandbox project.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得关注的项目是 CNB——云原生构建包。该项目接受源代码并创建 OCI（类似 Docker）镜像。对于 FaaS 框架和集群内原生 CI 至关重要。它也是一个
    CNCF 沙箱项目。
- en: Operators
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作员
- en: The **Operator** pattern emerged in 2016 from CoreOS (acquired by RedHat, acquired
    by IBM) and gained a lot of success in the community. An Operator is a combination
    of custom resources and a controller used to manage an application. At my current
    job, I write operators to manage various aspects of infrastructure, and it is
    a joy. It is already the established way to distribute non-trivial applications
    to Kubernetes clusters. Check out [https://operatorhub.io/](https://operatorhub.io/)
    for a huge list of existing operators. I expect this trend to continue and intensify.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**Operator** 模式源于 2016 年的 CoreOS（被 RedHat 收购，后又被 IBM 收购），并在社区中获得了广泛的成功。Operator
    是自定义资源和控制器的结合，用于管理应用程序。在我目前的工作中，我编写 Operator 来管理基础设施的各个方面，这是一项令人愉快的工作。它已经成为向 Kubernetes
    集群分发复杂应用程序的成熟方式。请查看 [https://operatorhub.io/](https://operatorhub.io/) 获取大量现有的
    Operator 列表。我预计这一趋势将继续并加剧。'
- en: Kubernetes and AI
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes 和 AI
- en: AI is the hottest trend right now. **Large language models** (**LLMs**) and
    **Generative Pre-trained Transforms** (**GPT**) surprised most professionals with
    their capabilities. The release of ChatGPT 3.5 by OpenAI was a watershed moment.
    AI suddenly excels in areas that were considered strongholds of human intelligence,
    such as creative writing, painting, understanding, answering nuanced questions,
    and, of course, coding. My perspective is that advanced AI is the solution to
    the big data problem. We learned to collect a lot of data, but analyzing and extracting
    insights from the data is a difficult and labor-intensive process. AI seems like
    the right technology to digest all the data and automatically understand, summarize,
    and organize it into a useful form to be used by humans and other systems (most
    likely AI-based systems).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: AI 是目前最热门的趋势。**大型语言模型**（**LLMs**）和**生成式预训练变换器**（**GPT**）凭借其强大的能力让大多数专业人士感到惊讶。OpenAI
    发布的 ChatGPT 3.5 版是一个分水岭时刻。AI 突然在曾被视为人类智慧堡垒的领域，如创意写作、绘画、理解、回答复杂问题以及当然还有编程方面表现出色。我的观点是，先进的
    AI 是解决大数据问题的答案。我们学会了收集大量数据，但从中分析和提取洞察是一个困难且劳动密集的过程。AI 似乎是消化所有数据并自动理解、总结、整理成对人类和其他系统（很可能是
    AI 系统）有用形式的正确技术。
- en: Let’s see why Kubernetes is such a great fit for AI workloads.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下，为什么 Kubernetes 非常适合 AI 工作负载。
- en: Kubernetes and AI synergy
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kubernetes 和 AI 协同效应
- en: Modern AI is all about deep learning networks and huge models with billions
    of parameters trained on massive datasets, often using dedicated hardware. Kubernetes
    is a perfect fit for such workloads as it quickly adapts to the workload’s needs,
    takes advantage of new and improved hardware, and provides strong observability.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现代 AI 的核心是深度学习网络和具有数十亿参数的大型模型，这些模型在庞大的数据集上进行训练，通常需要专用硬件。Kubernetes 非常适合处理这种工作负载，因为它能够快速适应工作负载的需求，充分利用新的硬件，并提供强大的可观察性。
- en: 'The best evidence is the field. Kubernetes is at the core of the OpenAI pipeline,
    and additional companies are developing and deploying massive AI applications.
    Check out this article that shows how OpenAI pushes the envelope with Kubernetes
    and runs huge clusters with 7,500 nodes: [https://openai.com/research/scaling-kubernetes-to-7500-nodes](https://openai.com/research/scaling-kubernetes-to-7500-nodes).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 最有力的证据来自实践。Kubernetes 是 OpenAI 流水线的核心，越来越多的公司正在开发和部署庞大的 AI 应用程序。请阅读这篇文章，了解 OpenAI
    如何使用 Kubernetes 推动技术进步，并运行一个包含 7,500 个节点的大型集群：[https://openai.com/research/scaling-kubernetes-to-7500-nodes](https://openai.com/research/scaling-kubernetes-to-7500-nodes)。
- en: Let’s consider training AI models on Kubernetes.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下在 Kubernetes 上训练 AI 模型。
- en: Training AI models on Kubernetes
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Kubernetes 上训练 AI 模型
- en: 'Training large AI models is potentially slow and very expensive. Organizations
    that partake in training AI models on Kubernetes benefit from many of its properties:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 训练大型 AI 模型可能既慢又昂贵。参与在 Kubernetes 上训练 AI 模型的组织从其许多特性中受益：
- en: '**Scalability**: Kubernetes provides a highly scalable infrastructure for deploying
    and managing AI workloads. With Kubernetes, it is possible to quickly scale resources
    up or down based on demand, enabling organizations to train AI models quickly
    and efficiently.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：Kubernetes 提供了一个高度可扩展的基础设施，用于部署和管理 AI 工作负载。借助 Kubernetes，可以根据需求快速扩展或缩减资源，使组织能够快速高效地训练
    AI 模型。'
- en: '**Resource utilization**: Kubernetes allows for efficient resource utilization,
    enabling organizations to train AI models using the most cost-effective infrastructure.
    With Kubernetes, it is possible to automatically allocate and manage resources,
    ensuring that the right resources are available for the workload.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源利用**：Kubernetes 允许高效的资源利用，使得组织能够使用最具成本效益的基础设施训练 AI 模型。通过 Kubernetes，可以自动分配和管理资源，确保工作负载所需的资源得到有效配置。'
- en: '**Flexibility**: Kubernetes provides a high degree of flexibility in terms
    of the infrastructure used for training AI models. Kubernetes supports a wide
    range of hardware, including GPUs, FPGAs, and TPUs, making it possible to use
    the most appropriate hardware for the workload.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灵活性**：Kubernetes 提供了高度的灵活性，可以使用不同的基础设施来训练 AI 模型。Kubernetes 支持包括 GPU、FPGA
    和 TPU 在内的多种硬件，使得可以根据工作负载选择最合适的硬件。'
- en: '**Portability**: Kubernetes provides a highly portable infrastructure for deploying
    and managing AI workloads. Kubernetes supports a wide range of cloud providers
    and on-premises infrastructure, making it possible to train AI models in any environment.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可移植性**：Kubernetes 提供了高度可移植的基础设施，用于部署和管理 AI 工作负载。Kubernetes 支持多种云服务提供商和本地基础设施，使得可以在任何环境中训练
    AI 模型。'
- en: '**Ecosystem**: Kubernetes has a vibrant ecosystem of open-source tools and
    frameworks that can be used for training AI models. For example, Kubeflow is a
    popular open-source framework for building and deploying machine learning workflows
    on Kubernetes.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生态系统**：Kubernetes 拥有一个充满活力的开源工具和框架生态系统，可以用于训练 AI 模型。例如，Kubeflow 是一个流行的开源框架，用于在
    Kubernetes 上构建和部署机器学习工作流。'
- en: Running AI-based systems on Kubernetes
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Kubernetes 上运行基于 AI 的系统
- en: Once you have trained your models and built your application on top of your
    models, you need to deploy and run it. Kubernetes is, of course, a great platform
    for deploying workloads in general. AI-based workloads are often designed for
    a reliable and quick super-human response. The high availability that Kubernetes
    offers and the ability to quickly scale up and down based on demand satisfy these
    requirements.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你训练好了模型并在其上构建了应用程序，就需要部署并运行它。Kubernetes 当然是一个优秀的工作负载部署平台。基于 AI 的工作负载通常被设计为快速响应超人类水平的需求。Kubernetes
    提供的高可用性以及根据需求快速扩展和缩减的能力，能够满足这些要求。
- en: In addition, if the system is designed to keep learning (as opposed to fixed
    pre-trained systems like GPTs), then Kubernetes offers strong security and control
    that support safe operation.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果系统被设计为持续学习（而不是像 GPT 这样固定的预训练系统），那么 Kubernetes 提供了强大的安全性和控制，支持安全运行。
- en: Let’s look at the emerging field of AIOps.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看新兴的 AIOps 领域。
- en: Kubernetes and AIOps
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kubernetes 和 AIOps
- en: AIOps is a paradigm that leverages AI and machine learning to automate and optimize
    the management of infrastructure. AIOps can help organizations improve the reliability,
    performance, and security of their IT infrastructure while reducing the burden
    on human engineers.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: AIOps 是一种利用 AI 和机器学习自动化和优化基础设施管理的范式。AIOps 可以帮助组织提高 IT 基础设施的可靠性、性能和安全性，同时减轻人类工程师的负担。
- en: Kubernetes is a perfect target for practicing AIOps. It is fully accessible
    programmatically. It is often deployed with deep observability. Those two conditions
    are necessary and sufficient to enable AI to scrutinize the state of the system
    and take action when necessary.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 是实践 AIOps 的理想平台。它可以完全通过编程访问，且通常会与深度可观察性一起部署。这两个条件是使 AI 能够审视系统状态并在必要时采取行动的必要且充分条件。
- en: The future of Kubernetes seems bright, but it has some challenges too.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 的未来看起来很光明，但它也面临一些挑战。
- en: Kubernetes challenges
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes 的挑战
- en: Is Kubernetes the answer to everything to do with infrastructure? Not at all.
    Let’s look at some challenges, such as Kubernetes’ complexity, and some alternative
    solutions for the problem of developing, deploying, and managing large-scale systems.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 是解决与基础设施相关的所有问题的答案吗？当然不是。让我们来看一下 Kubernetes 的一些挑战，比如它的复杂性，以及一些针对开发、部署和管理大规模系统的替代解决方案。
- en: Kubernetes complexity
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kubernetes 的复杂性
- en: Kubernetes is a large, powerful, and extensible platform. It is mostly un-opinionated
    and very flexible. It has a huge surface area with a lot of resources and APIs.
    In addition, Kubernetes has a huge ecosystem. That translates to a system that
    is extremely difficult to learn and master. What does it say about Kubernetes’
    future? One likely scenario is that most developers will not interact with Kubernetes
    directly. Simplified solutions built on top of Kubernetes will be the primary
    access point for most developers.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 是一个庞大、强大且可扩展的平台。它大多是非意见化的，且非常灵活。它有一个巨大的表面面积，包含许多资源和 API。此外，Kubernetes
    拥有庞大的生态系统。这意味着它是一个极其难以学习和掌握的系统。这对 Kubernetes 的未来有什么影响？一个可能的情景是，大多数开发者将不会直接与 Kubernetes
    互动。建立在 Kubernetes 上的简化解决方案将成为大多数开发者的主要接入点。
- en: If Kubernetes is fully abstracted, then it may become a threat to its future
    since Kubernetes, as the underlying implementation, might be replaced by the solution
    provider. The final users may not need to make any changes at all to their code
    or configuration.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Kubernetes 完全抽象化，那么它可能会对未来构成威胁，因为作为底层实现的 Kubernetes 可能会被解决方案提供商替代。最终用户可能根本不需要对他们的代码或配置做任何改变。
- en: Another scenario is that more and more organizations negatively weigh the costs
    of building on top of Kubernetes compared to lightweight container orchestration
    platforms such as Nomad. This could lead to an exodus from Kubernetes.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个场景是，越来越多的组织开始对在 Kubernetes 上构建的成本持负面看法，相比之下，轻量级的容器编排平台如 Nomad 可能更具吸引力。这可能会导致从
    Kubernetes 的流失。
- en: Let’s look at some technologies that may compete with Kubernetes in different
    areas.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一些可能在不同领域与 Kubernetes 竞争的技术。
- en: Serverless function platforms
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无服务器函数平台
- en: Serverless function platforms offer organizations and developers similar benefits
    to Kubernetes using a simpler (if less powerful) paradigm. Instead of modeling
    your system as a set of long-running applications and services, you just implement
    a set of functions that can be triggered on demand. You don’t need to manage clusters,
    node pools, and servers. Some solutions offer long-running services, too, either
    pre-packaged as containers or directly from source. We covered it thoroughly in
    *Chapter 12*, *Serverless Computing on Kubernetes*. As the serverless platforms
    get better and Kubernetes become more complicated, more organizations may prefer
    to at least start using serverless solutions and possibly migrate to Kubernetes
    later.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器函数平台为组织和开发者提供了类似 Kubernetes 的好处，但采用了一个更简单（尽管不那么强大）的范式。你不需要将系统建模为一组长期运行的应用程序和服务，而是只需要实现一组可以按需触发的函数。你不需要管理集群、节点池和服务器。一些解决方案也提供长期运行的服务，可能是预打包成容器或直接从源代码运行。我们在*第12章*中详细讲解了这个内容，*在
    Kubernetes 上的无服务器计算*。随着无服务器平台的不断改进，以及 Kubernetes 变得越来越复杂，更多组织可能会倾向于至少开始使用无服务器解决方案，之后可能会迁移到
    Kubernetes。
- en: 'First and foremost, all cloud providers offer various serverless solutions.
    The pure cloud functions models are:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，所有云服务提供商都提供各种无服务器解决方案。纯粹的云函数模型有：
- en: AWS Lambda
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Lambda
- en: Google Cloud Functions
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud Functions
- en: Azure Functions
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Functions
- en: 'There are also multiple strong and easy-to-use solutions out there that are
    not associated with the big cloud providers:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多强大且易于使用的解决方案并未与大型云服务提供商相关联：
- en: Cloudflare Workers
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloudflare Workers
- en: Fly.io
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fly.io
- en: Render
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渲染
- en: Vercel
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vercel
- en: That concludes our coverage of Kubernetes challenges. Let’s summarize the chapter.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们对 Kubernetes 挑战的总结。让我们总结一下本章的内容。
- en: Summary
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the future of Kubernetes, and it looks great!
    The technical foundation, the community, the broad support, and the momentum are
    all very impressive. Kubernetes is still young, but the pace of innovation and
    stabilization is very encouraging. The modularization and extensibility principles
    of Kubernetes let it become the universal foundation for modern cloud-native applications.
    That said, there are some challenges to Kubernetes and it might not dominate each
    and every scenario. This is a good thing. Diversity, competition, and inspiration
    from other solutions will just make Kubernetes better.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了 Kubernetes 的未来，看起来非常光明！其技术基础、社区支持、广泛的支持以及势头都非常令人印象深刻。Kubernetes 仍然年轻，但创新和稳定的步伐非常鼓舞人心。Kubernetes
    的模块化和可扩展性原则使其成为现代云原生应用程序的通用基础。尽管如此，Kubernetes 也面临一些挑战，并且可能并不会主导每个场景。这是一件好事。多样性、竞争以及其他解决方案的启发会让
    Kubernetes 变得更好。
- en: At this point, you should have a clear idea of where Kubernetes is right now
    and where it’s going from here. You should be confident that Kubernetes is not
    just here to stay, but that it will be the leading container orchestration platform
    for many years to come and integrate with any major offering and environment you
    can imagine, from planet-scale public cloud platforms, private clouds, data centers,
    edge locations and all the way down to your development laptop and Raspberry Pi.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该清楚 Kubernetes 目前的状态以及它未来的发展方向。你应该有信心，Kubernetes 不仅会长期存在，而且将成为未来多年主导的容器编排平台，能够与各种大型平台和环境集成——从全球规模的公有云平台、私有云、数据中心、边缘计算位置，一直到你的开发笔记本电脑和树莓派。
- en: That’s it! This is the end of the book.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！这本书已经结束了。
- en: Now it’s up to you to use what you’ve learned and build amazing things with
    Kubernetes!
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，轮到你运用所学的知识，使用 Kubernetes 构建令人惊叹的项目了！
- en: Join us on Discord!
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 社区！
- en: Read this book alongside other users, cloud experts, authors, and like-minded
    professionals.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、云计算专家、作者以及志同道合的专业人士一起阅读本书。
- en: Ask questions, provide solutions to other readers, chat with the authors via.
    Ask Me Anything sessions and much more.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 提出问题，为其他读者提供解决方案，参加作者的“问我任何问题”环节，等等。
- en: Scan the QR code or visit the link to join the community now.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描二维码或访问链接，即可立即加入社区。
- en: '[https://packt.link/cloudanddevops](https://packt.link/cloudanddevops)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/cloudanddevops](https://packt.link/cloudanddevops)'
- en: '![](img/QR_Code844810820358034203.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code844810820358034203.png)'
