- en: <st c="0">1</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">1</st>
- en: <st c="2">Deploying and Interacting with AWS Services</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">部署和与 AWS 服务交互</st>
- en: <st c="45">Embarking on the journey to build solutions</st> <st c="90">on the</st>
    **<st c="97">Amazon Web Services</st>** <st c="116">(</st>**<st c="118">AWS</st>**<st
    c="121">) platform requires a comprehensive understanding of the available tools
    and approaches.</st> <st c="211">This chapter introduces various methodologies
    for architecting on AWS, beginning with preparatory activities such as requirements
    gathering, service selection,</st> <st c="371">and diagramming.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="45">开始构建解决方案的旅程</st> <st c="90">在</st> **<st c="97">亚马逊 Web 服务</st>**
    <st c="116">(</st>**<st c="118">AWS</st>**<st c="121">)平台上，需要全面了解可用的工具和方法。</st>
    <st c="211">本章介绍了在 AWS 上架构设计的多种方法，从需求收集、服务选择开始，</st> <st c="371">到绘制架构图。</st>
- en: <st c="387">You will then explore the various methods and tools available for
    deploying and interacting with AWS</st> <st c="489">services, including</st> <st
    c="508">the AWS</st> <st c="517">Console, AWS</st> **<st c="530">Command Line
    Interface</st>** <st c="552">(</st>**<st c="554">CLI</st>**<st c="557">), AWS</st>
    **<st c="565">Software Development Kits</st>** <st c="590">(</st>**<st c="592">SDKs</st>**<st
    c="596">), and</st> **<st c="604">Infrastructure as</st>** **<st c="622">Code</st>**
    <st c="626">(</st>**<st c="628">IaC</st>**<st c="631">).</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="387">接下来，你将探索可用于部署和与 AWS</st> <st c="489">服务交互的各种方法和工具，包括</st> <st c="508">AWS</st>
    <st c="517">控制台、AWS</st> **<st c="530">命令行界面</st>** <st c="552">(</st>**<st c="554">CLI</st>**<st
    c="557">)，AWS</st> **<st c="565">软件开发工具包</st>** <st c="590">(</st>**<st c="592">SDK</st>**<st
    c="596">)，以及</st> **<st c="604">基础设施即代码</st>** <st c="622">（<st c="628">IaC</st>）</st>。
- en: <st c="634">This is a theoretical chapter, structured around the following</st>
    <st c="698">main topics:</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="634">这是一个理论章节，围绕以下</st> <st c="698">主要主题结构：</st>
- en: <st c="710">Architecting</st> <st c="724">on AWS</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="710">架构设计</st> <st c="724">在 AWS 上</st>
- en: <st c="730">Getting started with</st> <st c="752">AWS Console</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="730">开始使用</st> <st c="752">AWS 控制台</st>
- en: <st c="763">Navigating AWS CLI</st> <st c="783">and SDK</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="763">导航 AWS CLI</st> <st c="783">和 SDK</st>
- en: <st c="790">Understanding IaC</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="790">理解 IaC</st>
- en: <st c="808">By the end of this chapter, you will possess the knowledge and skills
    necessary to create, operate, and monitor AWS services using the approach that
    best aligns with your requirements and preferences, whether it be through the
    user-friendly AWS Console, the CLI, programmatic access via SDKs, or the powerful</st>
    <st c="1118">IaC tools.</st>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="808">在本章结束时，你将掌握创建、操作和监控 AWS 服务的知识和技能，能够根据你的需求和偏好，选择最合适的方法进行操作，无论是通过用户友好的
    AWS 控制台、CLI、通过 SDK 的编程访问，还是强大的</st> <st c="1118">IaC 工具。</st>
- en: <st c="1128">Technical requirements</st>
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1128">技术要求</st>
- en: <st c="1151">Although this is a theoretical chapter, you will find code snippets
    in the GitHub repository of this chapter</st> <st c="1261">at</st> [<st c="1264">https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter1/code</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter1/code)<st
    c="1341">.</st>
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1151">虽然这是一个理论章节，但你将在本章的 GitHub 仓库中找到代码片段</st> <st c="1261">，链接如下：</st>
    [<st c="1264">https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter1/code</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter1/code)<st
    c="1341">。</st>
- en: <st c="1342">To follow along, you will need an</st> <st c="1377">AWS account.</st>
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1342">要跟随学习，你需要一个</st> <st c="1377">AWS 账户。</st>
- en: <st c="1389">Architecting on AWS</st>
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1389">在 AWS 上架构设计</st>
- en: <st c="1409">Architecting on AWS refers</st> <st c="1436">to the process of
    designing and planning cloud-based solutions using AWS.</st> <st c="1511">It involves
    understanding the various AWS services, their capabilities, and how they can be
    combined to build scalable, secure, and</st> <st c="1643">cost-effective architectures.</st>
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1409">在 AWS 上架构设计是指</st> <st c="1436">使用 AWS 设计和规划基于云的解决方案的过程。</st> <st
    c="1511">这包括理解各种 AWS 服务、它们的功能，以及如何将它们结合起来构建可扩展、安全且</st> <st c="1643">具有成本效益的架构。</st>
- en: <st c="1672">When architecting on AWS, the following four aspects should be
    considered, each detailed later in</st> <st c="1771">this chapter:</st>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1672">在 AWS 上架构设计时，应考虑以下四个方面，每个方面将在</st> <st c="1771">本章后续部分详细介绍：</st>
- en: '**<st c="1784">Requirements gathering</st>**<st c="1807">: This is a crucial
    step in the process of architecting solutions on AWS.</st> <st c="1882">It involves
    understanding the business needs, functional requirements, non-functional requirements,
    and constraints that will shape the design and implementation of the</st> <st
    c="2051">AWS architecture.</st>'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="1784">需求收集</st>**<st c="1807">：这是在AWS上架构解决方案过程中的一个关键步骤。</st> <st c="1882">它涉及了解业务需求、功能需求、非功能需求以及将在设计和实现AWS架构时起到决定性作用的约束条件。</st>
    <st c="2051">AWS架构的设计。</st>'
- en: '**<st c="2068">Architecture patterns</st>**<st c="2090">: AWS provides various
    architecture patterns and reference architectures that serve as starting points
    for common use cases, such as web applications, data processing pipelines, or
    serverless architectures.</st> <st c="2298">You can leverage these patterns and
    customize them to meet their</st> <st c="2363">specific requirements.</st>'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2068">架构模式</st>**<st c="2090">：AWS提供了多种架构模式和参考架构，作为常见用例（如Web应用、数据处理管道或无服务器架构）的起点。</st>
    <st c="2298">你可以利用这些模式并根据特定需求对其进行定制。</st>'
- en: '**<st c="2385">Service selection</st>**<st c="2403">: AWS offers a broad range
    of services, including compute, storage, databases, networking, analytics, machine
    learning, and more.</st> <st c="2534">You must carefully evaluate the requirements
    of the applications and select the appropriate AWS services that best fit</st>
    <st c="2653">those needs.</st>'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2385">服务选择</st>**<st c="2403">：AWS提供了广泛的服务，包括计算、存储、数据库、网络、分析、机器学习等。</st>
    <st c="2534">你必须仔细评估应用程序的需求，并选择最适合这些需求的AWS服务。</st>'
- en: '**<st c="2665">Diagramming</st>**<st c="2677">: Creating visual representations
    of the proposed architecture is a crucial step in the architecting process.</st>
    <st c="2788">There are no AWS official tools, but</st> **<st c="2825">draw.io</st>**
    <st c="2832">or simply Microsoft PowerPoint can be used to create architecture
    diagrams, which</st> <st c="2914">helps communicate the design and facilitate
    collaboration</st> <st c="2973">and implementation.</st>'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="2665">绘图</st>**<st c="2677">：创建拟议架构的可视化表示是架构过程中的一个关键步骤。</st> <st c="2788">AWS没有官方工具，但</st>
    **<st c="2825">draw.io</st>** <st c="2832">或者仅仅使用Microsoft PowerPoint都可以用来创建架构图，这有助于沟通设计、促进协作</st>
    <st c="2914">并推动实施。</st> <st c="2973">。</st>'
- en: <st c="2992">Let’s look at these aspects</st> <st c="3021">in detail.</st>
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2992">让我们详细了解这些方面</st> <st c="3021">。</st>
- en: <st c="3031">Requirements gathering</st>
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="3031">需求收集</st>
- en: <st c="3054">Clear and well-defined</st> <st c="3078">requirements are crucial
    for architects to design AWS solutions that meet the specific needs of the organization
    and provide the desired outcomes.</st> <st c="3225">Gathering requirements can
    involve collaborating with stakeholders, conducting workshops, analyzing existing
    systems and data, and understanding the</st> <st c="3374">business context.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3054">明确且定义良好的</st> <st c="3078">需求对架构师设计符合组织特定需求并实现预期结果的AWS解决方案至关重要。</st>
    <st c="3225">需求收集可能涉及与利益相关者的协作、开展研讨会、分析现有系统和数据、以及理解</st> <st c="3374">业务背景。</st>
- en: <st c="3391">However, if your project has a smaller scope, not all these steps
    may apply.</st> <st c="3469">Nonetheless, it is important to understand what type
    of requirements can be gathered before a</st> <st c="3563">project starts:</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3391">然而，如果你的项目范围较小，并非所有这些步骤都适用。</st> <st c="3469">尽管如此，在项目开始之前，了解可以收集到的需求类型是很重要的：</st>
- en: '**<st c="3578">Business requirements</st>**<st c="3600">: The first step is
    to understand the business objectives, goals, and drivers behind the solution
    being architected.</st> <st c="3718">This includes factors such as the target
    market, expected growth, revenue models, and any specific business constraints
    or regulations that need to</st> <st c="3866">be considered.</st>'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3578">业务需求</st>**<st c="3600">：第一步是理解解决方案背后的业务目标、目标和驱动因素。</st> <st
    c="3718">这包括目标市场、预期增长、收入模型以及需要考虑的任何特定业务约束或法规。</st>'
- en: '**<st c="3880">Functional requirements</st>**<st c="3904">: These requirements
    define the specific features, functionalities, and capabilities that the solution
    must provide.</st> <st c="4022">This could include requirements related to user
    interfaces, data processing, integration with existing systems, or specific</st>
    <st c="4146">business logic.</st>'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3880">功能要求</st>**<st c="3904">：这些要求定义了解决方案必须提供的具体功能、特性和能力。</st> <st
    c="4022">这可能包括与用户界面、数据处理、与现有系统的集成或特定</st> <st c="4146">业务逻辑相关的要求。</st>'
- en: '**<st c="4161">Non-functional requirements</st>**<st c="4189">: Non-functional
    requirements define the qualitative attributes that the solution must possess,
    such as performance, scalability, availability, security, and compliance.</st>
    <st c="4360">These requirements are often critical in determining the appropriate
    AWS services and architectural patterns to</st> <st c="4472">be used.</st>'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="4161">非功能性要求</st>**<st c="4189">：非功能性要求定义了解决方案必须具备的定性特征，如性能、可扩展性、可用性、安全性和合规性。</st>
    <st c="4360">这些要求通常在确定适当的AWS服务和架构模式时至关重要，</st> <st c="4472">以便使用。</st>'
- en: '**<st c="4480">Technical requirements</st>**<st c="4503">: Technical requirements
    encompass the specific technologies, programming languages, frameworks, and tools
    that need to be used or integrated with the AWS solution.</st> <st c="4669">This
    could include requirements for specific databases, messaging systems, or</st>
    <st c="4747">third-party services.</st>'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="4480">技术要求</st>**<st c="4503">：技术要求涵盖了需要使用或与AWS解决方案集成的具体技术、编程语言、框架和工具。</st>
    <st c="4669">这可能包括对特定数据库、消息系统或</st> <st c="4747">第三方服务的要求。</st>'
- en: '**<st c="4768">Data requirements</st>**<st c="4786">: Understanding the data
    requirements is essential when architecting on AWS.</st> <st c="4864">This includes
    the types of data (structured, unstructured, or semi-structured), data volumes,
    data sources, data processing needs, and any specific data governance or</st>
    <st c="5031">compliance requirements.</st>'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="4768">数据要求</st>**<st c="4786">：在AWS架构设计中，理解数据要求至关重要。</st> <st c="4864">这包括数据类型（结构化、非结构化或半结构化）、数据量、数据源、数据处理需求，以及任何特定的数据治理或</st>
    <st c="5031">合规性要求。</st>'
- en: '**<st c="5055">Integration requirements</st>**<st c="5080">: If the AWS solution
    needs to integrate with existing on-premises systems, third-party services, or
    other cloud environments, the integration requirements must be clearly defined.</st>
    <st c="5262">This includes identifying the integration points, data formats, protocols,
    and</st> <st c="5341">security considerations.</st>'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="5055">集成要求</st>**<st c="5080">：如果AWS解决方案需要与现有的本地系统、第三方服务或其他云环境进行集成，则必须明确定义集成要求。</st>
    <st c="5262">这包括识别集成点、数据格式、协议和</st> <st c="5341">安全性考虑事项。</st>'
- en: '**<st c="5365">Security and compliance requirements</st>**<st c="5402">: Depending
    on the industry and the nature of the data being handled, there may be specific
    security and compliance requirements that need to be addressed in the AWS architecture.</st>
    <st c="5583">These could include regulatory standards, data protection laws, or</st>
    <st c="5650">industry-specific certifications.</st>'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="5365">安全性和合规性要求</st>**<st c="5402">：根据行业和所处理数据的性质，可能会有需要在AWS架构中解决的特定安全性和合规性要求。</st>
    <st c="5583">这些可能包括监管标准、数据保护法或</st> <st c="5650">行业特定认证。</st>'
- en: '**<st c="5683">Financial requirements</st>**<st c="5706">: AWS offers a pay-as-you-go
    pricing model.</st> <st c="5751">Understanding the budget constraints and cost
    requirements is essential for selecting the appropriate AWS services and implementing</st>
    <st c="5883">cost-effective architectures.</st>'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="5683">财务要求</st>**<st c="5706">：AWS提供按需付费定价模式。</st> <st c="5751">了解预算限制和成本要求对于选择合适的AWS服务和实现</st>
    <st c="5883">具有成本效益的架构至关重要。</st>'
- en: <st c="5912">Bear in mind that some folks consider costs or security requirements
    part of the umbrella of functional and non-functional requirements.</st> <st c="6050">Don’t
    be pedantic about naming; just gather all</st> <st c="6098">your requirements.</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5912">请记住，一些人将成本或安全性要求视为功能性和非功能性要求的一个范畴。</st> <st c="6050">不要拘泥于命名；只需收集所有</st>
    <st c="6098">要求。</st>
- en: <st c="6116">Choosing an architecture pattern</st>
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="6116">选择架构模式</st>
- en: <st c="6149">Architecture patterns</st> <st c="6171">and reference architectures
    serve as starting points for designing and implementing cloud-based solutions.</st>
    <st c="6279">These patterns encapsulate best practices, proven designs, and architectural
    principles tailored to specific use cases and requirements.</st> <st c="6416">You
    can find many of these in</st> <st c="6445">the AWS Architecture</st> <st c="6467">Center:</st>
    [<st c="6475">https://aws.amazon.com/architecture</st>](https://aws.amazon.com/architecture)<st
    c="6510">.</st>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6149">架构模式</st> <st c="6171">和参考架构作为设计和实施基于云的解决方案的起点。</st> <st c="6279">这些模式封装了最佳实践、经过验证的设计和根据特定用例和需求量身定制的架构原则。</st>
    <st c="6416">你可以在</st> <st c="6445">AWS架构中心</st> <st c="6467">找到许多这样的模式：</st>
    [<st c="6475">https://aws.amazon.com/architecture</st>](https://aws.amazon.com/architecture)<st
    c="6510">。</st>
- en: <st c="6511">By leveraging AWS architecture patterns and reference architectures,
    you can build upon proven designs, accelerate the development process, and ensure
    that your solutions align with AWS best practices and</st> <st c="6717">industry
    standards.</st>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6511">通过利用AWS架构模式和参考架构，你可以在经过验证的设计基础上构建，加速开发过程，并确保你的解决方案符合AWS最佳实践和</st>
    <st c="6717">行业标准。</st>
- en: <st c="6736">Architecture patterns address common scenarios and requirements.</st>
    <st c="6802">These include patterns for web applications, data processing pipelines,
    serverless architectures, microservices, event-driven architectures, and more.</st>
    <st c="6953">You can leverage these patterns as a foundation and customize them
    to meet</st> <st c="7028">specific needs.</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6736">架构模式解决了常见的场景和需求。</st> <st c="6802">这些包括用于Web应用程序、数据处理管道、无服务器架构、微服务、事件驱动架构等的模式。</st>
    <st c="6953">你可以利用这些模式作为基础，并根据</st> <st c="7028">具体需求进行定制。</st>
- en: <st c="7043">In addition to general patterns, AWS provides reference architectures
    for specific domains and industries, such as e-commerce, media and entertainment,
    healthcare, financial services, and more.</st> <st c="7238">These reference architectures
    offer detailed guidance on how to design and implement solutions using AWS services
    and best practices specific to</st> <st c="7383">those domains.</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7043">除了通用模式外，AWS还提供了针对特定领域和行业的参考架构，如电子商务、媒体和娱乐、医疗保健、金融服务等。</st> <st
    c="7238">这些参考架构提供了关于如何使用AWS服务和针对</st> <st c="7383">这些领域的最佳实践设计和实施解决方案的详细指导。</st>
- en: <st c="7397">To select a pattern or architecture, you must carefully evaluate
    the requirements, constraints, and use cases of their solutions to select the
    most appropriate one.</st> <st c="7563">This selection process involves understanding
    the strengths, weaknesses, and trade-offs of each pattern, as well as their alignment
    with the rest of the technical stack.</st> <st c="7733">This is often detailed
    in</st> <st c="7759">their description.</st>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7397">要选择一种模式或架构，必须仔细评估解决方案的需求、限制和用例，以选择最合适的架构。</st> <st c="7563">这一选择过程涉及理解每种模式的优缺点、权衡取舍，以及它们与其他技术栈的兼容性。</st>
    <st c="7733">这通常会在</st> <st c="7759">它们的描述中详细说明。</st>
- en: <st c="7777">While architecture patterns provide a solid starting point, they
    are rarely implemented as-is.</st> <st c="7873">You must customize and adapt the
    patterns to fit your specific requirements, integrating additional AWS services,
    adjusting configurations, and incorporating security, monitoring, and</st> <st
    c="8057">operational considerations.</st>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7777">虽然架构模式提供了一个坚实的起点，但它们很少被照搬使用。</st> <st c="7873">你必须根据具体需求定制和调整这些模式，集成额外的AWS服务，调整配置，并考虑安全性、监控和</st>
    <st c="8057">运营问题。</st>
- en: <st c="8084">It can also happen that what you need is a hybrid or multi-pattern
    architecture.</st> <st c="8166">Some solutions require a combination of multiple
    architecture patterns or a hybrid approach that combines components of different
    patterns.</st> <st c="8306">There is an extra challenge in determining how to</st>
    <st c="8356">effectively integrate and orchestrate the different patterns into
    a cohesive and scalable architecture.</st> <st c="8460">This is an advanced topic,
    which you will learn more about in later chapters of</st> <st c="8540">this book.</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8084">也有可能你需要的是一个混合或多模式架构。</st> <st c="8166">有些解决方案需要结合多个架构模式，或者采用一种混合方法，结合不同模式的组件。</st>
    <st c="8306">在有效地集成和协调不同模式为一个统一且可扩展的架构时，存在额外的挑战。</st> <st c="8356">这是一个高级话题，你将在本书的后续章节中进一步了解。</st>
    <st c="8460">本书。</st>
- en: <st c="8550">Selecting a service</st>
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="8550">选择服务</st>
- en: <st c="8570">By now, you have a</st> <st c="8589">well-defined problem and a
    generic architectural pattern.</st> <st c="8648">The next step is service selection.</st>
    <st c="8684">This is a critical aspect of architecting solutions in AWS.</st>
    <st c="8744">With over 200 services available, AWS provides a vast array of building
    blocks that can be combined to create scalable, secure, and</st> <st c="8876">cost-effective
    architectures.</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8570">到目前为止，你已经有了一个</st> <st c="8589">明确定义的问题和一个通用的架构模式。</st> <st c="8648">下一步是选择服务。</st>
    <st c="8684">这是在 AWS 中架构解决方案的一个关键环节。</st> <st c="8744">AWS 提供了超过 200 种服务，拥有大量可以组合的构建模块，用以创建可扩展、安全且</st>
    <st c="8876">具有成本效益的架构。</st>
- en: '<st c="8905">Service selection is an iterative process that involves balancing
    architectural best practices and all kinds of requirements: non-functional, functional,
    cost, security, and so on.</st> <st c="9087">You must continuously evaluate and
    refine service selections as the solution evolves and new requirements or</st>
    <st c="9196">constraints emerge.</st>'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8905">服务选择是一个迭代过程，需要在架构最佳实践和各种需求（如非功能性、功能性、成本、安全性等）之间进行平衡。</st> <st c="9087">随着解决方案的发展，新的需求或</st>
    <st c="9196">约束条件的出现，你必须不断评估和优化服务选择。</st>
- en: <st c="9215">The first step in service selection is to map the gathered requirements
    to the available AWS services.</st> <st c="9319">This involves understanding the
    capabilities and use cases of each service and identifying the ones that can address
    the specific functional, non-functional, and technical requirements of the solution.</st>
    <st c="9521">To make this mapping, you will need to first understand what category
    of service you should look at.</st> <st c="9622">Services are organized into different
    categories, such as compute, storage, databases, networking, security, analytics,
    and more.</st> <st c="9752">You will see different services in each of these categories
    in the following chapters of</st> <st c="9841">this book.</st>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9215">服务选择的第一步是将收集到的需求映射到可用的 AWS 服务。</st> <st c="9319">这需要了解每个服务的能力和使用案例，并识别出能够满足解决方案特定功能性、非功能性和技术需求的服务。</st>
    <st c="9521">为了进行这种映射，你需要首先了解你应该查看的服务类别。</st> <st c="9622">服务被组织为不同的类别，例如计算、存储、数据库、网络、安全、分析等。</st>
    <st c="9752">在本书的后续章节中，你将看到这些类别中的不同服务。</st>
- en: <st c="9851">After you have identified the service category that maps to your
    requirements, you will need to evaluate the different service capabilities.</st>
    <st c="9993">Each AWS service offers a unique set of capabilities and features.</st>
    <st c="10060">For example, if the solution requires a highly available and scalable
    database, services such as Amazon RDS or Amazon Aurora might be suitable choices.</st>
    <st c="10212">This will become</st> <st c="10229">clearer as you advance through
    the chapters of</st> <st c="10276">this book.</st>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9851">在确定了符合你需求的服务类别之后，你需要评估不同服务的能力。</st> <st c="9993">每个 AWS 服务都提供一套独特的能力和功能。</st>
    <st c="10060">例如，如果解决方案需要一个高度可用且可扩展的数据库，像 Amazon RDS 或 Amazon Aurora 这样的服务可能是合适的选择。</st>
    <st c="10212">随着你在</st> <st c="10229">本书的学习深入，</st> <st c="10276">这一点会变得更加明确。</st>
- en: <st c="10286">Some interesting non-functional capabilities that you should consider
    are</st> <st c="10361">as follows:</st>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10286">一些有趣的非功能性能力，你应该考虑的如下：</st> <st c="10361">如下所示：</st>
- en: '**<st c="10372">Service integrations</st>**<st c="10393">: AWS services are
    designed to work together seamlessly.</st> <st c="10451">You should consider the
    integration points between different services and ensure that the selected services
    can be integrated effectively to deliver the</st> <st c="10604">desired functionality.</st>'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10372">服务集成</st>**<st c="10393">：AWS 服务设计上能够无缝协作。</st> <st c="10451">你应该考虑不同服务之间的集成点，并确保所选服务能够有效集成，从而提供</st>
    <st c="10604">所需的功能。</st>'
- en: '**<st c="10626">Managed versus self-managed services</st>**<st c="10663">:
    AWS offers both managed services, where AWS handles the underlying infrastructure
    and maintenance, and self-managed services, where the customer has more control
    but also more responsibility.</st> <st c="10858">You must evaluate the trade-offs
    between these service types based on factors such as operational overhead, cost,
    and</st> <st c="10976">compliance requirements.</st>'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10626">托管服务与自托管服务</st>**<st c="10663">：AWS提供托管服务（由AWS处理底层基础设施和维护）和自托管服务（客户有更多控制权，但也承担更多责任）。</st>
    <st c="10858">您必须根据运营开销、成本以及合规要求等因素评估这两种服务类型之间的权衡。</st>'
- en: '**<st c="11000">Pricing and cost optimization</st>**<st c="11030">: AWS services
    have different pricing models, and you must consider the cost implications of
    their service selections.</st> <st c="11150">Cost optimization strategies, such
    as leveraging reserved instances, spot instances, or auto-scaling, should be evaluated
    and incorporated into</st> <st c="11294">the architecture.</st>'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11000">定价与成本优化</st>**<st c="11030">：AWS服务有不同的定价模型，您需要考虑其服务选择的成本影响。</st>
    <st c="11150">应评估并将成本优化策略（例如利用预留实例、竞价实例或自动扩展）纳入架构设计中。</st>'
- en: '**<st c="11311">Roadmap</st>**<st c="11319">: AWS services are constantly evolving,
    with new features and services being released regularly.</st> <st c="11417">You
    should consider the future roadmap of the services they select and ensure that
    the architecture can accommodate potential changes or new</st> <st c="11558">service
    offerings.</st>'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="11311">发展路线图</st>**<st c="11319">：AWS服务在不断发展，新的功能和服务会定期发布。</st> <st
    c="11417">您应考虑所选服务的未来路线图，并确保架构能够适应潜在的变化或新的服务提供。</st>'
- en: <st c="11576">Important note</st>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11576">重要提示</st>
- en: <st c="11591">Did you know that not every AWS service is available in all regions?</st>
    <st c="11661">That’s right.</st> <st c="11675">AWS services are not uniformly
    available across all AWS regions.</st> <st c="11740">You must therefore also consider
    the regional availability of the services you plan</st> <st c="11824">to use.</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11591">您知道并非所有AWS服务在所有地区都可用吗？</st> <st c="11661">没错。</st> <st c="11675">AWS服务在所有AWS地区并非都能统一提供。</st>
    <st c="11740">因此，您还必须考虑您计划使用的服务的区域可用性。</st>
- en: <st c="11831">Sometimes, you will not find a suitable AWS service for your requirements
    and that is okay.</st> <st c="11924">This is where third-party services come in.</st>
    <st c="11968">Don’t be scared to leverage third-party tooling if it fits your</st>
    <st c="12032">needs.</st> <st c="12039">However, consider all the previously mentioned
    dimensions such as cost or</st> <st c="12113">service integrations.</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11831">有时，您可能找不到适合您需求的AWS服务，这也是正常的。</st> <st c="11924">这时，第三方服务就显得尤为重要。</st>
    <st c="11968">如果第三方工具符合您的需求，不要害怕使用它。</st> <st c="12032">不过，请考虑之前提到的各个维度，如成本或服务集成。</st>
- en: <st c="12134">Diagramming</st>
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="12134">架构图绘制</st>
- en: <st c="12146">Visual representations</st> <st c="12170">of the proposed architecture
    help communicate the design, facilitate collaboration among team members, and
    ensure a shared understanding of the solution’s components and their interactions.</st>
    <st c="12360">It also provides a map of</st> <st c="12386">the implementation.</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12146">提议架构的可视化表示</st> <st c="12170">有助于传达设计，促进团队成员之间的协作，并确保对解决方案的组件及其相互关系有共同的理解。</st>
    <st c="12360">它还提供了实施的地图。</st>
- en: <st c="12405">There is no standard tool to diagram AWS solutions.</st> <st c="12458">The
    most well-accepted tools are PowerPoint using AWS Architecture Icons (</st>[<st
    c="12532">https://aws.amazon.com/architecture/icons/</st>](https://aws.amazon.com/architecture/icons/)<st
    c="12575">) or draw.io (</st>[<st c="12590">https://app.diagrams.net</st>](https://app.diagrams.net)<st
    c="12615">).</st> <st c="12619">These tools include icons and shapes that represent
    the different</st> <st c="12685">AWS services.</st>
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12405">目前没有标准工具用于绘制AWS解决方案的架构图。</st> <st c="12458">最常用的工具是使用AWS架构图标的PowerPoint（</st>[<st
    c="12532">https://aws.amazon.com/architecture/icons/</st>](https://aws.amazon.com/architecture/icons/)<st
    c="12575">）或draw.io（</st>[<st c="12590">https://app.diagrams.net</st>](https://app.diagrams.net)<st
    c="12615">）。</st> <st c="12619">这些工具包括代表不同AWS服务的图标和形状。</st>
- en: '*<st c="12698">Figure 1</st>**<st c="12707">.1</st>* <st c="12709">shows a
    high-level diagram, using PowerPoint, of the communication flow between two EC2
    instances in</st> <st c="12811">different regions.</st>'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="12698">图 1</st>**<st c="12707">.1</st>* <st c="12709">展示了一个使用 PowerPoint
    绘制的高层次图，展示了两个不同区域 EC2 实例之间的通信流程。</st>'
- en: '![Figure 1.1 – Cross-region EC2 communication flow](img/B22051_01_1.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 跨区域 EC2 通信流程](img/B22051_01_1.jpg)'
- en: <st c="13095">Figure 1.1 – Cross-region EC2 communication flow</st>
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13095">图 1.1 – 跨区域 EC2 通信流程</st>
- en: <st c="13143">Diagrams serve as a universal language for communicating the architecture
    design to stakeholders, developers, operations teams, and other involved parties.</st>
    <st c="13300">You should not only represent the various AWS services, but also
    their relationships, as well as the overall flow of data and processes within
    the solution.</st> <st c="13457">You can create several diagrams for the same
    solution, each with a different level</st> <st c="13540">of detail.</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13143">图示作为一种通用语言，用于与利益相关者、开发人员、运维团队以及其他相关方沟通架构设计。</st> <st c="13300">你不仅应该表示各种
    AWS 服务，还要展示它们之间的关系，以及解决方案中数据和流程的整体流动。</st> <st c="13457">你可以为同一个解决方案创建多个图示，每个图示可以有不同的细节层次。</st>
- en: <st c="13550">Important note</st>
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13550">重要提示</st>
- en: <st c="13565">Diagramming is not over in the design phase.</st> <st c="13611">Rather,
    it is an ongoing process throughout the architecture life cycle.</st> <st c="13684">Regularly
    updating and reviewing diagrams ensures that they accurately reflect the current
    state of</st> <st c="13784">the architecture.</st>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13565">在设计阶段，图示工作并没有结束。</st> <st c="13611">相反，它是架构生命周期中的一个持续过程。</st>
    <st c="13684">定期更新和审查图示，确保它们准确反映当前的架构状态。</st>
- en: <st c="13801">Diagrams are an essential</st> <st c="13828">part of the architecture
    documentation process.</st> <st c="13876">They serve as a reference for the design
    decisions, component interactions, and rationale behind the chosen architecture.</st>
    <st c="13998">However, documentation is not limited to diagrams.</st> <st c="14049">Creating
    thorough documentation is invaluable for future maintenance, troubleshooting,
    and knowledge transfer within the team or organization.</st> <st c="14192">This
    book will not cover in-depth documentation because it is a practical book focused
    on</st> <st c="14282">hands-on building.</st>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13801">图示是架构文档过程中不可或缺的一部分。</st> <st c="13828">它们作为设计决策、组件交互和所选架构背后理由的参考。</st>
    <st c="13876">然而，文档并不限于图示。</st> <st c="13998">创建详尽的文档对于未来的维护、故障排除以及团队或组织内的知识传承具有不可估量的价值。</st>
    <st c="14049">本书不会深入讨论文档内容，因为这是一本专注于</st> <st c="14282">实践构建的书籍。</st>
- en: <st c="14300">Exploring the Well-Architected Framework</st>
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="14300">探索 AWS Well-Architected 框架</st>
- en: '<st c="14341">AWS provides a</st> <st c="14357">set of best</st> <st c="14368">practices
    and design principles known as the</st> **<st c="14414">Well-Architected Framework</st>**
    <st c="14440">(</st>**<st c="14442">WAR</st>**<st c="14445">), (</st>[<st c="14450">https://aws.amazon.com/architecture/well-architected/</st>](https://aws.amazon.com/architecture/well-architected/)<st
    c="14504">).</st> <st c="14508">This framework covers six pillars: operational
    excellence, security, reliability, performance efficiency, cost optimization,</st>
    <st c="14633">and sustainability.</st>'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14341">AWS 提供了一套最佳</st> <st c="14357">实践和设计原则，统称为</st> **<st c="14414">Well-Architected
    框架</st>** <st c="14440">(</st>**<st c="14442">WAR</st>**<st c="14445">)，(</st>[<st
    c="14450">https://aws.amazon.com/architecture/well-architected/</st>](https://aws.amazon.com/architecture/well-architected/)<st
    c="14504">)。</st> <st c="14508">该框架涵盖六个支柱：运营卓越、安全性、可靠性、性能效率、成本优化，</st> <st c="14633">以及可持续性。</st>
- en: <st c="14652">Cloud architects use this framework to ensure that their solutions
    align with AWS best practices, usually after they are built, but it can also be
    used during the design phase.</st> <st c="14830">Although the WAR could be a chapter
    of its own, we just want you to be aware of it for now, and see how we later refer
    to it while building the projects throughout</st> <st c="14994">this book.</st>
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14652">云架构师使用该框架来确保他们的解决方案符合 AWS 最佳实践，通常是在解决方案构建完成后，但也可以在设计阶段使用。</st>
    <st c="14830">尽管 WAR 可以单独作为一章来讲解，我们现在只是希望你了解它，并且看到我们在本书中的项目构建过程中如何引用它。</st>
- en: <st c="15004">Now that we’ve covered the designing and planning phase, let’s
    delve into the implementation phase.</st> <st c="15105">You will explore multiple
    tools while getting some</st> <st c="15156">hands-on experience.</st>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15004">现在我们已经涵盖了设计和规划阶段，让我们深入探讨实施阶段。</st> <st c="15105">在这个过程中，你将探索多个工具，并获得一些</st>
    <st c="15156">实践经验。</st>
- en: <st c="15176">Getting started with AWS Console</st>
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="15176">开始使用 AWS 控制台</st>
- en: <st c="15209">The AWS Console is</st> <st c="15229">a web-based user interface
    provided by AWS that allows users to access and manage various AWS services and
    resources</st> <st c="15345">through a</st> **<st c="15356">Graphical User</st>**
    **<st c="15371">Interface</st>** <st c="15380">(</st>**<st c="15382">GUI</st>**<st
    c="15385">).</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15209">AWS 控制台是</st> <st c="15229">AWS 提供的基于 Web 的用户界面，允许用户通过</st> **<st
    c="15356">图形用户</st>** **<st c="15371">界面</st>** <st c="15380">(</st>**<st c="15382">GUI</st>**<st
    c="15385">)来访问和管理各种 AWS 服务和资源。</st>
- en: <st c="15388">The AWS Console is designed to be user-friendly and accessible
    from any web browser, allowing users to manage their AWS resources from anywhere
    with an internet connection.</st> <st c="15562">It provides a visual representation
    of AWS services and resources, making it easier for users to understand and interact
    with the</st> <st c="15692">AWS ecosystem.</st>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15388">AWS 控制台旨在用户友好，并且可以通过任何 Web 浏览器访问，允许用户从任何有网络连接的地方管理其 AWS 资源。</st>
    <st c="15562">它提供了 AWS 服务和资源的可视化展示，使得用户更容易理解和与</st> <st c="15692">AWS 生态系统互动。</st>
- en: <st c="15706">Using the Console</st>
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="15706">使用控制台</st>
- en: <st c="15724">During this section, you will</st> <st c="15755">deploy an EC2
    instance, which is an AWS</st> <st c="15795">virtual machine.</st>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15724">在本节中，你将</st> <st c="15755">部署一个 EC2 实例，这是 AWS 的</st> <st c="15795">虚拟机。</st>
- en: <st c="15811">To use the Console, you must have an AWS account.</st> <st c="15862">The
    creation process of an AWS account is outside the scope of this book, but you
    can find all the necessary information on the AWS website</st> <st c="16002">at</st>
    [<st c="16005">https://aws.amazon.com/free</st>](https://aws.amazon.com/free)<st
    c="16032">.</st>
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15811">要使用控制台，你必须拥有一个 AWS 账户。</st> <st c="15862">AWS 账户的创建过程不在本书的范围内，但你可以在
    AWS 网站上找到所有必要的信息，网址为</st> [<st c="16005">https://aws.amazon.com/free</st>](https://aws.amazon.com/free)<st
    c="16032">。</st>
- en: <st c="16033">Important note</st>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16033">重要提示</st>
- en: <st c="16048">Every example in this book assumes that you have a standalone
    AWS account that is not part of</st> <st c="16143">AWS Organizations.</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16048">本书中的每个示例都假设你拥有一个独立的 AWS 账户，该账户不属于</st> <st c="16143">AWS 组织。</st>
- en: <st c="16161">Let’s</st> <st c="16168">get started:</st>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16161">让我们开始吧：</st> <st c="16168">让我们开始：</st>
- en: <st c="16180">The first step to access the AWS Console is to navigate</st> <st
    c="16237">to</st> [<st c="16240">https://console.aws.amazon.com/</st>](https://console.aws.amazon.com/)<st
    c="16271">.</st>
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="16180">访问 AWS 控制台的第一步是导航</st> <st c="16237">到</st> [<st c="16240">https://console.aws.amazon.com/</st>](https://console.aws.amazon.com/)<st
    c="16271">。</st>
- en: <st c="16272">You will be greeted by a login screen like the one shown in</st>
    *<st c="16333">Figure 1</st>**<st c="16341">.2</st>*<st c="16343">.</st>
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="16272">你将看到一个登录界面，如</st> *<st c="16333">图 1</st>**<st c="16341">.2</st>*<st
    c="16343">所示。</st>
- en: '![Figure 1.2 – AWS Console login screen](img/B22051_01_2.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – AWS 控制台登录界面](img/B22051_01_2.jpg)'
- en: <st c="16761">Figure 1.2 – AWS Console login screen</st>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16761">图 1.2 – AWS 控制台登录界面</st>
- en: <st c="16798">If you are using</st> <st c="16816">a root user, insert the email
    of your user followed by the password.</st> <st c="16885">If you are using an
    IAM user, you will also need to input the 12-digit</st> <st c="16956">account
    ID.</st>
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="16798">如果你使用的是</st> <st c="16816">根用户，请输入你的用户邮箱和密码。</st> <st c="16885">如果你使用的是
    IAM 用户，你还需要输入 12 位数字的</st> <st c="16956">账户 ID。</st>
- en: <st c="16967">Upon successful login, you will see the AWS Console home page,
    as shown in</st> *<st c="17043">Figure 1</st>**<st c="17051">.3</st>*<st c="17053">.</st>
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="16967">成功登录后，你将看到 AWS 控制台主页，如</st> *<st c="17043">图 1</st>**<st c="17051">.3</st>*<st
    c="17053">所示。</st>
- en: '![Figure 1.3 – Console Home](img/B22051_01_3.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 控制台主页](img/B22051_01_3.jpg)'
- en: <st c="17253">Figure 1.3 – Console Home</st>
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17253">图 1.3 – 控制台主页</st>
- en: <st c="17278">Sections worth highlighting for this figure are</st> <st c="17327">as
    follows:</st>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17278">本图需要重点强调的部分如下：</st>
- en: <st c="17338">The</st> **<st c="17343">Search</st>** <st c="17349">bar at the
    top, which you can use to search for a</st> <st c="17400">specific service.</st>
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部的**搜索**栏，你可以用它来搜索特定的服务。
- en: <st c="17417">The AWS Region you are currently managing shows at the top-right
    corner; it’s</st> **<st c="17496">N.</st> <st c="17499">Virginia</st>** <st c="17507">in</st>
    <st c="17511">this case.</st>
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前管理的 AWS 区域显示在右上角；在这种情况下是**北弗吉尼亚**。
- en: <st c="17521">The user or role you are currently logged in as, which is also
    in the top-right corner, hidden under the</st> <st c="17627">red square.</st>
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前登录的用户或角色，位于右上角，隐藏在红色框下。
- en: <st c="17638">The recently</st> <st c="17651">visited section, which will be
    empty if you haven’t opened the AWS</st> <st c="17719">Console before.</st>
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近访问的部分，如果你之前没有打开过 AWS 控制台，它将是空的。
- en: <st c="17734">Important note</st>
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: <st c="17749">Why are the role and account ID hidden under a red square in</st>
    *<st c="17811">Figure 1</st>**<st c="17819">.3</st>*<st c="17821">? Although AWS
    account IDs, users, and roles are not considered sensitive, it’s an AWS best practice
    not to publicly</st> <st c="17938">disclose them.</st>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么角色和账户 ID 会隐藏在*图1.3*中的红色框下？尽管 AWS 账户 ID、用户和角色不被认为是敏感信息，但按照 AWS 最佳实践，公开披露这些信息是不推荐的。
- en: <st c="17952">Navigate to the EC2 service console.</st> <st c="17990">To do
    this, enter</st> `<st c="18008">ec2</st>` <st c="18011">in the search bar and
    select</st> **<st c="18041">EC2</st>**<st c="18044">, as shown in</st> *<st c="18058">Figure
    1</st>**<st c="18066">.4</st>*<st c="18068">.</st>
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 EC2 服务控制台。为此，在搜索栏中输入`ec2`，然后选择**EC2**，如*图1.4*所示。
- en: '![Figure 1.4 – Search for the EC2 service using the AWS Console](img/B22051_01_4.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图1.4 – 使用 AWS 控制台搜索 EC2 服务](img/B22051_01_4.jpg)'
- en: <st c="18198">Figure 1.4 – Search for the EC2 service using the AWS Console</st>
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.4 – 使用 AWS 控制台搜索 EC2 服务
- en: <st c="18259">To launch the simplest possible virtual machine, without any customization,
    select</st> **<st c="18343">Launch instance</st>**<st c="18358">, as shown in</st>
    *<st c="18372">Figure 1</st>**<st c="18380">.5</st>*<st c="18382">.</st>
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动最简单的虚拟机，且不进行任何自定义，请选择**启动实例**，如*图1.5*所示。
- en: '![Figure 1.5 – EC2 dashboard](img/B22051_01_5.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图1.5 – EC2 仪表板](img/B22051_01_5.jpg)'
- en: <st c="18713">Figure 1.5 – EC2 dashboard</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – EC2 仪表板
- en: <st c="18739">In the following</st> <st c="18757">menu,</st> **<st c="18763">Launch
    an instance</st>**<st c="18781">, select</st> **<st c="18790">Proceed without
    a key pair (Not recommended)</st>**<st c="18834">, from the</st> **<st c="18845">Key
    pair name</st>** <st c="18858">drop-down menu.</st> <st c="18875">Lastly, select</st>
    **<st c="18890">Launch instance</st>** <st c="18905">again, this time on the</st>
    <st c="18930">right menu.</st>
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下菜单中，选择**启动一个实例**，然后选择**继续无密钥对（不推荐）**，从**密钥对名称**下拉菜单中选择。最后，再次选择**启动实例**，这次是在右侧菜单中。
- en: '<st c="18941">Navigate to your running instances.</st> <st c="18978">You can
    do this by selecting Instances on the EC2 left menu or by navigating to</st> [<st
    c="19058">https://console.aws.amazon.com/ec2/#Instances</st>](https://console.aws.amazon.com/ec2/#Instances)<st
    c="19103">. You should see something similar to</st> *<st c="19141">Figure 1</st>**<st
    c="19149">.6</st>*<st c="19151">: a running EC2 instance with a funny-looking
    instance ID and some</st> <st c="19219">other attributes.</st>'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到正在运行的实例。你可以通过选择 EC2 左侧菜单中的“实例”来完成，或者直接访问[https://console.aws.amazon.com/ec2/#Instances](https://console.aws.amazon.com/ec2/#Instances)。你应该会看到类似于*图1.6*的内容：一个正在运行的
    EC2 实例，带有一个奇怪的实例 ID 和一些其他属性。
- en: '![Figure 1.6 – EC2 instance status](img/B22051_01_6.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图1.6 – EC2 实例状态](img/B22051_01_6.jpg)'
- en: <st c="19555">Figure 1.6 – EC2 instance status</st>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – EC2 实例状态
- en: <st c="19587">This is not a very useful instance because you cannot connect
    to it.</st> <st c="19657">The reason for that is you that did not select a key
    pair.</st> <st c="19716">This was just a simple demo to show you how the AWS</st>
    <st c="19768">Console works.</st>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19587">这是一个不太实用的实例，因为你无法连接到它。</st> <st c="19657">原因是你没有选择密钥对。</st> <st
    c="19716">这只是一个简单的演示，展示了AWS</st> <st c="19768">控制台的工作方式。</st>
- en: <st c="19782">You can terminate the instance by selecting</st> **<st c="19827">Terminate
    (delete) instance</st>**<st c="19854">, as shown in</st> *<st c="19868">Figure
    1</st>**<st c="19876">.7</st>*<st c="19878">.</st>
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="19782">你可以通过选择</st> **<st c="19827">终止（删除）实例</st>**<st c="19854">来终止该实例，如</st>
    *<st c="19868">图1</st>**<st c="19876">.7</st>*<st c="19878">所示。</st>
- en: '![Figure 1.7 – Terminate EC2 instance using the AWS Console](img/B22051_01_7.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图1.7 – 使用AWS控制台终止EC2实例](img/B22051_01_7.jpg)'
- en: <st c="20220">Figure 1.7 – Terminate EC2 instance using the AWS Console</st>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20220">图1.7 – 使用AWS控制台终止EC2实例</st>
- en: <st c="20277">While the AWS Console is a convenient way to manage and troubleshoot
    AWS resources, you can probably guess some of its drawbacks.</st> <st c="20408">Imagine
    you had to create one hundred of these EC2 instances, or a thousand.</st> <st
    c="20485">It would take you a very long time, especially if you had to configure
    specific parameters, such as the ones you skipped during the</st> <st c="20617">previous
    guide.</st>
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20277">虽然AWS控制台是一个方便的管理和排除故障的方式，但你可能已经猜到它的一些缺点。</st> <st c="20408">假设你需要创建一百个，甚至一千个这样的EC2实例。</st>
    <st c="20485">这将需要你花费很长时间，特别是如果你需要配置一些特定的参数，比如你在</st> <st c="20617">上一篇指南中跳过的那些。</st>
- en: <st c="20632">AWS provides</st> <st c="20645">command-line tools and SDKs for
    programmatic access and automation of AWS services that address</st> <st c="20742">these
    drawbacks.</st>
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20632">AWS提供了</st> <st c="20645">命令行工具和SDK，用于程序化访问和自动化AWS服务，以解决</st>
    <st c="20742">这些缺点。</st>
- en: <st c="20758">Important note</st>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20758">重要提示</st>
- en: <st c="20773">It is not recommended to perform actions in your AWS account using
    the root credentials.</st> <st c="20863">We strongly recommend that you don’t
    use the root user for your everyday tasks and that you follow the root user best
    practices for your AWS account, which can be found</st> <st c="21032">at</st>
    [<st c="21035">https://docs.aws.amazon.com/IAM/latest/UserGuide/root-user-best-practices.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/root-user-best-practices.html)<st
    c="21113">.</st>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20773">不建议使用根凭证在你的AWS账户中执行操作。</st> <st c="20863">我们强烈建议你不要将根用户用于日常任务，并遵循适用于AWS账户的根用户最佳实践，详细信息可以在</st>
    <st c="21032">此处找到：</st> [<st c="21035">https://docs.aws.amazon.com/IAM/latest/UserGuide/root-user-best-practices.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/root-user-best-practices.html)<st
    c="21113">。</st>
- en: <st c="21114">It’s recommended that before you advance into the next section,
    you navigate through the AWS Console a little more to get accustomed</st> <st
    c="21248">to it.</st>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21114">建议在进入下一节之前，你先多浏览一下AWS控制台，熟悉一下它。</st>
- en: <st c="21254">Navigating AWS CLI and AWS SDK</st>
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="21254">导航AWS CLI和AWS SDK</st>
- en: <st c="21285">The AWS CLI and AWS SDK are programmatic tools to access and manage
    AWS services.</st> <st c="21368">In this section, you will dive deeper into each
    of these, and execute them in your</st> <st c="21451">own environment.</st>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21285">AWS CLI和AWS SDK是用于访问和管理AWS服务的编程工具。</st> <st c="21368">在本节中，你将更深入地了解这些工具，并在自己的</st>
    <st c="21451">环境中执行它们。</st>
- en: <st c="21467">AWS CLI</st>
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="21467">AWS CLI</st>
- en: <st c="21475">The AWS CLI is a</st> <st c="21493">unified tool by AWS that allows
    you to interact with and manage AWS services from a command line such as macOS
    terminal or Windows Command Prompt.</st> <st c="21640">It provides a convenient
    and scriptable way to automate and control various AWS resources</st> <st c="21730">and
    operations.</st>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21475">AWS CLI是AWS提供的一个</st> <st c="21493">统一工具，允许你通过命令行与AWS服务进行交互和管理，支持macOS终端或Windows命令提示符等环境。</st>
    <st c="21640">它提供了一种方便且可编程的方式，帮助自动化和控制各种AWS资源</st> <st c="21730">和操作。</st>
- en: <st c="21745">It’s a CLI tool, so it requires an installation process.</st>
    <st c="21803">This differs per operating system but it is well-documented by AWS
    (</st>[<st c="21871">https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html</st>](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html)<st
    c="21949">).</st> <st c="21953">Besides standalone actions, it can be integrated
    with other CLI scripts or automation tools you already have.</st> <st c="22063">For
    example, a larger workflow that touches on various components such as local and</st>
    <st c="22147">remote processes.</st>
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21745">它是一个CLI工具，因此需要进行安装。</st> <st c="21803">不同操作系统的安装过程有所不同，但AWS有详细的文档说明（</st>[<st
    c="21871">https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html</st>](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html)<st
    c="21949">）。</st> <st c="21953">除了独立操作外，它还可以与其他CLI脚本或现有的自动化工具集成。</st> <st c="22063">例如，一个涉及多个组件的较大工作流，涉及本地和</st>
    <st c="22147">远程进程。</st>
- en: <st c="22164">Using the AWS CLI</st>
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="22164">使用AWS CLI</st>
- en: <st c="22182">In this section, you will</st> <st c="22209">create an EC2 instance
    like in the previous section, this time using the</st> <st c="22282">AWS CLI.</st>
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22182">在本节中，你将</st> <st c="22209">像上一节一样创建一个EC2实例，这次使用</st> <st c="22282">AWS
    CLI。</st>
- en: <st c="22290">Authentication works differently from the AWS Console.</st> <st
    c="22346">AWS CLI supports various authentication methods, including AWS access
    keys, IAM roles, and external credential providers.</st> <st c="22468">You can
    read all the details about the different types of security credentials on the
    AWS</st> <st c="22558">website:</st> [<st c="22567">https://docs.aws.amazon.com/IAM/latest/UserGuide/security-creds.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/security-creds.html)<st
    c="22635">.</st>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22290">认证与AWS控制台的工作方式不同。</st> <st c="22346">AWS CLI支持多种认证方法，包括AWS访问密钥、IAM角色和外部凭证提供者。</st>
    <st c="22468">你可以在AWS</st> <st c="22558">网站上查看有关不同类型安全凭证的所有详细信息：</st> [<st c="22567">https://docs.aws.amazon.com/IAM/latest/UserGuide/security-creds.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/security-creds.html)<st
    c="22635">。</st>
- en: <st c="22636">In this section, we will focus on AWS</st> <st c="22675">access
    keys.</st>
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22636">在本节中，我们将重点讲解AWS</st> <st c="22675">访问密钥。</st>
- en: <st c="22687">If you are using the root user or an IAM user, by default, your
    user does not have access keys enabled.</st> <st c="22792">Using the root user
    is not recommended.</st> <st c="22832">However, you can create access keys for
    it.</st> <st c="22876">The process is described on the AWS</st> <st c="22912">website:</st>
    [<st c="22921">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user_manage_add-key.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user_manage_add-key.html)<st
    c="23002">.</st>
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22687">如果你使用的是根用户或IAM用户，默认情况下，你的用户没有启用访问密钥。</st> <st c="22792">不建议使用根用户。</st>
    <st c="22832">不过，你可以为其创建访问密钥。</st> <st c="22876">该过程在AWS</st> <st c="22912">网站上有描述：</st>
    [<st c="22921">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user_manage_add-key.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user_manage_add-key.html)<st
    c="23002">。</st>
- en: <st c="23003">Follow these steps to create a new</st> <st c="23039">IAM user:</st>
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23003">按照以下步骤创建新的</st> <st c="23039">IAM用户：</st>
- en: <st c="23048">Navigate to IAM using the</st> <st c="23075">console (</st>[<st
    c="23084">https://us-east-1.console.aws.amazon.com/iam/home?region=us-east-1#/users</st>](https://us-east-1.console.aws.amazon.com/iam/home?region=us-east-1#/users)<st
    c="23158">).</st>
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23048">通过</st> <st c="23075">控制台导航至IAM（</st>[<st c="23084">https://us-east-1.console.aws.amazon.com/iam/home?region=us-east-1#/users</st>](https://us-east-1.console.aws.amazon.com/iam/home?region=us-east-1#/users)<st
    c="23158">）。</st>
- en: <st c="23161">Select</st> **<st c="23169">Create User</st>**<st c="23180">,
    and give it</st> <st c="23194">a username.</st>
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23161">选择</st> **<st c="23169">创建用户</st>**<st c="23180">，并为其指定用户名。</st>
- en: <st c="23205">From the</st> **<st c="23215">Set permissions</st>** <st c="23230">menu,
    select</st> **<st c="23244">Attach policies directly</st>**<st c="23268">, then
    find and select</st> **<st c="23291">PowerUserAccess</st>**<st c="23306">. Finally,</st>
    <st c="23317">click</st> **<st c="23323">Next</st>**<st c="23327">.</st>
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23205">在</st> **<st c="23215">设置权限</st>** <st c="23230">菜单中，选择</st> **<st
    c="23244">直接附加策略</st>**<st c="23268">，然后找到并选择</st> **<st c="23291">PowerUserAccess</st>**<st
    c="23306">。最后，</st> <st c="23317">点击</st> **<st c="23323">下一步</st>**<st c="23327">。</st>
- en: <st c="23328">Click</st> **<st c="23335">Create user</st>**<st c="23346">.</st>
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23328">点击</st> **<st c="23335">创建用户</st>**<st c="23346">。</st>
- en: <st c="23347">Your user should now show in the list of users.</st> <st c="23396">To
    create access keys for this user, follow</st> <st c="23440">these steps:</st>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23347">你的用户现在应该出现在用户列表中。</st> <st c="23396">要为此用户创建访问密钥，请按</st> <st c="23440">以下步骤：</st>
- en: <st c="23452">Select your newly</st> <st c="23471">created user.</st>
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23452">选择你新</st> <st c="23471">创建的用户。</st>
- en: <st c="23484">Navigate to the</st> **<st c="23501">Security credentials</st>**
    <st c="23521">tab, and select</st> **<st c="23538">Create</st>** **<st c="23545">access
    key</st>**<st c="23555">.</st>
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23484">导航到</st> **<st c="23501">安全凭证</st>** <st c="23521">标签页，选择</st>
    **<st c="23538">创建</st>** **<st c="23545">访问密钥</st>**<st c="23555">。</st>
- en: <st c="23556">On the</st> **<st c="23564">Use case</st>** <st c="23572">menu,
    select</st> **<st c="23586">Command Line Interface (CLI)</st>**<st c="23614">,
    accept the confirmation message, and</st> <st c="23653">select</st> **<st c="23660">Next</st>**<st
    c="23664">.</st>
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23556">在</st> **<st c="23564">使用场景</st>** <st c="23572">菜单中，选择</st> **<st
    c="23586">命令行界面（CLI）</st>**<st c="23614">，接受确认消息，然后</st> <st c="23653">选择</st>
    **<st c="23660">下一步</st>**<st c="23664">。</st>
- en: <st c="23665">On the following menu, click</st> **<st c="23695">Create</st>**
    **<st c="23702">access key</st>**<st c="23712">.</st>
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23665">在下一个菜单中，点击</st> **<st c="23695">创建</st>** **<st c="23702">访问密钥</st>**<st
    c="23712">。</st>
- en: <st c="23713">Before navigating away from this page, note your access and secret</st>
    <st c="23781">access keys.</st>
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23713">在离开此页面之前，请记下你的访问和秘密</st> <st c="23781">访问密钥。</st>
- en: <st c="23793">AWS also has these</st> <st c="23813">processes For all possible
    permutations well documented on</st> <st c="23872">their website:</st>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23793">AWS还为所有可能的排列过程提供了详细的文档，</st> <st c="23813">可以在他们的官方网站上查看：</st>
- en: <st c="23886">Creating an IAM</st> <st c="23903">user:</st> [<st c="23909">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_console</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_console)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="23886">创建一个IAM</st> <st c="23903">用户：</st> [<st c="23909">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_console</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_console)
- en: <st c="24002">Managing access keys for IAM</st> <st c="24032">users:</st> [<st
    c="24039">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="24002">管理IAM用户的访问密钥：</st> [<st c="24039">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html</st>](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html)
- en: <st c="24119">Open your preferred local CLI tool and set the following variables
    with your own keys.</st> <st c="24207">This allows your terminal to interact with
    your</st> <st c="24255">AWS account:</st>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="24119">打开你偏好的本地CLI工具，并使用你自己的密钥设置以下变量。</st> <st c="24207">这将允许你的终端与</st>
    <st c="24255">AWS账户进行交互：</st>
- en: '[PRE0]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: $ aws ec2 describe-instances
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: $ aws ec2 describe-instances
- en: '[PRE1]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: $ aws ec2 run-instances --image-id ami-0c101f26f147fa7fd
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: $ aws ec2 run-instances --image-id ami-0c101f26f147fa7fd
- en: --instance-type t2.micro
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: --instance-type t2.micro
- en: '[PRE2]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '{'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"Groups": [],'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"Groups": [],'
- en: '"Instances": ['
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"Instances": ['
- en: '{'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{'
- en: '"AmiLaunchIndex": 0, <st c="25390">"ImageId": "ami-0c101f26f147fa7fd",</st>
    "InstanceId": "i-0a65cf3ecaec728a8", <st c="25463">"InstanceType": "t2.micro",</st>
    "LaunchTime": "2024-03-24T10:47:25+00:00",'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"AmiLaunchIndex": 0, <st c="25390">"ImageId": "ami-0c101f26f147fa7fd",</st>
    "InstanceId": "i-0a65cf3ecaec728a8", <st c="25463">"InstanceType": "t2.micro",</st>
    "LaunchTime": "2024-03-24T10:47:25+00:00",'
- en: '"Monitoring": {'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"Monitoring": {'
- en: '"State": "disabled"'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"State": "disabled"'
- en: '},'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: '"Placement": {'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"Placement": {'
- en: '"AvailabilityZone": "us-east-1a",'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"AvailabilityZone": "us-east-1a",'
- en: '"GroupName": "",'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"GroupName": "",'
- en: '"Tenancy": "default"'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"Tenancy": "default"'
- en: '},'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '},'
- en: '"PrivateDnsName": "ip-172-31-38-84.ec2.internal",'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"PrivateDnsName": "ip-172-31-38-84.ec2.internal",'
- en: '###OUTPUT OMMITED###'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '###OUTPUT OMMITED###'
- en: '[PRE3]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: $ aws ec2 describe-instances <st c="25944">--filters "Name=instance-type,</st>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: $ aws ec2 describe-instances <st c="25944">--filters "Name=instance-type,</st>
- en: <st c="25974">Values=t2.micro"</st> --query "Reservations[].Instances[].InstanceId"
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25974">值=t2.micro"</st> --query "Reservations[].Instances[].InstanceId"
- en: '['
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '['
- en: '"i-0a65cf3ecaec728a8"'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"i-0a65cf3ecaec728a8"'
- en: ']'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: '[PRE4]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: $ aws ec2 terminate-instances <st c="26240">describe</st> command again to make
    sure the instance is no longer running.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: $ aws ec2 terminate-instances <st c="26240">describe</st> 命令再次执行以确保实例不再运行。
- en: <st c="26310">Exploring the AWS CLI</st>
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="26310">探索AWS CLI</st>
- en: <st c="26332">Explore the</st> <st c="26345">AWS CLI further on your own.</st>
    <st c="26374">The syntax is the same for</st> <st c="26401">every service:</st>
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="26332">进一步探索</st> <st c="26345">AWS CLI。</st> <st c="26374">每个服务的语法都是一样的：</st>
    <st c="26401">每个服务：</st>
- en: '[PRE5]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: <st c="26469">Here’s what each of these</st> <st c="26496">commands mean:</st>
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="26469">以下是这些</st> <st c="26496">命令的含义：</st>
- en: <st c="26510">The base call to the</st> `<st c="26532">aws</st>` <st c="26535">program.</st>
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="26510">对</st> `<st c="26532">aws</st>` <st c="26535">程序的基础调用。</st>
- en: <st c="26544">The top-level</st> `<st c="26559">command</st>` <st c="26566">typically
    corresponds to an AWS service supported by the</st> <st c="26624">AWS CLI.</st>
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="26544">顶级</st> `<st c="26559">命令</st>` <st c="26566">通常对应于由</st> <st
    c="26624">AWS CLI支持的AWS服务。</st>
- en: <st c="26632">The</st> `<st c="26637">subcommand</st>` <st c="26647">specifies
    which operation</st> <st c="26674">to perform.</st>
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="26632">该</st> `<st c="26637">子命令</st>` <st c="26647">指定要执行的操作。</st>
- en: <st c="26685">Important note</st>
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="26685">重要提示</st>
- en: <st c="26700">You created an IAM user with</st> `<st c="26730">PowerUserAccess</st>`
    <st c="26745">permissions.</st> <st c="26759">This grants full access to AWS services
    and resources, but does not allow the management of users or groups.</st> <st
    c="26868">In production scenarios, you can scope down your user access to a narrower
    set</st> <st c="26947">of permissions.</st>
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="26700">你创建了一个具有</st> `<st c="26730">PowerUserAccess</st>` <st c="26745">权限的IAM用户。</st>
    <st c="26759">这授予对AWS服务和资源的完全访问权限，但不允许管理用户或组。</st> <st c="26868">在生产环境中，你可以将用户访问权限范围缩小到更窄的一组</st>
    <st c="26947">权限。</st>
- en: <st c="26962">A handy feature of AWS CLI is the</st> `<st c="26997">help</st>`
    <st c="27001">feature.</st> <st c="27011">You can get help with any command using
    this.</st> <st c="27057">To do so, simply type</st> `<st c="27079">help</st>`
    <st c="27083">at the end of a command name.</st> <st c="27114">Execute the following
    commands.</st> <st c="27146">The result will be a very verbose description of
    everything available with</st> <st c="27221">those commands:</st>
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="26962">AWS CLI的一个方便功能是</st> `<st c="26997">帮助</st>` <st c="27001">功能。</st>
    <st c="27011">你可以使用它获得任何命令的帮助。</st> <st c="27057">为此，只需在命令名称的末尾键入</st> `<st c="27079">help</st>`
    <st c="27083">。</st> <st c="27114">执行以下命令。</st> <st c="27146">结果将是对这些命令所有可用选项的详细描述：</st>
- en: '[PRE6]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: <st c="27285">If navigating command by command is not your thing, you can also
    find the specific syntax for each</st> <st c="27384">service in AWS CLI Command
    Reference (</st>[<st c="27423">https://docs.aws.amazon.com/cli/latest/</st>](https://docs.aws.amazon.com/cli/latest/)<st
    c="27463">), but you will see and use more of it in the</st> <st c="27510">following
    chapters.</st>
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="27285">如果逐命令浏览不是你的方式，你也可以在AWS CLI命令参考中找到每个</st> <st c="27384">服务的具体语法（</st>[<st
    c="27423">https://docs.aws.amazon.com/cli/latest/</st>](https://docs.aws.amazon.com/cli/latest/)<st
    c="27463">），但你将在</st> <st c="27510">接下来的章节中看到并使用更多。</st>
- en: <st c="27529">AWS SDK</st>
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="27529">AWS SDK</st>
- en: <st c="27537">The AWS SDKs are a</st> <st c="27556">collection of open-source
    libraries that provide programmatic access to AWS services from various programming
    languages including Java, Python, Node.js, .NET, Ruby, Go, PHP, and others.</st>
    <st c="27743">These SDKs allow developers to build applications that interact
    with AWS resources and services directly, without the need for low-level AWS</st>
    <st c="27884">service APIs.</st>
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="27537">AWS SDK是一个</st> <st c="27556">开源库的集合，提供来自多种编程语言的程序化访问AWS服务，包括Java、Python、Node.js、.NET、Ruby、Go、PHP等。</st>
    <st c="27743">这些SDK使开发者能够构建与AWS资源和服务直接交互的应用程序，而无需使用低级的AWS</st> <st c="27884">服务API。</st>
- en: <st c="27897">The AWS SDKs abstract away the complexities of making authenticated
    HTTP/HTTPS requests to AWS services, handling retries and error handling, and
    parsing the responses from AWS services.</st> <st c="28085">They provide a higher-level,
    language-specific interface that makes it easier for developers to integrate AWS
    services into</st> <st c="28209">their applications.</st>
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="27897">AWS SDK抽象了向AWS服务发出认证HTTP/HTTPS请求的复杂性，处理重试和错误处理，并解析来自AWS服务的响应。</st>
    <st c="28085">它们提供了一个更高级的、特定语言的接口，使开发者更容易将AWS服务集成到</st> <st c="28209">他们的应用程序中。</st>
- en: <st c="28228">This are considered an advanced concept and you won’t see much
    of it in this book.</st> <st c="28312">It is more often used by application developers.</st>
    <st c="28361">If you are interested in understanding the syntax to create an EC2
    instance using the SDK for Python, it’s available under the</st> *<st c="28488">Learn
    the basics</st>* <st c="28504">section</st> <st c="28513">at</st> [<st c="28516">https://docs.aws.amazon.com/code-library/latest/ug/python_3_ec2_code_examples.html</st>](https://docs.aws.amazon.com/code-library/latest/ug/python_3_ec2_code_examples.html)<st
    c="28598">.</st>
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="28228">这些被认为是高级概念，你在本书中不会看到太多。</st> <st c="28312">它更常被应用开发人员使用。</st>
    <st c="28361">如果你有兴趣了解使用Python SDK创建EC2实例的语法，可以在</st> *<st c="28488">学习基础</st>*
    <st c="28504">部分找到</st> <st c="28513">，链接地址为</st> [<st c="28516">https://docs.aws.amazon.com/code-library/latest/ug/python_3_ec2_code_examples.html</st>](https://docs.aws.amazon.com/code-library/latest/ug/python_3_ec2_code_examples.html)<st
    c="28598">。</st>
- en: <st c="28599">From manual actions using the console to semi-automated ones such
    as the AWS CLI, you’ve not yet</st> <st c="28697">witnessed the full potential
    of automation.</st> <st c="28741">In the next section, you will learn how to scale
    your deployments</st> <st c="28807">with IaC.</st>
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="28599">从使用控制台的手动操作到半自动化的操作，如AWS CLI，你尚未</st> <st c="28697">见识到自动化的全部潜力。</st>
    <st c="28741">在接下来的章节中，你将学习如何通过IaC</st> <st c="28807">来扩展你的部署。</st>
- en: <st c="28816">Understanding IaC</st>
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="28816">理解IaC</st>
- en: <st c="28834">IaC is an approach</st> <st c="28854">to provision and manage
    resources such as cloud infrastructure.</st> <st c="28918">It allows you to define
    and deploy your resources using human-readable definition files</st> <st c="29006">or
    code.</st>
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="28834">IaC（基础设施即代码）是一种方法</st> <st c="28854">用于配置和管理如云基础设施等资源。</st> <st
    c="28918">它允许你使用人类可读的定义文件</st> <st c="29006">或代码来定义和部署你的资源。</st>
- en: <st c="29014">Instead of manually configuring resources through the AWS Console
    or CLI tools as you saw in previous sections, IaC allows a declarative specification
    of the desired infrastructure state.</st> <st c="29203">In our context, that’s
    the AWS cloud.</st> <st c="29241">This means compute instances, storage, networking,
    security groups, and other</st> <st c="29319">AWS services.</st>
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="29014">与之前章节中手动通过AWS控制台或CLI工具配置资源不同，IaC允许声明性地指定所需的基础设施状态。</st> <st c="29203">在我们的上下文中，这指的是AWS云。</st>
    <st c="29241">这意味着计算实例、存储、网络、安全组以及其他</st> <st c="29319">AWS服务。</st>
- en: <st c="29332">By treating your IaC, you will get</st> <st c="29368">multiple
    benefits:</st>
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="29332">通过运用IaC，你将获得</st> <st c="29368">多个好处：</st>
- en: '**<st c="29386">Configuration consistency</st>**<st c="29412">: IaC</st> <st
    c="29419">promotes the concept of immutable infrastructure, whereby infrastructure
    components are treated as disposable and replaceable rather than being manually
    modified.</st> <st c="29582">This approach ensures consistency, reduces configuration
    drift, and simplifies the process of scaling or</st> <st c="29687">updating infrastructure.</st>'
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="29386">配置一致性</st>**<st c="29412">：IaC</st> <st c="29419">推动了不可变基础设施的概念，即将基础设施组件视为一次性和可替换的，而不是手动修改。</st>
    <st c="29582">这种方法确保了一致性，减少了配置漂移，并简化了扩展或</st> <st c="29687">更新基础设施的过程。</st>'
- en: '**<st c="29711">Version control and collaboration</st>**<st c="29745">: IaC
    templates and code can be stored in version control systems such as Git, enabling
    collaboration, code reviews, and tracking of changes to the infrastructure definitions.</st>
    <st c="29922">This promotes best practices in infrastructure management and facilitates
    knowledge sharing</st> <st c="30014">among teams.</st>'
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="29711">版本控制和协作</st>**<st c="29745">：IaC模板和代码可以存储在Git等版本控制系统中，支持协作、代码审查和跟踪基础设施定义的变化。</st>
    <st c="29922">这促进了基础设施管理的最佳实践，并便于团队间的知识共享。</st> <st c="30014">。'
- en: '**<st c="30026">Automated deployments</st>**<st c="30048">: IaC templates and
    code can be integrated with</st> **<st c="30097">Continuous Integration and Continuous
    Deployment</st>** <st c="30145">(</st>**<st c="30147">CI/CD</st>**<st c="30152">)
    pipelines, enabling</st> <st c="30175">automated deployments and updates.</st>
    <st c="30210">This reduces manual effort, minimizes human errors, and ensures
    consistent and repeatable deployments across different environments (e.g., development,
    staging,</st> <st c="30371">and production).</st>'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="30026">自动化部署</st>**<st c="30048">：IaC 模板和代码可以与</st> **<st c="30097">持续集成和持续部署</st>**
    <st c="30145">(</st>**<st c="30147">CI/CD</st>**<st c="30152">) 流水线集成，从而实现</st>
    <st c="30175">自动化部署和更新。</st> <st c="30210">这减少了手动工作，最小化了人为错误，并确保在不同环境（例如开发、预生产、</st>
    <st c="30371">和生产）之间的一致性和可重复部署。</st>'
- en: '**<st c="30387">Infrastructure testing and validation</st>**<st c="30425">:
    IaC templates and code can be tested and validated before deployment, ensuring
    that the defined infrastructure meets the desired specifications and adheres to
    organizational policies and</st> <st c="30615">best practices.</st>'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="30387">基础设施测试和验证</st>**<st c="30425">：IaC 模板和代码可以在部署之前进行测试和验证，确保定义的基础设施符合期望的规格，并遵守组织的政策和</st>
    <st c="30615">最佳实践。</st>'
- en: '**<st c="30630">Cost optimization and resource management</st>**<st c="30672">:
    By treating infrastructure as code, organizations can more easily track and manage
    their AWS resources, enabling better cost optimization and resource utilization
    strategies.</st> <st c="30850">You will no longer forget</st> <st c="30876">that
    one virtual machine</st> <st c="30901">running somewhere.</st>'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="30630">成本优化和资源管理</st>**<st c="30672">：通过将基础设施视为代码，组织可以更轻松地跟踪和管理其 AWS
    资源，从而实现更好的成本优化和资源利用策略。</st> <st c="30850">你将不再忘记</st> <st c="30876">某个虚拟机</st>
    <st c="30901">正在某个地方运行。</st>'
- en: <st c="30919">There are multiple IaC tools.</st> <st c="30950">AWS provides
    its own native IaC tools such as AWS CloudFormation, which allows users to define
    their infrastructure resources using JSON or YAML templates.</st> <st c="31106">It
    also provides the</st> <st c="31127">AWS</st> **<st c="31131">Cloud Development
    Kit</st>** <st c="31152">(</st>**<st c="31154">CDK</st>**<st c="31157">).</st>
    <st c="31161">This is not to be confused with AWS SDK, which offers a higher-level
    abstraction over CloudFormation, enabling developers to define AWS constructs
    using familiar programming languages such as TypeScript, Python, Java,</st> <st
    c="31379">and C#.</st>
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="30919">有多种 IaC 工具。</st> <st c="30950">AWS 提供了自己的原生 IaC 工具，例如 AWS CloudFormation，允许用户使用
    JSON 或 YAML 模板定义基础设施资源。</st> <st c="31106">它还提供了</st> <st c="31127">AWS</st> **<st
    c="31131">云开发工具包</st>** <st c="31152">(</st>**<st c="31154">CDK</st>**<st c="31157">)。</st>
    <st c="31161">这与 AWS SDK 不同，后者提供了一个比 CloudFormation 更高层次的抽象，允许开发人员使用熟悉的编程语言（如
    TypeScript、Python、Java、</st> <st c="31379">和 C#）定义 AWS 构件。</st>
- en: <st c="31386">Beyond AWS-native tools, there are also plenty of third-party
    IaC solutions such as</st> **<st c="31471">Terraform</st>**<st c="31480">. Terraform</st>
    <st c="31491">is cloud-agnostic; it supports a wide range of cloud providers,
    including AWS, and provides a consistent workflow for managing infrastructure
    across multiple platforms.</st> <st c="31661">It is one of the most well-known</st>
    <st c="31694">IaC tools.</st>
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="31386">除了 AWS 原生工具外，还有许多第三方 IaC 解决方案，例如</st> **<st c="31471">Terraform</st>**<st
    c="31480">。Terraform</st> <st c="31491">是云中立的；它支持多种云服务提供商，包括 AWS，并提供一致的工作流程，以便在多个平台上管理基础设施。</st>
    <st c="31661">它是最著名的</st> <st c="31694">IaC 工具之一。</st>
- en: <st c="31704">Choosing an IaC tool</st> <st c="31726">boils down to personal
    preference, existing skills, and specific features each tool can offer.</st> <st
    c="31821">In this book, you will get hands-on experience with CloudFormation and
    Terraform.</st> <st c="31903">However, if you are interested in this topic, AWS
    offers prescriptive guidance on how to choose an IaC tool</st> <st c="32011">at</st>
    [<st c="32014">https://docs.aws.amazon.com/prescriptive-guidance/latest/choose-iac-tool/introduction.html</st>](https://docs.aws.amazon.com/prescriptive-guidance/latest/choose-iac-tool/introduction.html)<st
    c="32104">.</st>
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="31704">选择 IaC 工具</st> <st c="31726">归结为个人偏好、现有技能和每个工具可以提供的特定功能。</st>
    <st c="31821">在本书中，你将通过实践操作 CloudFormation 和 Terraform。</st> <st c="31903">然而，如果你对这个话题感兴趣，AWS
    提供了关于如何选择 IaC 工具的指导</st> <st c="32011">，可以参考</st> [<st c="32014">https://docs.aws.amazon.com/prescriptive-guidance/latest/choose-iac-tool/introduction.html</st>](https://docs.aws.amazon.com/prescriptive-guidance/latest/choose-iac-tool/introduction.html)<st
    c="32104">。</st>
- en: <st c="32105">Using CloudFormation</st>
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="32105">使用 CloudFormation</st>
- en: <st c="32126">In this section, you</st> <st c="32147">will create an EC2 instance</st>
    <st c="32176">using CloudFormation.</st> <st c="32198">This is an introductory
    section; it won’t dive deep into all CloudFormation syntax</st> <st c="32281">and
    features.</st>
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这一部分，你<st c="32147">将使用 CloudFormation 创建一个 EC2 实例。</st> <st c="32198">这是一个入门部分，不会深入探讨所有
    CloudFormation 的语法</st> <st c="32281">和功能。</st>
- en: <st c="32294">To get started, follow</st> <st c="32318">these steps:</st>
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要开始，按照以下步骤操作：</st>
- en: <st c="32330">Create the following file in your local environment; it is a YAML
    template to create one EC2 instance of the specified AMI and</st> `<st c="32458">t2.micro</st>`
    <st c="32466">size:</st>
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的本地环境中创建以下文件；这是一个 YAML 模板，用于创建一个指定 AMI 和 `<st c="32458">t2.micro</st>` <st
    c="32466">大小的 EC2 实例：</st>
- en: '[PRE7]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: <st c="32594">Notice how human-readable CloudFormation is in YAML format.</st>
    <st c="32655">This is one of</st> <st c="32670">its advantages.</st>
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意 CloudFormation 在 YAML 格式中的可读性。</st> <st c="32655">这是它的一个优点。</st>
- en: <st c="32685">Navigate to CloudFormation using the AWS Console at</st> [<st
    c="32738">https://us-east-1.console.aws.amazon.com/cloudformation</st>](https://us-east-1.console.aws.amazon.com/cloudformation)
    <st c="32793">and select</st> **<st c="32805">Create stack</st>**<st c="32817">.</st>
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 AWS 控制台导航到 CloudFormation，访问 [<st c="32738">https://us-east-1.console.aws.amazon.com/cloudformation</st>](https://us-east-1.console.aws.amazon.com/cloudformation)
    <st c="32793">并选择</st> **<st c="32805">创建堆栈</st>**<st c="32817">。</st>
- en: <st c="32818">Select</st> `<st c="32884">ec2.yml</st>`<st c="32891">, and</st>
    <st c="32897">select</st> **<st c="32904">Next</st>**<st c="32908">.</st>
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 `<st c="32884">ec2.yml</st>`<st c="32891">，然后</st> <st c="32897">选择</st>
    **<st c="32904">下一步</st>**<st c="32908">。</st>
- en: <st c="32909">Give</st> <st c="32915">the stack</st> <st c="32925">a name.</st>
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给<st c="32915">堆栈</st>起个名字。
- en: <st c="32932">Skip through all the options and deploy</st> <st c="32973">the
    stack.</st>
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳过所有选项并部署<st c="32973">堆栈。</st>
- en: <st c="32983">At the end of the deployment process, the status of your stack
    should show</st> `<st c="33152">us-east-1</st>` <st c="33161">region.</st>
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 部署过程结束时，你的堆栈状态应该显示 `<st c="33152">us-east-1</st>` <st c="33161">区域。</st>
- en: <st c="33169">You can verify the EC2 you just created by navigating to the EC2
    service.</st> <st c="33244">Confirm that it has the correct size</st> <st c="33281">and
    AMI.</st>
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以通过导航到 EC2 服务来验证刚刚创建的 EC2 实例。<st c="33244">确认它具有正确的大小</st> <st c="33281">和
    AMI。</st>
- en: <st c="33289">Don’t worry if you don’t fully understand the whole process.</st>
    <st c="33351">CloudFormation is a world of its own with specific syntax and features.</st>
    <st c="33423">Navigate through your stack details; you will be able to find many
    characteristics, such as when was it created, by whom it was created, and which
    resources were created and in what order, as well as more advanced concepts such
    as parameters</st> <st c="33665">and outputs.</st>
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="33289">如果你不完全理解整个过程，不用担心。</st> <st c="33351">CloudFormation 是一个独立的世界，具有特定的语法和功能。</st>
    <st c="33423">浏览你的堆栈详情，你将能够找到许多特性，例如它是什么时候创建的，谁创建的，创建了哪些资源以及顺序，甚至更多高级概念，如参数</st>
    <st c="33665">和输出。</st>
- en: <st c="33677">To learn more about CloudFormation, you can use official AWS</st>
    <st c="33739">documentation:</st> [<st c="33754">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html</st>](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)<st
    c="33829">.</st>
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 若要了解更多关于 CloudFormation 的信息，可以查看官方的 AWS</st> <st c="33739">文档：</st> [<st c="33754">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html</st>](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)<st
    c="33829">。</st>
- en: <st c="33830">Before moving on, to stop you from incurring extra costs, don’t
    forget to delete your EC2\.</st> <st c="33922">To delete all</st> <st c="33936">stack’s
    resources, select</st> <st c="33962">your stack and</st> <st c="33977">click</st>
    **<st c="33983">Delete</st>**<st c="33989">.</st>
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在继续之前，为了避免额外费用，不要忘记删除你的 EC2\。<st c="33922">要删除所有</st> <st c="33936">堆栈资源，请选择</st>
    <st c="33962">你的堆栈并</st> <st c="33977">点击</st> **<st c="33983">删除</st>**<st c="33989">。</st>
- en: <st c="33990">Using Terraform</st>
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 Terraform
- en: <st c="34006">You will now create</st> <st c="34027">another EC2 instance, this</st>
    <st c="34054">time using Terraform.</st> <st c="34076">This section assumes that
    you already have your terminal configured with your AWS credentials the exercise
    in the previous</st> *<st c="34199">AWS</st>* *<st c="34203">CLI</st>* <st c="34206">section.</st>
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="34006">你现在将创建</st> <st c="34027">另一个 EC2 实例，这次使用 Terraform。</st> <st
    c="34054">本节假设你已经按照上一节的</st> *<st c="34199">AWS</st>* *<st c="34203">CLI</st>*
    <st c="34206">部分配置好了终端和 AWS 凭证。</st>
- en: <st c="34215">Here’s how to</st> <st c="34230">do it:</st>
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="34215">以下是如何</st> <st c="34230">操作：</st>
- en: <st c="34236">Create a file in your local workstation, in any directory, and
    name</st> <st c="34305">it</st> `<st c="34308">ec2.tf</st>`<st c="34314">.</st>
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="34236">在本地工作站的任意目录中创建一个文件，并命名为</st> `<st c="34308">ec2.tf</st>`<st c="34314">。</st>
- en: <st c="34315">Populate it with the following code that creates an EC2 of the
    smallest instance type,</st> `<st c="34403">t2.micro</st>`<st c="34411">, in</st>
    `<st c="34416">us-east-1</st>`<st c="34425">, using the AMI ID.</st> <st c="34445">This
    effectively means using Amazon</st> <st c="34481">Linux 2023:</st>
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="34315">使用以下代码填充文件，它将创建一个最小实例类型的 EC2，</st> `<st c="34403">t2.micro</st>`<st
    c="34411">，位于</st> `<st c="34416">us-east-1</st>`<st c="34425">区域，使用相应的 AMI ID。</st>
    <st c="34445">这实际上意味着使用 Amazon</st> <st c="34481">Linux 2023：</st>
- en: '[PRE8]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: <st c="34622">Notice that the</st> **<st c="34639">HashiCorp Configuration Language</st>**
    <st c="34671">(</st>**<st c="34673">HCL</st>**<st c="34676">) code is still human-readable,
    albeit</st> <st c="34716">perhaps a bit less so than the</st> <st c="34747">CloudFormation
    YAML.</st>
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="34622">请注意，</st> **<st c="34639">HashiCorp 配置语言</st>** <st c="34671">(</st>**<st
    c="34673">HCL</st>**<st c="34676">) 代码仍然是人类可读的，尽管</st> <st c="34716">可能比</st>
    <st c="34747">CloudFormation YAML</st> <st c="34747">稍微难以理解一些。</st>
- en: <st c="34767">Important note</st>
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="34767">重要说明</st>
- en: <st c="34782">AMI IDs are different in each region.</st> <st c="34821">If you
    are using a different region than</st> `<st c="34862">us-east-1</st>`<st c="34871">,
    and you want to use Amazon Linux 2023, you will need to find the corresponding</st>
    <st c="34952">AMI ID.</st>
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="34782">AMI ID 在每个区域都是不同的。</st> <st c="34821">如果你使用的是与</st> `<st c="34862">us-east-1</st>`<st
    c="34871">不同的区域，并且你想使用 Amazon Linux 2023，你需要找到相应的</st> <st c="34952">AMI ID。</st>
- en: <st c="34959">To execute Terraform code, you need to have it installed.</st>
    <st c="35018">The installation is beyond the scope of this book.</st> <st c="35069">It
    differs per operating system but it’s a straightforward process that you can find
    good documentation about on the HashiCorp</st> <st c="35196">website (</st>[<st
    c="35205">https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli</st>](https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli)<st
    c="35285">).</st>
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="34959">要执行 Terraform 代码，你需要先安装它。</st> <st c="35018">安装过程不在本书的范围内。</st>
    <st c="35069">不同操作系统的安装步骤不同，但它是一个简单的过程，你可以在 HashiCorp 的</st> <st c="35196">官方网站找到详细文档（</st>[<st
    c="35205">https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli</st>](https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli)<st
    c="35285">）。</st>
- en: <st c="35288">When you have it installed, execute the following commands in
    the same directory where you created your</st> `<st c="35393">ec2.tf</st>` <st
    c="35399">file.</st> <st c="35406">They initiate Terraform in your environment</st>
    <st c="35450">and apply your previously created template to your AWS account,
    effectively</st> <st c="35526">creating</st> <st c="35535">the resources:</st>
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="35288">安装完成后，在你创建了</st> `<st c="35393">ec2.tf</st>` <st c="35399">文件的同一目录下执行以下命令。</st>
    <st c="35406">它们将在你的环境中启动 Terraform</st> <st c="35450">并将你之前创建的模板应用到 AWS 账户中，从而有效地</st>
    <st c="35526">创建</st> <st c="35535">相关资源：</st>
- en: '[PRE9]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: <st c="35584">You will be prompted to confirm.</st> <st c="35618">If your execution
    is successful, it will look like the following</st> <st c="35683">shortened output:</st>
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="35584">系统将提示你进行确认。</st> <st c="35618">如果执行成功，它将显示如下</st> <st c="35683">简化输出：</st>
- en: '[PRE10]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: <st c="36958">You can use your AWS Console to navigate through the EC2 that
    was created.</st> <st c="37034">Make sure you verify in the correct region.</st>
    <st c="37078">To delete all the resources, execute the following</st> <st c="37129">Terraform
    command:</st>
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="36958">你可以使用 AWS 控制台查看已创建的 EC2 实例。</st> <st c="37034">确保在正确的区域中查看。</st>
    <st c="37078">要删除所有资源，执行以下</st> <st c="37129">Terraform 命令：</st>
- en: '[PRE11]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: <st c="37167">Terraform offers</st> <st c="37184">many more functionalities,
    such</st> <st c="37217">as dry-runs using</st> `<st c="37235">terraform plan</st>`<st
    c="37249">, or visualizations of the deployed resources through</st> `<st c="37303">terraform
    state list</st>`<st c="37323">. You can read more about these in the Terraform
    official documentation</st> <st c="37395">at</st> [<st c="37398">https://developer.hashicorp.com/terraform/cli/commands</st>](https://developer.hashicorp.com/terraform/cli/commands)<st
    c="37452">.</st>
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="37167">Terraform 提供了</st> <st c="37184">更多的功能，如</st> <st c="37217">使用</st>
    `<st c="37235">terraform plan</st>`<st c="37249">进行干运行，或者通过</st> `<st c="37303">terraform
    state list</st>`<st c="37323">可视化部署的资源。你可以在 Terraform 官方文档中了解更多这些内容</st> <st c="37395">，访问地址为</st>
    [<st c="37398">https://developer.hashicorp.com/terraform/cli/commands</st>](https://developer.hashicorp.com/terraform/cli/commands)<st
    c="37452">。</st>
- en: <st c="37453">Take a look at a practical example of why IaC is useful.</st>
    <st c="37511">Let’s say you needed to create 100 of these machines.</st> <st c="37565">You
    could alter the previous code to</st> <st c="37602">the following:</st>
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="37453">看看为什么 IaC 有用的实际示例。</st> <st c="37511">假设你需要创建 100 台这样的机器。</st>
    <st c="37565">你可以将之前的代码修改为</st> <st c="37602">以下内容：</st>
- en: '[PRE12]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: <st c="37758">Do not run this example because it can incur high costs.</st>
    <st c="37815">However, notice how easy it is compared to</st> <st c="37858">doing
    the same task using the</st> <st c="37888">AWS Console.</st>
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="37758">不要运行这个示例，因为它可能会产生高昂的费用。</st> <st c="37815">但是，注意与使用<st c="37858">AWS
    控制台</st>执行相同任务相比，</st> <st c="37888">它是多么的简单。</st>
- en: <st c="37900">Summary</st>
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="37900">总结</st>
- en: <st c="37908">In this chapter, you learned what it means to architect on AWS.</st>
    <st c="37973">It’s not only about deploying AWS services but also about gathering
    different types of requirements, contrasting those to known patterns and reference
    architectures, choosing different services, and documenting</st> <st c="38184">it
    all.</st>
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这一章中，你学习了在 AWS 上架构的含义。<st c="37908">它不仅仅是部署 AWS 服务，还包括收集不同类型的需求，将这些需求与已知模式和参考架构进行对比，选择不同的服务，并将<st
    c="37973">这些内容记录下来</st>。</st>
- en: <st c="38191">You also explored the various methods and tools available for
    deploying and interacting with AWS services after you have your design.</st> <st
    c="38326">The AWS Console provides a user-friendly graphical interface, while
    the AWS CLI and SDKs enable programmatic access and automation.</st> <st c="38458">Additionally,
    you were exposed to various IaC techniques such as Terraform, CloudFormation,
    and AWS CDK, which allow you to define and manage your AWS infrastructure</st>
    <st c="38624">using code.</st>
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="38191">你还探索了在设计完成后用于部署和交互 AWS 服务的各种方法和工具。</st> <st c="38326">AWS 控制台提供了一个用户友好的图形界面，而
    AWS CLI 和 SDK 则提供了程序化访问和自动化功能。</st> <st c="38458">此外，你还接触了多种基础设施即代码（IaC）技术，如 Terraform、CloudFormation
    和 AWS CDK，它们允许你通过代码定义和管理你的 AWS 基础设施。</st> <st c="38624">。</st>
- en: <st c="38635">By understanding these different approaches, you can choose the
    most appropriate method based on your requirements and skill level, as well as
    the complexity of your AWS deployments.</st> <st c="38819">Whether you prefer
    a visual interface, command-line tools, programmatic access, or IaC, AWS offers
    a range of options to meet your needs and streamline your</st> <st c="38976">cloud
    operations.</st>
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="38635">通过理解这些不同的方法，你可以根据自己的需求和技能水平以及 AWS 部署的复杂性，选择最合适的方法。</st> <st c="38819">无论你喜欢使用视觉界面、命令行工具、程序化访问还是
    IaC，AWS 提供了一系列选项来满足你的需求并简化你的</st> <st c="38976">云操作。</st>
- en: <st c="38993">In the next chapter, you will build a personal website using the</st>
    <st c="39059">AWS Console.</st>
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在下一章中，你将使用<st c="38993">AWS 控制台</st>构建个人网站。
- en: '[PRE13]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
