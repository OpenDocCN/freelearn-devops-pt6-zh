- en: <st c="0">2</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">2</st>
- en: <st c="2">Creating a Personal Website</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">创建个人网站</st>
- en: <st c="29">This is the beginning of your hands-on experience.</st> <st c="81">Over
    the next chapters, you’ll immerse yourself in various scenarios.</st> <st c="151">In
    this first practical chapter, you are going to navigate through a scenario of
    building a personal website for your CV from a list of requirements.</st> <st
    c="301">With those requirements in mind, you are going to be guided through the
    methodology presented in</st> [*<st c="398">Chapter 1</st>*](B22051_01.xhtml#_idTextAnchor014)
    <st c="407">and architect a solution using AWS services such as S3 for storage
    and CloudFront</st> <st c="490">for serving.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="29">这是你实践经验的开始。</st> <st c="81">在接下来的章节中，你将沉浸在各种场景中。</st> <st c="151">在本章的第一个实践部分，你将从一份需求列表中，学习如何为你的简历建立个人网站。</st>
    <st c="301">在记住这些需求的基础上，你将通过</st> [*<st c="398">第1章</st>*](B22051_01.xhtml#_idTextAnchor014)
    <st c="407">提供的方法，构建一个使用AWS服务（如S3用于存储和CloudFront用于分发）的解决方案。</st> <st c="490">进行架构设计。</st>
- en: <st c="502">After that, you are going to build this architecture using the</st>
    <st c="566">AWS Console.</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="502">接下来，你将使用</st> <st c="566">AWS控制台构建该架构。</st>
- en: <st c="578">In summary, this chapter covers the following main topics</st> <st
    c="637">in order:</st>
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="578">总之，本章涵盖了以下主要主题</st> <st c="637">，顺序如下：</st>
- en: <st c="646">What you are going to build – a</st> <st c="679">personal website</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="646">你将要构建的内容是——一个</st> <st c="679">个人网站</st>
- en: <st c="695">How you are going to build it – using S3</st> <st c="737">and CloudFront</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="695">你将如何构建它——使用S3</st> <st c="737">和CloudFront</st>
- en: <st c="751">Actually building it – using the</st> <st c="785">AWS Console</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="751">实际构建它——使用</st> <st c="785">AWS控制台</st>
- en: <st c="796">How to improve the solution – security</st> <st c="836">and DNS</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="796">如何改进解决方案——安全性</st> <st c="836">和DNS</st>
- en: <st c="843">By the end of this chapter, you will be able to confidently create
    and host your own static websites in AWS.</st> <st c="953">This is a precursor
    to more advanced web applications that you will see in the</st> <st c="1032">following
    chapters.</st>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="843">到本章结束时，你将能够自信地在AWS中创建并托管自己的静态网站。</st> <st c="953">这是更高级Web应用程序的前奏，你将在</st>
    <st c="1032">接下来的章节中看到它们。</st>
- en: <st c="1051">Technical requirements</st>
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1051">技术要求</st>
- en: <st c="1074">In order to create your own personal website, you will need access
    to an</st> <st c="1148">AWS account.</st>
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1074">为了创建你自己的个人网站，你需要访问一个</st> <st c="1148">AWS账户。</st>
- en: <st c="1160">This chapter has a dedicated folder in the GitHub repository of
    this book.</st> <st c="1236">There, you will find the code snippets required to
    follow</st> <st c="1294">along:</st> [<st c="1301">https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter2/code</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter2/code)<st
    c="1378">.</st>
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1160">本章在本书的GitHub代码库中有一个专门的文件夹。</st> <st c="1236">在这里，你将找到跟随本章学习所需的代码片段：</st>
    <st c="1294">[<st c="1301">https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter2/code</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects/tree/main/chapter2/code)<st
    c="1378">。</st>
- en: <st c="1379">Scenario</st>
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1379">场景</st>
- en: <st c="1388">Imagine you’re a recent graduate or a</st> <st c="1426">professional
    looking to showcase your skills, experience, and accomplishments to potential
    employers or clients.</st> <st c="1540">You want to create an online presence
    that is easily accessible and professional-looking, where you can share your CV</st>
    <st c="1658">or resume.</st>
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1388">假设你是一个刚毕业的学生，或者是一个</st> <st c="1426">希望向潜在雇主或客户展示自己技能、经验和成就的专业人士。</st>
    <st c="1540">你希望创建一个既易于访问又具有专业外观的在线形象，在这里你可以分享你的简历</st> <st c="1658">或履历。</st>
- en: <st c="1668">What better way to do this than to host your own</st> <st c="1718">personal
    website?</st>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1668">有什么比托管你自己的</st> <st c="1718">个人网站更好的方式呢？</st>
- en: <st c="1735">Requirements</st>
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="1735">需求</st>
- en: <st c="1748">Recall that in</st> [*<st c="1764">Chapter 1</st>*](B22051_01.xhtml#_idTextAnchor014)<st
    c="1773">, gathering</st> <st c="1785">requirements was the first step to architect
    in AWS.</st> <st c="1838">No matter how simple or complicated your scenario is,
    it’s good practice to lay down the requirements on paper.</st> <st c="1950">It
    may sound silly, but spending time describing what you need, and how you will
    build it, will help you in the</st> <st c="2062">long run.</st>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1748">回想一下，在</st> [*<st c="1764">第1章</st>*](B22051_01.xhtml#_idTextAnchor014)<st
    c="1773">中，收集</st> <st c="1785">需求是架构AWS的第一步。</st> <st c="1838">无论你的场景有多简单或复杂，最好将需求写下来。</st>
    <st c="1950">这可能听起来有些傻，但花时间描述你需要什么，以及你如何构建它，会在</st> <st c="2062">长期内帮助你。</st>
- en: <st c="2071">In this specific case, you want to build something simple.</st>
    <st c="2131">You want a website that provides a good user experience.</st> <st
    c="2188">You don’t want a recruiter to see the page loading slowly, making them
    just move on to the next candidate.</st> <st c="2295">Likewise, you don’t want
    a recruiter to try to access your website while it’s down.</st> <st c="2379">To
    avoid this, you need to know what kind of experience your users</st> <st c="2446">are
    having.</st>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2071">在这种具体情况下，你想要构建一个简单的东西。</st> <st c="2131">你需要一个提供良好用户体验的网站。</st>
    <st c="2188">你不希望招聘者看到页面加载缓慢，从而跳过你的页面直接去下一个候选人。</st> <st c="2295">同样，你也不希望招聘者在你的网站不可用时尝试访问它。</st>
    <st c="2379">为避免这种情况，你需要了解用户的</st> <st c="2446">体验。</st>
- en: <st c="2457">CVs change often.</st> <st c="2476">You might pick up a new skill,
    change jobs, or otherwise affect your CV.</st> <st c="2549">Due to this, you’ll
    want to have an easy mechanism to update the website.</st> <st c="2623">Lastly,
    as this is a personal project, you must keep costs as low</st> <st c="2689">as
    possible.</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2457">简历经常变动。</st> <st c="2476">你可能会学习到新技能，换工作，或者其他原因影响你的简历。</st> <st
    c="2549">因此，你需要一个简单的机制来更新网站。</st> <st c="2623">最后，由于这是一个个人项目，你必须尽量将成本保持在最低</st>
    <st c="2689">水平。</st>
- en: <st c="2701">All of these factors can be translated into functional and</st>
    <st c="2761">non-functional requirements.</st>
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2701">所有这些因素都可以转化为功能性和</st> <st c="2761">非功能性需求。</st>
- en: <st c="2789">Functional requirements</st>
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="2789">功能性需求</st>
- en: <st c="2813">Functional requirements</st> <st c="2837">define the specific features,
    functionalities, and capabilities that the solution must provide.</st> <st c="2934">In
    this case, those are</st> <st c="2958">as follows:</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2813">功能性需求</st> <st c="2837">定义了解决方案必须提供的具体特性、功能和能力。</st> <st c="2934">在这种情况下，具体如下：</st>
    <st c="2958">如以下所示：</st>
- en: <st c="2969">Ability to create, edit, and update the content of the CV, including
    sections for personal information, education, work experience, skills,</st> <st
    c="3110">and projects</st>
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="2969">能够创建、编辑和更新简历的内容，包括个人信息、教育背景、工作经历、技能，</st> <st c="3110">和项目</st>
- en: <st c="3122">Support for non-text content such</st> <st c="3157">as images</st>
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3122">支持非文本内容，如</st> <st c="3157">图片</st>
- en: <st c="3166">Accessible on any browser over</st> <st c="3198">the internet</st>
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3166">在任何浏览器上都可以访问，</st> <st c="3198">通过互联网</st>
- en: <st c="3210">Ability to</st> <st c="3222">generate insights based on</st> <st
    c="3249">website data</st>
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3210">能够</st> <st c="3222">基于</st> <st c="3249">网站数据生成洞察</st>
- en: <st c="3261">Non-functional requirements</st>
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <st c="3261">非功能性需求</st>
- en: <st c="3289">Non-functional requirements define the</st> <st c="3328">qualitative
    attributes that the solution must provide.</st> <st c="3384">In this case, those
    are</st> <st c="3408">as follows:</st>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3289">非功能性需求定义了解决方案必须提供的</st> <st c="3328">定性属性。</st> <st c="3384">在这种情况下，具体如下：</st>
    <st c="3408">如以下所示：</st>
- en: <st c="3419">Low latency – fast page</st> <st c="3444">load times</st>
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3419">低延迟 – 快速的页面</st> <st c="3444">加载时间</st>
- en: <st c="3454">High availability – available</st> <st c="3485">when accessed</st>
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3454">高可用性 – 访问时可用</st> <st c="3485">可用性</st>
- en: <st c="3498">Ease of maintainability – easy process to update, and patch</st>
    <st c="3559">the website</st>
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3498">易于维护性 – 易于更新和修补</st> <st c="3559">网站</st>
- en: <st c="3570">Low cost – cheap</st> <st c="3588">pay-as-you-go services</st>
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3570">低成本 – 便宜的</st> <st c="3588">按需付费服务</st>
- en: <st c="3610">Now, you have the requirements for the personal website.</st> <st
    c="3668">In keeping with the</st> [*<st c="3688">Chapter 1</st>*](B22051_01.xhtml#_idTextAnchor014)
    <st c="3697">methodology, you must now check for known</st> <st c="3740">well-accepted
    patterns.</st>
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3610">现在，你已经有了个人网站的需求。</st> <st c="3668">按照</st> [*<st c="3688">第一章</st>*](B22051_01.xhtml#_idTextAnchor014)
    <st c="3697">的方法论，你现在需要检查已知的</st> <st c="3740">公认模式。</st>
- en: <st c="3763">Architecture patterns</st>
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="3763">架构模式</st>
- en: '<st c="3785">A simple search in</st> <st c="3805">AWS Architecture Center (</st>[<st
    c="3830">https://aws.amazon.com/architecture/</st>](https://aws.amazon.com/architecture/)<st
    c="3867">) does not yield any</st> <st c="3888">reference architecture diagrams
    or sample code.</st> <st c="3937">However, it returns a YouTube series with an
    episode named</st> *<st c="3996">Back to Basics: Hosting a Static Website on</st>*
    *<st c="4040">AWS</st>* <st c="4043">(</st>[<st c="4045">https://www.youtube.com/watch?v=N0nhkyhaqyw&ab_channel=AmazonWebServices</st>](https://www.youtube.com/watch?v=N0nhkyhaqyw&ab_channel=AmazonWebServices)<st
    c="4117">).</st>'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3785">在</st> <st c="3805">AWS 架构中心进行简单搜索（</st>[<st c="3830">https://aws.amazon.com/architecture/</st>](https://aws.amazon.com/architecture/)<st
    c="3867">）并未找到任何</st> <st c="3888">参考架构图或示例代码。</st> <st c="3937">然而，它返回了一个 YouTube
    系列，其中有一集名为</st> *<st c="3996">基础回顾：在</st>* *<st c="4040">AWS</st>* <st c="4043">(</st>[<st
    c="4045">https://www.youtube.com/watch?v=N0nhkyhaqyw&ab_channel=AmazonWebServices</st>](https://www.youtube.com/watch?v=N0nhkyhaqyw&ab_channel=AmazonWebServices)<st
    c="4117">)。</st>
- en: <st c="4120">Watch it; this is a good</st> <st c="4146">starting point.</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4120">观看它；这是一个很好的</st> <st c="4146">起点。</st>
- en: <st c="4161">Outside the context of the AWS cloud, it is important to understand
    what a static website is.</st> <st c="4256">A</st> **<st c="4258">static website</st>**
    <st c="4272">is a</st> <st c="4278">type of website where the content is pre-built
    and served to users as static files, typically HTML, CSS, and JavaScript files.</st>
    <st c="4405">Static websites do not require</st> <st c="4436">server-side processing.</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4161">在 AWS 云环境之外，理解什么是静态网站非常重要。</st> <st c="4256">一个</st> **<st c="4258">静态网站</st>**
    <st c="4272">是一种内容已预先构建并作为静态文件（通常是 HTML、CSS 和 JavaScript 文件）提供给用户的网站类型。</st> <st
    c="4405">静态网站不需要</st> <st c="4436">服务器端处理。</st>
- en: '**<st c="4459">Dynamic websites</st>**<st c="4476">, on</st> <st c="4481">the
    other hand, generate content on the server side based on user requests and other
    data.</st> <st c="4572">You will see and build these in the</st> <st c="4608">coming
    chapters.</st>'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="4459">动态网站</st>**<st c="4476">，另一方面，基于用户请求和其他数据在服务器端生成内容。</st> <st
    c="4572">你将在接下来的章节中看到并构建这些。</st>'
- en: <st c="4624">The simplest example of a</st> <st c="4651">static website is having
    a single HTML file on your local desktop and opening it in your browser.</st>
    <st c="4749">This works; however, nobody other than yourself will be able to access
    it.</st> <st c="4824">This is why you need a hosting platform for your</st> <st
    c="4873">static websites.</st>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4624">最简单的静态网站示例是将一个单一的 HTML 文件保存在本地桌面，并在浏览器中打开它。</st> <st c="4651">这可以运行；然而，除了你自己之外，没人能访问它。</st>
    <st c="4749">这就是为什么你需要一个托管平台来托管你的</st> <st c="4824">静态网站。</st>
- en: <st c="4889">After having the</st> <st c="4907">static files built, you upload
    your files and other people will be able to access them through this hosting platform.</st>
    <st c="5025">This is where AWS and solution architecture play</st> <st c="5074">a
    role.</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4889">在构建好</st> <st c="4907">静态文件后，你将文件上传到托管平台，其他人便能通过该平台访问这些文件。</st>
    <st c="5025">这就是 AWS 和解决方案架构的作用所在。</st> <st c="5074">扮演着角色。</st>
- en: <st c="5081">Architecture</st>
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="5081">架构</st>
- en: <st c="5094">By now, you understand what a static website is, have your requirements
    set, and are ready to create an architecture</st> <st c="5211">diagram of</st>
    <st c="5223">the solution.</st>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5094">到现在，你已经了解了什么是静态网站，明确了需求，并准备创建一个架构</st> <st c="5211">图</st> <st
    c="5223">解决方案。</st>
- en: <st c="5236">There are two</st> <st c="5251">possible options:</st>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5236">有两种</st> <st c="5251">可能的选项：</st>
- en: <st c="5268">Diagram without</st> <st c="5285">specific services</st>
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="5268">不带</st> <st c="5285">特定服务的图</st>
- en: <st c="5302">Diagram with</st> <st c="5316">specific services</st>
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="5302">带有</st> <st c="5316">特定服务的图</st>
- en: <st c="5333">Following a formal process, you create a diagram without specific
    services.</st> <st c="5410">After that, during service selection, you can match
    the unspecific services with the requirements and replace them with</st> <st c="5530">specific
    services.</st>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5333">遵循正式的流程，您创建一个没有特定服务的图表。</st> <st c="5410">之后，在选择服务时，您可以根据需求将这些不特定的服务与具体服务匹配并替换掉。</st>
- en: <st c="5548">For example, you know you want</st> <st c="5580">a</st> **<st c="5582">Content
    Delivery Network</st>** <st c="5606">(</st>**<st c="5608">CDN</st>**<st c="5611">),
    so you should represent that.</st> <st c="5645">After that, if Amazon CloudFront
    matches your requirements, replace the agnostic CDN icon with CloudFront's icon
    in your</st> <st c="5766">architecture diagram.</st>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5548">例如，您知道自己需要一个</st> <st c="5580">内容分发网络（</st>**<st c="5582">CDN</st>**<st
    c="5606">），因此您应该表示该内容。</st> <st c="5645">之后，如果 Amazon CloudFront 满足您的需求，将无关的 CDN
    图标替换为 CloudFront 图标，并放入您的</st> <st c="5766">架构图中。</st>
- en: <st c="5787">However, for this simple scenario and after learning about the
    architecture pattern, you can jump straight into a diagram populated with</st>
    <st c="5925">AWS services.</st>
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5787">然而，对于这个简单的场景，并在了解架构模式后，您可以直接跳到一个图表，图表中列出了</st> <st c="5925">AWS
    服务。</st>
- en: <st c="5938">Remember, you need a place to store your static files and a mechanism
    to make</st> <st c="6017">those available.</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5938">请记住，您需要一个地方来存储静态文件，并且需要一个机制来使</st> <st c="6017">它们可用。</st>
- en: '<st c="6033">Your diagram should look like the one in</st> *<st c="6075">Figure
    2</st>**<st c="6083">.1</st>*<st c="6085">: a three-component diagram, with Amazon
    S3, Amazon CloudFront, and Amazon CloudWatch.</st> <st c="6173">Clients connect
    through CloudFront, which fetches your website static files from S3\.</st> <st
    c="6258">Both of these services emit metrics</st> <st c="6294">to CloudWatch.</st>'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6033">您的图表应当类似于</st> *<st c="6075">图 2</st>**<st c="6083">.1</st>*<st
    c="6085">：一个三部分组成的图表，包含 Amazon S3、Amazon CloudFront 和 Amazon CloudWatch。</st>
    <st c="6173">客户端通过 CloudFront 连接，它从 S3 中获取您网站的静态文件。</st> <st c="6258">这两个服务都将指标</st>
    <st c="6294">发送到 CloudWatch。</st>
- en: '![Figure 2.1 – Static website architecture on AWS](img/B22051_02_1.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – AWS 上的静态网站架构](img/B22051_02_1.jpg)'
- en: <st c="6360">Figure 2.1 – Static website architecture on AWS</st>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6360">图 2.1 – AWS 上的静态网站架构</st>
- en: <st c="6407">Although</st> <st c="6417">clients are represented with a computer
    icon, they can also be other types of devices such as phones</st> <st c="6518">or
    tablets.</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6407">尽管</st> <st c="6417">客户端以计算机图标表示，但它们也可以是其他类型的设备，如手机</st> <st c="6518">或平板电脑。</st>
- en: <st c="6529">AWS services</st>
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="6529">AWS 服务</st>
- en: <st c="6542">This architecture only uses three services.</st> <st c="6587">In
    this</st> <st c="6594">section, you will learn what these services do and why
    they address</st> <st c="6663">your requirements.</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6542">该架构仅使用了三个服务。</st> <st c="6587">在这一</st> <st c="6594">节中，您将了解这些服务的功能以及它们如何满足</st>
    <st c="6663">您的需求。</st>
- en: <st c="6681">Amazon Simple Storage Service (S3)</st>
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="6681">Amazon 简单存储服务（S3）</st>
- en: <st c="6716">Amazon S3 is a</st> <st c="6732">highly scalable and durable object
    storage service.</st> <st c="6784">S3 has many characteristics.</st> <st c="6813">The
    ones relevant to our use case are</st> <st c="6851">as follows:</st>
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6716">Amazon S3 是一个</st> <st c="6732">高度可扩展且耐用的对象存储服务。</st> <st c="6784">S3
    具有许多特点。</st> <st c="6813">与我们使用案例相关的特点如下：</st>
- en: <st c="6862">S3 is an object</st> <st c="6878">storage service, meaning that
    it stores data as objects (files) in</st> <st c="6946">buckets (directories).</st>
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="6862">S3 是一种对象</st> <st c="6878">存储服务，意味着它将数据存储为对象（文件），并将其存放在</st> <st
    c="6946">桶（目录）中。</st>
- en: <st c="6968">Designed for high availability, with data automatically replicated
    across multiple AWS availability zones within a region, ensuring that your data
    remains accessible even in the event of an outage or</st> <st c="7169">component
    failure.</st>
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="6968">设计上具有高可用性，数据会在同一地区内的多个 AWS 可用区之间自动复制，确保即使发生停机或</st> <st c="7169">组件故障，您的数据仍然可以访问。</st>
- en: <st c="7187">Fully managed service; you don’t have to worry about the operational
    overhead of managing storage infrastructure, as all is handled</st> <st c="7320">for
    you.</st>
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7187">完全托管的服务；您无需担心管理存储基础设施的操作开销，因为这一切都由</st> <st c="7320">为您处理。</st>
- en: <st c="7328">Supports versioning, as a means of keeping multiple variants of
    an object in the same bucket allowing you to preserve, retrieve, and restore every
    version of every object stored in</st> <st c="7510">your buckets.</st>
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7328">支持版本控制，可以在同一个存储桶中保存对象的多个变体，允许你保存、检索和恢复存储在</st> <st c="7510">桶中的每个对象的每个版本。</st>
- en: <st c="7523">Highly cost-effective storage solution, with pay-as-you-go pricing
    and tiered</st> <st c="7602">storage classes.</st>
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7523">高度具有成本效益的存储解决方案，采用按需计费定价和分级</st> <st c="7602">存储类。</st>
- en: <st c="7618">Relate these statements to</st> <st c="7646">your requirements:</st>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7618">将这些陈述与</st> <st c="7646">你的需求关联起来：</st>
- en: <st c="7664">You want to store files (e.g.</st> <st c="7695">HTML, CSS, and
    images), and you want to store them in a place where they will be available for
    the recruiters to access at any time.</st> <st c="7828">S3 is</st> <st c="7834">highly
    available.</st>
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7664">你希望存储文件（例如</st> <st c="7695">HTML、CSS 和图像），并希望它们随时可供招聘人员访问。</st>
    <st c="7828">S3 是</st> <st c="7834">高度可用的。</st>
- en: <st c="7851">You want the solution to be easily maintained, without having to
    do operating system patches and all those boring activities.</st> <st c="7978">S3
    is a</st> <st c="7986">fully-managed service.</st>
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7851">你希望解决方案容易维护，无需进行操作系统补丁更新和其他繁琐的工作。</st> <st c="7978">S3 是一项</st>
    <st c="7986">完全托管的服务。</st>
- en: <st c="8008">Likewise, you want to be able to update your CV in an easy manner,
    and if you make a mistake, you want to be able to roll back to a previous version.</st>
    <st c="8159">S3 supports</st> <st c="8171">file versioning.</st>
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="8008">同样，你希望能够轻松更新你的简历，如果犯错，能够回滚到之前的版本。</st> <st c="8159">S3 支持</st>
    <st c="8171">文件版本控制。</st>
- en: <st c="8187">Lastly, you need this at the lowest possible cost.</st> <st c="8239">S3
    has a free tier, it only charges for what you consume, and it is considered a</st>
    <st c="8320">cost-effective service.</st>
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="8187">最后，你需要以尽可能低的成本来实现这一点。</st> <st c="8239">S3 提供免费层，只对实际使用量收费，且被认为是一个</st>
    <st c="8320">具有成本效益的服务。</st>
- en: <st c="8343">It checks all the boxes as the service to store your</st> <st c="8397">static
    files.</st>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8343">它符合所有条件，成为存储你</st> <st c="8397">静态文件的理想服务。</st>
- en: <st c="8410">Did you know that S3 has a native functionality to function as
    a static website?</st> <st c="8492">You can read all about it on the AWS website</st>
    <st c="8537">at</st> [<st c="8540">https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html</st>](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html)<st
    c="8613">.</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8410">你知道 S3 有原生功能可以作为静态网站托管吗？</st> <st c="8492">你可以在 AWS 网站上了解更多</st>
    <st c="8537">信息，地址是</st> [<st c="8540">https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html</st>](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html)<st
    c="8613">。</st>
- en: <st c="8614">However, it</st> <st c="8627">presents two</st> <st c="8640">key
    limitations:</st>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8614">然而，它</st> <st c="8627">有两个</st> <st c="8640">主要的限制：</st>
- en: <st c="8656">S3 is a regional service, and therefore, the website is available
    at the AWS region-specific website endpoint of</st> <st c="8770">the bucket.</st>
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="8656">S3 是一项区域性服务，因此，网站可以通过该桶所在 AWS 区域的特定网站终端访问。</st>
- en: <st c="8781">It does not</st> <st c="8794">support HTTPS.</st>
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="8781">它不</st> <st c="8794">支持 HTTPS。</st>
- en: '<st c="8808">This leads us to the next service: CloudFront.</st> <st c="8856">If
    you want to learn more about S3, including what is</st> <st c="8909">included
    in the free tier, you can read about it</st> <st c="8959">at</st> [<st c="8962">https://aws.amazon.com/pm/serv-s3</st>](https://aws.amazon.com/pm/serv-s3)<st
    c="8995">.</st>'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8808">这引出了下一个服务：CloudFront。</st> <st c="8856">如果你想了解更多关于 S3 的信息，包括免费层的内容，可以阅读</st>
    <st c="8909">相关文档</st> <st c="8959">，地址是</st> [<st c="8962">https://aws.amazon.com/pm/serv-s3</st>](https://aws.amazon.com/pm/serv-s3)<st
    c="8995">。</st>
- en: <st c="8996">Amazon CloudFront</st>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8996">Amazon CloudFront</st>
- en: <st c="9014">Amazon CloudFront is a</st> <st c="9038">service that speeds up
    the distribution of your static and dynamic web content, such as</st> `<st c="9126">.html</st>`<st
    c="9131">,</st> `<st c="9133">.css</st>`<st c="9137">,</st> `<st c="9139">.js</st>`<st
    c="9142">, and image files, to your users.</st> <st c="9176">It is</st> <st c="9182">Amazon’s
    CDN.</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9014">Amazon CloudFront 是一项</st> <st c="9038">加速分发静态和动态网页内容的服务，内容包括</st>
    `<st c="9126">.html</st>`<st c="9131">，</st> `<st c="9133">.css</st>`<st c="9137">，</st>
    `<st c="9139">.js</st>`<st c="9142">和图像文件，传送给你的用户。</st> <st c="9176">它是</st> <st
    c="9182">Amazon 的 CDN。</st>
- en: <st c="9195">A CDN is a geographically distributed group of servers that caches
    content close to end users.</st> <st c="9291">In short, the way it works is that
    your users terminate their connections at CloudFront locations closer to them,
    and travel the rest of the way using Amazon’s high-speed backbone network.</st>
    <st c="9480">If your content is already cached in the location, it returns it
    without traveling all the way to</st> <st c="9578">the origin.</st>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9195">CDN 是一个地理上分布的服务器群组，它将内容缓存到靠近最终用户的地方。</st> <st c="9291">简而言之，它的工作方式是，用户在离他们更近的
    CloudFront 位置终止连接，然后通过 Amazon 的高速骨干网络完成剩余的传输。</st> <st c="9480">如果你的内容已经在该位置缓存，它会直接返回，而不需要传输到</st>
    <st c="9578">源服务器。</st>
- en: <st c="9589">Some of its key characteristics are</st> <st c="9626">as follows:</st>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9589">其一些关键特性如下：</st>
- en: '**<st c="9637">Globally distributed</st>**<st c="9658">: By</st> <st c="9664">caching
    static content at edge locations closer to users, CloudFront can serve the website’s
    files more quickly, resulting in faster load times and an enhanced user experience.</st>
    <st c="9841">This is particularly beneficial for users with slower internet connections
    or those located in regions far from the origin</st> <st c="9964">S3 bucket.</st>'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="9637">全球分布式</st>**<st c="9658">：通过在靠近用户的边缘位置缓存静态内容，CloudFront 可以更快速地提供网站文件，从而提高加载速度，带来更好的用户体验。</st>
    <st c="9664">这一点对互联网连接较慢或位于距离源 S3 存储桶较远地区的用户尤为有益。</st>'
- en: '**<st c="9974">Highly available and fault tolerant</st>**<st c="10010">: CloudFront
    is built on top of AWS’s highly available and fault-tolerant infrastructure.</st>
    <st c="10101">The edge locations and underlying services are designed with redundancy
    and fault tolerance in mind, minimizing the impact of individual</st> <st c="10238">component
    failures.</st>'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="9974">高可用且容错</st>**<st c="10010">：CloudFront 构建在 AWS 高可用且容错的基础设施之上。</st>
    <st c="10101">边缘位置和基础服务都考虑了冗余和容错设计，最大限度地减少单个</st> <st c="10238">组件故障的影响。</st>'
- en: '**<st c="10257">Increased resiliency</st>**<st c="10278">: CloudFront supports
    multiple origin servers (e.g., Amazon S3 buckets or web servers) for a single
    distribution.</st> <st c="10393">If the primary origin server becomes unavailable,
    CloudFront automatically fails over to a secondary or tertiary origin server,
    ensuring continuous</st> <st c="10541">content delivery.</st>'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10257">增强的弹性</st>**<st c="10278">：CloudFront 支持为单个分发配置多个源服务器（例如，Amazon
    S3 存储桶或 Web 服务器）。</st> <st c="10393">如果主要源服务器不可用，CloudFront 会自动切换到次级或三级源服务器，确保内容持续</st>
    <st c="10541">交付。</st>'
- en: '**<st c="10558">Content delivery optimization</st>**<st c="10588">: CloudFront
    optimizes the delivery of static content by automatically compressing files, minimizing
    the amount of data transferred, and supporting advanced caching mechanisms such
    as cache control headers</st> <st c="10794">and query</st> <st c="10805">string
    forwarding.</st>'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="10558">内容交付优化</st>**<st c="10588">：CloudFront 通过自动压缩文件、最小化数据传输量并支持高级缓存机制（如缓存控制头和查询</st>
    <st c="10794">字符串转发），来优化静态内容的交付。</st> <st c="10805">。 </st>'
- en: <st c="10823">Again, relate these characteristics to</st> <st c="10863">your
    requirements:</st>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10823">再次，将这些特性与</st> <st c="10863">你的需求进行对比：</st>
- en: <st c="10881">You want a distribution mechanism that is available through the
    internet on any device.</st> <st c="10970">You don’t know where your users will
    be or what types of devices and bandwidth constraints they might have.</st> <st
    c="11078">You benefit from CloudFront’s globally distributed nature with</st>
    <st c="11141">out-of-the-box caching.</st>
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="10881">你需要一种通过互联网在任何设备上都能使用的分发机制。</st> <st c="10970">你不知道用户会在哪里，或者他们可能使用什么类型的设备和带宽限制。</st>
    <st c="11078">CloudFront 全球分布的特性和</st> <st c="11141">开箱即用的缓存功能，可以让你受益。</st>
- en: <st c="11164">S3 is highly available, but you also need the CDN to be highly
    available.</st> <st c="11239">When you chain components together, a failure in
    any one affects the whole system.</st> <st c="11322">CloudFront also helps to
    increase your availability further by bypassing S3 failures using a secondary
    origin</st> <st c="11432">or bucket.</st>
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="11164">S3 是高可用的，但你还需要 CDN 高可用。</st> <st c="11239">当你将多个组件串联在一起时，任何一个组件的故障都会影响整个系统。</st>
    <st c="11322">CloudFront 还通过使用次级源</st> <st c="11432">或存储桶，进一步提高了你的可用性。</st>
- en: <st c="11442">Lastly, cost is important.</st> <st c="11470">CloudFront’s pricing
    model is based on data transferred out and the number of requests with a pay-as-you-go
    model.</st> <st c="11585">CloudFront automatically compresses your files, if supported
    by the client’s browser, minimizing</st> <st c="11682">data transfers.</st>
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="11442">最后，成本是一个重要因素。</st> <st c="11470">CloudFront 的定价模型基于传输的数据量和请求次数，并采用按需付费模式。</st>
    <st c="11585">如果客户端的浏览器支持，CloudFront 会自动压缩你的文件，从而减少</st> <st c="11682">数据传输。</st>
- en: <st c="11697">If you want to learn more about CloudFront including what is included
    in the free tier, you can read about it in the AWS</st> <st c="11819">documentation:</st>
    [<st c="11834">https://aws.amazon.com/cloudfront</st>](https://aws.amazon.com/cloudfront)<st
    c="11867">.</st>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11697">如果你想了解更多关于 CloudFront 的信息，包括免费套餐包含的内容，可以在 AWS</st> <st c="11819">文档中阅读：</st>
    [<st c="11834">https://aws.amazon.com/cloudfront</st>](https://aws.amazon.com/cloudfront)<st
    c="11867">。</st>
- en: <st c="11868">Amazon CloudWatch metrics</st>
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="11868">Amazon CloudWatch 指标</st>
- en: <st c="11894">Amazon CloudWatch</st> <st c="11912">monitors resources and the
    applications you run on AWS in real time.</st> <st c="11982">You can use CloudWatch
    to collect and track metrics, logs, events,</st> <st c="12049">and traces.</st>
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11894">Amazon CloudWatch</st> <st c="11912">实时监控你在 AWS 上运行的资源和应用程序。</st>
    <st c="11982">你可以使用 CloudWatch 收集和追踪指标、日志、事件</st> <st c="12049">和追踪信息。</st>
- en: <st c="12060">CloudWatch has many features, but in this project, we will only
    focus on CloudWatch metrics.</st> <st c="12154">Some key characteristics of</st>
    <st c="12182">CW metrics are</st> <st c="12197">as follows:</st>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12060">CloudWatch 拥有许多功能，但在本项目中，我们将只关注 CloudWatch 指标。</st> <st c="12154">CW
    指标的一些关键特性如下：</st> <st c="12182">以下是</st> <st c="12197">一些特点：</st>
- en: '**<st c="12208">Comprehensive coverage</st>**<st c="12231">: It collects metrics
    from a wide range of AWS services, including Amazon S3 and Amazon CloudFront,
    alongside many others.</st> <st c="12355">This comprehensive coverage allows you
    to monitor and analyze the performance and health of your entire AWS infrastructure
    and applications from a single</st> <st c="12509">centralized location.</st>'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12208">全面覆盖</st>**<st c="12231">：它收集来自多个 AWS 服务的指标，包括 Amazon S3 和
    Amazon CloudFront，以及其他许多服务。</st> <st c="12355">这种全面的覆盖使你能够从一个集中位置监控和分析整个 AWS 基础设施和应用程序的性能与健康状况。</st>
    <st c="12509">集中管理。</st>'
- en: '**<st c="12530">Alarms and notifications</st>**<st c="12555">: It supports
    the creation of alarms based on metric thresholds or patterns.</st> <st c="12633">These
    alarms can trigger notifications (e.g., email, SMS, or AWS Lambda functions) when
    specific conditions are met, allowing you to proactively respond to potential
    issues or take</st> <st c="12814">automated actions.</st>'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12530">警报和通知</st>**<st c="12555">：它支持基于指标阈值或模式创建警报。</st> <st c="12633">当特定条件满足时，这些警报可以触发通知（例如，电子邮件、短信或
    AWS Lambda 函数），使你能够主动应对潜在问题或采取</st> <st c="12814">自动化措施。</st>'
- en: '**<st c="12832">Cost-effectiveness</st>**<st c="12851">: With pricing based
    on the number of metrics ingested and the data retention period and a pay-as-you-go
    model, it allows you to scale your monitoring efforts as your AWS infrastructure
    and applications grow, without incurring significant</st> <st c="13091">upfront
    costs.</st>'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="12832">成本效益</st>**<st c="12851">：其定价基于接收的指标数量、数据保存期限以及按需付费模式，使你能够随着
    AWS 基础设施和应用程序的增长，扩展你的监控工作，而无需承担高额的</st> <st c="13091">前期成本。</st>'
- en: <st c="13105">For any solution you deploy, you need to monitor it.</st> <st
    c="13159">This means that you need to know whether it’s working, and if it isn’t,
    you need to know why not.</st> <st c="13257">In this case, even though this is
    a simple website with your CV, you want to know whether anyone is accessing it,
    and what type of experience they are having.</st> <st c="13416">This will satisfy
    the</st> *<st c="13438">ability to generate insights based on website</st>* *<st
    c="13484">data</st>* <st c="13488">requirement.</st>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13105">对于任何你部署的解决方案，你都需要进行监控。</st> <st c="13159">这意味着你需要知道它是否正常工作，如果没有，你需要知道为什么没有。</st>
    <st c="13257">即便这是一个简单的包含你简历的网站，你也想知道是否有人在访问它，以及他们的体验如何。</st> <st c="13416">这将满足</st>
    *<st c="13438">根据网站</st>* *<st c="13484">数据生成洞察的能力</st>* <st c="13488">的要求。</st>
- en: '<st c="13501">CloudWatch is deeply integrated into the AWS ecosystem.</st>
    <st c="13558">It will natively show you both CloudFront and S3 metrics, for example:
    the number of requests, error rates, and latency.</st> <st c="13679">You will
    have access to these metrics while minimizing your costs.</st> <st c="13746">If
    you have no visits, you will have</st> <st c="13783">no costs.</st>'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13501">CloudWatch 深度集成进 AWS 生态系统。</st> <st c="13558">它会原生显示 CloudFront
    和 S3 指标，例如：请求次数、错误率和延迟。</st> <st c="13679">你可以访问这些指标，同时最大限度降低成本。</st> <st c="13746">如果没有访问量，你将</st>
    <st c="13783">没有费用。</st>
- en: <st c="13792">If you want to learn more about CloudWatch metrics, including
    what is included in the free tier, you can read about it in the</st> <st c="13919">AWS</st>
    <st c="13923">documentation:</st> [<st c="13938">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/working_with_metrics.html</st>](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/working_with_metrics.html)<st
    c="14026">.</st>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13792">如果你想了解更多关于 CloudWatch 指标的信息，包括免费层包含的内容，可以阅读</st> <st c="13919">AWS</st>
    <st c="13923">文档：</st> [<st c="13938">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/working_with_metrics.html</st>](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/working_with_metrics.html)<st
    c="14026">。</st>
- en: <st c="14027">Coding the solution</st>
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="14027">编码解决方案</st>
- en: <st c="14047">Congratulations, you have designed an architecture that fulfills
    all your requirements.</st> <st c="14136">It’s time to build it.</st> <st c="14159">During
    this</st> <st c="14171">chapter, you are going to do it using the AWS console
    in the</st> **<st c="14232">N.</st>** **<st c="14235">Virginia</st>** <st c="14243">region.</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14047">恭喜你，你已经设计了一个满足所有需求的架构。</st> <st c="14136">现在是时候构建它了。</st> <st
    c="14159">在本</st> <st c="14171">章中，你将使用 AWS 控制台，在</st> **<st c="14232">北弗吉尼亚</st>**
    <st c="14243">区域构建它。</st>
- en: <st c="14251">Editing the website</st>
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="14251">编辑网站</st>
- en: <st c="14271">Start by</st> <st c="14280">downloading the assets in the Git
    repository of this book at</st> [<st c="14342">https://github.com/PacktPublishing/AWS-Cloud-Projects</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects)<st
    c="14395">. You can do it from your workstation terminal using the Git tool, or
    by downloading the repository as a ZIP file.</st> <st c="14510">A detailed step-by-step
    guide on how to use Git and GitHub is beyond the scope of this book, but if you
    want to deep dive into the topic, the book</st> *<st c="14657">Mastering Git</st>*<st
    c="14670">, available at</st> [<st c="14685">https://www.packtpub.com/product/mastering-git/9781783553754</st>](https://www.packtpub.com/product/mastering-git/9781783553754)<st
    c="14745">, covers</st> <st c="14754">it holistically.</st>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14271">首先，</st> <st c="14280">在本书的 Git 仓库中下载资源，网址为</st> [<st c="14342">https://github.com/PacktPublishing/AWS-Cloud-Projects</st>](https://github.com/PacktPublishing/AWS-Cloud-Projects)<st
    c="14395">。你可以通过工作站终端使用 Git 工具下载，或者直接下载 ZIP 文件形式的仓库。</st> <st c="14510">如何使用 Git
    和 GitHub 的详细步骤指南超出了本书的范围，但如果你想深入学习这个话题，可以参考本书*《精通 Git》*，它在</st> [<st c="14685">https://www.packtpub.com/product/mastering-git/9781783553754</st>](https://www.packtpub.com/product/mastering-git/9781783553754)<st
    c="14745">中全面讲解了相关内容。</st>
- en: <st c="14770">You will find three files in the</st> `<st c="14804">chapter2/code</st>`
    <st c="14817">folder.</st> <st c="14826">Open</st> `<st c="14831">index.html</st>`
    <st c="14841">in your favorite code editor.</st> <st c="14872">There, you will
    find a standard HTML that references some styles in the header, along with an
    HTML body with multiple divisions, highlighted with the tags</st> `<st c="15027">div</st>`<st
    c="15030">, populated</st> <st c="15042">with</st> <st c="15047">CV information:</st>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14770">你会在</st> `<st c="14804">chapter2/code</st>` <st c="14817">文件夹中找到三个文件。</st>
    <st c="14826">在你喜欢的代码编辑器中打开</st> `<st c="14831">index.html</st>` <st c="14841">文件。</st>
    <st c="14872">在那里，你会发现一个标准的 HTML 文件，头部引用了一些样式，HTML 正文包含多个分区，通过标签</st> `<st c="15027">div</st>`<st
    c="15030">突出显示，并填充</st> <st c="15042">着</st> <st c="15047">简历信息：</st>
- en: '[PRE0]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '<st c="15739">If you are not familiar with HTML, this is the 1,000-foot overview:
    HTML files are what browsers read to render web pages.</st> <st c="15863">They
    are represented by the</st>`<st c="15890">.html</st>` <st c="15895">or</st> `<st
    c="15899">.htm</st>` <st c="15903">extensions.</st> <st c="15916">HTML documents
    have a series of elements, represented in between tags.</st> <st c="15987">Tags
    are represented with a word between</st> `<st c="16028"><></st>` <st c="16030">symbols.</st>
    <st c="16040">There are opening and closing tags; the content is between them.</st>
    <st c="16105">There are well-defined tags, for example,</st> `<st c="16147"><p></st>`<st
    c="16150">, which means</st> <st c="16164">paragraph.</st> <st c="16175">To represent
    a paragraph, you would do</st> <st c="16214">the following:</st>'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15739">如果您不熟悉 HTML，以下是 1,000 英尺的概述：HTML 文件是浏览器读取的文件，用于渲染网页。</st> <st
    c="15863">它们由</st>`<st c="15890">.html</st>` <st c="15895">或</st> `<st c="15899">.htm</st>`
    <st c="15903">扩展名表示。</st> <st c="15916">HTML 文档由一系列元素组成，这些元素位于标签之间。</st> <st c="15987">标签通过</st>
    `<st c="16028"><></st>` <st c="16030">符号来表示。</st> <st c="16040">有开标签和闭标签；内容位于它们之间。</st>
    <st c="16105">有些标签是定义明确的，例如</st> `<st c="16147"><p></st>`<st c="16150">，表示</st>
    <st c="16164">段落。</st> <st c="16175">要表示一个段落，您可以这样做：</st>
- en: '[PRE1]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <st c="16265">You can find documentation about many other tags on the w3school
    website</st> <st c="16338">at</st> [<st c="16342">https://www.w3schools.com/tags/</st>](https://www.w3schools.com/tags/)<st
    c="16373">.</st>
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16265">您可以在 w3school 网站上找到关于许多其他标签的文档</st> <st c="16338">，网址为</st> [<st
    c="16342">https://www.w3schools.com/tags/</st>](https://www.w3schools.com/tags/)<st
    c="16373">。</st>
- en: <st c="16374">However, if you just use plain HTML, your website will not have
    a good aesthetic.</st> <st c="16457">To visualize this, open the</st> `<st c="16485">index.html</st>`
    <st c="16495">file in your browser.</st> <st c="16518">If you haven’t modified
    it yet, it will look like</st> *<st c="16568">Figure 2</st>**<st c="16576">.2</st>*<st
    c="16578">.</st>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16374">然而，如果仅使用纯 HTML，您的网站将不会具有良好的美学效果。</st> <st c="16457">为了直观地展示这一点，请在浏览器中打开</st>
    `<st c="16485">index.html</st>` <st c="16495">文件。</st> <st c="16518">如果您尚未修改它，它将看起来像是</st>
    *<st c="16568">图 2</st>**<st c="16576">.2</st>*<st c="16578">。</st>
- en: '![Figure 2.2 – index.html browser visualization](img/B22051_02_2.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – index.html 浏览器可视化](img/B22051_02_2.jpg)'
- en: <st c="19110">Figure 2.2 – index.html browser visualization</st>
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19110">图 2.2 – index.html 浏览器可视化</st>
- en: <st c="19155">Now, open it in a text</st> <st c="19178">editor and remove these
    link tags in</st> <st c="19216">the header:</st>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19155">现在，在文本编辑器中打开它，并删除头部中的这些链接标签：</st>
- en: '[PRE2]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="19667">Refresh your</st> <st c="19681">browser page.</st> <st c="19695">Now,
    it will look like</st> *<st c="19718">Figure 2</st>**<st c="19726">.3</st>*<st
    c="19728">:</st>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19667">刷新您的</st> <st c="19681">浏览器页面。</st> <st c="19695">现在，它将看起来像是</st>
    *<st c="19718">图 2</st>**<st c="19726">.3</st>*<st c="19728">：</st>
- en: '![Figure 2.3 – index.html browser visualization without styles](img/B22051_02_3.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 无样式的 index.html 浏览器可视化](img/B22051_02_3.jpg)'
- en: <st c="20019">Figure 2.3 – index.html browser visualization without styles</st>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20019">图 2.3 – 无样式的 index.html 浏览器可视化</st>
- en: <st c="20079">Hopefully, you see the value.</st> <st c="20110">Styles in HTML
    add style to an element, such as color, font, size, and more.</st> <st c="20187">Everything
    in HTML can be styled, even</st> `<st c="20226">div</st>` <st c="20229">elements.</st>
    <st c="20240">Re-add the five link tags you</st> <st c="20270">have removed.</st>
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20079">希望你能看出其价值。</st> <st c="20110">HTML 中的样式为元素添加样式，例如颜色、字体、大小等。</st>
    <st c="20187">HTML 中的所有内容都可以添加样式，甚至是</st> `<st c="20226">div</st>` <st c="20229">元素。</st>
    <st c="20240">重新添加您已删除的五个链接标签。</st>
- en: <st c="20283">Now, open the file</st> <st c="20302">named</st> `<st c="20309">index.css</st>`
    <st c="20318">in a text editor.</st> <st c="20337">In this code, you can find
    specific font sizes and colors for each type of tag used in your HTML file.</st>
    <st c="20440">Likewise, you can find</st> <st c="20463">positioning attributes:</st>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20283">现在，在文本编辑器中打开名为</st> `<st c="20309">index.css</st>` <st c="20318">的文件。</st>
    <st c="20337">在此代码中，您可以找到为 HTML 文件中每种标签类型指定的字体大小和颜色。</st> <st c="20440">同样，您还可以找到</st>
    <st c="20463">定位属性：</st>
- en: '[PRE3]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: <st c="20939">Contrast the names found here, such as</st> `<st c="20979">leftPanel</st>`
    <st c="20988">or</st> `<st c="20992">container</st>`<st c="21001">, with the</st>
    `<st c="21012">div class</st>` <st c="21021">attributes of your</st> `<st c="21041">index.html</st>`
    <st c="21051">file.</st>
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20939">对比这里找到的名称，例如</st> `<st c="20979">leftPanel</st>` <st c="20988">或</st>
    `<st c="20992">container</st>`<st c="21001">，与您的</st> `<st c="21012">div class</st>`
    <st c="21021">属性以及</st> `<st c="21041">index.html</st>` <st c="21051">文件中的内容。</st>
- en: <st c="21057">The third</st> <st c="21067">file,</st> `<st c="21074">avatar.png</st>`<st
    c="21084">, is just a photo.</st> <st c="21103">To insert an image in an HTML,
    use the</st> `<st c="21142"><</st>``<st c="21143">img></st>` <st c="21147">tag.</st>
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21057">第三个</st> <st c="21067">文件，</st> `<st c="21074">avatar.png</st>`<st
    c="21084">，只是一个照片文件。</st> <st c="21103">要在HTML中插入图片，使用</st> `<st c="21142"><</st>``<st
    c="21143">img></st>` <st c="21147">标签。</st>
- en: <st c="21152">Now that you understand the three files and how they relate to
    each other, replace the content with your own CV information and photo.</st> <st
    c="21288">If you feel confident, alter some of the styles</st> <st c="21336">as
    well.</st>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21152">现在你已经理解了这三个文件以及它们之间的关系，替换内容为你自己的简历信息和照片。</st> <st c="21288">如果你有信心，也可以修改一些样式。</st>
- en: <st c="21344">Publishing the website</st>
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="21344">发布网站</st>
- en: <st c="21367">So far, all you have done is use</st> <st c="21401">your local
    workstation.</st> <st c="21425">In this section, we are going to make your website</st>
    <st c="21476">globally available.</st>
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21367">到目前为止，你所做的一切都只是在使用</st> <st c="21401">你的本地工作站。</st> <st c="21425">在本节中，我们将使你的网站</st>
    <st c="21476">在全球范围内可用。</st>
- en: <st c="21495">Access your AWS account using the Console like in</st> [*<st c="21546">Chapter
    1</st>*](B22051_01.xhtml#_idTextAnchor014)<st c="21555">. Navigate to</st> <st
    c="21569">S3:</st> [<st c="21573">https://s3.console.aws.amazon.com/s3/home?region=us-east-1#</st>](https://s3.console.aws.amazon.com/s3/home?region=us-east-1#)<st
    c="21632">.</st>
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21495">使用控制台访问你的AWS账户，如同在</st> [*<st c="21546">第1章</st>*](B22051_01.xhtml#_idTextAnchor014)<st
    c="21555">中所述。</st> <st c="21569">导航到</st> <st c="21573">S3：</st> [<st c="21573">https://s3.console.aws.amazon.com/s3/home?region=us-east-1#</st>](https://s3.console.aws.amazon.com/s3/home?region=us-east-1#)<st
    c="21632">。</st>
- en: <st c="21633">Create a bucket.</st> <st c="21651">In its configuration settings,
    give it a unique name, and leave</st> **<st c="21715">Block all public</st>**
    **<st c="21732">access</st>** <st c="21738">checked.</st>
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21633">创建一个桶。</st> <st c="21651">在其配置设置中，给它一个唯一的名称，并保持</st> **<st c="21715">阻止所有公共</st>**
    **<st c="21732">访问</st>** <st c="21738">选中。</st>
- en: <st c="21747">Navigate inside the newly created S3 bucket and upload the three
    files that you downloaded earlier from the book’s GitHub repository:</st> `<st
    c="21882">index.html</st>`<st c="21892">,</st> `<st c="21894">index.css</st>`<st
    c="21903">, and</st> `<st c="21909">avatar.png</st>`<st c="21919">. These, as
    mentioned, were example files, and you can and should replace them with your own.</st>
    <st c="22013">If you have not done this by the end of this chapter, you will have
    a website of one of the book’s</st> <st c="22112">authors’ CVs.</st>
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21747">进入新创建的S3桶，上传之前从书籍GitHub仓库下载的三个文件：</st> `<st c="21882">index.html</st>`<st
    c="21892">，</st> `<st c="21894">index.css</st>`<st c="21903">，以及</st> `<st c="21909">avatar.png</st>`<st
    c="21919">。如前所述，这些是示例文件，你可以并且应该用你自己的文件替换它们。</st> <st c="22013">如果在本章结束之前你还没有完成这个操作，你将看到一个展示书籍某位</st>
    <st c="22112">作者简历的网站。</st>
- en: <st c="22125">Navigate to the CloudFront console (</st>[<st c="22162">https://us-east-1.console.aws.amazon.com/cloudfront/v4/home?region=us-east-1#/distributions</st>](https://us-east-1.console.aws.amazon.com/cloudfront/v4/home?region=us-east-1#/distributions)<st
    c="22254">) and create a</st> <st c="22270">new distribution:</st>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22125">导航到CloudFront控制台（</st>[<st c="22162">https://us-east-1.console.aws.amazon.com/cloudfront/v4/home?region=us-east-1#/distributions</st>](https://us-east-1.console.aws.amazon.com/cloudfront/v4/home?region=us-east-1#/distributions)<st
    c="22254">），并创建一个</st> <st c="22270">新的分发：</st>
- en: <st c="22287">Select your bucket as</st> **<st c="22310">Origin domain</st>**<st
    c="22323">.</st>
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22287">选择你的桶作为</st> **<st c="22310">Origin域名</st>**<st c="22323">。</st>
- en: <st c="22324">Change</st> **<st c="22332">Origin access</st>** <st c="22345">from</st>
    **<st c="22351">Public</st>** <st c="22357">to</st> **<st c="22361">Origin access</st>**
    **<st c="22375">control settings</st>**<st c="22391">.</st>
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22324">将</st> **<st c="22332">Origin访问</st>** <st c="22345">从</st> **<st
    c="22351">公开</st>** <st c="22357">更改为</st> **<st c="22361">Origin访问</st>** **<st
    c="22375">控制设置</st>**<st c="22391">。</st>
- en: <st c="22392">Create a new OAC with the default options, and select it under</st>
    **<st c="22456">Origin</st>** **<st c="22463">access control</st>**<st c="22477">.</st>
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22392">创建一个新的OAC，选择默认选项，并在</st> **<st c="22456">Origin</st>** **<st c="22463">访问控制</st>**<st
    c="22477">下选择它。</st>
- en: <st c="22478">Under the</st> **<st c="22489">Web Application Firewall (WAF)</st>**
    <st c="22519">section, do not enable the</st> <st c="22547">security protections.</st>
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22478">在</st> **<st c="22489">Web应用防火墙(WAF)</st>** <st c="22519">部分，不启用</st>
    <st c="22547">安全保护。</st>
- en: <st c="22568">Before creating your distribution, read through all the options.</st>
    <st c="22634">Notice some interesting ones, such as the cache policy, the ability
    to compress objects automatically, and the different types</st> <st c="22761">of
    pricing.</st>
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22568">在创建您的分发之前，请仔细阅读所有选项。</st> <st c="22634">注意一些有趣的选项，例如缓存策略、自动压缩对象的能力，以及不同的定价类型。</st>
- en: <st c="22772">When you create</st> <st c="22789">the distribution, a yellow
    popup will appear at the top of your screen, like the one shown in</st> *<st c="22883">Figure
    2</st>**<st c="22891">.4</st>*<st c="22893">. Select</st> **<st c="22902">Copy
    policy</st>**<st c="22913">, followed by</st> **<st c="22927">Go to S3 bucket
    permissions to</st>** **<st c="22958">update policy</st>**<st c="22971">.</st>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22772">当您创建</st> <st c="22789">分发时，屏幕顶部将出现一个黄色弹出窗口，如</st> *<st c="22883">图
    2</st>**<st c="22891">.4</st>*<st c="22893">所示。选择</st> **<st c="22902">复制策略</st>**<st
    c="22913">，然后选择</st> **<st c="22927">前往 S3 存储桶权限以</st>** **<st c="22958">更新策略</st>**<st
    c="22971">。</st>
- en: '![Figure 2.4 – CloudFront OAC popup](img/B22051_02_4.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – CloudFront OAC 弹出窗口](img/B22051_02_4.jpg)'
- en: <st c="23197">Figure 2.4 – CloudFront OAC popup</st>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23197">图 2.4 – CloudFront OAC 弹出窗口</st>
- en: <st c="23230">You will be presented with your S3 bucket settings.</st> <st c="23283">Select</st>
    **<st c="23290">Edit</st>** <st c="23294">under the</st> **<st c="23305">Bucket
    policy</st>** <st c="23318">section, paste the policy you copied, and</st> <st
    c="23361">save it.</st>
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23230">您将看到您的 S3 存储桶设置。</st> <st c="23283">选择</st> **<st c="23290">编辑</st>**
    <st c="23294">在</st> **<st c="23305">存储桶策略</st>** <st c="23318">部分下，粘贴您复制的策略，并且</st>
    <st c="23361">保存。</st>
- en: <st c="23369">The policy should look like the following one.</st> <st c="23417">It
    allows the CloudFront service to access the resources inside your bucket.</st>
    <st c="23494">In this case, that’s the</st> `<st c="23519">cloudprojectwebsitebucket</st>`
    <st c="23544">bucket:</st>
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23369">该策略应如下所示。</st> <st c="23417">它允许 CloudFront 服务访问您存储桶内的资源。</st>
    <st c="23494">在这种情况下，就是</st> `<st c="23519">cloudprojectwebsitebucket</st>` <st
    c="23544">存储桶：</st>
- en: '[PRE4]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: <st c="23962">Navigate back to your</st> <st c="23984">CloudFront distribution
    and note the distribution name.</st> <st c="24041">Note that the CloudFront distribution
    might take a minute or two to</st> <st c="24109">become available.</st>
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="23962">返回到您的</st> <st c="23984">CloudFront 分发并记下分发名称。</st> <st c="24041">请注意，CloudFront
    分发可能需要一两分钟才能</st> <st c="24109">变得可用。</st>
- en: <st c="24126">Append</st> `<st c="24134">index.html</st>` <st c="24144">at the
    end, and after your distribution status shows</st> **<st c="24198">Enabled</st>**<st
    c="24205">, open it in your browser.</st> <st c="24232">The URL should have the
    following format; the highlighted part should be different in</st> <st c="24318">your
    case:</st>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="24126">在末尾附加</st> `<st c="24134">index.html</st>` <st c="24144">，并且在您的分发状态显示为</st>
    **<st c="24198">已启用</st>**<st c="24205">后，使用浏览器打开它。</st> <st c="24232">URL 应具有以下格式；其中突出显示的部分在您的情况下应该不同：</st>
- en: '[PRE5]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: https://<st c="25438">d1hjtv5xjv873g</st>.cloudfront.net/
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: https://<st c="25438">d1hjtv5xjv873g</st>.cloudfront.net/
- en: '[PRE6]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: $ nslookup d1hjtv5xjv873g.cloudfront.net
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: $ nslookup d1hjtv5xjv873g.cloudfront.net
- en: '[PRE7]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '<st c="0">Part 2: Intermediate Level Projects</st>'
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">第二部分：中级项目</st>
- en: <st c="36">In</st> *<st c="40">Part 2</st>* <st c="46">of this book, you are
    going to continue with what you have learned and built in</st> *<st c="127">Part
    1</st>*<st c="133">. However, this part has an increased level of difficulty.</st>
    <st c="192">You will build four applications in a step-by-step manner powered
    by many different AWS services, including EC2, Lambda, API Gateway, Rekognition,
    and DynamoDB.</st> <st c="353">By the end of this chapter, you will be able to
    autonomously build your own distributed</st> <st c="441">web applications.</st>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="36">在</st> *<st c="40">第二部分</st>* <st c="46">中，您将继续在</st> *<st c="127">第一部分</st>*<st
    c="133">中学到的内容和构建的项目。然而，本部分的难度有所提升。</st> <st c="192">您将以一步步的方式构建四个应用，使用的 AWS 服务包括
    EC2、Lambda、API Gateway、Rekognition 和 DynamoDB。</st> <st c="353">到本章结束时，您将能够独立构建自己的分布式</st>
    <st c="441">Web 应用。</st>
- en: <st c="458">This part has the</st> <st c="477">following chapters:</st>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="458">本部分包括以下章节：</st>
- en: '[*<st c="496">Chapter 3</st>*](B22051_03.xhtml#_idTextAnchor054)<st c="506">,</st>
    *<st c="508">Building a Recipe-Sharing Application</st>*'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="496">第 3 章</st>*](B22051_03.xhtml#_idTextAnchor054)<st c="506">,</st>
    *<st c="508">构建一个食谱分享应用</st>*'
- en: '[*<st c="545">Chapter 4</st>*](B22051_04.xhtml#_idTextAnchor089)<st c="555">,</st>
    *<st c="557">Building a Serverless Recipe-Sharing Application</st>*'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="545">第 4 章</st>*](B22051_04.xhtml#_idTextAnchor089)<st c="555">,</st>
    *<st c="557">构建一个无服务器食谱分享应用</st>*'
- en: '[*<st c="605">Chapter 5</st>*](B22051_05.xhtml#_idTextAnchor123)<st c="615">,</st>
    *<st c="617">Implementing an Image Analyzer to Detect Photo Friendliness</st>*'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="605">第五章</st>*](B22051_05.xhtml#_idTextAnchor123)<st c="615">，</st>
    *<st c="617">实现图像分析器以检测照片友好性</st>*'
- en: '[*<st c="676">Chapter 6</st>*](B22051_06.xhtml#_idTextAnchor151)<st c="686">,</st>
    *<st c="688">Architecting a Content Translation Pipeline</st>*'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*<st c="676">第六章</st>*](B22051_06.xhtml#_idTextAnchor151)<st c="686">，</st>
    *<st c="688">构建内容翻译管道</st>*'
